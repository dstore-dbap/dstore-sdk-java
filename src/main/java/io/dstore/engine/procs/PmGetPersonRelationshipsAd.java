// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/pm_GetPersonRelationships_Ad.proto

package io.dstore.engine.procs;

public final class PmGetPersonRelationshipsAd {
  private PmGetPersonRelationshipsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonRelationships_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    boolean hasPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

    /**
     * <code>optional bool person_id_null = 1001;</code>
     */
    boolean getPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    boolean hasRelatedPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getRelatedPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder();

    /**
     * <code>optional bool related_person_id_null = 1002;</code>
     */
    boolean getRelatedPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    boolean hasRelationshipId();
    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    io.dstore.engine.Values.integerValue getRelationshipId();
    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder();

    /**
     * <code>optional bool relationship_id_null = 1003;</code>
     */
    boolean getRelationshipIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    boolean hasFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    io.dstore.engine.Values.timestampValue getFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

    /**
     * <code>optional bool from_date_null = 1004;</code>
     */
    boolean getFromDateNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    boolean hasToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    io.dstore.engine.Values.timestampValue getToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

    /**
     * <code>optional bool to_date_null = 1005;</code>
     */
    boolean getToDateNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    boolean hasOnlyRelationsCurrentlyValid();
    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    io.dstore.engine.Values.booleanValue getOnlyRelationsCurrentlyValid();
    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getOnlyRelationsCurrentlyValidOrBuilder();

    /**
     * <code>optional bool only_relations_currently_valid_null = 1006;</code>
     */
    boolean getOnlyRelationsCurrentlyValidNull();

    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    boolean hasRelatedPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    io.dstore.engine.Values.integerValue getRelatedPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonTypeIdOrBuilder();

    /**
     * <code>optional bool related_person_type_id_null = 1007;</code>
     */
    boolean getRelatedPersonTypeIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonRelationships_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      personIdNull_ = false;
      relatedPersonIdNull_ = false;
      relationshipIdNull_ = false;
      fromDateNull_ = false;
      toDateNull_ = false;
      onlyRelationsCurrentlyValidNull_ = false;
      relatedPersonTypeIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personId_ != null) {
                subBuilder = personId_.toBuilder();
              }
              personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personId_);
                personId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (relatedPersonId_ != null) {
                subBuilder = relatedPersonId_.toBuilder();
              }
              relatedPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(relatedPersonId_);
                relatedPersonId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (relationshipId_ != null) {
                subBuilder = relationshipId_.toBuilder();
              }
              relationshipId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(relationshipId_);
                relationshipId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (fromDate_ != null) {
                subBuilder = fromDate_.toBuilder();
              }
              fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromDate_);
                fromDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (toDate_ != null) {
                subBuilder = toDate_.toBuilder();
              }
              toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toDate_);
                toDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (onlyRelationsCurrentlyValid_ != null) {
                subBuilder = onlyRelationsCurrentlyValid_.toBuilder();
              }
              onlyRelationsCurrentlyValid_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyRelationsCurrentlyValid_);
                onlyRelationsCurrentlyValid_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (relatedPersonTypeId_ != null) {
                subBuilder = relatedPersonTypeId_.toBuilder();
              }
              relatedPersonTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(relatedPersonTypeId_);
                relatedPersonTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              relatedPersonIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              relationshipIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              fromDateNull_ = input.readBool();
              break;
            }
            case 8040: {

              toDateNull_ = input.readBool();
              break;
            }
            case 8048: {

              onlyRelationsCurrentlyValidNull_ = input.readBool();
              break;
            }
            case 8056: {

              relatedPersonTypeIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.Builder.class);
    }

    public static final int PERSON_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue personId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public boolean hasPersonId() {
      return personId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonId() {
      return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
      return getPersonId();
    }

    public static final int PERSON_ID_NULL_FIELD_NUMBER = 1001;
    private boolean personIdNull_;
    /**
     * <code>optional bool person_id_null = 1001;</code>
     */
    public boolean getPersonIdNull() {
      return personIdNull_;
    }

    public static final int RELATED_PERSON_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue relatedPersonId_;
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    public boolean hasRelatedPersonId() {
      return relatedPersonId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getRelatedPersonId() {
      return relatedPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder() {
      return getRelatedPersonId();
    }

    public static final int RELATED_PERSON_ID_NULL_FIELD_NUMBER = 1002;
    private boolean relatedPersonIdNull_;
    /**
     * <code>optional bool related_person_id_null = 1002;</code>
     */
    public boolean getRelatedPersonIdNull() {
      return relatedPersonIdNull_;
    }

    public static final int RELATIONSHIP_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue relationshipId_;
    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    public boolean hasRelationshipId() {
      return relationshipId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getRelationshipId() {
      return relationshipId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder() {
      return getRelationshipId();
    }

    public static final int RELATIONSHIP_ID_NULL_FIELD_NUMBER = 1003;
    private boolean relationshipIdNull_;
    /**
     * <code>optional bool relationship_id_null = 1003;</code>
     */
    public boolean getRelationshipIdNull() {
      return relationshipIdNull_;
    }

    public static final int FROM_DATE_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.timestampValue fromDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    public boolean hasFromDate() {
      return fromDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    public io.dstore.engine.Values.timestampValue getFromDate() {
      return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
      return getFromDate();
    }

    public static final int FROM_DATE_NULL_FIELD_NUMBER = 1004;
    private boolean fromDateNull_;
    /**
     * <code>optional bool from_date_null = 1004;</code>
     */
    public boolean getFromDateNull() {
      return fromDateNull_;
    }

    public static final int TO_DATE_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.timestampValue toDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    public boolean hasToDate() {
      return toDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    public io.dstore.engine.Values.timestampValue getToDate() {
      return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
      return getToDate();
    }

    public static final int TO_DATE_NULL_FIELD_NUMBER = 1005;
    private boolean toDateNull_;
    /**
     * <code>optional bool to_date_null = 1005;</code>
     */
    public boolean getToDateNull() {
      return toDateNull_;
    }

    public static final int ONLY_RELATIONS_CURRENTLY_VALID_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.booleanValue onlyRelationsCurrentlyValid_;
    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    public boolean hasOnlyRelationsCurrentlyValid() {
      return onlyRelationsCurrentlyValid_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    public io.dstore.engine.Values.booleanValue getOnlyRelationsCurrentlyValid() {
      return onlyRelationsCurrentlyValid_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : onlyRelationsCurrentlyValid_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getOnlyRelationsCurrentlyValidOrBuilder() {
      return getOnlyRelationsCurrentlyValid();
    }

    public static final int ONLY_RELATIONS_CURRENTLY_VALID_NULL_FIELD_NUMBER = 1006;
    private boolean onlyRelationsCurrentlyValidNull_;
    /**
     * <code>optional bool only_relations_currently_valid_null = 1006;</code>
     */
    public boolean getOnlyRelationsCurrentlyValidNull() {
      return onlyRelationsCurrentlyValidNull_;
    }

    public static final int RELATED_PERSON_TYPE_ID_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.integerValue relatedPersonTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    public boolean hasRelatedPersonTypeId() {
      return relatedPersonTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    public io.dstore.engine.Values.integerValue getRelatedPersonTypeId() {
      return relatedPersonTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonTypeIdOrBuilder() {
      return getRelatedPersonTypeId();
    }

    public static final int RELATED_PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1007;
    private boolean relatedPersonTypeIdNull_;
    /**
     * <code>optional bool related_person_type_id_null = 1007;</code>
     */
    public boolean getRelatedPersonTypeIdNull() {
      return relatedPersonTypeIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personId_ != null) {
        output.writeMessage(1, getPersonId());
      }
      if (relatedPersonId_ != null) {
        output.writeMessage(2, getRelatedPersonId());
      }
      if (relationshipId_ != null) {
        output.writeMessage(3, getRelationshipId());
      }
      if (fromDate_ != null) {
        output.writeMessage(4, getFromDate());
      }
      if (toDate_ != null) {
        output.writeMessage(5, getToDate());
      }
      if (onlyRelationsCurrentlyValid_ != null) {
        output.writeMessage(6, getOnlyRelationsCurrentlyValid());
      }
      if (relatedPersonTypeId_ != null) {
        output.writeMessage(7, getRelatedPersonTypeId());
      }
      if (personIdNull_ != false) {
        output.writeBool(1001, personIdNull_);
      }
      if (relatedPersonIdNull_ != false) {
        output.writeBool(1002, relatedPersonIdNull_);
      }
      if (relationshipIdNull_ != false) {
        output.writeBool(1003, relationshipIdNull_);
      }
      if (fromDateNull_ != false) {
        output.writeBool(1004, fromDateNull_);
      }
      if (toDateNull_ != false) {
        output.writeBool(1005, toDateNull_);
      }
      if (onlyRelationsCurrentlyValidNull_ != false) {
        output.writeBool(1006, onlyRelationsCurrentlyValidNull_);
      }
      if (relatedPersonTypeIdNull_ != false) {
        output.writeBool(1007, relatedPersonTypeIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (personId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonId());
      }
      if (relatedPersonId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRelatedPersonId());
      }
      if (relationshipId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRelationshipId());
      }
      if (fromDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFromDate());
      }
      if (toDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getToDate());
      }
      if (onlyRelationsCurrentlyValid_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getOnlyRelationsCurrentlyValid());
      }
      if (relatedPersonTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRelatedPersonTypeId());
      }
      if (personIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personIdNull_);
      }
      if (relatedPersonIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, relatedPersonIdNull_);
      }
      if (relationshipIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, relationshipIdNull_);
      }
      if (fromDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, fromDateNull_);
      }
      if (toDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, toDateNull_);
      }
      if (onlyRelationsCurrentlyValidNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, onlyRelationsCurrentlyValidNull_);
      }
      if (relatedPersonTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, relatedPersonTypeIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonRelationships_Ad.Parameters)
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personIdBuilder_ == null) {
          personId_ = null;
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }
        personIdNull_ = false;

        if (relatedPersonIdBuilder_ == null) {
          relatedPersonId_ = null;
        } else {
          relatedPersonId_ = null;
          relatedPersonIdBuilder_ = null;
        }
        relatedPersonIdNull_ = false;

        if (relationshipIdBuilder_ == null) {
          relationshipId_ = null;
        } else {
          relationshipId_ = null;
          relationshipIdBuilder_ = null;
        }
        relationshipIdNull_ = false;

        if (fromDateBuilder_ == null) {
          fromDate_ = null;
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }
        fromDateNull_ = false;

        if (toDateBuilder_ == null) {
          toDate_ = null;
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }
        toDateNull_ = false;

        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          onlyRelationsCurrentlyValid_ = null;
        } else {
          onlyRelationsCurrentlyValid_ = null;
          onlyRelationsCurrentlyValidBuilder_ = null;
        }
        onlyRelationsCurrentlyValidNull_ = false;

        if (relatedPersonTypeIdBuilder_ == null) {
          relatedPersonTypeId_ = null;
        } else {
          relatedPersonTypeId_ = null;
          relatedPersonTypeIdBuilder_ = null;
        }
        relatedPersonTypeIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters build() {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters buildPartial() {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters result = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters(this);
        if (personIdBuilder_ == null) {
          result.personId_ = personId_;
        } else {
          result.personId_ = personIdBuilder_.build();
        }
        result.personIdNull_ = personIdNull_;
        if (relatedPersonIdBuilder_ == null) {
          result.relatedPersonId_ = relatedPersonId_;
        } else {
          result.relatedPersonId_ = relatedPersonIdBuilder_.build();
        }
        result.relatedPersonIdNull_ = relatedPersonIdNull_;
        if (relationshipIdBuilder_ == null) {
          result.relationshipId_ = relationshipId_;
        } else {
          result.relationshipId_ = relationshipIdBuilder_.build();
        }
        result.relationshipIdNull_ = relationshipIdNull_;
        if (fromDateBuilder_ == null) {
          result.fromDate_ = fromDate_;
        } else {
          result.fromDate_ = fromDateBuilder_.build();
        }
        result.fromDateNull_ = fromDateNull_;
        if (toDateBuilder_ == null) {
          result.toDate_ = toDate_;
        } else {
          result.toDate_ = toDateBuilder_.build();
        }
        result.toDateNull_ = toDateNull_;
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          result.onlyRelationsCurrentlyValid_ = onlyRelationsCurrentlyValid_;
        } else {
          result.onlyRelationsCurrentlyValid_ = onlyRelationsCurrentlyValidBuilder_.build();
        }
        result.onlyRelationsCurrentlyValidNull_ = onlyRelationsCurrentlyValidNull_;
        if (relatedPersonTypeIdBuilder_ == null) {
          result.relatedPersonTypeId_ = relatedPersonTypeId_;
        } else {
          result.relatedPersonTypeId_ = relatedPersonTypeIdBuilder_.build();
        }
        result.relatedPersonTypeIdNull_ = relatedPersonTypeIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters other) {
        if (other == io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonId()) {
          mergePersonId(other.getPersonId());
        }
        if (other.getPersonIdNull() != false) {
          setPersonIdNull(other.getPersonIdNull());
        }
        if (other.hasRelatedPersonId()) {
          mergeRelatedPersonId(other.getRelatedPersonId());
        }
        if (other.getRelatedPersonIdNull() != false) {
          setRelatedPersonIdNull(other.getRelatedPersonIdNull());
        }
        if (other.hasRelationshipId()) {
          mergeRelationshipId(other.getRelationshipId());
        }
        if (other.getRelationshipIdNull() != false) {
          setRelationshipIdNull(other.getRelationshipIdNull());
        }
        if (other.hasFromDate()) {
          mergeFromDate(other.getFromDate());
        }
        if (other.getFromDateNull() != false) {
          setFromDateNull(other.getFromDateNull());
        }
        if (other.hasToDate()) {
          mergeToDate(other.getToDate());
        }
        if (other.getToDateNull() != false) {
          setToDateNull(other.getToDateNull());
        }
        if (other.hasOnlyRelationsCurrentlyValid()) {
          mergeOnlyRelationsCurrentlyValid(other.getOnlyRelationsCurrentlyValid());
        }
        if (other.getOnlyRelationsCurrentlyValidNull() != false) {
          setOnlyRelationsCurrentlyValidNull(other.getOnlyRelationsCurrentlyValidNull());
        }
        if (other.hasRelatedPersonTypeId()) {
          mergeRelatedPersonTypeId(other.getRelatedPersonTypeId());
        }
        if (other.getRelatedPersonTypeIdNull() != false) {
          setRelatedPersonTypeIdNull(other.getRelatedPersonTypeIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue personId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public boolean hasPersonId() {
        return personIdBuilder_ != null || personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        if (personIdBuilder_ == null) {
          return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        } else {
          return personIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personId_ = value;
          onChanged();
        } else {
          personIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder setPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personIdBuilder_ == null) {
          personId_ = builderForValue.build();
          onChanged();
        } else {
          personIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (personId_ != null) {
            personId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
          } else {
            personId_ = value;
          }
          onChanged();
        } else {
          personIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder clearPersonId() {
        if (personIdBuilder_ == null) {
          personId_ = null;
          onChanged();
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
        
        onChanged();
        return getPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        if (personIdBuilder_ != null) {
          return personIdBuilder_.getMessageOrBuilder();
        } else {
          return personId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonIdFieldBuilder() {
        if (personIdBuilder_ == null) {
          personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonId(),
                  getParentForChildren(),
                  isClean());
          personId_ = null;
        }
        return personIdBuilder_;
      }

      private boolean personIdNull_ ;
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public boolean getPersonIdNull() {
        return personIdNull_;
      }
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public Builder setPersonIdNull(boolean value) {
        
        personIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public Builder clearPersonIdNull() {
        
        personIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue relatedPersonId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> relatedPersonIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public boolean hasRelatedPersonId() {
        return relatedPersonIdBuilder_ != null || relatedPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getRelatedPersonId() {
        if (relatedPersonIdBuilder_ == null) {
          return relatedPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
        } else {
          return relatedPersonIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public Builder setRelatedPersonId(io.dstore.engine.Values.integerValue value) {
        if (relatedPersonIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relatedPersonId_ = value;
          onChanged();
        } else {
          relatedPersonIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public Builder setRelatedPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (relatedPersonIdBuilder_ == null) {
          relatedPersonId_ = builderForValue.build();
          onChanged();
        } else {
          relatedPersonIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public Builder mergeRelatedPersonId(io.dstore.engine.Values.integerValue value) {
        if (relatedPersonIdBuilder_ == null) {
          if (relatedPersonId_ != null) {
            relatedPersonId_ =
              io.dstore.engine.Values.integerValue.newBuilder(relatedPersonId_).mergeFrom(value).buildPartial();
          } else {
            relatedPersonId_ = value;
          }
          onChanged();
        } else {
          relatedPersonIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public Builder clearRelatedPersonId() {
        if (relatedPersonIdBuilder_ == null) {
          relatedPersonId_ = null;
          onChanged();
        } else {
          relatedPersonId_ = null;
          relatedPersonIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getRelatedPersonIdBuilder() {
        
        onChanged();
        return getRelatedPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder() {
        if (relatedPersonIdBuilder_ != null) {
          return relatedPersonIdBuilder_.getMessageOrBuilder();
        } else {
          return relatedPersonId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getRelatedPersonIdFieldBuilder() {
        if (relatedPersonIdBuilder_ == null) {
          relatedPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getRelatedPersonId(),
                  getParentForChildren(),
                  isClean());
          relatedPersonId_ = null;
        }
        return relatedPersonIdBuilder_;
      }

      private boolean relatedPersonIdNull_ ;
      /**
       * <code>optional bool related_person_id_null = 1002;</code>
       */
      public boolean getRelatedPersonIdNull() {
        return relatedPersonIdNull_;
      }
      /**
       * <code>optional bool related_person_id_null = 1002;</code>
       */
      public Builder setRelatedPersonIdNull(boolean value) {
        
        relatedPersonIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool related_person_id_null = 1002;</code>
       */
      public Builder clearRelatedPersonIdNull() {
        
        relatedPersonIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue relationshipId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> relationshipIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public boolean hasRelationshipId() {
        return relationshipIdBuilder_ != null || relationshipId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getRelationshipId() {
        if (relationshipIdBuilder_ == null) {
          return relationshipId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
        } else {
          return relationshipIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public Builder setRelationshipId(io.dstore.engine.Values.integerValue value) {
        if (relationshipIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relationshipId_ = value;
          onChanged();
        } else {
          relationshipIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public Builder setRelationshipId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (relationshipIdBuilder_ == null) {
          relationshipId_ = builderForValue.build();
          onChanged();
        } else {
          relationshipIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public Builder mergeRelationshipId(io.dstore.engine.Values.integerValue value) {
        if (relationshipIdBuilder_ == null) {
          if (relationshipId_ != null) {
            relationshipId_ =
              io.dstore.engine.Values.integerValue.newBuilder(relationshipId_).mergeFrom(value).buildPartial();
          } else {
            relationshipId_ = value;
          }
          onChanged();
        } else {
          relationshipIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public Builder clearRelationshipId() {
        if (relationshipIdBuilder_ == null) {
          relationshipId_ = null;
          onChanged();
        } else {
          relationshipId_ = null;
          relationshipIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getRelationshipIdBuilder() {
        
        onChanged();
        return getRelationshipIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder() {
        if (relationshipIdBuilder_ != null) {
          return relationshipIdBuilder_.getMessageOrBuilder();
        } else {
          return relationshipId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getRelationshipIdFieldBuilder() {
        if (relationshipIdBuilder_ == null) {
          relationshipIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getRelationshipId(),
                  getParentForChildren(),
                  isClean());
          relationshipId_ = null;
        }
        return relationshipIdBuilder_;
      }

      private boolean relationshipIdNull_ ;
      /**
       * <code>optional bool relationship_id_null = 1003;</code>
       */
      public boolean getRelationshipIdNull() {
        return relationshipIdNull_;
      }
      /**
       * <code>optional bool relationship_id_null = 1003;</code>
       */
      public Builder setRelationshipIdNull(boolean value) {
        
        relationshipIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool relationship_id_null = 1003;</code>
       */
      public Builder clearRelationshipIdNull() {
        
        relationshipIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue fromDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public boolean hasFromDate() {
        return fromDateBuilder_ != null || fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        if (fromDateBuilder_ == null) {
          return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        } else {
          return fromDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromDate_ = value;
          onChanged();
        } else {
          fromDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public Builder setFromDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (fromDateBuilder_ == null) {
          fromDate_ = builderForValue.build();
          onChanged();
        } else {
          fromDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (fromDate_ != null) {
            fromDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
          } else {
            fromDate_ = value;
          }
          onChanged();
        } else {
          fromDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public Builder clearFromDate() {
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
          onChanged();
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
        
        onChanged();
        return getFromDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        if (fromDateBuilder_ != null) {
          return fromDateBuilder_.getMessageOrBuilder();
        } else {
          return fromDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getFromDateFieldBuilder() {
        if (fromDateBuilder_ == null) {
          fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getFromDate(),
                  getParentForChildren(),
                  isClean());
          fromDate_ = null;
        }
        return fromDateBuilder_;
      }

      private boolean fromDateNull_ ;
      /**
       * <code>optional bool from_date_null = 1004;</code>
       */
      public boolean getFromDateNull() {
        return fromDateNull_;
      }
      /**
       * <code>optional bool from_date_null = 1004;</code>
       */
      public Builder setFromDateNull(boolean value) {
        
        fromDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_date_null = 1004;</code>
       */
      public Builder clearFromDateNull() {
        
        fromDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue toDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public boolean hasToDate() {
        return toDateBuilder_ != null || toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        if (toDateBuilder_ == null) {
          return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        } else {
          return toDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toDate_ = value;
          onChanged();
        } else {
          toDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public Builder setToDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (toDateBuilder_ == null) {
          toDate_ = builderForValue.build();
          onChanged();
        } else {
          toDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (toDate_ != null) {
            toDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
          } else {
            toDate_ = value;
          }
          onChanged();
        } else {
          toDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public Builder clearToDate() {
        if (toDateBuilder_ == null) {
          toDate_ = null;
          onChanged();
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
        
        onChanged();
        return getToDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        if (toDateBuilder_ != null) {
          return toDateBuilder_.getMessageOrBuilder();
        } else {
          return toDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getToDateFieldBuilder() {
        if (toDateBuilder_ == null) {
          toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getToDate(),
                  getParentForChildren(),
                  isClean());
          toDate_ = null;
        }
        return toDateBuilder_;
      }

      private boolean toDateNull_ ;
      /**
       * <code>optional bool to_date_null = 1005;</code>
       */
      public boolean getToDateNull() {
        return toDateNull_;
      }
      /**
       * <code>optional bool to_date_null = 1005;</code>
       */
      public Builder setToDateNull(boolean value) {
        
        toDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool to_date_null = 1005;</code>
       */
      public Builder clearToDateNull() {
        
        toDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue onlyRelationsCurrentlyValid_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> onlyRelationsCurrentlyValidBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public boolean hasOnlyRelationsCurrentlyValid() {
        return onlyRelationsCurrentlyValidBuilder_ != null || onlyRelationsCurrentlyValid_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public io.dstore.engine.Values.booleanValue getOnlyRelationsCurrentlyValid() {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          return onlyRelationsCurrentlyValid_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : onlyRelationsCurrentlyValid_;
        } else {
          return onlyRelationsCurrentlyValidBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public Builder setOnlyRelationsCurrentlyValid(io.dstore.engine.Values.booleanValue value) {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyRelationsCurrentlyValid_ = value;
          onChanged();
        } else {
          onlyRelationsCurrentlyValidBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public Builder setOnlyRelationsCurrentlyValid(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          onlyRelationsCurrentlyValid_ = builderForValue.build();
          onChanged();
        } else {
          onlyRelationsCurrentlyValidBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public Builder mergeOnlyRelationsCurrentlyValid(io.dstore.engine.Values.booleanValue value) {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          if (onlyRelationsCurrentlyValid_ != null) {
            onlyRelationsCurrentlyValid_ =
              io.dstore.engine.Values.booleanValue.newBuilder(onlyRelationsCurrentlyValid_).mergeFrom(value).buildPartial();
          } else {
            onlyRelationsCurrentlyValid_ = value;
          }
          onChanged();
        } else {
          onlyRelationsCurrentlyValidBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public Builder clearOnlyRelationsCurrentlyValid() {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          onlyRelationsCurrentlyValid_ = null;
          onChanged();
        } else {
          onlyRelationsCurrentlyValid_ = null;
          onlyRelationsCurrentlyValidBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getOnlyRelationsCurrentlyValidBuilder() {
        
        onChanged();
        return getOnlyRelationsCurrentlyValidFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getOnlyRelationsCurrentlyValidOrBuilder() {
        if (onlyRelationsCurrentlyValidBuilder_ != null) {
          return onlyRelationsCurrentlyValidBuilder_.getMessageOrBuilder();
        } else {
          return onlyRelationsCurrentlyValid_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : onlyRelationsCurrentlyValid_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue only_relations_currently_valid = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getOnlyRelationsCurrentlyValidFieldBuilder() {
        if (onlyRelationsCurrentlyValidBuilder_ == null) {
          onlyRelationsCurrentlyValidBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getOnlyRelationsCurrentlyValid(),
                  getParentForChildren(),
                  isClean());
          onlyRelationsCurrentlyValid_ = null;
        }
        return onlyRelationsCurrentlyValidBuilder_;
      }

      private boolean onlyRelationsCurrentlyValidNull_ ;
      /**
       * <code>optional bool only_relations_currently_valid_null = 1006;</code>
       */
      public boolean getOnlyRelationsCurrentlyValidNull() {
        return onlyRelationsCurrentlyValidNull_;
      }
      /**
       * <code>optional bool only_relations_currently_valid_null = 1006;</code>
       */
      public Builder setOnlyRelationsCurrentlyValidNull(boolean value) {
        
        onlyRelationsCurrentlyValidNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_relations_currently_valid_null = 1006;</code>
       */
      public Builder clearOnlyRelationsCurrentlyValidNull() {
        
        onlyRelationsCurrentlyValidNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue relatedPersonTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> relatedPersonTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public boolean hasRelatedPersonTypeId() {
        return relatedPersonTypeIdBuilder_ != null || relatedPersonTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValue getRelatedPersonTypeId() {
        if (relatedPersonTypeIdBuilder_ == null) {
          return relatedPersonTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonTypeId_;
        } else {
          return relatedPersonTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public Builder setRelatedPersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (relatedPersonTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          relatedPersonTypeId_ = value;
          onChanged();
        } else {
          relatedPersonTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public Builder setRelatedPersonTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (relatedPersonTypeIdBuilder_ == null) {
          relatedPersonTypeId_ = builderForValue.build();
          onChanged();
        } else {
          relatedPersonTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public Builder mergeRelatedPersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (relatedPersonTypeIdBuilder_ == null) {
          if (relatedPersonTypeId_ != null) {
            relatedPersonTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(relatedPersonTypeId_).mergeFrom(value).buildPartial();
          } else {
            relatedPersonTypeId_ = value;
          }
          onChanged();
        } else {
          relatedPersonTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public Builder clearRelatedPersonTypeId() {
        if (relatedPersonTypeIdBuilder_ == null) {
          relatedPersonTypeId_ = null;
          onChanged();
        } else {
          relatedPersonTypeId_ = null;
          relatedPersonTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getRelatedPersonTypeIdBuilder() {
        
        onChanged();
        return getRelatedPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonTypeIdOrBuilder() {
        if (relatedPersonTypeIdBuilder_ != null) {
          return relatedPersonTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return relatedPersonTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_type_id = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getRelatedPersonTypeIdFieldBuilder() {
        if (relatedPersonTypeIdBuilder_ == null) {
          relatedPersonTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getRelatedPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          relatedPersonTypeId_ = null;
        }
        return relatedPersonTypeIdBuilder_;
      }

      private boolean relatedPersonTypeIdNull_ ;
      /**
       * <code>optional bool related_person_type_id_null = 1007;</code>
       */
      public boolean getRelatedPersonTypeIdNull() {
        return relatedPersonTypeIdNull_;
      }
      /**
       * <code>optional bool related_person_type_id_null = 1007;</code>
       */
      public Builder setRelatedPersonTypeIdNull(boolean value) {
        
        relatedPersonTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool related_person_type_id_null = 1007;</code>
       */
      public Builder clearRelatedPersonTypeIdNull() {
        
        relatedPersonTypeIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonRelationships_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonRelationships_Ad.Parameters)
    private static final io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters();
    }

    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonRelationships_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonRelationships_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonRelationships_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      boolean hasRelatedPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      io.dstore.engine.Values.integerValue getRelatedPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      boolean hasRelationshipId();
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getRelationshipId();
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      boolean hasPersonTypeIdOfRelatedPerson();
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonTypeIdOfRelatedPerson();
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOfRelatedPersonOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      boolean hasValidTo();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getValidTo();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      boolean hasValidToChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValidToChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      boolean hasValidFrom();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getValidFrom();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      boolean hasAccessLevel();
      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      io.dstore.engine.Values.integerValue getAccessLevel();
      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getAccessLevelOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      boolean hasValidFromChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValidFromChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonRelationships_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (relatedPersonId_ != null) {
                  subBuilder = relatedPersonId_.toBuilder();
                }
                relatedPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relatedPersonId_);
                  relatedPersonId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (relationshipId_ != null) {
                  subBuilder = relationshipId_.toBuilder();
                }
                relationshipId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relationshipId_);
                  relationshipId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personTypeIdOfRelatedPerson_ != null) {
                  subBuilder = personTypeIdOfRelatedPerson_.toBuilder();
                }
                personTypeIdOfRelatedPerson_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personTypeIdOfRelatedPerson_);
                  personTypeIdOfRelatedPerson_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (validTo_ != null) {
                  subBuilder = validTo_.toBuilder();
                }
                validTo_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validTo_);
                  validTo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (validToChar_ != null) {
                  subBuilder = validToChar_.toBuilder();
                }
                validToChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validToChar_);
                  validToChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (validFrom_ != null) {
                  subBuilder = validFrom_.toBuilder();
                }
                validFrom_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validFrom_);
                  validFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (accessLevel_ != null) {
                  subBuilder = accessLevel_.toBuilder();
                }
                accessLevel_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(accessLevel_);
                  accessLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (validFromChar_ != null) {
                  subBuilder = validFromChar_.toBuilder();
                }
                validFromChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validFromChar_);
                  validFromChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int RELATED_PERSON_ID_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue relatedPersonId_;
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      public boolean hasRelatedPersonId() {
        return relatedPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getRelatedPersonId() {
        return relatedPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
       *
       * <pre>
       * ID einer Person, die zu "PersonID" in Beziehung steht
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder() {
        return getRelatedPersonId();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int RELATIONSHIP_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue relationshipId_;
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      public boolean hasRelationshipId() {
        return relationshipId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getRelationshipId() {
        return relationshipId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
       *
       * <pre>
       * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder() {
        return getRelationshipId();
      }

      public static final int PERSON_TYPE_ID_OF_RELATED_PERSON_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue personTypeIdOfRelatedPerson_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      public boolean hasPersonTypeIdOfRelatedPerson() {
        return personTypeIdOfRelatedPerson_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonTypeIdOfRelatedPerson() {
        return personTypeIdOfRelatedPerson_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeIdOfRelatedPerson_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
       *
       * <pre>
       * ID des Personen-Typs von "RelatedPersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOfRelatedPersonOrBuilder() {
        return getPersonTypeIdOfRelatedPerson();
      }

      public static final int VALID_TO_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.timestampValue validTo_;
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      public boolean hasValidTo() {
        return validTo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getValidTo() {
        return validTo_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
       *
       * <pre>
       * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder() {
        return getValidTo();
      }

      public static final int VALID_TO_CHAR_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue validToChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      public boolean hasValidToChar() {
        return validToChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValidToChar() {
        return validToChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder() {
        return getValidToChar();
      }

      public static final int VALID_FROM_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.timestampValue validFrom_;
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      public boolean hasValidFrom() {
        return validFrom_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getValidFrom() {
        return validFrom_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
       *
       * <pre>
       * Beginn der Beziehung
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder() {
        return getValidFrom();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int ACCESS_LEVEL_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue accessLevel_;
      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      public boolean hasAccessLevel() {
        return accessLevel_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getAccessLevel() {
        return accessLevel_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevel_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
       *
       * <pre>
       * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getAccessLevelOrBuilder() {
        return getAccessLevel();
      }

      public static final int VALID_FROM_CHAR_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue validFromChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public boolean hasValidFromChar() {
        return validFromChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValidFromChar() {
        return validFromChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder() {
        return getValidFromChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (relatedPersonId_ != null) {
          output.writeMessage(10001, getRelatedPersonId());
        }
        if (personId_ != null) {
          output.writeMessage(10002, getPersonId());
        }
        if (relationshipId_ != null) {
          output.writeMessage(10003, getRelationshipId());
        }
        if (personTypeIdOfRelatedPerson_ != null) {
          output.writeMessage(10004, getPersonTypeIdOfRelatedPerson());
        }
        if (validTo_ != null) {
          output.writeMessage(10005, getValidTo());
        }
        if (validToChar_ != null) {
          output.writeMessage(10006, getValidToChar());
        }
        if (validFrom_ != null) {
          output.writeMessage(10007, getValidFrom());
        }
        if (sortNo_ != null) {
          output.writeMessage(10008, getSortNo());
        }
        if (accessLevel_ != null) {
          output.writeMessage(10009, getAccessLevel());
        }
        if (validFromChar_ != null) {
          output.writeMessage(10010, getValidFromChar());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (relatedPersonId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getRelatedPersonId());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPersonId());
        }
        if (relationshipId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getRelationshipId());
        }
        if (personTypeIdOfRelatedPerson_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPersonTypeIdOfRelatedPerson());
        }
        if (validTo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValidTo());
        }
        if (validToChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getValidToChar());
        }
        if (validFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getValidFrom());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSortNo());
        }
        if (accessLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getAccessLevel());
        }
        if (validFromChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getValidFromChar());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonRelationships_Ad.Response.Row)
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (relatedPersonIdBuilder_ == null) {
            relatedPersonId_ = null;
          } else {
            relatedPersonId_ = null;
            relatedPersonIdBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (relationshipIdBuilder_ == null) {
            relationshipId_ = null;
          } else {
            relationshipId_ = null;
            relationshipIdBuilder_ = null;
          }
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            personTypeIdOfRelatedPerson_ = null;
          } else {
            personTypeIdOfRelatedPerson_ = null;
            personTypeIdOfRelatedPersonBuilder_ = null;
          }
          if (validToBuilder_ == null) {
            validTo_ = null;
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }
          if (validToCharBuilder_ == null) {
            validToChar_ = null;
          } else {
            validToChar_ = null;
            validToCharBuilder_ = null;
          }
          if (validFromBuilder_ == null) {
            validFrom_ = null;
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (accessLevelBuilder_ == null) {
            accessLevel_ = null;
          } else {
            accessLevel_ = null;
            accessLevelBuilder_ = null;
          }
          if (validFromCharBuilder_ == null) {
            validFromChar_ = null;
          } else {
            validFromChar_ = null;
            validFromCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row build() {
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row result = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (relatedPersonIdBuilder_ == null) {
            result.relatedPersonId_ = relatedPersonId_;
          } else {
            result.relatedPersonId_ = relatedPersonIdBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (relationshipIdBuilder_ == null) {
            result.relationshipId_ = relationshipId_;
          } else {
            result.relationshipId_ = relationshipIdBuilder_.build();
          }
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            result.personTypeIdOfRelatedPerson_ = personTypeIdOfRelatedPerson_;
          } else {
            result.personTypeIdOfRelatedPerson_ = personTypeIdOfRelatedPersonBuilder_.build();
          }
          if (validToBuilder_ == null) {
            result.validTo_ = validTo_;
          } else {
            result.validTo_ = validToBuilder_.build();
          }
          if (validToCharBuilder_ == null) {
            result.validToChar_ = validToChar_;
          } else {
            result.validToChar_ = validToCharBuilder_.build();
          }
          if (validFromBuilder_ == null) {
            result.validFrom_ = validFrom_;
          } else {
            result.validFrom_ = validFromBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (accessLevelBuilder_ == null) {
            result.accessLevel_ = accessLevel_;
          } else {
            result.accessLevel_ = accessLevelBuilder_.build();
          }
          if (validFromCharBuilder_ == null) {
            result.validFromChar_ = validFromChar_;
          } else {
            result.validFromChar_ = validFromCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasRelatedPersonId()) {
            mergeRelatedPersonId(other.getRelatedPersonId());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasRelationshipId()) {
            mergeRelationshipId(other.getRelationshipId());
          }
          if (other.hasPersonTypeIdOfRelatedPerson()) {
            mergePersonTypeIdOfRelatedPerson(other.getPersonTypeIdOfRelatedPerson());
          }
          if (other.hasValidTo()) {
            mergeValidTo(other.getValidTo());
          }
          if (other.hasValidToChar()) {
            mergeValidToChar(other.getValidToChar());
          }
          if (other.hasValidFrom()) {
            mergeValidFrom(other.getValidFrom());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasAccessLevel()) {
            mergeAccessLevel(other.getAccessLevel());
          }
          if (other.hasValidFromChar()) {
            mergeValidFromChar(other.getValidFromChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue relatedPersonId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> relatedPersonIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public boolean hasRelatedPersonId() {
          return relatedPersonIdBuilder_ != null || relatedPersonId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getRelatedPersonId() {
          if (relatedPersonIdBuilder_ == null) {
            return relatedPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
          } else {
            return relatedPersonIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public Builder setRelatedPersonId(io.dstore.engine.Values.integerValue value) {
          if (relatedPersonIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relatedPersonId_ = value;
            onChanged();
          } else {
            relatedPersonIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public Builder setRelatedPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (relatedPersonIdBuilder_ == null) {
            relatedPersonId_ = builderForValue.build();
            onChanged();
          } else {
            relatedPersonIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public Builder mergeRelatedPersonId(io.dstore.engine.Values.integerValue value) {
          if (relatedPersonIdBuilder_ == null) {
            if (relatedPersonId_ != null) {
              relatedPersonId_ =
                io.dstore.engine.Values.integerValue.newBuilder(relatedPersonId_).mergeFrom(value).buildPartial();
            } else {
              relatedPersonId_ = value;
            }
            onChanged();
          } else {
            relatedPersonIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public Builder clearRelatedPersonId() {
          if (relatedPersonIdBuilder_ == null) {
            relatedPersonId_ = null;
            onChanged();
          } else {
            relatedPersonId_ = null;
            relatedPersonIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getRelatedPersonIdBuilder() {
          
          onChanged();
          return getRelatedPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getRelatedPersonIdOrBuilder() {
          if (relatedPersonIdBuilder_ != null) {
            return relatedPersonIdBuilder_.getMessageOrBuilder();
          } else {
            return relatedPersonId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : relatedPersonId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue related_person_id = 10001;</code>
         *
         * <pre>
         * ID einer Person, die zu "PersonID" in Beziehung steht
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getRelatedPersonIdFieldBuilder() {
          if (relatedPersonIdBuilder_ == null) {
            relatedPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getRelatedPersonId(),
                    getParentForChildren(),
                    isClean());
            relatedPersonId_ = null;
          }
          return relatedPersonIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID einer Person, zu der es in Beziehung stehende Personen (-&gt; "RelatedPersonID") gibt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue relationshipId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> relationshipIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public boolean hasRelationshipId() {
          return relationshipIdBuilder_ != null || relationshipId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getRelationshipId() {
          if (relationshipIdBuilder_ == null) {
            return relationshipId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
          } else {
            return relationshipIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public Builder setRelationshipId(io.dstore.engine.Values.integerValue value) {
          if (relationshipIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relationshipId_ = value;
            onChanged();
          } else {
            relationshipIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public Builder setRelationshipId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (relationshipIdBuilder_ == null) {
            relationshipId_ = builderForValue.build();
            onChanged();
          } else {
            relationshipIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public Builder mergeRelationshipId(io.dstore.engine.Values.integerValue value) {
          if (relationshipIdBuilder_ == null) {
            if (relationshipId_ != null) {
              relationshipId_ =
                io.dstore.engine.Values.integerValue.newBuilder(relationshipId_).mergeFrom(value).buildPartial();
            } else {
              relationshipId_ = value;
            }
            onChanged();
          } else {
            relationshipIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public Builder clearRelationshipId() {
          if (relationshipIdBuilder_ == null) {
            relationshipId_ = null;
            onChanged();
          } else {
            relationshipId_ = null;
            relationshipIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getRelationshipIdBuilder() {
          
          onChanged();
          return getRelationshipIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getRelationshipIdOrBuilder() {
          if (relationshipIdBuilder_ != null) {
            return relationshipIdBuilder_.getMessageOrBuilder();
          } else {
            return relationshipId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : relationshipId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue relationship_id = 10003;</code>
         *
         * <pre>
         * ID der Art in der "PersonID" und "RelatedPersonID" in Beziehung stehen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getRelationshipIdFieldBuilder() {
          if (relationshipIdBuilder_ == null) {
            relationshipIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getRelationshipId(),
                    getParentForChildren(),
                    isClean());
            relationshipId_ = null;
          }
          return relationshipIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue personTypeIdOfRelatedPerson_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personTypeIdOfRelatedPersonBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public boolean hasPersonTypeIdOfRelatedPerson() {
          return personTypeIdOfRelatedPersonBuilder_ != null || personTypeIdOfRelatedPerson_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonTypeIdOfRelatedPerson() {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            return personTypeIdOfRelatedPerson_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeIdOfRelatedPerson_;
          } else {
            return personTypeIdOfRelatedPersonBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public Builder setPersonTypeIdOfRelatedPerson(io.dstore.engine.Values.integerValue value) {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personTypeIdOfRelatedPerson_ = value;
            onChanged();
          } else {
            personTypeIdOfRelatedPersonBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public Builder setPersonTypeIdOfRelatedPerson(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            personTypeIdOfRelatedPerson_ = builderForValue.build();
            onChanged();
          } else {
            personTypeIdOfRelatedPersonBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public Builder mergePersonTypeIdOfRelatedPerson(io.dstore.engine.Values.integerValue value) {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            if (personTypeIdOfRelatedPerson_ != null) {
              personTypeIdOfRelatedPerson_ =
                io.dstore.engine.Values.integerValue.newBuilder(personTypeIdOfRelatedPerson_).mergeFrom(value).buildPartial();
            } else {
              personTypeIdOfRelatedPerson_ = value;
            }
            onChanged();
          } else {
            personTypeIdOfRelatedPersonBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public Builder clearPersonTypeIdOfRelatedPerson() {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            personTypeIdOfRelatedPerson_ = null;
            onChanged();
          } else {
            personTypeIdOfRelatedPerson_ = null;
            personTypeIdOfRelatedPersonBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonTypeIdOfRelatedPersonBuilder() {
          
          onChanged();
          return getPersonTypeIdOfRelatedPersonFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOfRelatedPersonOrBuilder() {
          if (personTypeIdOfRelatedPersonBuilder_ != null) {
            return personTypeIdOfRelatedPersonBuilder_.getMessageOrBuilder();
          } else {
            return personTypeIdOfRelatedPerson_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeIdOfRelatedPerson_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id_of_related_person = 10004;</code>
         *
         * <pre>
         * ID des Personen-Typs von "RelatedPersonID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonTypeIdOfRelatedPersonFieldBuilder() {
          if (personTypeIdOfRelatedPersonBuilder_ == null) {
            personTypeIdOfRelatedPersonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonTypeIdOfRelatedPerson(),
                    getParentForChildren(),
                    isClean());
            personTypeIdOfRelatedPerson_ = null;
          }
          return personTypeIdOfRelatedPersonBuilder_;
        }

        private io.dstore.engine.Values.timestampValue validTo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> validToBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public boolean hasValidTo() {
          return validToBuilder_ != null || validTo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getValidTo() {
          if (validToBuilder_ == null) {
            return validTo_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
          } else {
            return validToBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public Builder setValidTo(io.dstore.engine.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validTo_ = value;
            onChanged();
          } else {
            validToBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public Builder setValidTo(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (validToBuilder_ == null) {
            validTo_ = builderForValue.build();
            onChanged();
          } else {
            validToBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public Builder mergeValidTo(io.dstore.engine.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (validTo_ != null) {
              validTo_ =
                io.dstore.engine.Values.timestampValue.newBuilder(validTo_).mergeFrom(value).buildPartial();
            } else {
              validTo_ = value;
            }
            onChanged();
          } else {
            validToBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public Builder clearValidTo() {
          if (validToBuilder_ == null) {
            validTo_ = null;
            onChanged();
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getValidToBuilder() {
          
          onChanged();
          return getValidToFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder() {
          if (validToBuilder_ != null) {
            return validToBuilder_.getMessageOrBuilder();
          } else {
            return validTo_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10005;</code>
         *
         * <pre>
         * Ende der Beziehung - "NULL" bedeutet, daß die Beziehung bis auf unbestimmte Zeit besteht
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getValidToFieldBuilder() {
          if (validToBuilder_ == null) {
            validToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getValidTo(),
                    getParentForChildren(),
                    isClean());
            validTo_ = null;
          }
          return validToBuilder_;
        }

        private io.dstore.engine.Values.stringValue validToChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> validToCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public boolean hasValidToChar() {
          return validToCharBuilder_ != null || validToChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValidToChar() {
          if (validToCharBuilder_ == null) {
            return validToChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
          } else {
            return validToCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public Builder setValidToChar(io.dstore.engine.Values.stringValue value) {
          if (validToCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validToChar_ = value;
            onChanged();
          } else {
            validToCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public Builder setValidToChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (validToCharBuilder_ == null) {
            validToChar_ = builderForValue.build();
            onChanged();
          } else {
            validToCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public Builder mergeValidToChar(io.dstore.engine.Values.stringValue value) {
          if (validToCharBuilder_ == null) {
            if (validToChar_ != null) {
              validToChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(validToChar_).mergeFrom(value).buildPartial();
            } else {
              validToChar_ = value;
            }
            onChanged();
          } else {
            validToCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public Builder clearValidToChar() {
          if (validToCharBuilder_ == null) {
            validToChar_ = null;
            onChanged();
          } else {
            validToChar_ = null;
            validToCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValidToCharBuilder() {
          
          onChanged();
          return getValidToCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder() {
          if (validToCharBuilder_ != null) {
            return validToCharBuilder_.getMessageOrBuilder();
          } else {
            return validToChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10006;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115" (hier wird "NULL" zurückgegeben, falls "ValidTo" "NULL" ist)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValidToCharFieldBuilder() {
          if (validToCharBuilder_ == null) {
            validToCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValidToChar(),
                    getParentForChildren(),
                    isClean());
            validToChar_ = null;
          }
          return validToCharBuilder_;
        }

        private io.dstore.engine.Values.timestampValue validFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> validFromBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public boolean hasValidFrom() {
          return validFromBuilder_ != null || validFrom_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getValidFrom() {
          if (validFromBuilder_ == null) {
            return validFrom_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
          } else {
            return validFromBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public Builder setValidFrom(io.dstore.engine.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validFrom_ = value;
            onChanged();
          } else {
            validFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public Builder setValidFrom(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (validFromBuilder_ == null) {
            validFrom_ = builderForValue.build();
            onChanged();
          } else {
            validFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public Builder mergeValidFrom(io.dstore.engine.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (validFrom_ != null) {
              validFrom_ =
                io.dstore.engine.Values.timestampValue.newBuilder(validFrom_).mergeFrom(value).buildPartial();
            } else {
              validFrom_ = value;
            }
            onChanged();
          } else {
            validFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public Builder clearValidFrom() {
          if (validFromBuilder_ == null) {
            validFrom_ = null;
            onChanged();
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getValidFromBuilder() {
          
          onChanged();
          return getValidFromFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder() {
          if (validFromBuilder_ != null) {
            return validFromBuilder_.getMessageOrBuilder();
          } else {
            return validFrom_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10007;</code>
         *
         * <pre>
         * Beginn der Beziehung
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getValidFromFieldBuilder() {
          if (validFromBuilder_ == null) {
            validFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getValidFrom(),
                    getParentForChildren(),
                    isClean());
            validFrom_ = null;
          }
          return validFromBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * An welcher "Stelle" steht "RelatedPersonID" in der Liste aller Personen, die zu "PersonID" in der durch "RelationshipID" angegebenen Beziehung stehen (gemeint ist letztlich eine "Priorität" der Beziehung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue accessLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> accessLevelBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public boolean hasAccessLevel() {
          return accessLevelBuilder_ != null || accessLevel_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getAccessLevel() {
          if (accessLevelBuilder_ == null) {
            return accessLevel_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevel_;
          } else {
            return accessLevelBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public Builder setAccessLevel(io.dstore.engine.Values.integerValue value) {
          if (accessLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            accessLevel_ = value;
            onChanged();
          } else {
            accessLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public Builder setAccessLevel(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (accessLevelBuilder_ == null) {
            accessLevel_ = builderForValue.build();
            onChanged();
          } else {
            accessLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public Builder mergeAccessLevel(io.dstore.engine.Values.integerValue value) {
          if (accessLevelBuilder_ == null) {
            if (accessLevel_ != null) {
              accessLevel_ =
                io.dstore.engine.Values.integerValue.newBuilder(accessLevel_).mergeFrom(value).buildPartial();
            } else {
              accessLevel_ = value;
            }
            onChanged();
          } else {
            accessLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public Builder clearAccessLevel() {
          if (accessLevelBuilder_ == null) {
            accessLevel_ = null;
            onChanged();
          } else {
            accessLevel_ = null;
            accessLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getAccessLevelBuilder() {
          
          onChanged();
          return getAccessLevelFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getAccessLevelOrBuilder() {
          if (accessLevelBuilder_ != null) {
            return accessLevelBuilder_.getMessageOrBuilder();
          } else {
            return accessLevel_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevel_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level = 10009;</code>
         *
         * <pre>
         * Summe von Zugriffsrechten, die "PersonID" auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getAccessLevelFieldBuilder() {
          if (accessLevelBuilder_ == null) {
            accessLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getAccessLevel(),
                    getParentForChildren(),
                    isClean());
            accessLevel_ = null;
          }
          return accessLevelBuilder_;
        }

        private io.dstore.engine.Values.stringValue validFromChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> validFromCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public boolean hasValidFromChar() {
          return validFromCharBuilder_ != null || validFromChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValidFromChar() {
          if (validFromCharBuilder_ == null) {
            return validFromChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
          } else {
            return validFromCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidFromChar(io.dstore.engine.Values.stringValue value) {
          if (validFromCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validFromChar_ = value;
            onChanged();
          } else {
            validFromCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidFromChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (validFromCharBuilder_ == null) {
            validFromChar_ = builderForValue.build();
            onChanged();
          } else {
            validFromCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder mergeValidFromChar(io.dstore.engine.Values.stringValue value) {
          if (validFromCharBuilder_ == null) {
            if (validFromChar_ != null) {
              validFromChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(validFromChar_).mergeFrom(value).buildPartial();
            } else {
              validFromChar_ = value;
            }
            onChanged();
          } else {
            validFromCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder clearValidFromChar() {
          if (validFromCharBuilder_ == null) {
            validFromChar_ = null;
            onChanged();
          } else {
            validFromChar_ = null;
            validFromCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValidFromCharBuilder() {
          
          onChanged();
          return getValidFromCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder() {
          if (validFromCharBuilder_ != null) {
            return validFromCharBuilder_.getMessageOrBuilder();
          } else {
            return validFromChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10010;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValidFromCharFieldBuilder() {
          if (validFromCharBuilder_ == null) {
            validFromCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValidFromChar(),
                    getParentForChildren(),
                    isClean());
            validFromChar_ = null;
          }
          return validFromCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonRelationships_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonRelationships_Ad.Response.Row)
      private static final io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row();
      }

      public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonRelationships_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonRelationships_Ad.Response)
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.class, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response build() {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response buildPartial() {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response result = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response other) {
        if (other == io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonRelationships_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonRelationships_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonRelationships_Ad.Response)
    private static final io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response();
    }

    public static io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonRelationshipsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/pm_GetPersonR" +
      "elationships_Ad.proto\022*dstore.engine.pm_" +
      "GetPersonRelationships_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"\234\005\n\nParame" +
      "ters\0225\n\tperson_id\030\001 \001(\0132\".dstore.engine." +
      "values.integerValue\022\027\n\016person_id_null\030\351\007" +
      " \001(\010\022=\n\021related_person_id\030\002 \001(\0132\".dstore" +
      ".engine.values.integerValue\022\037\n\026related_p" +
      "erson_id_null\030\352\007 \001(\010\022;\n\017relationship_id\030",
      "\003 \001(\0132\".dstore.engine.values.integerValu" +
      "e\022\035\n\024relationship_id_null\030\353\007 \001(\010\0227\n\tfrom" +
      "_date\030\004 \001(\0132$.dstore.engine.values.times" +
      "tampValue\022\027\n\016from_date_null\030\354\007 \001(\010\0225\n\007to" +
      "_date\030\005 \001(\0132$.dstore.engine.values.times" +
      "tampValue\022\025\n\014to_date_null\030\355\007 \001(\010\022J\n\036only" +
      "_relations_currently_valid\030\006 \001(\0132\".dstor" +
      "e.engine.values.booleanValue\022,\n#only_rel" +
      "ations_currently_valid_null\030\356\007 \001(\010\022B\n\026re" +
      "lated_person_type_id\030\007 \001(\0132\".dstore.engi",
      "ne.values.integerValue\022$\n\033related_person" +
      "_type_id_null\030\357\007 \001(\010\"\250\006\n\010Response\022)\n\005err" +
      "or\030\001 \001(\0132\032.dstore.engine.error.Error\022/\n\007" +
      "message\030\003 \003(\0132\036.dstore.engine.message.Me" +
      "ssage\022E\n\003row\030\004 \003(\01328.dstore.engine.pm_Ge" +
      "tPersonRelationships_Ad.Response.Row\032\370\004\n" +
      "\003Row\022\017\n\006row_id\030\220N \001(\005\022>\n\021related_person_" +
      "id\030\221N \001(\0132\".dstore.engine.values.integer" +
      "Value\0226\n\tperson_id\030\222N \001(\0132\".dstore.engin" +
      "e.values.integerValue\022<\n\017relationship_id",
      "\030\223N \001(\0132\".dstore.engine.values.integerVa" +
      "lue\022M\n person_type_id_of_related_person\030" +
      "\224N \001(\0132\".dstore.engine.values.integerVal" +
      "ue\0227\n\010valid_to\030\225N \001(\0132$.dstore.engine.va" +
      "lues.timestampValue\0229\n\rvalid_to_char\030\226N " +
      "\001(\0132!.dstore.engine.values.stringValue\0229" +
      "\n\nvalid_from\030\227N \001(\0132$.dstore.engine.valu" +
      "es.timestampValue\0224\n\007sort_no\030\230N \001(\0132\".ds" +
      "tore.engine.values.integerValue\0229\n\014acces" +
      "s_level\030\231N \001(\0132\".dstore.engine.values.in",
      "tegerValue\022;\n\017valid_from_char\030\232N \001(\0132!.d" +
      "store.engine.values.stringValueB\030\n\026io.ds" +
      "tore.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Parameters_descriptor,
        new java.lang.String[] { "PersonId", "PersonIdNull", "RelatedPersonId", "RelatedPersonIdNull", "RelationshipId", "RelationshipIdNull", "FromDate", "FromDateNull", "ToDate", "ToDateNull", "OnlyRelationsCurrentlyValid", "OnlyRelationsCurrentlyValidNull", "RelatedPersonTypeId", "RelatedPersonTypeIdNull", });
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonRelationships_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "RelatedPersonId", "PersonId", "RelationshipId", "PersonTypeIdOfRelatedPerson", "ValidTo", "ValidToChar", "ValidFrom", "SortNo", "AccessLevel", "ValidFromChar", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
