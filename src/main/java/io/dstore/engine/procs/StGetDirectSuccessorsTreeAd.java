// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/st_GetDirectSuccessors_Tree_Ad.proto

package io.dstore.engine.procs;

public final class StGetDirectSuccessorsTreeAd {
  private StGetDirectSuccessorsTreeAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    boolean hasHTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getHTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

    /**
     * <code>optional bool h_tree_node_id_null = 1001;</code>
     */
    boolean getHTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    boolean hasFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValue getFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

    /**
     * <code>optional bool from_date_null = 1002;</code>
     */
    boolean getFromDateNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    boolean hasToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValue getToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

    /**
     * <code>optional bool to_date_null = 1003;</code>
     */
    boolean getToDateNull();

    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    boolean hasBasicCharacteristicNo1();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    io.dstore.engine.Values.integerValue getBasicCharacteristicNo1();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo1OrBuilder();

    /**
     * <code>optional bool basic_characteristic_no1_null = 1004;</code>
     */
    boolean getBasicCharacteristicNo1Null();

    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    boolean hasWeightBasicCharacteristicNo1();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo1();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo1OrBuilder();

    /**
     * <code>optional bool weight_basic_characteristic_no1_null = 1005;</code>
     */
    boolean getWeightBasicCharacteristicNo1Null();

    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    boolean hasBasicCharacteristicNo2();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    io.dstore.engine.Values.integerValue getBasicCharacteristicNo2();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo2OrBuilder();

    /**
     * <code>optional bool basic_characteristic_no2_null = 1006;</code>
     */
    boolean getBasicCharacteristicNo2Null();

    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    boolean hasWeightBasicCharacteristicNo2();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo2();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo2OrBuilder();

    /**
     * <code>optional bool weight_basic_characteristic_no2_null = 1007;</code>
     */
    boolean getWeightBasicCharacteristicNo2Null();

    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    boolean hasBasicCharacteristicNo3();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    io.dstore.engine.Values.integerValue getBasicCharacteristicNo3();
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo3OrBuilder();

    /**
     * <code>optional bool basic_characteristic_no3_null = 1008;</code>
     */
    boolean getBasicCharacteristicNo3Null();

    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    boolean hasWeightBasicCharacteristicNo3();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo3();
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo3OrBuilder();

    /**
     * <code>optional bool weight_basic_characteristic_no3_null = 1009;</code>
     */
    boolean getWeightBasicCharacteristicNo3Null();

    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    boolean hasSourceTableForStatistics();
    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    io.dstore.engine.Values.integerValue getSourceTableForStatistics();
    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getSourceTableForStatisticsOrBuilder();

    /**
     * <code>optional bool source_table_for_statistics_null = 1010;</code>
     */
    boolean getSourceTableForStatisticsNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    boolean hasDisplayOnlyActive();
    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    io.dstore.engine.Values.booleanValue getDisplayOnlyActive();
    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getDisplayOnlyActiveOrBuilder();

    /**
     * <code>optional bool display_only_active_null = 1011;</code>
     */
    boolean getDisplayOnlyActiveNull();
  }
  /**
   * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      hTreeNodeIdNull_ = false;
      fromDateNull_ = false;
      toDateNull_ = false;
      basicCharacteristicNo1Null_ = false;
      weightBasicCharacteristicNo1Null_ = false;
      basicCharacteristicNo2Null_ = false;
      weightBasicCharacteristicNo2Null_ = false;
      basicCharacteristicNo3Null_ = false;
      weightBasicCharacteristicNo3Null_ = false;
      sourceTableForStatisticsNull_ = false;
      displayOnlyActiveNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (hTreeNodeId_ != null) {
                subBuilder = hTreeNodeId_.toBuilder();
              }
              hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hTreeNodeId_);
                hTreeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (fromDate_ != null) {
                subBuilder = fromDate_.toBuilder();
              }
              fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromDate_);
                fromDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (toDate_ != null) {
                subBuilder = toDate_.toBuilder();
              }
              toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toDate_);
                toDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (basicCharacteristicNo1_ != null) {
                subBuilder = basicCharacteristicNo1_.toBuilder();
              }
              basicCharacteristicNo1_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicCharacteristicNo1_);
                basicCharacteristicNo1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
              if (weightBasicCharacteristicNo1_ != null) {
                subBuilder = weightBasicCharacteristicNo1_.toBuilder();
              }
              weightBasicCharacteristicNo1_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(weightBasicCharacteristicNo1_);
                weightBasicCharacteristicNo1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (basicCharacteristicNo2_ != null) {
                subBuilder = basicCharacteristicNo2_.toBuilder();
              }
              basicCharacteristicNo2_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicCharacteristicNo2_);
                basicCharacteristicNo2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
              if (weightBasicCharacteristicNo2_ != null) {
                subBuilder = weightBasicCharacteristicNo2_.toBuilder();
              }
              weightBasicCharacteristicNo2_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(weightBasicCharacteristicNo2_);
                weightBasicCharacteristicNo2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (basicCharacteristicNo3_ != null) {
                subBuilder = basicCharacteristicNo3_.toBuilder();
              }
              basicCharacteristicNo3_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicCharacteristicNo3_);
                basicCharacteristicNo3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
              if (weightBasicCharacteristicNo3_ != null) {
                subBuilder = weightBasicCharacteristicNo3_.toBuilder();
              }
              weightBasicCharacteristicNo3_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(weightBasicCharacteristicNo3_);
                weightBasicCharacteristicNo3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (sourceTableForStatistics_ != null) {
                subBuilder = sourceTableForStatistics_.toBuilder();
              }
              sourceTableForStatistics_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceTableForStatistics_);
                sourceTableForStatistics_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (displayOnlyActive_ != null) {
                subBuilder = displayOnlyActive_.toBuilder();
              }
              displayOnlyActive_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(displayOnlyActive_);
                displayOnlyActive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              hTreeNodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              fromDateNull_ = input.readBool();
              break;
            }
            case 8024: {

              toDateNull_ = input.readBool();
              break;
            }
            case 8032: {

              basicCharacteristicNo1Null_ = input.readBool();
              break;
            }
            case 8040: {

              weightBasicCharacteristicNo1Null_ = input.readBool();
              break;
            }
            case 8048: {

              basicCharacteristicNo2Null_ = input.readBool();
              break;
            }
            case 8056: {

              weightBasicCharacteristicNo2Null_ = input.readBool();
              break;
            }
            case 8064: {

              basicCharacteristicNo3Null_ = input.readBool();
              break;
            }
            case 8072: {

              weightBasicCharacteristicNo3Null_ = input.readBool();
              break;
            }
            case 8080: {

              sourceTableForStatisticsNull_ = input.readBool();
              break;
            }
            case 8088: {

              displayOnlyActiveNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.Builder.class);
    }

    public static final int H_TREE_NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue hTreeNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public boolean hasHTreeNodeId() {
      return hTreeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getHTreeNodeId() {
      return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
      return getHTreeNodeId();
    }

    public static final int H_TREE_NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean hTreeNodeIdNull_;
    /**
     * <code>optional bool h_tree_node_id_null = 1001;</code>
     */
    public boolean getHTreeNodeIdNull() {
      return hTreeNodeIdNull_;
    }

    public static final int FROM_DATE_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.timestampValue fromDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public boolean hasFromDate() {
      return fromDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValue getFromDate() {
      return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
      return getFromDate();
    }

    public static final int FROM_DATE_NULL_FIELD_NUMBER = 1002;
    private boolean fromDateNull_;
    /**
     * <code>optional bool from_date_null = 1002;</code>
     */
    public boolean getFromDateNull() {
      return fromDateNull_;
    }

    public static final int TO_DATE_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.timestampValue toDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public boolean hasToDate() {
      return toDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValue getToDate() {
      return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
      return getToDate();
    }

    public static final int TO_DATE_NULL_FIELD_NUMBER = 1003;
    private boolean toDateNull_;
    /**
     * <code>optional bool to_date_null = 1003;</code>
     */
    public boolean getToDateNull() {
      return toDateNull_;
    }

    public static final int BASIC_CHARACTERISTIC_NO1_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue basicCharacteristicNo1_;
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    public boolean hasBasicCharacteristicNo1() {
      return basicCharacteristicNo1_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getBasicCharacteristicNo1() {
      return basicCharacteristicNo1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo1_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo1OrBuilder() {
      return getBasicCharacteristicNo1();
    }

    public static final int BASIC_CHARACTERISTIC_NO1_NULL_FIELD_NUMBER = 1004;
    private boolean basicCharacteristicNo1Null_;
    /**
     * <code>optional bool basic_characteristic_no1_null = 1004;</code>
     */
    public boolean getBasicCharacteristicNo1Null() {
      return basicCharacteristicNo1Null_;
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO1_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo1_;
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    public boolean hasWeightBasicCharacteristicNo1() {
      return weightBasicCharacteristicNo1_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo1() {
      return weightBasicCharacteristicNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo1_;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
     */
    public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo1OrBuilder() {
      return getWeightBasicCharacteristicNo1();
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO1_NULL_FIELD_NUMBER = 1005;
    private boolean weightBasicCharacteristicNo1Null_;
    /**
     * <code>optional bool weight_basic_characteristic_no1_null = 1005;</code>
     */
    public boolean getWeightBasicCharacteristicNo1Null() {
      return weightBasicCharacteristicNo1Null_;
    }

    public static final int BASIC_CHARACTERISTIC_NO2_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue basicCharacteristicNo2_;
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    public boolean hasBasicCharacteristicNo2() {
      return basicCharacteristicNo2_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getBasicCharacteristicNo2() {
      return basicCharacteristicNo2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo2_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo2OrBuilder() {
      return getBasicCharacteristicNo2();
    }

    public static final int BASIC_CHARACTERISTIC_NO2_NULL_FIELD_NUMBER = 1006;
    private boolean basicCharacteristicNo2Null_;
    /**
     * <code>optional bool basic_characteristic_no2_null = 1006;</code>
     */
    public boolean getBasicCharacteristicNo2Null() {
      return basicCharacteristicNo2Null_;
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO2_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo2_;
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    public boolean hasWeightBasicCharacteristicNo2() {
      return weightBasicCharacteristicNo2_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo2() {
      return weightBasicCharacteristicNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo2_;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
     */
    public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo2OrBuilder() {
      return getWeightBasicCharacteristicNo2();
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO2_NULL_FIELD_NUMBER = 1007;
    private boolean weightBasicCharacteristicNo2Null_;
    /**
     * <code>optional bool weight_basic_characteristic_no2_null = 1007;</code>
     */
    public boolean getWeightBasicCharacteristicNo2Null() {
      return weightBasicCharacteristicNo2Null_;
    }

    public static final int BASIC_CHARACTERISTIC_NO3_FIELD_NUMBER = 8;
    private io.dstore.engine.Values.integerValue basicCharacteristicNo3_;
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    public boolean hasBasicCharacteristicNo3() {
      return basicCharacteristicNo3_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    public io.dstore.engine.Values.integerValue getBasicCharacteristicNo3() {
      return basicCharacteristicNo3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo3_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo3OrBuilder() {
      return getBasicCharacteristicNo3();
    }

    public static final int BASIC_CHARACTERISTIC_NO3_NULL_FIELD_NUMBER = 1008;
    private boolean basicCharacteristicNo3Null_;
    /**
     * <code>optional bool basic_characteristic_no3_null = 1008;</code>
     */
    public boolean getBasicCharacteristicNo3Null() {
      return basicCharacteristicNo3Null_;
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO3_FIELD_NUMBER = 9;
    private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo3_;
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    public boolean hasWeightBasicCharacteristicNo3() {
      return weightBasicCharacteristicNo3_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo3() {
      return weightBasicCharacteristicNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo3_;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
     */
    public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo3OrBuilder() {
      return getWeightBasicCharacteristicNo3();
    }

    public static final int WEIGHT_BASIC_CHARACTERISTIC_NO3_NULL_FIELD_NUMBER = 1009;
    private boolean weightBasicCharacteristicNo3Null_;
    /**
     * <code>optional bool weight_basic_characteristic_no3_null = 1009;</code>
     */
    public boolean getWeightBasicCharacteristicNo3Null() {
      return weightBasicCharacteristicNo3Null_;
    }

    public static final int SOURCE_TABLE_FOR_STATISTICS_FIELD_NUMBER = 10;
    private io.dstore.engine.Values.integerValue sourceTableForStatistics_;
    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    public boolean hasSourceTableForStatistics() {
      return sourceTableForStatistics_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    public io.dstore.engine.Values.integerValue getSourceTableForStatistics() {
      return sourceTableForStatistics_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTableForStatistics_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getSourceTableForStatisticsOrBuilder() {
      return getSourceTableForStatistics();
    }

    public static final int SOURCE_TABLE_FOR_STATISTICS_NULL_FIELD_NUMBER = 1010;
    private boolean sourceTableForStatisticsNull_;
    /**
     * <code>optional bool source_table_for_statistics_null = 1010;</code>
     */
    public boolean getSourceTableForStatisticsNull() {
      return sourceTableForStatisticsNull_;
    }

    public static final int DISPLAY_ONLY_ACTIVE_FIELD_NUMBER = 11;
    private io.dstore.engine.Values.booleanValue displayOnlyActive_;
    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    public boolean hasDisplayOnlyActive() {
      return displayOnlyActive_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    public io.dstore.engine.Values.booleanValue getDisplayOnlyActive() {
      return displayOnlyActive_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : displayOnlyActive_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getDisplayOnlyActiveOrBuilder() {
      return getDisplayOnlyActive();
    }

    public static final int DISPLAY_ONLY_ACTIVE_NULL_FIELD_NUMBER = 1011;
    private boolean displayOnlyActiveNull_;
    /**
     * <code>optional bool display_only_active_null = 1011;</code>
     */
    public boolean getDisplayOnlyActiveNull() {
      return displayOnlyActiveNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hTreeNodeId_ != null) {
        output.writeMessage(1, getHTreeNodeId());
      }
      if (fromDate_ != null) {
        output.writeMessage(2, getFromDate());
      }
      if (toDate_ != null) {
        output.writeMessage(3, getToDate());
      }
      if (basicCharacteristicNo1_ != null) {
        output.writeMessage(4, getBasicCharacteristicNo1());
      }
      if (weightBasicCharacteristicNo1_ != null) {
        output.writeMessage(5, getWeightBasicCharacteristicNo1());
      }
      if (basicCharacteristicNo2_ != null) {
        output.writeMessage(6, getBasicCharacteristicNo2());
      }
      if (weightBasicCharacteristicNo2_ != null) {
        output.writeMessage(7, getWeightBasicCharacteristicNo2());
      }
      if (basicCharacteristicNo3_ != null) {
        output.writeMessage(8, getBasicCharacteristicNo3());
      }
      if (weightBasicCharacteristicNo3_ != null) {
        output.writeMessage(9, getWeightBasicCharacteristicNo3());
      }
      if (sourceTableForStatistics_ != null) {
        output.writeMessage(10, getSourceTableForStatistics());
      }
      if (displayOnlyActive_ != null) {
        output.writeMessage(11, getDisplayOnlyActive());
      }
      if (hTreeNodeIdNull_ != false) {
        output.writeBool(1001, hTreeNodeIdNull_);
      }
      if (fromDateNull_ != false) {
        output.writeBool(1002, fromDateNull_);
      }
      if (toDateNull_ != false) {
        output.writeBool(1003, toDateNull_);
      }
      if (basicCharacteristicNo1Null_ != false) {
        output.writeBool(1004, basicCharacteristicNo1Null_);
      }
      if (weightBasicCharacteristicNo1Null_ != false) {
        output.writeBool(1005, weightBasicCharacteristicNo1Null_);
      }
      if (basicCharacteristicNo2Null_ != false) {
        output.writeBool(1006, basicCharacteristicNo2Null_);
      }
      if (weightBasicCharacteristicNo2Null_ != false) {
        output.writeBool(1007, weightBasicCharacteristicNo2Null_);
      }
      if (basicCharacteristicNo3Null_ != false) {
        output.writeBool(1008, basicCharacteristicNo3Null_);
      }
      if (weightBasicCharacteristicNo3Null_ != false) {
        output.writeBool(1009, weightBasicCharacteristicNo3Null_);
      }
      if (sourceTableForStatisticsNull_ != false) {
        output.writeBool(1010, sourceTableForStatisticsNull_);
      }
      if (displayOnlyActiveNull_ != false) {
        output.writeBool(1011, displayOnlyActiveNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hTreeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHTreeNodeId());
      }
      if (fromDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFromDate());
      }
      if (toDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToDate());
      }
      if (basicCharacteristicNo1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBasicCharacteristicNo1());
      }
      if (weightBasicCharacteristicNo1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getWeightBasicCharacteristicNo1());
      }
      if (basicCharacteristicNo2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getBasicCharacteristicNo2());
      }
      if (weightBasicCharacteristicNo2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getWeightBasicCharacteristicNo2());
      }
      if (basicCharacteristicNo3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getBasicCharacteristicNo3());
      }
      if (weightBasicCharacteristicNo3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getWeightBasicCharacteristicNo3());
      }
      if (sourceTableForStatistics_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getSourceTableForStatistics());
      }
      if (displayOnlyActive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getDisplayOnlyActive());
      }
      if (hTreeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, hTreeNodeIdNull_);
      }
      if (fromDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, fromDateNull_);
      }
      if (toDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, toDateNull_);
      }
      if (basicCharacteristicNo1Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, basicCharacteristicNo1Null_);
      }
      if (weightBasicCharacteristicNo1Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, weightBasicCharacteristicNo1Null_);
      }
      if (basicCharacteristicNo2Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, basicCharacteristicNo2Null_);
      }
      if (weightBasicCharacteristicNo2Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, weightBasicCharacteristicNo2Null_);
      }
      if (basicCharacteristicNo3Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, basicCharacteristicNo3Null_);
      }
      if (weightBasicCharacteristicNo3Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1009, weightBasicCharacteristicNo3Null_);
      }
      if (sourceTableForStatisticsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1010, sourceTableForStatisticsNull_);
      }
      if (displayOnlyActiveNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1011, displayOnlyActiveNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters)
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = null;
        } else {
          hTreeNodeId_ = null;
          hTreeNodeIdBuilder_ = null;
        }
        hTreeNodeIdNull_ = false;

        if (fromDateBuilder_ == null) {
          fromDate_ = null;
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }
        fromDateNull_ = false;

        if (toDateBuilder_ == null) {
          toDate_ = null;
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }
        toDateNull_ = false;

        if (basicCharacteristicNo1Builder_ == null) {
          basicCharacteristicNo1_ = null;
        } else {
          basicCharacteristicNo1_ = null;
          basicCharacteristicNo1Builder_ = null;
        }
        basicCharacteristicNo1Null_ = false;

        if (weightBasicCharacteristicNo1Builder_ == null) {
          weightBasicCharacteristicNo1_ = null;
        } else {
          weightBasicCharacteristicNo1_ = null;
          weightBasicCharacteristicNo1Builder_ = null;
        }
        weightBasicCharacteristicNo1Null_ = false;

        if (basicCharacteristicNo2Builder_ == null) {
          basicCharacteristicNo2_ = null;
        } else {
          basicCharacteristicNo2_ = null;
          basicCharacteristicNo2Builder_ = null;
        }
        basicCharacteristicNo2Null_ = false;

        if (weightBasicCharacteristicNo2Builder_ == null) {
          weightBasicCharacteristicNo2_ = null;
        } else {
          weightBasicCharacteristicNo2_ = null;
          weightBasicCharacteristicNo2Builder_ = null;
        }
        weightBasicCharacteristicNo2Null_ = false;

        if (basicCharacteristicNo3Builder_ == null) {
          basicCharacteristicNo3_ = null;
        } else {
          basicCharacteristicNo3_ = null;
          basicCharacteristicNo3Builder_ = null;
        }
        basicCharacteristicNo3Null_ = false;

        if (weightBasicCharacteristicNo3Builder_ == null) {
          weightBasicCharacteristicNo3_ = null;
        } else {
          weightBasicCharacteristicNo3_ = null;
          weightBasicCharacteristicNo3Builder_ = null;
        }
        weightBasicCharacteristicNo3Null_ = false;

        if (sourceTableForStatisticsBuilder_ == null) {
          sourceTableForStatistics_ = null;
        } else {
          sourceTableForStatistics_ = null;
          sourceTableForStatisticsBuilder_ = null;
        }
        sourceTableForStatisticsNull_ = false;

        if (displayOnlyActiveBuilder_ == null) {
          displayOnlyActive_ = null;
        } else {
          displayOnlyActive_ = null;
          displayOnlyActiveBuilder_ = null;
        }
        displayOnlyActiveNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters build() {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters buildPartial() {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters result = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters(this);
        if (hTreeNodeIdBuilder_ == null) {
          result.hTreeNodeId_ = hTreeNodeId_;
        } else {
          result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
        }
        result.hTreeNodeIdNull_ = hTreeNodeIdNull_;
        if (fromDateBuilder_ == null) {
          result.fromDate_ = fromDate_;
        } else {
          result.fromDate_ = fromDateBuilder_.build();
        }
        result.fromDateNull_ = fromDateNull_;
        if (toDateBuilder_ == null) {
          result.toDate_ = toDate_;
        } else {
          result.toDate_ = toDateBuilder_.build();
        }
        result.toDateNull_ = toDateNull_;
        if (basicCharacteristicNo1Builder_ == null) {
          result.basicCharacteristicNo1_ = basicCharacteristicNo1_;
        } else {
          result.basicCharacteristicNo1_ = basicCharacteristicNo1Builder_.build();
        }
        result.basicCharacteristicNo1Null_ = basicCharacteristicNo1Null_;
        if (weightBasicCharacteristicNo1Builder_ == null) {
          result.weightBasicCharacteristicNo1_ = weightBasicCharacteristicNo1_;
        } else {
          result.weightBasicCharacteristicNo1_ = weightBasicCharacteristicNo1Builder_.build();
        }
        result.weightBasicCharacteristicNo1Null_ = weightBasicCharacteristicNo1Null_;
        if (basicCharacteristicNo2Builder_ == null) {
          result.basicCharacteristicNo2_ = basicCharacteristicNo2_;
        } else {
          result.basicCharacteristicNo2_ = basicCharacteristicNo2Builder_.build();
        }
        result.basicCharacteristicNo2Null_ = basicCharacteristicNo2Null_;
        if (weightBasicCharacteristicNo2Builder_ == null) {
          result.weightBasicCharacteristicNo2_ = weightBasicCharacteristicNo2_;
        } else {
          result.weightBasicCharacteristicNo2_ = weightBasicCharacteristicNo2Builder_.build();
        }
        result.weightBasicCharacteristicNo2Null_ = weightBasicCharacteristicNo2Null_;
        if (basicCharacteristicNo3Builder_ == null) {
          result.basicCharacteristicNo3_ = basicCharacteristicNo3_;
        } else {
          result.basicCharacteristicNo3_ = basicCharacteristicNo3Builder_.build();
        }
        result.basicCharacteristicNo3Null_ = basicCharacteristicNo3Null_;
        if (weightBasicCharacteristicNo3Builder_ == null) {
          result.weightBasicCharacteristicNo3_ = weightBasicCharacteristicNo3_;
        } else {
          result.weightBasicCharacteristicNo3_ = weightBasicCharacteristicNo3Builder_.build();
        }
        result.weightBasicCharacteristicNo3Null_ = weightBasicCharacteristicNo3Null_;
        if (sourceTableForStatisticsBuilder_ == null) {
          result.sourceTableForStatistics_ = sourceTableForStatistics_;
        } else {
          result.sourceTableForStatistics_ = sourceTableForStatisticsBuilder_.build();
        }
        result.sourceTableForStatisticsNull_ = sourceTableForStatisticsNull_;
        if (displayOnlyActiveBuilder_ == null) {
          result.displayOnlyActive_ = displayOnlyActive_;
        } else {
          result.displayOnlyActive_ = displayOnlyActiveBuilder_.build();
        }
        result.displayOnlyActiveNull_ = displayOnlyActiveNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters other) {
        if (other == io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters.getDefaultInstance()) return this;
        if (other.hasHTreeNodeId()) {
          mergeHTreeNodeId(other.getHTreeNodeId());
        }
        if (other.getHTreeNodeIdNull() != false) {
          setHTreeNodeIdNull(other.getHTreeNodeIdNull());
        }
        if (other.hasFromDate()) {
          mergeFromDate(other.getFromDate());
        }
        if (other.getFromDateNull() != false) {
          setFromDateNull(other.getFromDateNull());
        }
        if (other.hasToDate()) {
          mergeToDate(other.getToDate());
        }
        if (other.getToDateNull() != false) {
          setToDateNull(other.getToDateNull());
        }
        if (other.hasBasicCharacteristicNo1()) {
          mergeBasicCharacteristicNo1(other.getBasicCharacteristicNo1());
        }
        if (other.getBasicCharacteristicNo1Null() != false) {
          setBasicCharacteristicNo1Null(other.getBasicCharacteristicNo1Null());
        }
        if (other.hasWeightBasicCharacteristicNo1()) {
          mergeWeightBasicCharacteristicNo1(other.getWeightBasicCharacteristicNo1());
        }
        if (other.getWeightBasicCharacteristicNo1Null() != false) {
          setWeightBasicCharacteristicNo1Null(other.getWeightBasicCharacteristicNo1Null());
        }
        if (other.hasBasicCharacteristicNo2()) {
          mergeBasicCharacteristicNo2(other.getBasicCharacteristicNo2());
        }
        if (other.getBasicCharacteristicNo2Null() != false) {
          setBasicCharacteristicNo2Null(other.getBasicCharacteristicNo2Null());
        }
        if (other.hasWeightBasicCharacteristicNo2()) {
          mergeWeightBasicCharacteristicNo2(other.getWeightBasicCharacteristicNo2());
        }
        if (other.getWeightBasicCharacteristicNo2Null() != false) {
          setWeightBasicCharacteristicNo2Null(other.getWeightBasicCharacteristicNo2Null());
        }
        if (other.hasBasicCharacteristicNo3()) {
          mergeBasicCharacteristicNo3(other.getBasicCharacteristicNo3());
        }
        if (other.getBasicCharacteristicNo3Null() != false) {
          setBasicCharacteristicNo3Null(other.getBasicCharacteristicNo3Null());
        }
        if (other.hasWeightBasicCharacteristicNo3()) {
          mergeWeightBasicCharacteristicNo3(other.getWeightBasicCharacteristicNo3());
        }
        if (other.getWeightBasicCharacteristicNo3Null() != false) {
          setWeightBasicCharacteristicNo3Null(other.getWeightBasicCharacteristicNo3Null());
        }
        if (other.hasSourceTableForStatistics()) {
          mergeSourceTableForStatistics(other.getSourceTableForStatistics());
        }
        if (other.getSourceTableForStatisticsNull() != false) {
          setSourceTableForStatisticsNull(other.getSourceTableForStatisticsNull());
        }
        if (other.hasDisplayOnlyActive()) {
          mergeDisplayOnlyActive(other.getDisplayOnlyActive());
        }
        if (other.getDisplayOnlyActiveNull() != false) {
          setDisplayOnlyActiveNull(other.getDisplayOnlyActiveNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        if (hTreeNodeIdBuilder_ == null) {
          return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
        } else {
          return hTreeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (hTreeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hTreeNodeId_ = value;
          onChanged();
        } else {
          hTreeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder setHTreeNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          hTreeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (hTreeNodeIdBuilder_ == null) {
          if (hTreeNodeId_ != null) {
            hTreeNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
          } else {
            hTreeNodeId_ = value;
          }
          onChanged();
        } else {
          hTreeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder clearHTreeNodeId() {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = null;
          onChanged();
        } else {
          hTreeNodeId_ = null;
          hTreeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
        
        onChanged();
        return getHTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        if (hTreeNodeIdBuilder_ != null) {
          return hTreeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return hTreeNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getHTreeNodeIdFieldBuilder() {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getHTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          hTreeNodeId_ = null;
        }
        return hTreeNodeIdBuilder_;
      }

      private boolean hTreeNodeIdNull_ ;
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public boolean getHTreeNodeIdNull() {
        return hTreeNodeIdNull_;
      }
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public Builder setHTreeNodeIdNull(boolean value) {
        
        hTreeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public Builder clearHTreeNodeIdNull() {
        
        hTreeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue fromDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public boolean hasFromDate() {
        return fromDateBuilder_ != null || fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        if (fromDateBuilder_ == null) {
          return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        } else {
          return fromDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromDate_ = value;
          onChanged();
        } else {
          fromDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder setFromDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (fromDateBuilder_ == null) {
          fromDate_ = builderForValue.build();
          onChanged();
        } else {
          fromDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (fromDate_ != null) {
            fromDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
          } else {
            fromDate_ = value;
          }
          onChanged();
        } else {
          fromDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder clearFromDate() {
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
          onChanged();
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
        
        onChanged();
        return getFromDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        if (fromDateBuilder_ != null) {
          return fromDateBuilder_.getMessageOrBuilder();
        } else {
          return fromDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getFromDateFieldBuilder() {
        if (fromDateBuilder_ == null) {
          fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getFromDate(),
                  getParentForChildren(),
                  isClean());
          fromDate_ = null;
        }
        return fromDateBuilder_;
      }

      private boolean fromDateNull_ ;
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public boolean getFromDateNull() {
        return fromDateNull_;
      }
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public Builder setFromDateNull(boolean value) {
        
        fromDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public Builder clearFromDateNull() {
        
        fromDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue toDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public boolean hasToDate() {
        return toDateBuilder_ != null || toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        if (toDateBuilder_ == null) {
          return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        } else {
          return toDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toDate_ = value;
          onChanged();
        } else {
          toDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder setToDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (toDateBuilder_ == null) {
          toDate_ = builderForValue.build();
          onChanged();
        } else {
          toDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (toDate_ != null) {
            toDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
          } else {
            toDate_ = value;
          }
          onChanged();
        } else {
          toDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder clearToDate() {
        if (toDateBuilder_ == null) {
          toDate_ = null;
          onChanged();
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
        
        onChanged();
        return getToDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        if (toDateBuilder_ != null) {
          return toDateBuilder_.getMessageOrBuilder();
        } else {
          return toDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getToDateFieldBuilder() {
        if (toDateBuilder_ == null) {
          toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getToDate(),
                  getParentForChildren(),
                  isClean());
          toDate_ = null;
        }
        return toDateBuilder_;
      }

      private boolean toDateNull_ ;
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public boolean getToDateNull() {
        return toDateNull_;
      }
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public Builder setToDateNull(boolean value) {
        
        toDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public Builder clearToDateNull() {
        
        toDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue basicCharacteristicNo1_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicCharacteristicNo1Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public boolean hasBasicCharacteristicNo1() {
        return basicCharacteristicNo1Builder_ != null || basicCharacteristicNo1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getBasicCharacteristicNo1() {
        if (basicCharacteristicNo1Builder_ == null) {
          return basicCharacteristicNo1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo1_;
        } else {
          return basicCharacteristicNo1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public Builder setBasicCharacteristicNo1(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicCharacteristicNo1_ = value;
          onChanged();
        } else {
          basicCharacteristicNo1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public Builder setBasicCharacteristicNo1(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (basicCharacteristicNo1Builder_ == null) {
          basicCharacteristicNo1_ = builderForValue.build();
          onChanged();
        } else {
          basicCharacteristicNo1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public Builder mergeBasicCharacteristicNo1(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo1Builder_ == null) {
          if (basicCharacteristicNo1_ != null) {
            basicCharacteristicNo1_ =
              io.dstore.engine.Values.integerValue.newBuilder(basicCharacteristicNo1_).mergeFrom(value).buildPartial();
          } else {
            basicCharacteristicNo1_ = value;
          }
          onChanged();
        } else {
          basicCharacteristicNo1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public Builder clearBasicCharacteristicNo1() {
        if (basicCharacteristicNo1Builder_ == null) {
          basicCharacteristicNo1_ = null;
          onChanged();
        } else {
          basicCharacteristicNo1_ = null;
          basicCharacteristicNo1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getBasicCharacteristicNo1Builder() {
        
        onChanged();
        return getBasicCharacteristicNo1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo1OrBuilder() {
        if (basicCharacteristicNo1Builder_ != null) {
          return basicCharacteristicNo1Builder_.getMessageOrBuilder();
        } else {
          return basicCharacteristicNo1_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo1_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no1 = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getBasicCharacteristicNo1FieldBuilder() {
        if (basicCharacteristicNo1Builder_ == null) {
          basicCharacteristicNo1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getBasicCharacteristicNo1(),
                  getParentForChildren(),
                  isClean());
          basicCharacteristicNo1_ = null;
        }
        return basicCharacteristicNo1Builder_;
      }

      private boolean basicCharacteristicNo1Null_ ;
      /**
       * <code>optional bool basic_characteristic_no1_null = 1004;</code>
       */
      public boolean getBasicCharacteristicNo1Null() {
        return basicCharacteristicNo1Null_;
      }
      /**
       * <code>optional bool basic_characteristic_no1_null = 1004;</code>
       */
      public Builder setBasicCharacteristicNo1Null(boolean value) {
        
        basicCharacteristicNo1Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool basic_characteristic_no1_null = 1004;</code>
       */
      public Builder clearBasicCharacteristicNo1Null() {
        
        basicCharacteristicNo1Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo1_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> weightBasicCharacteristicNo1Builder_;
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public boolean hasWeightBasicCharacteristicNo1() {
        return weightBasicCharacteristicNo1Builder_ != null || weightBasicCharacteristicNo1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo1() {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          return weightBasicCharacteristicNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo1_;
        } else {
          return weightBasicCharacteristicNo1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public Builder setWeightBasicCharacteristicNo1(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weightBasicCharacteristicNo1_ = value;
          onChanged();
        } else {
          weightBasicCharacteristicNo1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public Builder setWeightBasicCharacteristicNo1(
          io.dstore.engine.Values.decimalValue.Builder builderForValue) {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          weightBasicCharacteristicNo1_ = builderForValue.build();
          onChanged();
        } else {
          weightBasicCharacteristicNo1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public Builder mergeWeightBasicCharacteristicNo1(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          if (weightBasicCharacteristicNo1_ != null) {
            weightBasicCharacteristicNo1_ =
              io.dstore.engine.Values.decimalValue.newBuilder(weightBasicCharacteristicNo1_).mergeFrom(value).buildPartial();
          } else {
            weightBasicCharacteristicNo1_ = value;
          }
          onChanged();
        } else {
          weightBasicCharacteristicNo1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public Builder clearWeightBasicCharacteristicNo1() {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          weightBasicCharacteristicNo1_ = null;
          onChanged();
        } else {
          weightBasicCharacteristicNo1_ = null;
          weightBasicCharacteristicNo1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public io.dstore.engine.Values.decimalValue.Builder getWeightBasicCharacteristicNo1Builder() {
        
        onChanged();
        return getWeightBasicCharacteristicNo1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo1OrBuilder() {
        if (weightBasicCharacteristicNo1Builder_ != null) {
          return weightBasicCharacteristicNo1Builder_.getMessageOrBuilder();
        } else {
          return weightBasicCharacteristicNo1_ == null ?
              io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo1_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no1 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
          getWeightBasicCharacteristicNo1FieldBuilder() {
        if (weightBasicCharacteristicNo1Builder_ == null) {
          weightBasicCharacteristicNo1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                  getWeightBasicCharacteristicNo1(),
                  getParentForChildren(),
                  isClean());
          weightBasicCharacteristicNo1_ = null;
        }
        return weightBasicCharacteristicNo1Builder_;
      }

      private boolean weightBasicCharacteristicNo1Null_ ;
      /**
       * <code>optional bool weight_basic_characteristic_no1_null = 1005;</code>
       */
      public boolean getWeightBasicCharacteristicNo1Null() {
        return weightBasicCharacteristicNo1Null_;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no1_null = 1005;</code>
       */
      public Builder setWeightBasicCharacteristicNo1Null(boolean value) {
        
        weightBasicCharacteristicNo1Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no1_null = 1005;</code>
       */
      public Builder clearWeightBasicCharacteristicNo1Null() {
        
        weightBasicCharacteristicNo1Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue basicCharacteristicNo2_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicCharacteristicNo2Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public boolean hasBasicCharacteristicNo2() {
        return basicCharacteristicNo2Builder_ != null || basicCharacteristicNo2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getBasicCharacteristicNo2() {
        if (basicCharacteristicNo2Builder_ == null) {
          return basicCharacteristicNo2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo2_;
        } else {
          return basicCharacteristicNo2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public Builder setBasicCharacteristicNo2(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicCharacteristicNo2_ = value;
          onChanged();
        } else {
          basicCharacteristicNo2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public Builder setBasicCharacteristicNo2(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (basicCharacteristicNo2Builder_ == null) {
          basicCharacteristicNo2_ = builderForValue.build();
          onChanged();
        } else {
          basicCharacteristicNo2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public Builder mergeBasicCharacteristicNo2(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo2Builder_ == null) {
          if (basicCharacteristicNo2_ != null) {
            basicCharacteristicNo2_ =
              io.dstore.engine.Values.integerValue.newBuilder(basicCharacteristicNo2_).mergeFrom(value).buildPartial();
          } else {
            basicCharacteristicNo2_ = value;
          }
          onChanged();
        } else {
          basicCharacteristicNo2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public Builder clearBasicCharacteristicNo2() {
        if (basicCharacteristicNo2Builder_ == null) {
          basicCharacteristicNo2_ = null;
          onChanged();
        } else {
          basicCharacteristicNo2_ = null;
          basicCharacteristicNo2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getBasicCharacteristicNo2Builder() {
        
        onChanged();
        return getBasicCharacteristicNo2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo2OrBuilder() {
        if (basicCharacteristicNo2Builder_ != null) {
          return basicCharacteristicNo2Builder_.getMessageOrBuilder();
        } else {
          return basicCharacteristicNo2_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo2_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no2 = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getBasicCharacteristicNo2FieldBuilder() {
        if (basicCharacteristicNo2Builder_ == null) {
          basicCharacteristicNo2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getBasicCharacteristicNo2(),
                  getParentForChildren(),
                  isClean());
          basicCharacteristicNo2_ = null;
        }
        return basicCharacteristicNo2Builder_;
      }

      private boolean basicCharacteristicNo2Null_ ;
      /**
       * <code>optional bool basic_characteristic_no2_null = 1006;</code>
       */
      public boolean getBasicCharacteristicNo2Null() {
        return basicCharacteristicNo2Null_;
      }
      /**
       * <code>optional bool basic_characteristic_no2_null = 1006;</code>
       */
      public Builder setBasicCharacteristicNo2Null(boolean value) {
        
        basicCharacteristicNo2Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool basic_characteristic_no2_null = 1006;</code>
       */
      public Builder clearBasicCharacteristicNo2Null() {
        
        basicCharacteristicNo2Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo2_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> weightBasicCharacteristicNo2Builder_;
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public boolean hasWeightBasicCharacteristicNo2() {
        return weightBasicCharacteristicNo2Builder_ != null || weightBasicCharacteristicNo2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo2() {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          return weightBasicCharacteristicNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo2_;
        } else {
          return weightBasicCharacteristicNo2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public Builder setWeightBasicCharacteristicNo2(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weightBasicCharacteristicNo2_ = value;
          onChanged();
        } else {
          weightBasicCharacteristicNo2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public Builder setWeightBasicCharacteristicNo2(
          io.dstore.engine.Values.decimalValue.Builder builderForValue) {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          weightBasicCharacteristicNo2_ = builderForValue.build();
          onChanged();
        } else {
          weightBasicCharacteristicNo2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public Builder mergeWeightBasicCharacteristicNo2(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          if (weightBasicCharacteristicNo2_ != null) {
            weightBasicCharacteristicNo2_ =
              io.dstore.engine.Values.decimalValue.newBuilder(weightBasicCharacteristicNo2_).mergeFrom(value).buildPartial();
          } else {
            weightBasicCharacteristicNo2_ = value;
          }
          onChanged();
        } else {
          weightBasicCharacteristicNo2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public Builder clearWeightBasicCharacteristicNo2() {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          weightBasicCharacteristicNo2_ = null;
          onChanged();
        } else {
          weightBasicCharacteristicNo2_ = null;
          weightBasicCharacteristicNo2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public io.dstore.engine.Values.decimalValue.Builder getWeightBasicCharacteristicNo2Builder() {
        
        onChanged();
        return getWeightBasicCharacteristicNo2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo2OrBuilder() {
        if (weightBasicCharacteristicNo2Builder_ != null) {
          return weightBasicCharacteristicNo2Builder_.getMessageOrBuilder();
        } else {
          return weightBasicCharacteristicNo2_ == null ?
              io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo2_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no2 = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
          getWeightBasicCharacteristicNo2FieldBuilder() {
        if (weightBasicCharacteristicNo2Builder_ == null) {
          weightBasicCharacteristicNo2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                  getWeightBasicCharacteristicNo2(),
                  getParentForChildren(),
                  isClean());
          weightBasicCharacteristicNo2_ = null;
        }
        return weightBasicCharacteristicNo2Builder_;
      }

      private boolean weightBasicCharacteristicNo2Null_ ;
      /**
       * <code>optional bool weight_basic_characteristic_no2_null = 1007;</code>
       */
      public boolean getWeightBasicCharacteristicNo2Null() {
        return weightBasicCharacteristicNo2Null_;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no2_null = 1007;</code>
       */
      public Builder setWeightBasicCharacteristicNo2Null(boolean value) {
        
        weightBasicCharacteristicNo2Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no2_null = 1007;</code>
       */
      public Builder clearWeightBasicCharacteristicNo2Null() {
        
        weightBasicCharacteristicNo2Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue basicCharacteristicNo3_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicCharacteristicNo3Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public boolean hasBasicCharacteristicNo3() {
        return basicCharacteristicNo3Builder_ != null || basicCharacteristicNo3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public io.dstore.engine.Values.integerValue getBasicCharacteristicNo3() {
        if (basicCharacteristicNo3Builder_ == null) {
          return basicCharacteristicNo3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo3_;
        } else {
          return basicCharacteristicNo3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public Builder setBasicCharacteristicNo3(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicCharacteristicNo3_ = value;
          onChanged();
        } else {
          basicCharacteristicNo3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public Builder setBasicCharacteristicNo3(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (basicCharacteristicNo3Builder_ == null) {
          basicCharacteristicNo3_ = builderForValue.build();
          onChanged();
        } else {
          basicCharacteristicNo3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public Builder mergeBasicCharacteristicNo3(io.dstore.engine.Values.integerValue value) {
        if (basicCharacteristicNo3Builder_ == null) {
          if (basicCharacteristicNo3_ != null) {
            basicCharacteristicNo3_ =
              io.dstore.engine.Values.integerValue.newBuilder(basicCharacteristicNo3_).mergeFrom(value).buildPartial();
          } else {
            basicCharacteristicNo3_ = value;
          }
          onChanged();
        } else {
          basicCharacteristicNo3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public Builder clearBasicCharacteristicNo3() {
        if (basicCharacteristicNo3Builder_ == null) {
          basicCharacteristicNo3_ = null;
          onChanged();
        } else {
          basicCharacteristicNo3_ = null;
          basicCharacteristicNo3Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getBasicCharacteristicNo3Builder() {
        
        onChanged();
        return getBasicCharacteristicNo3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNo3OrBuilder() {
        if (basicCharacteristicNo3Builder_ != null) {
          return basicCharacteristicNo3Builder_.getMessageOrBuilder();
        } else {
          return basicCharacteristicNo3_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNo3_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_no3 = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getBasicCharacteristicNo3FieldBuilder() {
        if (basicCharacteristicNo3Builder_ == null) {
          basicCharacteristicNo3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getBasicCharacteristicNo3(),
                  getParentForChildren(),
                  isClean());
          basicCharacteristicNo3_ = null;
        }
        return basicCharacteristicNo3Builder_;
      }

      private boolean basicCharacteristicNo3Null_ ;
      /**
       * <code>optional bool basic_characteristic_no3_null = 1008;</code>
       */
      public boolean getBasicCharacteristicNo3Null() {
        return basicCharacteristicNo3Null_;
      }
      /**
       * <code>optional bool basic_characteristic_no3_null = 1008;</code>
       */
      public Builder setBasicCharacteristicNo3Null(boolean value) {
        
        basicCharacteristicNo3Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool basic_characteristic_no3_null = 1008;</code>
       */
      public Builder clearBasicCharacteristicNo3Null() {
        
        basicCharacteristicNo3Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.decimalValue weightBasicCharacteristicNo3_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> weightBasicCharacteristicNo3Builder_;
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public boolean hasWeightBasicCharacteristicNo3() {
        return weightBasicCharacteristicNo3Builder_ != null || weightBasicCharacteristicNo3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public io.dstore.engine.Values.decimalValue getWeightBasicCharacteristicNo3() {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          return weightBasicCharacteristicNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo3_;
        } else {
          return weightBasicCharacteristicNo3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public Builder setWeightBasicCharacteristicNo3(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weightBasicCharacteristicNo3_ = value;
          onChanged();
        } else {
          weightBasicCharacteristicNo3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public Builder setWeightBasicCharacteristicNo3(
          io.dstore.engine.Values.decimalValue.Builder builderForValue) {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          weightBasicCharacteristicNo3_ = builderForValue.build();
          onChanged();
        } else {
          weightBasicCharacteristicNo3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public Builder mergeWeightBasicCharacteristicNo3(io.dstore.engine.Values.decimalValue value) {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          if (weightBasicCharacteristicNo3_ != null) {
            weightBasicCharacteristicNo3_ =
              io.dstore.engine.Values.decimalValue.newBuilder(weightBasicCharacteristicNo3_).mergeFrom(value).buildPartial();
          } else {
            weightBasicCharacteristicNo3_ = value;
          }
          onChanged();
        } else {
          weightBasicCharacteristicNo3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public Builder clearWeightBasicCharacteristicNo3() {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          weightBasicCharacteristicNo3_ = null;
          onChanged();
        } else {
          weightBasicCharacteristicNo3_ = null;
          weightBasicCharacteristicNo3Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public io.dstore.engine.Values.decimalValue.Builder getWeightBasicCharacteristicNo3Builder() {
        
        onChanged();
        return getWeightBasicCharacteristicNo3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getWeightBasicCharacteristicNo3OrBuilder() {
        if (weightBasicCharacteristicNo3Builder_ != null) {
          return weightBasicCharacteristicNo3Builder_.getMessageOrBuilder();
        } else {
          return weightBasicCharacteristicNo3_ == null ?
              io.dstore.engine.Values.decimalValue.getDefaultInstance() : weightBasicCharacteristicNo3_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue weight_basic_characteristic_no3 = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
          getWeightBasicCharacteristicNo3FieldBuilder() {
        if (weightBasicCharacteristicNo3Builder_ == null) {
          weightBasicCharacteristicNo3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                  getWeightBasicCharacteristicNo3(),
                  getParentForChildren(),
                  isClean());
          weightBasicCharacteristicNo3_ = null;
        }
        return weightBasicCharacteristicNo3Builder_;
      }

      private boolean weightBasicCharacteristicNo3Null_ ;
      /**
       * <code>optional bool weight_basic_characteristic_no3_null = 1009;</code>
       */
      public boolean getWeightBasicCharacteristicNo3Null() {
        return weightBasicCharacteristicNo3Null_;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no3_null = 1009;</code>
       */
      public Builder setWeightBasicCharacteristicNo3Null(boolean value) {
        
        weightBasicCharacteristicNo3Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool weight_basic_characteristic_no3_null = 1009;</code>
       */
      public Builder clearWeightBasicCharacteristicNo3Null() {
        
        weightBasicCharacteristicNo3Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue sourceTableForStatistics_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sourceTableForStatisticsBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public boolean hasSourceTableForStatistics() {
        return sourceTableForStatisticsBuilder_ != null || sourceTableForStatistics_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public io.dstore.engine.Values.integerValue getSourceTableForStatistics() {
        if (sourceTableForStatisticsBuilder_ == null) {
          return sourceTableForStatistics_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTableForStatistics_;
        } else {
          return sourceTableForStatisticsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public Builder setSourceTableForStatistics(io.dstore.engine.Values.integerValue value) {
        if (sourceTableForStatisticsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceTableForStatistics_ = value;
          onChanged();
        } else {
          sourceTableForStatisticsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public Builder setSourceTableForStatistics(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (sourceTableForStatisticsBuilder_ == null) {
          sourceTableForStatistics_ = builderForValue.build();
          onChanged();
        } else {
          sourceTableForStatisticsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public Builder mergeSourceTableForStatistics(io.dstore.engine.Values.integerValue value) {
        if (sourceTableForStatisticsBuilder_ == null) {
          if (sourceTableForStatistics_ != null) {
            sourceTableForStatistics_ =
              io.dstore.engine.Values.integerValue.newBuilder(sourceTableForStatistics_).mergeFrom(value).buildPartial();
          } else {
            sourceTableForStatistics_ = value;
          }
          onChanged();
        } else {
          sourceTableForStatisticsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public Builder clearSourceTableForStatistics() {
        if (sourceTableForStatisticsBuilder_ == null) {
          sourceTableForStatistics_ = null;
          onChanged();
        } else {
          sourceTableForStatistics_ = null;
          sourceTableForStatisticsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getSourceTableForStatisticsBuilder() {
        
        onChanged();
        return getSourceTableForStatisticsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSourceTableForStatisticsOrBuilder() {
        if (sourceTableForStatisticsBuilder_ != null) {
          return sourceTableForStatisticsBuilder_.getMessageOrBuilder();
        } else {
          return sourceTableForStatistics_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTableForStatistics_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table_for_statistics = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getSourceTableForStatisticsFieldBuilder() {
        if (sourceTableForStatisticsBuilder_ == null) {
          sourceTableForStatisticsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getSourceTableForStatistics(),
                  getParentForChildren(),
                  isClean());
          sourceTableForStatistics_ = null;
        }
        return sourceTableForStatisticsBuilder_;
      }

      private boolean sourceTableForStatisticsNull_ ;
      /**
       * <code>optional bool source_table_for_statistics_null = 1010;</code>
       */
      public boolean getSourceTableForStatisticsNull() {
        return sourceTableForStatisticsNull_;
      }
      /**
       * <code>optional bool source_table_for_statistics_null = 1010;</code>
       */
      public Builder setSourceTableForStatisticsNull(boolean value) {
        
        sourceTableForStatisticsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool source_table_for_statistics_null = 1010;</code>
       */
      public Builder clearSourceTableForStatisticsNull() {
        
        sourceTableForStatisticsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue displayOnlyActive_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> displayOnlyActiveBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public boolean hasDisplayOnlyActive() {
        return displayOnlyActiveBuilder_ != null || displayOnlyActive_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue getDisplayOnlyActive() {
        if (displayOnlyActiveBuilder_ == null) {
          return displayOnlyActive_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : displayOnlyActive_;
        } else {
          return displayOnlyActiveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public Builder setDisplayOnlyActive(io.dstore.engine.Values.booleanValue value) {
        if (displayOnlyActiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          displayOnlyActive_ = value;
          onChanged();
        } else {
          displayOnlyActiveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public Builder setDisplayOnlyActive(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (displayOnlyActiveBuilder_ == null) {
          displayOnlyActive_ = builderForValue.build();
          onChanged();
        } else {
          displayOnlyActiveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public Builder mergeDisplayOnlyActive(io.dstore.engine.Values.booleanValue value) {
        if (displayOnlyActiveBuilder_ == null) {
          if (displayOnlyActive_ != null) {
            displayOnlyActive_ =
              io.dstore.engine.Values.booleanValue.newBuilder(displayOnlyActive_).mergeFrom(value).buildPartial();
          } else {
            displayOnlyActive_ = value;
          }
          onChanged();
        } else {
          displayOnlyActiveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public Builder clearDisplayOnlyActive() {
        if (displayOnlyActiveBuilder_ == null) {
          displayOnlyActive_ = null;
          onChanged();
        } else {
          displayOnlyActive_ = null;
          displayOnlyActiveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getDisplayOnlyActiveBuilder() {
        
        onChanged();
        return getDisplayOnlyActiveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getDisplayOnlyActiveOrBuilder() {
        if (displayOnlyActiveBuilder_ != null) {
          return displayOnlyActiveBuilder_.getMessageOrBuilder();
        } else {
          return displayOnlyActive_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : displayOnlyActive_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue display_only_active = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getDisplayOnlyActiveFieldBuilder() {
        if (displayOnlyActiveBuilder_ == null) {
          displayOnlyActiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getDisplayOnlyActive(),
                  getParentForChildren(),
                  isClean());
          displayOnlyActive_ = null;
        }
        return displayOnlyActiveBuilder_;
      }

      private boolean displayOnlyActiveNull_ ;
      /**
       * <code>optional bool display_only_active_null = 1011;</code>
       */
      public boolean getDisplayOnlyActiveNull() {
        return displayOnlyActiveNull_;
      }
      /**
       * <code>optional bool display_only_active_null = 1011;</code>
       */
      public Builder setDisplayOnlyActiveNull(boolean value) {
        
        displayOnlyActiveNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool display_only_active_null = 1011;</code>
       */
      public Builder clearDisplayOnlyActiveNull() {
        
        displayOnlyActiveNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters)
    private static final io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters();
    }

    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      boolean hasTreeLevel();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeLevel();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeLevelOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      boolean hasPredecessor();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPredecessor();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      boolean hasLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      boolean hasRelativeValueBasicCharacNo3();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo3();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo3OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      boolean hasRelativeValueBasicCharacNo2();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo2();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      boolean hasRelativeValueBasicCharacNo1();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo1();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      boolean hasTotalValueIndex();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueIndex();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueIndexOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      boolean hasRelativeValueIndex();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getRelativeValueIndex();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueIndexOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      boolean hasActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      boolean hasHasNextSibling();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getHasNextSibling();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      boolean hasTotalValueBasicCharacNo1();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo1();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      boolean hasHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      io.dstore.engine.Values.integerValue getHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      boolean hasTotalValueBasicCharacNo2();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo2();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      boolean hasTotalValueBasicCharacNo3();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo3();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo3OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      boolean hasMaxRelativeValuePerPredecessor();
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getMaxRelativeValuePerPredecessor();
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValuePerPredecessorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      boolean hasMaxRelativeValueIndexPerPred();
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getMaxRelativeValueIndexPerPred();
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValueIndexPerPredOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      boolean hasFromDate();
      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFromDate();
      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFromDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      boolean hasToDate();
      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getToDate();
      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getToDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      boolean hasHasSuccessors();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getHasSuccessors();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      boolean hasDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeLevel_ != null) {
                  subBuilder = treeLevel_.toBuilder();
                }
                treeLevel_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeLevel_);
                  treeLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (predecessor_ != null) {
                  subBuilder = predecessor_.toBuilder();
                }
                predecessor_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessor_);
                  predecessor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (levelNo_ != null) {
                  subBuilder = levelNo_.toBuilder();
                }
                levelNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelNo_);
                  levelNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (relativeValueBasicCharacNo3_ != null) {
                  subBuilder = relativeValueBasicCharacNo3_.toBuilder();
                }
                relativeValueBasicCharacNo3_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relativeValueBasicCharacNo3_);
                  relativeValueBasicCharacNo3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (relativeValueBasicCharacNo2_ != null) {
                  subBuilder = relativeValueBasicCharacNo2_.toBuilder();
                }
                relativeValueBasicCharacNo2_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relativeValueBasicCharacNo2_);
                  relativeValueBasicCharacNo2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (relativeValueBasicCharacNo1_ != null) {
                  subBuilder = relativeValueBasicCharacNo1_.toBuilder();
                }
                relativeValueBasicCharacNo1_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relativeValueBasicCharacNo1_);
                  relativeValueBasicCharacNo1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueIndex_ != null) {
                  subBuilder = totalValueIndex_.toBuilder();
                }
                totalValueIndex_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueIndex_);
                  totalValueIndex_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (relativeValueIndex_ != null) {
                  subBuilder = relativeValueIndex_.toBuilder();
                }
                relativeValueIndex_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relativeValueIndex_);
                  relativeValueIndex_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (hasNextSibling_ != null) {
                  subBuilder = hasNextSibling_.toBuilder();
                }
                hasNextSibling_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasNextSibling_);
                  hasNextSibling_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueBasicCharacNo1_ != null) {
                  subBuilder = totalValueBasicCharacNo1_.toBuilder();
                }
                totalValueBasicCharacNo1_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueBasicCharacNo1_);
                  totalValueBasicCharacNo1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (hTreeNodeId_ != null) {
                  subBuilder = hTreeNodeId_.toBuilder();
                }
                hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hTreeNodeId_);
                  hTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueBasicCharacNo2_ != null) {
                  subBuilder = totalValueBasicCharacNo2_.toBuilder();
                }
                totalValueBasicCharacNo2_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueBasicCharacNo2_);
                  totalValueBasicCharacNo2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueBasicCharacNo3_ != null) {
                  subBuilder = totalValueBasicCharacNo3_.toBuilder();
                }
                totalValueBasicCharacNo3_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueBasicCharacNo3_);
                  totalValueBasicCharacNo3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (maxRelativeValuePerPredecessor_ != null) {
                  subBuilder = maxRelativeValuePerPredecessor_.toBuilder();
                }
                maxRelativeValuePerPredecessor_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxRelativeValuePerPredecessor_);
                  maxRelativeValuePerPredecessor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80154: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (maxRelativeValueIndexPerPred_ != null) {
                  subBuilder = maxRelativeValueIndexPerPred_.toBuilder();
                }
                maxRelativeValueIndexPerPred_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxRelativeValueIndexPerPred_);
                  maxRelativeValueIndexPerPred_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80162: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (fromDate_ != null) {
                  subBuilder = fromDate_.toBuilder();
                }
                fromDate_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fromDate_);
                  fromDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80170: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (toDate_ != null) {
                  subBuilder = toDate_.toBuilder();
                }
                toDate_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(toDate_);
                  toDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80178: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (hasSuccessors_ != null) {
                  subBuilder = hasSuccessors_.toBuilder();
                }
                hasSuccessors_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasSuccessors_);
                  hasSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80186: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (deleted_ != null) {
                  subBuilder = deleted_.toBuilder();
                }
                deleted_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deleted_);
                  deleted_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TREE_LEVEL_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue treeLevel_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      public boolean hasTreeLevel() {
        return treeLevel_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeLevel() {
        return treeLevel_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeLevel_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
       *
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeLevelOrBuilder() {
        return getTreeLevel();
      }

      public static final int PREDECESSOR_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue predecessor_;
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public boolean hasPredecessor() {
        return predecessor_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPredecessor() {
        return predecessor_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder() {
        return getPredecessor();
      }

      public static final int LEVEL_NO_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue levelNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public boolean hasLevelNo() {
        return levelNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLevelNo() {
        return levelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder() {
        return getLevelNo();
      }

      public static final int RELATIVE_VALUE_BASIC_CHARAC_NO3_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo3_;
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      public boolean hasRelativeValueBasicCharacNo3() {
        return relativeValueBasicCharacNo3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo3() {
        return relativeValueBasicCharacNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo3_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo3OrBuilder() {
        return getRelativeValueBasicCharacNo3();
      }

      public static final int RELATIVE_VALUE_BASIC_CHARAC_NO2_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo2_;
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public boolean hasRelativeValueBasicCharacNo2() {
        return relativeValueBasicCharacNo2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo2() {
        return relativeValueBasicCharacNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo2_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo2OrBuilder() {
        return getRelativeValueBasicCharacNo2();
      }

      public static final int RELATIVE_VALUE_BASIC_CHARAC_NO1_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo1_;
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      public boolean hasRelativeValueBasicCharacNo1() {
        return relativeValueBasicCharacNo1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo1() {
        return relativeValueBasicCharacNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo1_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo1OrBuilder() {
        return getRelativeValueBasicCharacNo1();
      }

      public static final int TOTAL_VALUE_INDEX_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.decimalValue totalValueIndex_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      public boolean hasTotalValueIndex() {
        return totalValueIndex_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueIndex() {
        return totalValueIndex_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueIndex_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
       *
       * <pre>
       * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueIndexOrBuilder() {
        return getTotalValueIndex();
      }

      public static final int RELATIVE_VALUE_INDEX_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.decimalValue relativeValueIndex_;
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      public boolean hasRelativeValueIndex() {
        return relativeValueIndex_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getRelativeValueIndex() {
        return relativeValueIndex_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueIndex_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
       *
       * <pre>
       * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueIndexOrBuilder() {
        return getRelativeValueIndex();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.booleanValue active_;
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int HAS_NEXT_SIBLING_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.booleanValue hasNextSibling_;
      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      public boolean hasHasNextSibling() {
        return hasNextSibling_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getHasNextSibling() {
        return hasNextSibling_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
       *
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder() {
        return getHasNextSibling();
      }

      public static final int TOTAL_VALUE_BASIC_CHARAC_NO1_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo1_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      public boolean hasTotalValueBasicCharacNo1() {
        return totalValueBasicCharacNo1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo1() {
        return totalValueBasicCharacNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo1_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo1OrBuilder() {
        return getTotalValueBasicCharacNo1();
      }

      public static final int H_TREE_NODE_ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue hTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        return getHTreeNodeId();
      }

      public static final int TOTAL_VALUE_BASIC_CHARAC_NO2_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo2_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public boolean hasTotalValueBasicCharacNo2() {
        return totalValueBasicCharacNo2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo2() {
        return totalValueBasicCharacNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo2_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo2OrBuilder() {
        return getTotalValueBasicCharacNo2();
      }

      public static final int TOTAL_VALUE_BASIC_CHARAC_NO3_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo3_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public boolean hasTotalValueBasicCharacNo3() {
        return totalValueBasicCharacNo3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo3() {
        return totalValueBasicCharacNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo3_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
       *
       * <pre>
       * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo3OrBuilder() {
        return getTotalValueBasicCharacNo3();
      }

      public static final int MAX_RELATIVE_VALUE_PER_PREDECESSOR_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.decimalValue maxRelativeValuePerPredecessor_;
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public boolean hasMaxRelativeValuePerPredecessor() {
        return maxRelativeValuePerPredecessor_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getMaxRelativeValuePerPredecessor() {
        return maxRelativeValuePerPredecessor_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValuePerPredecessor_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValuePerPredecessorOrBuilder() {
        return getMaxRelativeValuePerPredecessor();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10017;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10018;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int MAX_RELATIVE_VALUE_INDEX_PER_PRED_FIELD_NUMBER = 10019;
      private io.dstore.engine.Values.decimalValue maxRelativeValueIndexPerPred_;
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public boolean hasMaxRelativeValueIndexPerPred() {
        return maxRelativeValueIndexPerPred_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getMaxRelativeValueIndexPerPred() {
        return maxRelativeValueIndexPerPred_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValueIndexPerPred_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
       *
       * <pre>
       * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValueIndexPerPredOrBuilder() {
        return getMaxRelativeValueIndexPerPred();
      }

      public static final int FROM_DATE_FIELD_NUMBER = 10020;
      private io.dstore.engine.Values.stringValue fromDate_;
      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public boolean hasFromDate() {
        return fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFromDate() {
        return fromDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDate_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFromDateOrBuilder() {
        return getFromDate();
      }

      public static final int TO_DATE_FIELD_NUMBER = 10021;
      private io.dstore.engine.Values.stringValue toDate_;
      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public boolean hasToDate() {
        return toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getToDate() {
        return toDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : toDate_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getToDateOrBuilder() {
        return getToDate();
      }

      public static final int HAS_SUCCESSORS_FIELD_NUMBER = 10022;
      private io.dstore.engine.Values.booleanValue hasSuccessors_;
      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      public boolean hasHasSuccessors() {
        return hasSuccessors_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getHasSuccessors() {
        return hasSuccessors_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
       *
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
        return getHasSuccessors();
      }

      public static final int DELETED_FIELD_NUMBER = 10023;
      private io.dstore.engine.Values.booleanValue deleted_;
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public boolean hasDeleted() {
        return deleted_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getDeleted() {
        return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
        return getDeleted();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (treeLevel_ != null) {
          output.writeMessage(10001, getTreeLevel());
        }
        if (predecessor_ != null) {
          output.writeMessage(10002, getPredecessor());
        }
        if (levelNo_ != null) {
          output.writeMessage(10003, getLevelNo());
        }
        if (relativeValueBasicCharacNo3_ != null) {
          output.writeMessage(10004, getRelativeValueBasicCharacNo3());
        }
        if (relativeValueBasicCharacNo2_ != null) {
          output.writeMessage(10005, getRelativeValueBasicCharacNo2());
        }
        if (relativeValueBasicCharacNo1_ != null) {
          output.writeMessage(10006, getRelativeValueBasicCharacNo1());
        }
        if (totalValueIndex_ != null) {
          output.writeMessage(10007, getTotalValueIndex());
        }
        if (relativeValueIndex_ != null) {
          output.writeMessage(10008, getRelativeValueIndex());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10009, getNodeDescription());
        }
        if (active_ != null) {
          output.writeMessage(10010, getActive());
        }
        if (hasNextSibling_ != null) {
          output.writeMessage(10011, getHasNextSibling());
        }
        if (totalValueBasicCharacNo1_ != null) {
          output.writeMessage(10012, getTotalValueBasicCharacNo1());
        }
        if (hTreeNodeId_ != null) {
          output.writeMessage(10013, getHTreeNodeId());
        }
        if (totalValueBasicCharacNo2_ != null) {
          output.writeMessage(10014, getTotalValueBasicCharacNo2());
        }
        if (totalValueBasicCharacNo3_ != null) {
          output.writeMessage(10015, getTotalValueBasicCharacNo3());
        }
        if (maxRelativeValuePerPredecessor_ != null) {
          output.writeMessage(10016, getMaxRelativeValuePerPredecessor());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10017, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10018, getNodeId());
        }
        if (maxRelativeValueIndexPerPred_ != null) {
          output.writeMessage(10019, getMaxRelativeValueIndexPerPred());
        }
        if (fromDate_ != null) {
          output.writeMessage(10020, getFromDate());
        }
        if (toDate_ != null) {
          output.writeMessage(10021, getToDate());
        }
        if (hasSuccessors_ != null) {
          output.writeMessage(10022, getHasSuccessors());
        }
        if (deleted_ != null) {
          output.writeMessage(10023, getDeleted());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (treeLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTreeLevel());
        }
        if (predecessor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPredecessor());
        }
        if (levelNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getLevelNo());
        }
        if (relativeValueBasicCharacNo3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getRelativeValueBasicCharacNo3());
        }
        if (relativeValueBasicCharacNo2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getRelativeValueBasicCharacNo2());
        }
        if (relativeValueBasicCharacNo1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getRelativeValueBasicCharacNo1());
        }
        if (totalValueIndex_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getTotalValueIndex());
        }
        if (relativeValueIndex_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getRelativeValueIndex());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getNodeDescription());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getActive());
        }
        if (hasNextSibling_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getHasNextSibling());
        }
        if (totalValueBasicCharacNo1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getTotalValueBasicCharacNo1());
        }
        if (hTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getHTreeNodeId());
        }
        if (totalValueBasicCharacNo2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getTotalValueBasicCharacNo2());
        }
        if (totalValueBasicCharacNo3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getTotalValueBasicCharacNo3());
        }
        if (maxRelativeValuePerPredecessor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getMaxRelativeValuePerPredecessor());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getNodeId());
        }
        if (maxRelativeValueIndexPerPred_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10019, getMaxRelativeValueIndexPerPred());
        }
        if (fromDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10020, getFromDate());
        }
        if (toDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10021, getToDate());
        }
        if (hasSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10022, getHasSuccessors());
        }
        if (deleted_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10023, getDeleted());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row)
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (treeLevelBuilder_ == null) {
            treeLevel_ = null;
          } else {
            treeLevel_ = null;
            treeLevelBuilder_ = null;
          }
          if (predecessorBuilder_ == null) {
            predecessor_ = null;
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }
          if (relativeValueBasicCharacNo3Builder_ == null) {
            relativeValueBasicCharacNo3_ = null;
          } else {
            relativeValueBasicCharacNo3_ = null;
            relativeValueBasicCharacNo3Builder_ = null;
          }
          if (relativeValueBasicCharacNo2Builder_ == null) {
            relativeValueBasicCharacNo2_ = null;
          } else {
            relativeValueBasicCharacNo2_ = null;
            relativeValueBasicCharacNo2Builder_ = null;
          }
          if (relativeValueBasicCharacNo1Builder_ == null) {
            relativeValueBasicCharacNo1_ = null;
          } else {
            relativeValueBasicCharacNo1_ = null;
            relativeValueBasicCharacNo1Builder_ = null;
          }
          if (totalValueIndexBuilder_ == null) {
            totalValueIndex_ = null;
          } else {
            totalValueIndex_ = null;
            totalValueIndexBuilder_ = null;
          }
          if (relativeValueIndexBuilder_ == null) {
            relativeValueIndex_ = null;
          } else {
            relativeValueIndex_ = null;
            relativeValueIndexBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = null;
          } else {
            hasNextSibling_ = null;
            hasNextSiblingBuilder_ = null;
          }
          if (totalValueBasicCharacNo1Builder_ == null) {
            totalValueBasicCharacNo1_ = null;
          } else {
            totalValueBasicCharacNo1_ = null;
            totalValueBasicCharacNo1Builder_ = null;
          }
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }
          if (totalValueBasicCharacNo2Builder_ == null) {
            totalValueBasicCharacNo2_ = null;
          } else {
            totalValueBasicCharacNo2_ = null;
            totalValueBasicCharacNo2Builder_ = null;
          }
          if (totalValueBasicCharacNo3Builder_ == null) {
            totalValueBasicCharacNo3_ = null;
          } else {
            totalValueBasicCharacNo3_ = null;
            totalValueBasicCharacNo3Builder_ = null;
          }
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            maxRelativeValuePerPredecessor_ = null;
          } else {
            maxRelativeValuePerPredecessor_ = null;
            maxRelativeValuePerPredecessorBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            maxRelativeValueIndexPerPred_ = null;
          } else {
            maxRelativeValueIndexPerPred_ = null;
            maxRelativeValueIndexPerPredBuilder_ = null;
          }
          if (fromDateBuilder_ == null) {
            fromDate_ = null;
          } else {
            fromDate_ = null;
            fromDateBuilder_ = null;
          }
          if (toDateBuilder_ == null) {
            toDate_ = null;
          } else {
            toDate_ = null;
            toDateBuilder_ = null;
          }
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }
          if (deletedBuilder_ == null) {
            deleted_ = null;
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row build() {
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row buildPartial() {
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row result = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (treeLevelBuilder_ == null) {
            result.treeLevel_ = treeLevel_;
          } else {
            result.treeLevel_ = treeLevelBuilder_.build();
          }
          if (predecessorBuilder_ == null) {
            result.predecessor_ = predecessor_;
          } else {
            result.predecessor_ = predecessorBuilder_.build();
          }
          if (levelNoBuilder_ == null) {
            result.levelNo_ = levelNo_;
          } else {
            result.levelNo_ = levelNoBuilder_.build();
          }
          if (relativeValueBasicCharacNo3Builder_ == null) {
            result.relativeValueBasicCharacNo3_ = relativeValueBasicCharacNo3_;
          } else {
            result.relativeValueBasicCharacNo3_ = relativeValueBasicCharacNo3Builder_.build();
          }
          if (relativeValueBasicCharacNo2Builder_ == null) {
            result.relativeValueBasicCharacNo2_ = relativeValueBasicCharacNo2_;
          } else {
            result.relativeValueBasicCharacNo2_ = relativeValueBasicCharacNo2Builder_.build();
          }
          if (relativeValueBasicCharacNo1Builder_ == null) {
            result.relativeValueBasicCharacNo1_ = relativeValueBasicCharacNo1_;
          } else {
            result.relativeValueBasicCharacNo1_ = relativeValueBasicCharacNo1Builder_.build();
          }
          if (totalValueIndexBuilder_ == null) {
            result.totalValueIndex_ = totalValueIndex_;
          } else {
            result.totalValueIndex_ = totalValueIndexBuilder_.build();
          }
          if (relativeValueIndexBuilder_ == null) {
            result.relativeValueIndex_ = relativeValueIndex_;
          } else {
            result.relativeValueIndex_ = relativeValueIndexBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (hasNextSiblingBuilder_ == null) {
            result.hasNextSibling_ = hasNextSibling_;
          } else {
            result.hasNextSibling_ = hasNextSiblingBuilder_.build();
          }
          if (totalValueBasicCharacNo1Builder_ == null) {
            result.totalValueBasicCharacNo1_ = totalValueBasicCharacNo1_;
          } else {
            result.totalValueBasicCharacNo1_ = totalValueBasicCharacNo1Builder_.build();
          }
          if (hTreeNodeIdBuilder_ == null) {
            result.hTreeNodeId_ = hTreeNodeId_;
          } else {
            result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
          }
          if (totalValueBasicCharacNo2Builder_ == null) {
            result.totalValueBasicCharacNo2_ = totalValueBasicCharacNo2_;
          } else {
            result.totalValueBasicCharacNo2_ = totalValueBasicCharacNo2Builder_.build();
          }
          if (totalValueBasicCharacNo3Builder_ == null) {
            result.totalValueBasicCharacNo3_ = totalValueBasicCharacNo3_;
          } else {
            result.totalValueBasicCharacNo3_ = totalValueBasicCharacNo3Builder_.build();
          }
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            result.maxRelativeValuePerPredecessor_ = maxRelativeValuePerPredecessor_;
          } else {
            result.maxRelativeValuePerPredecessor_ = maxRelativeValuePerPredecessorBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            result.maxRelativeValueIndexPerPred_ = maxRelativeValueIndexPerPred_;
          } else {
            result.maxRelativeValueIndexPerPred_ = maxRelativeValueIndexPerPredBuilder_.build();
          }
          if (fromDateBuilder_ == null) {
            result.fromDate_ = fromDate_;
          } else {
            result.fromDate_ = fromDateBuilder_.build();
          }
          if (toDateBuilder_ == null) {
            result.toDate_ = toDate_;
          } else {
            result.toDate_ = toDateBuilder_.build();
          }
          if (hasSuccessorsBuilder_ == null) {
            result.hasSuccessors_ = hasSuccessors_;
          } else {
            result.hasSuccessors_ = hasSuccessorsBuilder_.build();
          }
          if (deletedBuilder_ == null) {
            result.deleted_ = deleted_;
          } else {
            result.deleted_ = deletedBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row other) {
          if (other == io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTreeLevel()) {
            mergeTreeLevel(other.getTreeLevel());
          }
          if (other.hasPredecessor()) {
            mergePredecessor(other.getPredecessor());
          }
          if (other.hasLevelNo()) {
            mergeLevelNo(other.getLevelNo());
          }
          if (other.hasRelativeValueBasicCharacNo3()) {
            mergeRelativeValueBasicCharacNo3(other.getRelativeValueBasicCharacNo3());
          }
          if (other.hasRelativeValueBasicCharacNo2()) {
            mergeRelativeValueBasicCharacNo2(other.getRelativeValueBasicCharacNo2());
          }
          if (other.hasRelativeValueBasicCharacNo1()) {
            mergeRelativeValueBasicCharacNo1(other.getRelativeValueBasicCharacNo1());
          }
          if (other.hasTotalValueIndex()) {
            mergeTotalValueIndex(other.getTotalValueIndex());
          }
          if (other.hasRelativeValueIndex()) {
            mergeRelativeValueIndex(other.getRelativeValueIndex());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasHasNextSibling()) {
            mergeHasNextSibling(other.getHasNextSibling());
          }
          if (other.hasTotalValueBasicCharacNo1()) {
            mergeTotalValueBasicCharacNo1(other.getTotalValueBasicCharacNo1());
          }
          if (other.hasHTreeNodeId()) {
            mergeHTreeNodeId(other.getHTreeNodeId());
          }
          if (other.hasTotalValueBasicCharacNo2()) {
            mergeTotalValueBasicCharacNo2(other.getTotalValueBasicCharacNo2());
          }
          if (other.hasTotalValueBasicCharacNo3()) {
            mergeTotalValueBasicCharacNo3(other.getTotalValueBasicCharacNo3());
          }
          if (other.hasMaxRelativeValuePerPredecessor()) {
            mergeMaxRelativeValuePerPredecessor(other.getMaxRelativeValuePerPredecessor());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasMaxRelativeValueIndexPerPred()) {
            mergeMaxRelativeValueIndexPerPred(other.getMaxRelativeValueIndexPerPred());
          }
          if (other.hasFromDate()) {
            mergeFromDate(other.getFromDate());
          }
          if (other.hasToDate()) {
            mergeToDate(other.getToDate());
          }
          if (other.hasHasSuccessors()) {
            mergeHasSuccessors(other.getHasSuccessors());
          }
          if (other.hasDeleted()) {
            mergeDeleted(other.getDeleted());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue treeLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeLevelBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public boolean hasTreeLevel() {
          return treeLevelBuilder_ != null || treeLevel_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeLevel() {
          if (treeLevelBuilder_ == null) {
            return treeLevel_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeLevel_;
          } else {
            return treeLevelBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public Builder setTreeLevel(io.dstore.engine.Values.integerValue value) {
          if (treeLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeLevel_ = value;
            onChanged();
          } else {
            treeLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public Builder setTreeLevel(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeLevelBuilder_ == null) {
            treeLevel_ = builderForValue.build();
            onChanged();
          } else {
            treeLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public Builder mergeTreeLevel(io.dstore.engine.Values.integerValue value) {
          if (treeLevelBuilder_ == null) {
            if (treeLevel_ != null) {
              treeLevel_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeLevel_).mergeFrom(value).buildPartial();
            } else {
              treeLevel_ = value;
            }
            onChanged();
          } else {
            treeLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public Builder clearTreeLevel() {
          if (treeLevelBuilder_ == null) {
            treeLevel_ = null;
            onChanged();
          } else {
            treeLevel_ = null;
            treeLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeLevelBuilder() {
          
          onChanged();
          return getTreeLevelFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeLevelOrBuilder() {
          if (treeLevelBuilder_ != null) {
            return treeLevelBuilder_.getMessageOrBuilder();
          } else {
            return treeLevel_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeLevel_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_level = 10001;</code>
         *
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeLevelFieldBuilder() {
          if (treeLevelBuilder_ == null) {
            treeLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeLevel(),
                    getParentForChildren(),
                    isClean());
            treeLevel_ = null;
          }
          return treeLevelBuilder_;
        }

        private io.dstore.engine.Values.integerValue predecessor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> predecessorBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public boolean hasPredecessor() {
          return predecessorBuilder_ != null || predecessor_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPredecessor() {
          if (predecessorBuilder_ == null) {
            return predecessor_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
          } else {
            return predecessorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder setPredecessor(io.dstore.engine.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessor_ = value;
            onChanged();
          } else {
            predecessorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder setPredecessor(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (predecessorBuilder_ == null) {
            predecessor_ = builderForValue.build();
            onChanged();
          } else {
            predecessorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder mergePredecessor(io.dstore.engine.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (predecessor_ != null) {
              predecessor_ =
                io.dstore.engine.Values.integerValue.newBuilder(predecessor_).mergeFrom(value).buildPartial();
            } else {
              predecessor_ = value;
            }
            onChanged();
          } else {
            predecessorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder clearPredecessor() {
          if (predecessorBuilder_ == null) {
            predecessor_ = null;
            onChanged();
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPredecessorBuilder() {
          
          onChanged();
          return getPredecessorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder() {
          if (predecessorBuilder_ != null) {
            return predecessorBuilder_.getMessageOrBuilder();
          } else {
            return predecessor_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPredecessorFieldBuilder() {
          if (predecessorBuilder_ == null) {
            predecessorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPredecessor(),
                    getParentForChildren(),
                    isClean());
            predecessor_ = null;
          }
          return predecessorBuilder_;
        }

        private io.dstore.engine.Values.integerValue levelNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> levelNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public boolean hasLevelNo() {
          return levelNoBuilder_ != null || levelNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLevelNo() {
          if (levelNoBuilder_ == null) {
            return levelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
          } else {
            return levelNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelNo(io.dstore.engine.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelNo_ = value;
            onChanged();
          } else {
            levelNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (levelNoBuilder_ == null) {
            levelNo_ = builderForValue.build();
            onChanged();
          } else {
            levelNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder mergeLevelNo(io.dstore.engine.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (levelNo_ != null) {
              levelNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(levelNo_).mergeFrom(value).buildPartial();
            } else {
              levelNo_ = value;
            }
            onChanged();
          } else {
            levelNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder clearLevelNo() {
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
            onChanged();
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLevelNoBuilder() {
          
          onChanged();
          return getLevelNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder() {
          if (levelNoBuilder_ != null) {
            return levelNoBuilder_.getMessageOrBuilder();
          } else {
            return levelNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10003;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLevelNoFieldBuilder() {
          if (levelNoBuilder_ == null) {
            levelNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLevelNo(),
                    getParentForChildren(),
                    isClean());
            levelNo_ = null;
          }
          return levelNoBuilder_;
        }

        private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> relativeValueBasicCharacNo3Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public boolean hasRelativeValueBasicCharacNo3() {
          return relativeValueBasicCharacNo3Builder_ != null || relativeValueBasicCharacNo3_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo3() {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            return relativeValueBasicCharacNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo3_;
          } else {
            return relativeValueBasicCharacNo3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo3(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relativeValueBasicCharacNo3_ = value;
            onChanged();
          } else {
            relativeValueBasicCharacNo3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo3(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            relativeValueBasicCharacNo3_ = builderForValue.build();
            onChanged();
          } else {
            relativeValueBasicCharacNo3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public Builder mergeRelativeValueBasicCharacNo3(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            if (relativeValueBasicCharacNo3_ != null) {
              relativeValueBasicCharacNo3_ =
                io.dstore.engine.Values.decimalValue.newBuilder(relativeValueBasicCharacNo3_).mergeFrom(value).buildPartial();
            } else {
              relativeValueBasicCharacNo3_ = value;
            }
            onChanged();
          } else {
            relativeValueBasicCharacNo3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public Builder clearRelativeValueBasicCharacNo3() {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            relativeValueBasicCharacNo3_ = null;
            onChanged();
          } else {
            relativeValueBasicCharacNo3_ = null;
            relativeValueBasicCharacNo3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getRelativeValueBasicCharacNo3Builder() {
          
          onChanged();
          return getRelativeValueBasicCharacNo3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo3OrBuilder() {
          if (relativeValueBasicCharacNo3Builder_ != null) {
            return relativeValueBasicCharacNo3Builder_.getMessageOrBuilder();
          } else {
            return relativeValueBasicCharacNo3_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo3_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no3 = 10004;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getRelativeValueBasicCharacNo3FieldBuilder() {
          if (relativeValueBasicCharacNo3Builder_ == null) {
            relativeValueBasicCharacNo3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getRelativeValueBasicCharacNo3(),
                    getParentForChildren(),
                    isClean());
            relativeValueBasicCharacNo3_ = null;
          }
          return relativeValueBasicCharacNo3Builder_;
        }

        private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> relativeValueBasicCharacNo2Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public boolean hasRelativeValueBasicCharacNo2() {
          return relativeValueBasicCharacNo2Builder_ != null || relativeValueBasicCharacNo2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo2() {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            return relativeValueBasicCharacNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo2_;
          } else {
            return relativeValueBasicCharacNo2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo2(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relativeValueBasicCharacNo2_ = value;
            onChanged();
          } else {
            relativeValueBasicCharacNo2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo2(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            relativeValueBasicCharacNo2_ = builderForValue.build();
            onChanged();
          } else {
            relativeValueBasicCharacNo2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder mergeRelativeValueBasicCharacNo2(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            if (relativeValueBasicCharacNo2_ != null) {
              relativeValueBasicCharacNo2_ =
                io.dstore.engine.Values.decimalValue.newBuilder(relativeValueBasicCharacNo2_).mergeFrom(value).buildPartial();
            } else {
              relativeValueBasicCharacNo2_ = value;
            }
            onChanged();
          } else {
            relativeValueBasicCharacNo2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder clearRelativeValueBasicCharacNo2() {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            relativeValueBasicCharacNo2_ = null;
            onChanged();
          } else {
            relativeValueBasicCharacNo2_ = null;
            relativeValueBasicCharacNo2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getRelativeValueBasicCharacNo2Builder() {
          
          onChanged();
          return getRelativeValueBasicCharacNo2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo2OrBuilder() {
          if (relativeValueBasicCharacNo2Builder_ != null) {
            return relativeValueBasicCharacNo2Builder_.getMessageOrBuilder();
          } else {
            return relativeValueBasicCharacNo2_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no2 = 10005;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getRelativeValueBasicCharacNo2FieldBuilder() {
          if (relativeValueBasicCharacNo2Builder_ == null) {
            relativeValueBasicCharacNo2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getRelativeValueBasicCharacNo2(),
                    getParentForChildren(),
                    isClean());
            relativeValueBasicCharacNo2_ = null;
          }
          return relativeValueBasicCharacNo2Builder_;
        }

        private io.dstore.engine.Values.decimalValue relativeValueBasicCharacNo1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> relativeValueBasicCharacNo1Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public boolean hasRelativeValueBasicCharacNo1() {
          return relativeValueBasicCharacNo1Builder_ != null || relativeValueBasicCharacNo1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getRelativeValueBasicCharacNo1() {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            return relativeValueBasicCharacNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo1_;
          } else {
            return relativeValueBasicCharacNo1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo1(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relativeValueBasicCharacNo1_ = value;
            onChanged();
          } else {
            relativeValueBasicCharacNo1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public Builder setRelativeValueBasicCharacNo1(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            relativeValueBasicCharacNo1_ = builderForValue.build();
            onChanged();
          } else {
            relativeValueBasicCharacNo1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public Builder mergeRelativeValueBasicCharacNo1(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            if (relativeValueBasicCharacNo1_ != null) {
              relativeValueBasicCharacNo1_ =
                io.dstore.engine.Values.decimalValue.newBuilder(relativeValueBasicCharacNo1_).mergeFrom(value).buildPartial();
            } else {
              relativeValueBasicCharacNo1_ = value;
            }
            onChanged();
          } else {
            relativeValueBasicCharacNo1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public Builder clearRelativeValueBasicCharacNo1() {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            relativeValueBasicCharacNo1_ = null;
            onChanged();
          } else {
            relativeValueBasicCharacNo1_ = null;
            relativeValueBasicCharacNo1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getRelativeValueBasicCharacNo1Builder() {
          
          onChanged();
          return getRelativeValueBasicCharacNo1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueBasicCharacNo1OrBuilder() {
          if (relativeValueBasicCharacNo1Builder_ != null) {
            return relativeValueBasicCharacNo1Builder_.getMessageOrBuilder();
          } else {
            return relativeValueBasicCharacNo1_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueBasicCharacNo1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_basic_charac_no1 = 10006;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getRelativeValueBasicCharacNo1FieldBuilder() {
          if (relativeValueBasicCharacNo1Builder_ == null) {
            relativeValueBasicCharacNo1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getRelativeValueBasicCharacNo1(),
                    getParentForChildren(),
                    isClean());
            relativeValueBasicCharacNo1_ = null;
          }
          return relativeValueBasicCharacNo1Builder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueIndex_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueIndexBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public boolean hasTotalValueIndex() {
          return totalValueIndexBuilder_ != null || totalValueIndex_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueIndex() {
          if (totalValueIndexBuilder_ == null) {
            return totalValueIndex_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueIndex_;
          } else {
            return totalValueIndexBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public Builder setTotalValueIndex(io.dstore.engine.Values.decimalValue value) {
          if (totalValueIndexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueIndex_ = value;
            onChanged();
          } else {
            totalValueIndexBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public Builder setTotalValueIndex(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueIndexBuilder_ == null) {
            totalValueIndex_ = builderForValue.build();
            onChanged();
          } else {
            totalValueIndexBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public Builder mergeTotalValueIndex(io.dstore.engine.Values.decimalValue value) {
          if (totalValueIndexBuilder_ == null) {
            if (totalValueIndex_ != null) {
              totalValueIndex_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueIndex_).mergeFrom(value).buildPartial();
            } else {
              totalValueIndex_ = value;
            }
            onChanged();
          } else {
            totalValueIndexBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public Builder clearTotalValueIndex() {
          if (totalValueIndexBuilder_ == null) {
            totalValueIndex_ = null;
            onChanged();
          } else {
            totalValueIndex_ = null;
            totalValueIndexBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueIndexBuilder() {
          
          onChanged();
          return getTotalValueIndexFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueIndexOrBuilder() {
          if (totalValueIndexBuilder_ != null) {
            return totalValueIndexBuilder_.getMessageOrBuilder();
          } else {
            return totalValueIndex_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueIndex_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_index = 10007;</code>
         *
         * <pre>
         * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueIndexFieldBuilder() {
          if (totalValueIndexBuilder_ == null) {
            totalValueIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueIndex(),
                    getParentForChildren(),
                    isClean());
            totalValueIndex_ = null;
          }
          return totalValueIndexBuilder_;
        }

        private io.dstore.engine.Values.decimalValue relativeValueIndex_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> relativeValueIndexBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public boolean hasRelativeValueIndex() {
          return relativeValueIndexBuilder_ != null || relativeValueIndex_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getRelativeValueIndex() {
          if (relativeValueIndexBuilder_ == null) {
            return relativeValueIndex_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueIndex_;
          } else {
            return relativeValueIndexBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public Builder setRelativeValueIndex(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueIndexBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relativeValueIndex_ = value;
            onChanged();
          } else {
            relativeValueIndexBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public Builder setRelativeValueIndex(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (relativeValueIndexBuilder_ == null) {
            relativeValueIndex_ = builderForValue.build();
            onChanged();
          } else {
            relativeValueIndexBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public Builder mergeRelativeValueIndex(io.dstore.engine.Values.decimalValue value) {
          if (relativeValueIndexBuilder_ == null) {
            if (relativeValueIndex_ != null) {
              relativeValueIndex_ =
                io.dstore.engine.Values.decimalValue.newBuilder(relativeValueIndex_).mergeFrom(value).buildPartial();
            } else {
              relativeValueIndex_ = value;
            }
            onChanged();
          } else {
            relativeValueIndexBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public Builder clearRelativeValueIndex() {
          if (relativeValueIndexBuilder_ == null) {
            relativeValueIndex_ = null;
            onChanged();
          } else {
            relativeValueIndex_ = null;
            relativeValueIndexBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getRelativeValueIndexBuilder() {
          
          onChanged();
          return getRelativeValueIndexFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getRelativeValueIndexOrBuilder() {
          if (relativeValueIndexBuilder_ != null) {
            return relativeValueIndexBuilder_.getMessageOrBuilder();
          } else {
            return relativeValueIndex_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeValueIndex_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_value_index = 10008;</code>
         *
         * <pre>
         * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getRelativeValueIndexFieldBuilder() {
          if (relativeValueIndexBuilder_ == null) {
            relativeValueIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getRelativeValueIndex(),
                    getParentForChildren(),
                    isClean());
            relativeValueIndex_ = null;
          }
          return relativeValueIndexBuilder_;
        }

        private io.dstore.engine.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder mergeActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.engine.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.engine.Values.booleanValue hasNextSibling_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> hasNextSiblingBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public boolean hasHasNextSibling() {
          return hasNextSiblingBuilder_ != null || hasNextSibling_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getHasNextSibling() {
          if (hasNextSiblingBuilder_ == null) {
            return hasNextSibling_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
          } else {
            return hasNextSiblingBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public Builder setHasNextSibling(io.dstore.engine.Values.booleanValue value) {
          if (hasNextSiblingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasNextSibling_ = value;
            onChanged();
          } else {
            hasNextSiblingBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public Builder setHasNextSibling(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = builderForValue.build();
            onChanged();
          } else {
            hasNextSiblingBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public Builder mergeHasNextSibling(io.dstore.engine.Values.booleanValue value) {
          if (hasNextSiblingBuilder_ == null) {
            if (hasNextSibling_ != null) {
              hasNextSibling_ =
                io.dstore.engine.Values.booleanValue.newBuilder(hasNextSibling_).mergeFrom(value).buildPartial();
            } else {
              hasNextSibling_ = value;
            }
            onChanged();
          } else {
            hasNextSiblingBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public Builder clearHasNextSibling() {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = null;
            onChanged();
          } else {
            hasNextSibling_ = null;
            hasNextSiblingBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getHasNextSiblingBuilder() {
          
          onChanged();
          return getHasNextSiblingFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder() {
          if (hasNextSiblingBuilder_ != null) {
            return hasNextSiblingBuilder_.getMessageOrBuilder();
          } else {
            return hasNextSibling_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_next_sibling = 10011;</code>
         *
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getHasNextSiblingFieldBuilder() {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSiblingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getHasNextSibling(),
                    getParentForChildren(),
                    isClean());
            hasNextSibling_ = null;
          }
          return hasNextSiblingBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueBasicCharacNo1Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public boolean hasTotalValueBasicCharacNo1() {
          return totalValueBasicCharacNo1Builder_ != null || totalValueBasicCharacNo1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo1() {
          if (totalValueBasicCharacNo1Builder_ == null) {
            return totalValueBasicCharacNo1_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo1_;
          } else {
            return totalValueBasicCharacNo1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo1(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueBasicCharacNo1_ = value;
            onChanged();
          } else {
            totalValueBasicCharacNo1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo1(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueBasicCharacNo1Builder_ == null) {
            totalValueBasicCharacNo1_ = builderForValue.build();
            onChanged();
          } else {
            totalValueBasicCharacNo1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public Builder mergeTotalValueBasicCharacNo1(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo1Builder_ == null) {
            if (totalValueBasicCharacNo1_ != null) {
              totalValueBasicCharacNo1_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueBasicCharacNo1_).mergeFrom(value).buildPartial();
            } else {
              totalValueBasicCharacNo1_ = value;
            }
            onChanged();
          } else {
            totalValueBasicCharacNo1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public Builder clearTotalValueBasicCharacNo1() {
          if (totalValueBasicCharacNo1Builder_ == null) {
            totalValueBasicCharacNo1_ = null;
            onChanged();
          } else {
            totalValueBasicCharacNo1_ = null;
            totalValueBasicCharacNo1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueBasicCharacNo1Builder() {
          
          onChanged();
          return getTotalValueBasicCharacNo1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo1OrBuilder() {
          if (totalValueBasicCharacNo1Builder_ != null) {
            return totalValueBasicCharacNo1Builder_.getMessageOrBuilder();
          } else {
            return totalValueBasicCharacNo1_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no1 = 10012;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueBasicCharacNo1FieldBuilder() {
          if (totalValueBasicCharacNo1Builder_ == null) {
            totalValueBasicCharacNo1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueBasicCharacNo1(),
                    getParentForChildren(),
                    isClean());
            totalValueBasicCharacNo1_ = null;
          }
          return totalValueBasicCharacNo1Builder_;
        }

        private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public boolean hasHTreeNodeId() {
          return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          } else {
            return hTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hTreeNodeId_ = value;
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public Builder setHTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (hTreeNodeId_ != null) {
              hTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              hTreeNodeId_ = value;
            }
            onChanged();
          } else {
            hTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public Builder clearHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
            onChanged();
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
          
          onChanged();
          return getHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
          if (hTreeNodeIdBuilder_ != null) {
            return hTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return hTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10013;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getHTreeNodeIdFieldBuilder() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            hTreeNodeId_ = null;
          }
          return hTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueBasicCharacNo2Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public boolean hasTotalValueBasicCharacNo2() {
          return totalValueBasicCharacNo2Builder_ != null || totalValueBasicCharacNo2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo2() {
          if (totalValueBasicCharacNo2Builder_ == null) {
            return totalValueBasicCharacNo2_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo2_;
          } else {
            return totalValueBasicCharacNo2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo2(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueBasicCharacNo2_ = value;
            onChanged();
          } else {
            totalValueBasicCharacNo2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo2(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueBasicCharacNo2Builder_ == null) {
            totalValueBasicCharacNo2_ = builderForValue.build();
            onChanged();
          } else {
            totalValueBasicCharacNo2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder mergeTotalValueBasicCharacNo2(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo2Builder_ == null) {
            if (totalValueBasicCharacNo2_ != null) {
              totalValueBasicCharacNo2_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueBasicCharacNo2_).mergeFrom(value).buildPartial();
            } else {
              totalValueBasicCharacNo2_ = value;
            }
            onChanged();
          } else {
            totalValueBasicCharacNo2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder clearTotalValueBasicCharacNo2() {
          if (totalValueBasicCharacNo2Builder_ == null) {
            totalValueBasicCharacNo2_ = null;
            onChanged();
          } else {
            totalValueBasicCharacNo2_ = null;
            totalValueBasicCharacNo2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueBasicCharacNo2Builder() {
          
          onChanged();
          return getTotalValueBasicCharacNo2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo2OrBuilder() {
          if (totalValueBasicCharacNo2Builder_ != null) {
            return totalValueBasicCharacNo2Builder_.getMessageOrBuilder();
          } else {
            return totalValueBasicCharacNo2_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no2 = 10014;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueBasicCharacNo2FieldBuilder() {
          if (totalValueBasicCharacNo2Builder_ == null) {
            totalValueBasicCharacNo2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueBasicCharacNo2(),
                    getParentForChildren(),
                    isClean());
            totalValueBasicCharacNo2_ = null;
          }
          return totalValueBasicCharacNo2Builder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueBasicCharacNo3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueBasicCharacNo3Builder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public boolean hasTotalValueBasicCharacNo3() {
          return totalValueBasicCharacNo3Builder_ != null || totalValueBasicCharacNo3_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueBasicCharacNo3() {
          if (totalValueBasicCharacNo3Builder_ == null) {
            return totalValueBasicCharacNo3_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo3_;
          } else {
            return totalValueBasicCharacNo3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo3(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueBasicCharacNo3_ = value;
            onChanged();
          } else {
            totalValueBasicCharacNo3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder setTotalValueBasicCharacNo3(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueBasicCharacNo3Builder_ == null) {
            totalValueBasicCharacNo3_ = builderForValue.build();
            onChanged();
          } else {
            totalValueBasicCharacNo3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder mergeTotalValueBasicCharacNo3(io.dstore.engine.Values.decimalValue value) {
          if (totalValueBasicCharacNo3Builder_ == null) {
            if (totalValueBasicCharacNo3_ != null) {
              totalValueBasicCharacNo3_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueBasicCharacNo3_).mergeFrom(value).buildPartial();
            } else {
              totalValueBasicCharacNo3_ = value;
            }
            onChanged();
          } else {
            totalValueBasicCharacNo3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public Builder clearTotalValueBasicCharacNo3() {
          if (totalValueBasicCharacNo3Builder_ == null) {
            totalValueBasicCharacNo3_ = null;
            onChanged();
          } else {
            totalValueBasicCharacNo3_ = null;
            totalValueBasicCharacNo3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueBasicCharacNo3Builder() {
          
          onChanged();
          return getTotalValueBasicCharacNo3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueBasicCharacNo3OrBuilder() {
          if (totalValueBasicCharacNo3Builder_ != null) {
            return totalValueBasicCharacNo3Builder_.getMessageOrBuilder();
          } else {
            return totalValueBasicCharacNo3_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueBasicCharacNo3_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value_basic_charac_no3 = 10015;</code>
         *
         * <pre>
         * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueBasicCharacNo3FieldBuilder() {
          if (totalValueBasicCharacNo3Builder_ == null) {
            totalValueBasicCharacNo3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueBasicCharacNo3(),
                    getParentForChildren(),
                    isClean());
            totalValueBasicCharacNo3_ = null;
          }
          return totalValueBasicCharacNo3Builder_;
        }

        private io.dstore.engine.Values.decimalValue maxRelativeValuePerPredecessor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> maxRelativeValuePerPredecessorBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public boolean hasMaxRelativeValuePerPredecessor() {
          return maxRelativeValuePerPredecessorBuilder_ != null || maxRelativeValuePerPredecessor_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getMaxRelativeValuePerPredecessor() {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            return maxRelativeValuePerPredecessor_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValuePerPredecessor_;
          } else {
            return maxRelativeValuePerPredecessorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder setMaxRelativeValuePerPredecessor(io.dstore.engine.Values.decimalValue value) {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxRelativeValuePerPredecessor_ = value;
            onChanged();
          } else {
            maxRelativeValuePerPredecessorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder setMaxRelativeValuePerPredecessor(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            maxRelativeValuePerPredecessor_ = builderForValue.build();
            onChanged();
          } else {
            maxRelativeValuePerPredecessorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder mergeMaxRelativeValuePerPredecessor(io.dstore.engine.Values.decimalValue value) {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            if (maxRelativeValuePerPredecessor_ != null) {
              maxRelativeValuePerPredecessor_ =
                io.dstore.engine.Values.decimalValue.newBuilder(maxRelativeValuePerPredecessor_).mergeFrom(value).buildPartial();
            } else {
              maxRelativeValuePerPredecessor_ = value;
            }
            onChanged();
          } else {
            maxRelativeValuePerPredecessorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder clearMaxRelativeValuePerPredecessor() {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            maxRelativeValuePerPredecessor_ = null;
            onChanged();
          } else {
            maxRelativeValuePerPredecessor_ = null;
            maxRelativeValuePerPredecessorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getMaxRelativeValuePerPredecessorBuilder() {
          
          onChanged();
          return getMaxRelativeValuePerPredecessorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValuePerPredecessorOrBuilder() {
          if (maxRelativeValuePerPredecessorBuilder_ != null) {
            return maxRelativeValuePerPredecessorBuilder_.getMessageOrBuilder();
          } else {
            return maxRelativeValuePerPredecessor_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValuePerPredecessor_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_per_predecessor = 10016;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getMaxRelativeValuePerPredecessorFieldBuilder() {
          if (maxRelativeValuePerPredecessorBuilder_ == null) {
            maxRelativeValuePerPredecessorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getMaxRelativeValuePerPredecessor(),
                    getParentForChildren(),
                    isClean());
            maxRelativeValuePerPredecessor_ = null;
          }
          return maxRelativeValuePerPredecessorBuilder_;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10017;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10018;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue maxRelativeValueIndexPerPred_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> maxRelativeValueIndexPerPredBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public boolean hasMaxRelativeValueIndexPerPred() {
          return maxRelativeValueIndexPerPredBuilder_ != null || maxRelativeValueIndexPerPred_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getMaxRelativeValueIndexPerPred() {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            return maxRelativeValueIndexPerPred_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValueIndexPerPred_;
          } else {
            return maxRelativeValueIndexPerPredBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder setMaxRelativeValueIndexPerPred(io.dstore.engine.Values.decimalValue value) {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxRelativeValueIndexPerPred_ = value;
            onChanged();
          } else {
            maxRelativeValueIndexPerPredBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder setMaxRelativeValueIndexPerPred(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            maxRelativeValueIndexPerPred_ = builderForValue.build();
            onChanged();
          } else {
            maxRelativeValueIndexPerPredBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder mergeMaxRelativeValueIndexPerPred(io.dstore.engine.Values.decimalValue value) {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            if (maxRelativeValueIndexPerPred_ != null) {
              maxRelativeValueIndexPerPred_ =
                io.dstore.engine.Values.decimalValue.newBuilder(maxRelativeValueIndexPerPred_).mergeFrom(value).buildPartial();
            } else {
              maxRelativeValueIndexPerPred_ = value;
            }
            onChanged();
          } else {
            maxRelativeValueIndexPerPredBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public Builder clearMaxRelativeValueIndexPerPred() {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            maxRelativeValueIndexPerPred_ = null;
            onChanged();
          } else {
            maxRelativeValueIndexPerPred_ = null;
            maxRelativeValueIndexPerPredBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getMaxRelativeValueIndexPerPredBuilder() {
          
          onChanged();
          return getMaxRelativeValueIndexPerPredFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getMaxRelativeValueIndexPerPredOrBuilder() {
          if (maxRelativeValueIndexPerPredBuilder_ != null) {
            return maxRelativeValueIndexPerPredBuilder_.getMessageOrBuilder();
          } else {
            return maxRelativeValueIndexPerPred_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : maxRelativeValueIndexPerPred_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue max_relative_value_index_per_pred = 10019;</code>
         *
         * <pre>
         * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getMaxRelativeValueIndexPerPredFieldBuilder() {
          if (maxRelativeValueIndexPerPredBuilder_ == null) {
            maxRelativeValueIndexPerPredBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getMaxRelativeValueIndexPerPred(),
                    getParentForChildren(),
                    isClean());
            maxRelativeValueIndexPerPred_ = null;
          }
          return maxRelativeValueIndexPerPredBuilder_;
        }

        private io.dstore.engine.Values.stringValue fromDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> fromDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public boolean hasFromDate() {
          return fromDateBuilder_ != null || fromDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFromDate() {
          if (fromDateBuilder_ == null) {
            return fromDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDate_;
          } else {
            return fromDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder setFromDate(io.dstore.engine.Values.stringValue value) {
          if (fromDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fromDate_ = value;
            onChanged();
          } else {
            fromDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder setFromDate(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (fromDateBuilder_ == null) {
            fromDate_ = builderForValue.build();
            onChanged();
          } else {
            fromDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder mergeFromDate(io.dstore.engine.Values.stringValue value) {
          if (fromDateBuilder_ == null) {
            if (fromDate_ != null) {
              fromDate_ =
                io.dstore.engine.Values.stringValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
            } else {
              fromDate_ = value;
            }
            onChanged();
          } else {
            fromDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder clearFromDate() {
          if (fromDateBuilder_ == null) {
            fromDate_ = null;
            onChanged();
          } else {
            fromDate_ = null;
            fromDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFromDateBuilder() {
          
          onChanged();
          return getFromDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFromDateOrBuilder() {
          if (fromDateBuilder_ != null) {
            return fromDateBuilder_.getMessageOrBuilder();
          } else {
            return fromDate_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date = 10020;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFromDateFieldBuilder() {
          if (fromDateBuilder_ == null) {
            fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFromDate(),
                    getParentForChildren(),
                    isClean());
            fromDate_ = null;
          }
          return fromDateBuilder_;
        }

        private io.dstore.engine.Values.stringValue toDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> toDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public boolean hasToDate() {
          return toDateBuilder_ != null || toDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getToDate() {
          if (toDateBuilder_ == null) {
            return toDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : toDate_;
          } else {
            return toDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder setToDate(io.dstore.engine.Values.stringValue value) {
          if (toDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            toDate_ = value;
            onChanged();
          } else {
            toDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder setToDate(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (toDateBuilder_ == null) {
            toDate_ = builderForValue.build();
            onChanged();
          } else {
            toDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder mergeToDate(io.dstore.engine.Values.stringValue value) {
          if (toDateBuilder_ == null) {
            if (toDate_ != null) {
              toDate_ =
                io.dstore.engine.Values.stringValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
            } else {
              toDate_ = value;
            }
            onChanged();
          } else {
            toDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public Builder clearToDate() {
          if (toDateBuilder_ == null) {
            toDate_ = null;
            onChanged();
          } else {
            toDate_ = null;
            toDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getToDateBuilder() {
          
          onChanged();
          return getToDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getToDateOrBuilder() {
          if (toDateBuilder_ != null) {
            return toDateBuilder_.getMessageOrBuilder();
          } else {
            return toDate_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : toDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date = 10021;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getToDateFieldBuilder() {
          if (toDateBuilder_ == null) {
            toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getToDate(),
                    getParentForChildren(),
                    isClean());
            toDate_ = null;
          }
          return toDateBuilder_;
        }

        private io.dstore.engine.Values.booleanValue hasSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> hasSuccessorsBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public boolean hasHasSuccessors() {
          return hasSuccessorsBuilder_ != null || hasSuccessors_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            return hasSuccessors_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          } else {
            return hasSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public Builder setHasSuccessors(io.dstore.engine.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasSuccessors_ = value;
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public Builder setHasSuccessors(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public Builder mergeHasSuccessors(io.dstore.engine.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (hasSuccessors_ != null) {
              hasSuccessors_ =
                io.dstore.engine.Values.booleanValue.newBuilder(hasSuccessors_).mergeFrom(value).buildPartial();
            } else {
              hasSuccessors_ = value;
            }
            onChanged();
          } else {
            hasSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public Builder clearHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
            onChanged();
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getHasSuccessorsBuilder() {
          
          onChanged();
          return getHasSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
          if (hasSuccessorsBuilder_ != null) {
            return hasSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return hasSuccessors_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_successors = 10022;</code>
         *
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getHasSuccessorsFieldBuilder() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getHasSuccessors(),
                    getParentForChildren(),
                    isClean());
            hasSuccessors_ = null;
          }
          return hasSuccessorsBuilder_;
        }

        private io.dstore.engine.Values.booleanValue deleted_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> deletedBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public boolean hasDeleted() {
          return deletedBuilder_ != null || deleted_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getDeleted() {
          if (deletedBuilder_ == null) {
            return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          } else {
            return deletedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deleted_ = value;
            onChanged();
          } else {
            deletedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setDeleted(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (deletedBuilder_ == null) {
            deleted_ = builderForValue.build();
            onChanged();
          } else {
            deletedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder mergeDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (deleted_ != null) {
              deleted_ =
                io.dstore.engine.Values.booleanValue.newBuilder(deleted_).mergeFrom(value).buildPartial();
            } else {
              deleted_ = value;
            }
            onChanged();
          } else {
            deletedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder clearDeleted() {
          if (deletedBuilder_ == null) {
            deleted_ = null;
            onChanged();
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getDeletedBuilder() {
          
          onChanged();
          return getDeletedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
          if (deletedBuilder_ != null) {
            return deletedBuilder_.getMessageOrBuilder();
          } else {
            return deleted_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10023;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getDeletedFieldBuilder() {
          if (deletedBuilder_ == null) {
            deletedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getDeleted(),
                    getParentForChildren(),
                    isClean());
            deleted_ = null;
          }
          return deletedBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row)
      private static final io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row();
      }

      public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response)
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.class, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response build() {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response buildPartial() {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response result = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response) {
          return mergeFrom((io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response other) {
        if (other == io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response)
    private static final io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response();
    }

    public static io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.StGetDirectSuccessorsTreeAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/st_GetDirectS" +
      "uccessors_Tree_Ad.proto\022,dstore.engine.s" +
      "t_GetDirectSuccessors_Tree_Ad\032\032dstore/en" +
      "gine/values.proto\032\031dstore/engine/error.p" +
      "roto\032\033dstore/engine/message.proto\032#dstor" +
      "e/engine/metainformation.proto\"\234\t\n\nParam" +
      "eters\022:\n\016h_tree_node_id\030\001 \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022\034\n\023h_tree_node" +
      "_id_null\030\351\007 \001(\010\0227\n\tfrom_date\030\002 \001(\0132$.dst" +
      "ore.engine.values.timestampValue\022\027\n\016from",
      "_date_null\030\352\007 \001(\010\0225\n\007to_date\030\003 \001(\0132$.dst" +
      "ore.engine.values.timestampValue\022\025\n\014to_d" +
      "ate_null\030\353\007 \001(\010\022D\n\030basic_characteristic_" +
      "no1\030\004 \001(\0132\".dstore.engine.values.integer" +
      "Value\022&\n\035basic_characteristic_no1_null\030\354" +
      "\007 \001(\010\022K\n\037weight_basic_characteristic_no1" +
      "\030\005 \001(\0132\".dstore.engine.values.decimalVal" +
      "ue\022-\n$weight_basic_characteristic_no1_nu" +
      "ll\030\355\007 \001(\010\022D\n\030basic_characteristic_no2\030\006 " +
      "\001(\0132\".dstore.engine.values.integerValue\022",
      "&\n\035basic_characteristic_no2_null\030\356\007 \001(\010\022" +
      "K\n\037weight_basic_characteristic_no2\030\007 \001(\013" +
      "2\".dstore.engine.values.decimalValue\022-\n$" +
      "weight_basic_characteristic_no2_null\030\357\007 " +
      "\001(\010\022D\n\030basic_characteristic_no3\030\010 \001(\0132\"." +
      "dstore.engine.values.integerValue\022&\n\035bas" +
      "ic_characteristic_no3_null\030\360\007 \001(\010\022K\n\037wei" +
      "ght_basic_characteristic_no3\030\t \001(\0132\".dst" +
      "ore.engine.values.decimalValue\022-\n$weight" +
      "_basic_characteristic_no3_null\030\361\007 \001(\010\022G\n",
      "\033source_table_for_statistics\030\n \001(\0132\".dst" +
      "ore.engine.values.integerValue\022)\n source" +
      "_table_for_statistics_null\030\362\007 \001(\010\022?\n\023dis" +
      "play_only_active\030\013 \001(\0132\".dstore.engine.v" +
      "alues.booleanValue\022!\n\030display_only_activ" +
      "e_null\030\363\007 \001(\010\"\352\r\n\010Response\022)\n\005error\030\001 \001(" +
      "\0132\032.dstore.engine.error.Error\022H\n\020meta_in" +
      "formation\030\002 \003(\0132..dstore.engine.metainfo" +
      "rmation.MetaInformation\022/\n\007message\030\003 \003(\013" +
      "2\036.dstore.engine.message.Message\022G\n\003row\030",
      "\004 \003(\0132:.dstore.engine.st_GetDirectSucces" +
      "sors_Tree_Ad.Response.Row\032\356\013\n\003Row\022\017\n\006row" +
      "_id\030\220N \001(\005\0227\n\ntree_level\030\221N \001(\0132\".dstore" +
      ".engine.values.integerValue\0228\n\013predecess" +
      "or\030\222N \001(\0132\".dstore.engine.values.integer" +
      "Value\0225\n\010level_no\030\223N \001(\0132\".dstore.engine" +
      ".values.integerValue\022L\n\037relative_value_b" +
      "asic_charac_no3\030\224N \001(\0132\".dstore.engine.v" +
      "alues.decimalValue\022L\n\037relative_value_bas" +
      "ic_charac_no2\030\225N \001(\0132\".dstore.engine.val",
      "ues.decimalValue\022L\n\037relative_value_basic" +
      "_charac_no1\030\226N \001(\0132\".dstore.engine.value" +
      "s.decimalValue\022>\n\021total_value_index\030\227N \001" +
      "(\0132\".dstore.engine.values.decimalValue\022A" +
      "\n\024relative_value_index\030\230N \001(\0132\".dstore.e" +
      "ngine.values.decimalValue\022<\n\020node_descri" +
      "ption\030\231N \001(\0132!.dstore.engine.values.stri" +
      "ngValue\0223\n\006active\030\232N \001(\0132\".dstore.engine" +
      ".values.booleanValue\022=\n\020has_next_sibling" +
      "\030\233N \001(\0132\".dstore.engine.values.booleanVa",
      "lue\022I\n\034total_value_basic_charac_no1\030\234N \001" +
      "(\0132\".dstore.engine.values.decimalValue\022;" +
      "\n\016h_tree_node_id\030\235N \001(\0132\".dstore.engine." +
      "values.integerValue\022I\n\034total_value_basic" +
      "_charac_no2\030\236N \001(\0132\".dstore.engine.value" +
      "s.decimalValue\022I\n\034total_value_basic_char" +
      "ac_no3\030\237N \001(\0132\".dstore.engine.values.dec" +
      "imalValue\022O\n\"max_relative_value_per_pred" +
      "ecessor\030\240N \001(\0132\".dstore.engine.values.de" +
      "cimalValue\0229\n\014tree_node_id\030\241N \001(\0132\".dsto",
      "re.engine.values.integerValue\0224\n\007node_id" +
      "\030\242N \001(\0132\".dstore.engine.values.integerVa" +
      "lue\022N\n!max_relative_value_index_per_pred" +
      "\030\243N \001(\0132\".dstore.engine.values.decimalVa" +
      "lue\0225\n\tfrom_date\030\244N \001(\0132!.dstore.engine." +
      "values.stringValue\0223\n\007to_date\030\245N \001(\0132!.d" +
      "store.engine.values.stringValue\022;\n\016has_s" +
      "uccessors\030\246N \001(\0132\".dstore.engine.values." +
      "booleanValue\0224\n\007deleted\030\247N \001(\0132\".dstore." +
      "engine.values.booleanValueB\030\n\026io.dstore.",
      "engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Parameters_descriptor,
        new java.lang.String[] { "HTreeNodeId", "HTreeNodeIdNull", "FromDate", "FromDateNull", "ToDate", "ToDateNull", "BasicCharacteristicNo1", "BasicCharacteristicNo1Null", "WeightBasicCharacteristicNo1", "WeightBasicCharacteristicNo1Null", "BasicCharacteristicNo2", "BasicCharacteristicNo2Null", "WeightBasicCharacteristicNo2", "WeightBasicCharacteristicNo2Null", "BasicCharacteristicNo3", "BasicCharacteristicNo3Null", "WeightBasicCharacteristicNo3", "WeightBasicCharacteristicNo3Null", "SourceTableForStatistics", "SourceTableForStatisticsNull", "DisplayOnlyActive", "DisplayOnlyActiveNull", });
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TreeLevel", "Predecessor", "LevelNo", "RelativeValueBasicCharacNo3", "RelativeValueBasicCharacNo2", "RelativeValueBasicCharacNo1", "TotalValueIndex", "RelativeValueIndex", "NodeDescription", "Active", "HasNextSibling", "TotalValueBasicCharacNo1", "HTreeNodeId", "TotalValueBasicCharacNo2", "TotalValueBasicCharacNo3", "MaxRelativeValuePerPredecessor", "TreeNodeId", "NodeId", "MaxRelativeValueIndexPerPred", "FromDate", "ToDate", "HasSuccessors", "Deleted", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
