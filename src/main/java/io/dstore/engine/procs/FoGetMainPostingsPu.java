// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/fo_GetMainPostings_Pu.proto

package io.dstore.engine.procs;

public final class FoGetMainPostingsPu {
  private FoGetMainPostingsPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetMainPostings_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    boolean hasPersonIdentificationValues();
    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.engine.Values.stringValue getPersonIdentificationValues();
    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder();

    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    boolean getPersonIdentificationValuesNull();

    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    boolean hasUniqueId();
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    io.dstore.engine.Values.stringValue getUniqueId();
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder();

    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    boolean getUniqueIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    boolean hasForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    io.dstore.engine.Values.integerValue getForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder();

    /**
     * <code>optional bool forum_id_null = 1004;</code>
     */
    boolean getForumIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    boolean hasSortCriteria();
    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    io.dstore.engine.Values.integerValue getSortCriteria();
    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getSortCriteriaOrBuilder();

    /**
     * <code>optional bool sort_criteria_null = 1005;</code>
     */
    boolean getSortCriteriaNull();

    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    boolean hasFromMainPosting();
    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    io.dstore.engine.Values.integerValue getFromMainPosting();
    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getFromMainPostingOrBuilder();

    /**
     * <code>optional bool from_main_posting_null = 1006;</code>
     */
    boolean getFromMainPostingNull();

    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    boolean hasMaxNumberOfThreads();
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    io.dstore.engine.Values.integerValue getMaxNumberOfThreads();
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfThreadsOrBuilder();

    /**
     * <code>optional bool max_number_of_threads_null = 1007;</code>
     */
    boolean getMaxNumberOfThreadsNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    boolean hasIncludePostingBodies();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    io.dstore.engine.Values.booleanValue getIncludePostingBodies();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getIncludePostingBodiesOrBuilder();

    /**
     * <code>optional bool include_posting_bodies_null = 1008;</code>
     */
    boolean getIncludePostingBodiesNull();

    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    boolean hasVisibility();
    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    io.dstore.engine.Values.integerValue getVisibility();
    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getVisibilityOrBuilder();

    /**
     * <code>optional bool visibility_null = 1009;</code>
     */
    boolean getVisibilityNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    boolean hasShowPostDateOfMainPosting();
    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    io.dstore.engine.Values.booleanValue getShowPostDateOfMainPosting();
    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getShowPostDateOfMainPostingOrBuilder();

    /**
     * <code>optional bool show_post_date_of_main_posting_null = 1010;</code>
     */
    boolean getShowPostDateOfMainPostingNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    boolean hasGetOwnNotApprovedPostings();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    io.dstore.engine.Values.booleanValue getGetOwnNotApprovedPostings();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetOwnNotApprovedPostingsOrBuilder();

    /**
     * <code>optional bool get_own_not_approved_postings_null = 1011;</code>
     */
    boolean getGetOwnNotApprovedPostingsNull();

    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    boolean hasOutputIntoOneId();
    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    io.dstore.engine.Values.integerValue getOutputIntoOneId();
    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getOutputIntoOneIdOrBuilder();

    /**
     * <code>optional bool output_into_one_id_null = 1012;</code>
     */
    boolean getOutputIntoOneIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    boolean hasSortingCriteriaNo();
    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    io.dstore.engine.Values.integerValue getSortingCriteriaNo();
    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getSortingCriteriaNoOrBuilder();

    /**
     * <code>optional bool sorting_criteria_no_null = 1013;</code>
     */
    boolean getSortingCriteriaNoNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    boolean hasReverseOrderOfSorting();
    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    io.dstore.engine.Values.booleanValue getReverseOrderOfSorting();
    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getReverseOrderOfSortingOrBuilder();

    /**
     * <code>optional bool reverse_order_of_sorting_null = 1014;</code>
     */
    boolean getReverseOrderOfSortingNull();

    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    boolean hasSeparatorInIdentVals();
    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    io.dstore.engine.Values.stringValue getSeparatorInIdentVals();
    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder();

    /**
     * <code>optional bool separator_in_ident_vals_null = 1015;</code>
     */
    boolean getSeparatorInIdentValsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetMainPostings_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      personIdentificationValuesNull_ = false;
      personTypeIdNull_ = false;
      uniqueIdNull_ = false;
      forumIdNull_ = false;
      sortCriteriaNull_ = false;
      fromMainPostingNull_ = false;
      maxNumberOfThreadsNull_ = false;
      includePostingBodiesNull_ = false;
      visibilityNull_ = false;
      showPostDateOfMainPostingNull_ = false;
      getOwnNotApprovedPostingsNull_ = false;
      outputIntoOneIdNull_ = false;
      sortingCriteriaNoNull_ = false;
      reverseOrderOfSortingNull_ = false;
      separatorInIdentValsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (personIdentificationValues_ != null) {
                subBuilder = personIdentificationValues_.toBuilder();
              }
              personIdentificationValues_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personIdentificationValues_);
                personIdentificationValues_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (uniqueId_ != null) {
                subBuilder = uniqueId_.toBuilder();
              }
              uniqueId_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uniqueId_);
                uniqueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (forumId_ != null) {
                subBuilder = forumId_.toBuilder();
              }
              forumId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forumId_);
                forumId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (sortCriteria_ != null) {
                subBuilder = sortCriteria_.toBuilder();
              }
              sortCriteria_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortCriteria_);
                sortCriteria_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (fromMainPosting_ != null) {
                subBuilder = fromMainPosting_.toBuilder();
              }
              fromMainPosting_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromMainPosting_);
                fromMainPosting_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (maxNumberOfThreads_ != null) {
                subBuilder = maxNumberOfThreads_.toBuilder();
              }
              maxNumberOfThreads_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxNumberOfThreads_);
                maxNumberOfThreads_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (includePostingBodies_ != null) {
                subBuilder = includePostingBodies_.toBuilder();
              }
              includePostingBodies_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includePostingBodies_);
                includePostingBodies_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (visibility_ != null) {
                subBuilder = visibility_.toBuilder();
              }
              visibility_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(visibility_);
                visibility_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (showPostDateOfMainPosting_ != null) {
                subBuilder = showPostDateOfMainPosting_.toBuilder();
              }
              showPostDateOfMainPosting_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(showPostDateOfMainPosting_);
                showPostDateOfMainPosting_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getOwnNotApprovedPostings_ != null) {
                subBuilder = getOwnNotApprovedPostings_.toBuilder();
              }
              getOwnNotApprovedPostings_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getOwnNotApprovedPostings_);
                getOwnNotApprovedPostings_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (outputIntoOneId_ != null) {
                subBuilder = outputIntoOneId_.toBuilder();
              }
              outputIntoOneId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputIntoOneId_);
                outputIntoOneId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (sortingCriteriaNo_ != null) {
                subBuilder = sortingCriteriaNo_.toBuilder();
              }
              sortingCriteriaNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortingCriteriaNo_);
                sortingCriteriaNo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (reverseOrderOfSorting_ != null) {
                subBuilder = reverseOrderOfSorting_.toBuilder();
              }
              reverseOrderOfSorting_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reverseOrderOfSorting_);
                reverseOrderOfSorting_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (separatorInIdentVals_ != null) {
                subBuilder = separatorInIdentVals_.toBuilder();
              }
              separatorInIdentVals_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(separatorInIdentVals_);
                separatorInIdentVals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personIdentificationValuesNull_ = input.readBool();
              break;
            }
            case 8016: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              uniqueIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              forumIdNull_ = input.readBool();
              break;
            }
            case 8040: {

              sortCriteriaNull_ = input.readBool();
              break;
            }
            case 8048: {

              fromMainPostingNull_ = input.readBool();
              break;
            }
            case 8056: {

              maxNumberOfThreadsNull_ = input.readBool();
              break;
            }
            case 8064: {

              includePostingBodiesNull_ = input.readBool();
              break;
            }
            case 8072: {

              visibilityNull_ = input.readBool();
              break;
            }
            case 8080: {

              showPostDateOfMainPostingNull_ = input.readBool();
              break;
            }
            case 8088: {

              getOwnNotApprovedPostingsNull_ = input.readBool();
              break;
            }
            case 8096: {

              outputIntoOneIdNull_ = input.readBool();
              break;
            }
            case 8104: {

              sortingCriteriaNoNull_ = input.readBool();
              break;
            }
            case 8112: {

              reverseOrderOfSortingNull_ = input.readBool();
              break;
            }
            case 8120: {

              separatorInIdentValsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.class, io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.Builder.class);
    }

    public static final int PERSON_IDENTIFICATION_VALUES_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.stringValue personIdentificationValues_;
    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    public boolean hasPersonIdentificationValues() {
      return personIdentificationValues_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.engine.Values.stringValue getPersonIdentificationValues() {
      return personIdentificationValues_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
      return getPersonIdentificationValues();
    }

    public static final int PERSON_IDENTIFICATION_VALUES_NULL_FIELD_NUMBER = 1001;
    private boolean personIdentificationValuesNull_;
    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    public boolean getPersonIdentificationValuesNull() {
      return personIdentificationValuesNull_;
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.stringValue uniqueId_;
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    public boolean hasUniqueId() {
      return uniqueId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.engine.Values.stringValue getUniqueId() {
      return uniqueId_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
      return getUniqueId();
    }

    public static final int UNIQUE_ID_NULL_FIELD_NUMBER = 1003;
    private boolean uniqueIdNull_;
    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    public boolean getUniqueIdNull() {
      return uniqueIdNull_;
    }

    public static final int FORUM_ID_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue forumId_;
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    public boolean hasForumId() {
      return forumId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getForumId() {
      return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
      return getForumId();
    }

    public static final int FORUM_ID_NULL_FIELD_NUMBER = 1004;
    private boolean forumIdNull_;
    /**
     * <code>optional bool forum_id_null = 1004;</code>
     */
    public boolean getForumIdNull() {
      return forumIdNull_;
    }

    public static final int SORT_CRITERIA_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.integerValue sortCriteria_;
    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    public boolean hasSortCriteria() {
      return sortCriteria_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    public io.dstore.engine.Values.integerValue getSortCriteria() {
      return sortCriteria_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortCriteria_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getSortCriteriaOrBuilder() {
      return getSortCriteria();
    }

    public static final int SORT_CRITERIA_NULL_FIELD_NUMBER = 1005;
    private boolean sortCriteriaNull_;
    /**
     * <code>optional bool sort_criteria_null = 1005;</code>
     */
    public boolean getSortCriteriaNull() {
      return sortCriteriaNull_;
    }

    public static final int FROM_MAIN_POSTING_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue fromMainPosting_;
    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    public boolean hasFromMainPosting() {
      return fromMainPosting_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getFromMainPosting() {
      return fromMainPosting_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fromMainPosting_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getFromMainPostingOrBuilder() {
      return getFromMainPosting();
    }

    public static final int FROM_MAIN_POSTING_NULL_FIELD_NUMBER = 1006;
    private boolean fromMainPostingNull_;
    /**
     * <code>optional bool from_main_posting_null = 1006;</code>
     */
    public boolean getFromMainPostingNull() {
      return fromMainPostingNull_;
    }

    public static final int MAX_NUMBER_OF_THREADS_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.integerValue maxNumberOfThreads_;
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    public boolean hasMaxNumberOfThreads() {
      return maxNumberOfThreads_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    public io.dstore.engine.Values.integerValue getMaxNumberOfThreads() {
      return maxNumberOfThreads_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfThreads_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfThreadsOrBuilder() {
      return getMaxNumberOfThreads();
    }

    public static final int MAX_NUMBER_OF_THREADS_NULL_FIELD_NUMBER = 1007;
    private boolean maxNumberOfThreadsNull_;
    /**
     * <code>optional bool max_number_of_threads_null = 1007;</code>
     */
    public boolean getMaxNumberOfThreadsNull() {
      return maxNumberOfThreadsNull_;
    }

    public static final int INCLUDE_POSTING_BODIES_FIELD_NUMBER = 8;
    private io.dstore.engine.Values.booleanValue includePostingBodies_;
    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    public boolean hasIncludePostingBodies() {
      return includePostingBodies_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    public io.dstore.engine.Values.booleanValue getIncludePostingBodies() {
      return includePostingBodies_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePostingBodies_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getIncludePostingBodiesOrBuilder() {
      return getIncludePostingBodies();
    }

    public static final int INCLUDE_POSTING_BODIES_NULL_FIELD_NUMBER = 1008;
    private boolean includePostingBodiesNull_;
    /**
     * <code>optional bool include_posting_bodies_null = 1008;</code>
     */
    public boolean getIncludePostingBodiesNull() {
      return includePostingBodiesNull_;
    }

    public static final int VISIBILITY_FIELD_NUMBER = 9;
    private io.dstore.engine.Values.integerValue visibility_;
    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    public boolean hasVisibility() {
      return visibility_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    public io.dstore.engine.Values.integerValue getVisibility() {
      return visibility_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : visibility_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getVisibilityOrBuilder() {
      return getVisibility();
    }

    public static final int VISIBILITY_NULL_FIELD_NUMBER = 1009;
    private boolean visibilityNull_;
    /**
     * <code>optional bool visibility_null = 1009;</code>
     */
    public boolean getVisibilityNull() {
      return visibilityNull_;
    }

    public static final int SHOW_POST_DATE_OF_MAIN_POSTING_FIELD_NUMBER = 10;
    private io.dstore.engine.Values.booleanValue showPostDateOfMainPosting_;
    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    public boolean hasShowPostDateOfMainPosting() {
      return showPostDateOfMainPosting_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    public io.dstore.engine.Values.booleanValue getShowPostDateOfMainPosting() {
      return showPostDateOfMainPosting_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : showPostDateOfMainPosting_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getShowPostDateOfMainPostingOrBuilder() {
      return getShowPostDateOfMainPosting();
    }

    public static final int SHOW_POST_DATE_OF_MAIN_POSTING_NULL_FIELD_NUMBER = 1010;
    private boolean showPostDateOfMainPostingNull_;
    /**
     * <code>optional bool show_post_date_of_main_posting_null = 1010;</code>
     */
    public boolean getShowPostDateOfMainPostingNull() {
      return showPostDateOfMainPostingNull_;
    }

    public static final int GET_OWN_NOT_APPROVED_POSTINGS_FIELD_NUMBER = 11;
    private io.dstore.engine.Values.booleanValue getOwnNotApprovedPostings_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    public boolean hasGetOwnNotApprovedPostings() {
      return getOwnNotApprovedPostings_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetOwnNotApprovedPostings() {
      return getOwnNotApprovedPostings_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getOwnNotApprovedPostings_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetOwnNotApprovedPostingsOrBuilder() {
      return getGetOwnNotApprovedPostings();
    }

    public static final int GET_OWN_NOT_APPROVED_POSTINGS_NULL_FIELD_NUMBER = 1011;
    private boolean getOwnNotApprovedPostingsNull_;
    /**
     * <code>optional bool get_own_not_approved_postings_null = 1011;</code>
     */
    public boolean getGetOwnNotApprovedPostingsNull() {
      return getOwnNotApprovedPostingsNull_;
    }

    public static final int OUTPUT_INTO_ONE_ID_FIELD_NUMBER = 12;
    private io.dstore.engine.Values.integerValue outputIntoOneId_;
    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    public boolean hasOutputIntoOneId() {
      return outputIntoOneId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    public io.dstore.engine.Values.integerValue getOutputIntoOneId() {
      return outputIntoOneId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputIntoOneId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getOutputIntoOneIdOrBuilder() {
      return getOutputIntoOneId();
    }

    public static final int OUTPUT_INTO_ONE_ID_NULL_FIELD_NUMBER = 1012;
    private boolean outputIntoOneIdNull_;
    /**
     * <code>optional bool output_into_one_id_null = 1012;</code>
     */
    public boolean getOutputIntoOneIdNull() {
      return outputIntoOneIdNull_;
    }

    public static final int SORTING_CRITERIA_NO_FIELD_NUMBER = 13;
    private io.dstore.engine.Values.integerValue sortingCriteriaNo_;
    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    public boolean hasSortingCriteriaNo() {
      return sortingCriteriaNo_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    public io.dstore.engine.Values.integerValue getSortingCriteriaNo() {
      return sortingCriteriaNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortingCriteriaNo_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getSortingCriteriaNoOrBuilder() {
      return getSortingCriteriaNo();
    }

    public static final int SORTING_CRITERIA_NO_NULL_FIELD_NUMBER = 1013;
    private boolean sortingCriteriaNoNull_;
    /**
     * <code>optional bool sorting_criteria_no_null = 1013;</code>
     */
    public boolean getSortingCriteriaNoNull() {
      return sortingCriteriaNoNull_;
    }

    public static final int REVERSE_ORDER_OF_SORTING_FIELD_NUMBER = 14;
    private io.dstore.engine.Values.booleanValue reverseOrderOfSorting_;
    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    public boolean hasReverseOrderOfSorting() {
      return reverseOrderOfSorting_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    public io.dstore.engine.Values.booleanValue getReverseOrderOfSorting() {
      return reverseOrderOfSorting_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : reverseOrderOfSorting_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getReverseOrderOfSortingOrBuilder() {
      return getReverseOrderOfSorting();
    }

    public static final int REVERSE_ORDER_OF_SORTING_NULL_FIELD_NUMBER = 1014;
    private boolean reverseOrderOfSortingNull_;
    /**
     * <code>optional bool reverse_order_of_sorting_null = 1014;</code>
     */
    public boolean getReverseOrderOfSortingNull() {
      return reverseOrderOfSortingNull_;
    }

    public static final int SEPARATOR_IN_IDENT_VALS_FIELD_NUMBER = 15;
    private io.dstore.engine.Values.stringValue separatorInIdentVals_;
    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    public boolean hasSeparatorInIdentVals() {
      return separatorInIdentVals_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    public io.dstore.engine.Values.stringValue getSeparatorInIdentVals() {
      return separatorInIdentVals_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
      return getSeparatorInIdentVals();
    }

    public static final int SEPARATOR_IN_IDENT_VALS_NULL_FIELD_NUMBER = 1015;
    private boolean separatorInIdentValsNull_;
    /**
     * <code>optional bool separator_in_ident_vals_null = 1015;</code>
     */
    public boolean getSeparatorInIdentValsNull() {
      return separatorInIdentValsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personIdentificationValues_ != null) {
        output.writeMessage(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        output.writeMessage(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        output.writeMessage(3, getUniqueId());
      }
      if (forumId_ != null) {
        output.writeMessage(4, getForumId());
      }
      if (sortCriteria_ != null) {
        output.writeMessage(5, getSortCriteria());
      }
      if (fromMainPosting_ != null) {
        output.writeMessage(6, getFromMainPosting());
      }
      if (maxNumberOfThreads_ != null) {
        output.writeMessage(7, getMaxNumberOfThreads());
      }
      if (includePostingBodies_ != null) {
        output.writeMessage(8, getIncludePostingBodies());
      }
      if (visibility_ != null) {
        output.writeMessage(9, getVisibility());
      }
      if (showPostDateOfMainPosting_ != null) {
        output.writeMessage(10, getShowPostDateOfMainPosting());
      }
      if (getOwnNotApprovedPostings_ != null) {
        output.writeMessage(11, getGetOwnNotApprovedPostings());
      }
      if (outputIntoOneId_ != null) {
        output.writeMessage(12, getOutputIntoOneId());
      }
      if (sortingCriteriaNo_ != null) {
        output.writeMessage(13, getSortingCriteriaNo());
      }
      if (reverseOrderOfSorting_ != null) {
        output.writeMessage(14, getReverseOrderOfSorting());
      }
      if (separatorInIdentVals_ != null) {
        output.writeMessage(15, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        output.writeBool(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        output.writeBool(1003, uniqueIdNull_);
      }
      if (forumIdNull_ != false) {
        output.writeBool(1004, forumIdNull_);
      }
      if (sortCriteriaNull_ != false) {
        output.writeBool(1005, sortCriteriaNull_);
      }
      if (fromMainPostingNull_ != false) {
        output.writeBool(1006, fromMainPostingNull_);
      }
      if (maxNumberOfThreadsNull_ != false) {
        output.writeBool(1007, maxNumberOfThreadsNull_);
      }
      if (includePostingBodiesNull_ != false) {
        output.writeBool(1008, includePostingBodiesNull_);
      }
      if (visibilityNull_ != false) {
        output.writeBool(1009, visibilityNull_);
      }
      if (showPostDateOfMainPostingNull_ != false) {
        output.writeBool(1010, showPostDateOfMainPostingNull_);
      }
      if (getOwnNotApprovedPostingsNull_ != false) {
        output.writeBool(1011, getOwnNotApprovedPostingsNull_);
      }
      if (outputIntoOneIdNull_ != false) {
        output.writeBool(1012, outputIntoOneIdNull_);
      }
      if (sortingCriteriaNoNull_ != false) {
        output.writeBool(1013, sortingCriteriaNoNull_);
      }
      if (reverseOrderOfSortingNull_ != false) {
        output.writeBool(1014, reverseOrderOfSortingNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        output.writeBool(1015, separatorInIdentValsNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (personIdentificationValues_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUniqueId());
      }
      if (forumId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getForumId());
      }
      if (sortCriteria_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSortCriteria());
      }
      if (fromMainPosting_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFromMainPosting());
      }
      if (maxNumberOfThreads_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMaxNumberOfThreads());
      }
      if (includePostingBodies_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getIncludePostingBodies());
      }
      if (visibility_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getVisibility());
      }
      if (showPostDateOfMainPosting_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getShowPostDateOfMainPosting());
      }
      if (getOwnNotApprovedPostings_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getGetOwnNotApprovedPostings());
      }
      if (outputIntoOneId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getOutputIntoOneId());
      }
      if (sortingCriteriaNo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getSortingCriteriaNo());
      }
      if (reverseOrderOfSorting_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getReverseOrderOfSorting());
      }
      if (separatorInIdentVals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, uniqueIdNull_);
      }
      if (forumIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, forumIdNull_);
      }
      if (sortCriteriaNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, sortCriteriaNull_);
      }
      if (fromMainPostingNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, fromMainPostingNull_);
      }
      if (maxNumberOfThreadsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, maxNumberOfThreadsNull_);
      }
      if (includePostingBodiesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, includePostingBodiesNull_);
      }
      if (visibilityNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1009, visibilityNull_);
      }
      if (showPostDateOfMainPostingNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1010, showPostDateOfMainPostingNull_);
      }
      if (getOwnNotApprovedPostingsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1011, getOwnNotApprovedPostingsNull_);
      }
      if (outputIntoOneIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1012, outputIntoOneIdNull_);
      }
      if (sortingCriteriaNoNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1013, sortingCriteriaNoNull_);
      }
      if (reverseOrderOfSortingNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1014, reverseOrderOfSortingNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1015, separatorInIdentValsNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetMainPostingsPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetMainPostings_Pu.Parameters)
        io.dstore.engine.procs.FoGetMainPostingsPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.class, io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }
        personIdentificationValuesNull_ = false;

        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }
        uniqueIdNull_ = false;

        if (forumIdBuilder_ == null) {
          forumId_ = null;
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }
        forumIdNull_ = false;

        if (sortCriteriaBuilder_ == null) {
          sortCriteria_ = null;
        } else {
          sortCriteria_ = null;
          sortCriteriaBuilder_ = null;
        }
        sortCriteriaNull_ = false;

        if (fromMainPostingBuilder_ == null) {
          fromMainPosting_ = null;
        } else {
          fromMainPosting_ = null;
          fromMainPostingBuilder_ = null;
        }
        fromMainPostingNull_ = false;

        if (maxNumberOfThreadsBuilder_ == null) {
          maxNumberOfThreads_ = null;
        } else {
          maxNumberOfThreads_ = null;
          maxNumberOfThreadsBuilder_ = null;
        }
        maxNumberOfThreadsNull_ = false;

        if (includePostingBodiesBuilder_ == null) {
          includePostingBodies_ = null;
        } else {
          includePostingBodies_ = null;
          includePostingBodiesBuilder_ = null;
        }
        includePostingBodiesNull_ = false;

        if (visibilityBuilder_ == null) {
          visibility_ = null;
        } else {
          visibility_ = null;
          visibilityBuilder_ = null;
        }
        visibilityNull_ = false;

        if (showPostDateOfMainPostingBuilder_ == null) {
          showPostDateOfMainPosting_ = null;
        } else {
          showPostDateOfMainPosting_ = null;
          showPostDateOfMainPostingBuilder_ = null;
        }
        showPostDateOfMainPostingNull_ = false;

        if (getOwnNotApprovedPostingsBuilder_ == null) {
          getOwnNotApprovedPostings_ = null;
        } else {
          getOwnNotApprovedPostings_ = null;
          getOwnNotApprovedPostingsBuilder_ = null;
        }
        getOwnNotApprovedPostingsNull_ = false;

        if (outputIntoOneIdBuilder_ == null) {
          outputIntoOneId_ = null;
        } else {
          outputIntoOneId_ = null;
          outputIntoOneIdBuilder_ = null;
        }
        outputIntoOneIdNull_ = false;

        if (sortingCriteriaNoBuilder_ == null) {
          sortingCriteriaNo_ = null;
        } else {
          sortingCriteriaNo_ = null;
          sortingCriteriaNoBuilder_ = null;
        }
        sortingCriteriaNoNull_ = false;

        if (reverseOrderOfSortingBuilder_ == null) {
          reverseOrderOfSorting_ = null;
        } else {
          reverseOrderOfSorting_ = null;
          reverseOrderOfSortingBuilder_ = null;
        }
        reverseOrderOfSortingNull_ = false;

        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }
        separatorInIdentValsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Parameters build() {
        io.dstore.engine.procs.FoGetMainPostingsPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Parameters buildPartial() {
        io.dstore.engine.procs.FoGetMainPostingsPu.Parameters result = new io.dstore.engine.procs.FoGetMainPostingsPu.Parameters(this);
        if (personIdentificationValuesBuilder_ == null) {
          result.personIdentificationValues_ = personIdentificationValues_;
        } else {
          result.personIdentificationValues_ = personIdentificationValuesBuilder_.build();
        }
        result.personIdentificationValuesNull_ = personIdentificationValuesNull_;
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (uniqueIdBuilder_ == null) {
          result.uniqueId_ = uniqueId_;
        } else {
          result.uniqueId_ = uniqueIdBuilder_.build();
        }
        result.uniqueIdNull_ = uniqueIdNull_;
        if (forumIdBuilder_ == null) {
          result.forumId_ = forumId_;
        } else {
          result.forumId_ = forumIdBuilder_.build();
        }
        result.forumIdNull_ = forumIdNull_;
        if (sortCriteriaBuilder_ == null) {
          result.sortCriteria_ = sortCriteria_;
        } else {
          result.sortCriteria_ = sortCriteriaBuilder_.build();
        }
        result.sortCriteriaNull_ = sortCriteriaNull_;
        if (fromMainPostingBuilder_ == null) {
          result.fromMainPosting_ = fromMainPosting_;
        } else {
          result.fromMainPosting_ = fromMainPostingBuilder_.build();
        }
        result.fromMainPostingNull_ = fromMainPostingNull_;
        if (maxNumberOfThreadsBuilder_ == null) {
          result.maxNumberOfThreads_ = maxNumberOfThreads_;
        } else {
          result.maxNumberOfThreads_ = maxNumberOfThreadsBuilder_.build();
        }
        result.maxNumberOfThreadsNull_ = maxNumberOfThreadsNull_;
        if (includePostingBodiesBuilder_ == null) {
          result.includePostingBodies_ = includePostingBodies_;
        } else {
          result.includePostingBodies_ = includePostingBodiesBuilder_.build();
        }
        result.includePostingBodiesNull_ = includePostingBodiesNull_;
        if (visibilityBuilder_ == null) {
          result.visibility_ = visibility_;
        } else {
          result.visibility_ = visibilityBuilder_.build();
        }
        result.visibilityNull_ = visibilityNull_;
        if (showPostDateOfMainPostingBuilder_ == null) {
          result.showPostDateOfMainPosting_ = showPostDateOfMainPosting_;
        } else {
          result.showPostDateOfMainPosting_ = showPostDateOfMainPostingBuilder_.build();
        }
        result.showPostDateOfMainPostingNull_ = showPostDateOfMainPostingNull_;
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          result.getOwnNotApprovedPostings_ = getOwnNotApprovedPostings_;
        } else {
          result.getOwnNotApprovedPostings_ = getOwnNotApprovedPostingsBuilder_.build();
        }
        result.getOwnNotApprovedPostingsNull_ = getOwnNotApprovedPostingsNull_;
        if (outputIntoOneIdBuilder_ == null) {
          result.outputIntoOneId_ = outputIntoOneId_;
        } else {
          result.outputIntoOneId_ = outputIntoOneIdBuilder_.build();
        }
        result.outputIntoOneIdNull_ = outputIntoOneIdNull_;
        if (sortingCriteriaNoBuilder_ == null) {
          result.sortingCriteriaNo_ = sortingCriteriaNo_;
        } else {
          result.sortingCriteriaNo_ = sortingCriteriaNoBuilder_.build();
        }
        result.sortingCriteriaNoNull_ = sortingCriteriaNoNull_;
        if (reverseOrderOfSortingBuilder_ == null) {
          result.reverseOrderOfSorting_ = reverseOrderOfSorting_;
        } else {
          result.reverseOrderOfSorting_ = reverseOrderOfSortingBuilder_.build();
        }
        result.reverseOrderOfSortingNull_ = reverseOrderOfSortingNull_;
        if (separatorInIdentValsBuilder_ == null) {
          result.separatorInIdentVals_ = separatorInIdentVals_;
        } else {
          result.separatorInIdentVals_ = separatorInIdentValsBuilder_.build();
        }
        result.separatorInIdentValsNull_ = separatorInIdentValsNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetMainPostingsPu.Parameters) {
          return mergeFrom((io.dstore.engine.procs.FoGetMainPostingsPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetMainPostingsPu.Parameters other) {
        if (other == io.dstore.engine.procs.FoGetMainPostingsPu.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonIdentificationValues()) {
          mergePersonIdentificationValues(other.getPersonIdentificationValues());
        }
        if (other.getPersonIdentificationValuesNull() != false) {
          setPersonIdentificationValuesNull(other.getPersonIdentificationValuesNull());
        }
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasUniqueId()) {
          mergeUniqueId(other.getUniqueId());
        }
        if (other.getUniqueIdNull() != false) {
          setUniqueIdNull(other.getUniqueIdNull());
        }
        if (other.hasForumId()) {
          mergeForumId(other.getForumId());
        }
        if (other.getForumIdNull() != false) {
          setForumIdNull(other.getForumIdNull());
        }
        if (other.hasSortCriteria()) {
          mergeSortCriteria(other.getSortCriteria());
        }
        if (other.getSortCriteriaNull() != false) {
          setSortCriteriaNull(other.getSortCriteriaNull());
        }
        if (other.hasFromMainPosting()) {
          mergeFromMainPosting(other.getFromMainPosting());
        }
        if (other.getFromMainPostingNull() != false) {
          setFromMainPostingNull(other.getFromMainPostingNull());
        }
        if (other.hasMaxNumberOfThreads()) {
          mergeMaxNumberOfThreads(other.getMaxNumberOfThreads());
        }
        if (other.getMaxNumberOfThreadsNull() != false) {
          setMaxNumberOfThreadsNull(other.getMaxNumberOfThreadsNull());
        }
        if (other.hasIncludePostingBodies()) {
          mergeIncludePostingBodies(other.getIncludePostingBodies());
        }
        if (other.getIncludePostingBodiesNull() != false) {
          setIncludePostingBodiesNull(other.getIncludePostingBodiesNull());
        }
        if (other.hasVisibility()) {
          mergeVisibility(other.getVisibility());
        }
        if (other.getVisibilityNull() != false) {
          setVisibilityNull(other.getVisibilityNull());
        }
        if (other.hasShowPostDateOfMainPosting()) {
          mergeShowPostDateOfMainPosting(other.getShowPostDateOfMainPosting());
        }
        if (other.getShowPostDateOfMainPostingNull() != false) {
          setShowPostDateOfMainPostingNull(other.getShowPostDateOfMainPostingNull());
        }
        if (other.hasGetOwnNotApprovedPostings()) {
          mergeGetOwnNotApprovedPostings(other.getGetOwnNotApprovedPostings());
        }
        if (other.getGetOwnNotApprovedPostingsNull() != false) {
          setGetOwnNotApprovedPostingsNull(other.getGetOwnNotApprovedPostingsNull());
        }
        if (other.hasOutputIntoOneId()) {
          mergeOutputIntoOneId(other.getOutputIntoOneId());
        }
        if (other.getOutputIntoOneIdNull() != false) {
          setOutputIntoOneIdNull(other.getOutputIntoOneIdNull());
        }
        if (other.hasSortingCriteriaNo()) {
          mergeSortingCriteriaNo(other.getSortingCriteriaNo());
        }
        if (other.getSortingCriteriaNoNull() != false) {
          setSortingCriteriaNoNull(other.getSortingCriteriaNoNull());
        }
        if (other.hasReverseOrderOfSorting()) {
          mergeReverseOrderOfSorting(other.getReverseOrderOfSorting());
        }
        if (other.getReverseOrderOfSortingNull() != false) {
          setReverseOrderOfSortingNull(other.getReverseOrderOfSortingNull());
        }
        if (other.hasSeparatorInIdentVals()) {
          mergeSeparatorInIdentVals(other.getSeparatorInIdentVals());
        }
        if (other.getSeparatorInIdentValsNull() != false) {
          setSeparatorInIdentValsNull(other.getSeparatorInIdentValsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetMainPostingsPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetMainPostingsPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.stringValue personIdentificationValues_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> personIdentificationValuesBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public boolean hasPersonIdentificationValues() {
        return personIdentificationValuesBuilder_ != null || personIdentificationValues_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.engine.Values.stringValue getPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          return personIdentificationValues_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        } else {
          return personIdentificationValuesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(io.dstore.engine.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personIdentificationValues_ = value;
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = builderForValue.build();
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public Builder mergePersonIdentificationValues(io.dstore.engine.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (personIdentificationValues_ != null) {
            personIdentificationValues_ =
              io.dstore.engine.Values.stringValue.newBuilder(personIdentificationValues_).mergeFrom(value).buildPartial();
          } else {
            personIdentificationValues_ = value;
          }
          onChanged();
        } else {
          personIdentificationValuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public Builder clearPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
          onChanged();
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getPersonIdentificationValuesBuilder() {
        
        onChanged();
        return getPersonIdentificationValuesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
        if (personIdentificationValuesBuilder_ != null) {
          return personIdentificationValuesBuilder_.getMessageOrBuilder();
        } else {
          return personIdentificationValues_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue person_identification_values = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getPersonIdentificationValuesFieldBuilder() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getPersonIdentificationValues(),
                  getParentForChildren(),
                  isClean());
          personIdentificationValues_ = null;
        }
        return personIdentificationValuesBuilder_;
      }

      private boolean personIdentificationValuesNull_ ;
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public boolean getPersonIdentificationValuesNull() {
        return personIdentificationValuesNull_;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder setPersonIdentificationValuesNull(boolean value) {
        
        personIdentificationValuesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder clearPersonIdentificationValuesNull() {
        
        personIdentificationValuesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public Builder mergePersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue uniqueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> uniqueIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public boolean hasUniqueId() {
        return uniqueIdBuilder_ != null || uniqueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.engine.Values.stringValue getUniqueId() {
        if (uniqueIdBuilder_ == null) {
          return uniqueId_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
        } else {
          return uniqueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(io.dstore.engine.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uniqueId_ = value;
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = builderForValue.build();
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public Builder mergeUniqueId(io.dstore.engine.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (uniqueId_ != null) {
            uniqueId_ =
              io.dstore.engine.Values.stringValue.newBuilder(uniqueId_).mergeFrom(value).buildPartial();
          } else {
            uniqueId_ = value;
          }
          onChanged();
        } else {
          uniqueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public Builder clearUniqueId() {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
          onChanged();
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getUniqueIdBuilder() {
        
        onChanged();
        return getUniqueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
        if (uniqueIdBuilder_ != null) {
          return uniqueIdBuilder_.getMessageOrBuilder();
        } else {
          return uniqueId_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getUniqueIdFieldBuilder() {
        if (uniqueIdBuilder_ == null) {
          uniqueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getUniqueId(),
                  getParentForChildren(),
                  isClean());
          uniqueId_ = null;
        }
        return uniqueIdBuilder_;
      }

      private boolean uniqueIdNull_ ;
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public boolean getUniqueIdNull() {
        return uniqueIdNull_;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder setUniqueIdNull(boolean value) {
        
        uniqueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder clearUniqueIdNull() {
        
        uniqueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue forumId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> forumIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public boolean hasForumId() {
        return forumIdBuilder_ != null || forumId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getForumId() {
        if (forumIdBuilder_ == null) {
          return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
        } else {
          return forumIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public Builder setForumId(io.dstore.engine.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forumId_ = value;
          onChanged();
        } else {
          forumIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public Builder setForumId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (forumIdBuilder_ == null) {
          forumId_ = builderForValue.build();
          onChanged();
        } else {
          forumIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public Builder mergeForumId(io.dstore.engine.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (forumId_ != null) {
            forumId_ =
              io.dstore.engine.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
          } else {
            forumId_ = value;
          }
          onChanged();
        } else {
          forumIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public Builder clearForumId() {
        if (forumIdBuilder_ == null) {
          forumId_ = null;
          onChanged();
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getForumIdBuilder() {
        
        onChanged();
        return getForumIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
        if (forumIdBuilder_ != null) {
          return forumIdBuilder_.getMessageOrBuilder();
        } else {
          return forumId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getForumIdFieldBuilder() {
        if (forumIdBuilder_ == null) {
          forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getForumId(),
                  getParentForChildren(),
                  isClean());
          forumId_ = null;
        }
        return forumIdBuilder_;
      }

      private boolean forumIdNull_ ;
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public boolean getForumIdNull() {
        return forumIdNull_;
      }
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public Builder setForumIdNull(boolean value) {
        
        forumIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool forum_id_null = 1004;</code>
       */
      public Builder clearForumIdNull() {
        
        forumIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue sortCriteria_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortCriteriaBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public boolean hasSortCriteria() {
        return sortCriteriaBuilder_ != null || sortCriteria_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public io.dstore.engine.Values.integerValue getSortCriteria() {
        if (sortCriteriaBuilder_ == null) {
          return sortCriteria_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortCriteria_;
        } else {
          return sortCriteriaBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public Builder setSortCriteria(io.dstore.engine.Values.integerValue value) {
        if (sortCriteriaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortCriteria_ = value;
          onChanged();
        } else {
          sortCriteriaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public Builder setSortCriteria(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (sortCriteriaBuilder_ == null) {
          sortCriteria_ = builderForValue.build();
          onChanged();
        } else {
          sortCriteriaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public Builder mergeSortCriteria(io.dstore.engine.Values.integerValue value) {
        if (sortCriteriaBuilder_ == null) {
          if (sortCriteria_ != null) {
            sortCriteria_ =
              io.dstore.engine.Values.integerValue.newBuilder(sortCriteria_).mergeFrom(value).buildPartial();
          } else {
            sortCriteria_ = value;
          }
          onChanged();
        } else {
          sortCriteriaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public Builder clearSortCriteria() {
        if (sortCriteriaBuilder_ == null) {
          sortCriteria_ = null;
          onChanged();
        } else {
          sortCriteria_ = null;
          sortCriteriaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getSortCriteriaBuilder() {
        
        onChanged();
        return getSortCriteriaFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortCriteriaOrBuilder() {
        if (sortCriteriaBuilder_ != null) {
          return sortCriteriaBuilder_.getMessageOrBuilder();
        } else {
          return sortCriteria_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : sortCriteria_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_criteria = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getSortCriteriaFieldBuilder() {
        if (sortCriteriaBuilder_ == null) {
          sortCriteriaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getSortCriteria(),
                  getParentForChildren(),
                  isClean());
          sortCriteria_ = null;
        }
        return sortCriteriaBuilder_;
      }

      private boolean sortCriteriaNull_ ;
      /**
       * <code>optional bool sort_criteria_null = 1005;</code>
       */
      public boolean getSortCriteriaNull() {
        return sortCriteriaNull_;
      }
      /**
       * <code>optional bool sort_criteria_null = 1005;</code>
       */
      public Builder setSortCriteriaNull(boolean value) {
        
        sortCriteriaNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sort_criteria_null = 1005;</code>
       */
      public Builder clearSortCriteriaNull() {
        
        sortCriteriaNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue fromMainPosting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> fromMainPostingBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public boolean hasFromMainPosting() {
        return fromMainPostingBuilder_ != null || fromMainPosting_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getFromMainPosting() {
        if (fromMainPostingBuilder_ == null) {
          return fromMainPosting_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fromMainPosting_;
        } else {
          return fromMainPostingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public Builder setFromMainPosting(io.dstore.engine.Values.integerValue value) {
        if (fromMainPostingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromMainPosting_ = value;
          onChanged();
        } else {
          fromMainPostingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public Builder setFromMainPosting(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (fromMainPostingBuilder_ == null) {
          fromMainPosting_ = builderForValue.build();
          onChanged();
        } else {
          fromMainPostingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public Builder mergeFromMainPosting(io.dstore.engine.Values.integerValue value) {
        if (fromMainPostingBuilder_ == null) {
          if (fromMainPosting_ != null) {
            fromMainPosting_ =
              io.dstore.engine.Values.integerValue.newBuilder(fromMainPosting_).mergeFrom(value).buildPartial();
          } else {
            fromMainPosting_ = value;
          }
          onChanged();
        } else {
          fromMainPostingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public Builder clearFromMainPosting() {
        if (fromMainPostingBuilder_ == null) {
          fromMainPosting_ = null;
          onChanged();
        } else {
          fromMainPosting_ = null;
          fromMainPostingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getFromMainPostingBuilder() {
        
        onChanged();
        return getFromMainPostingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getFromMainPostingOrBuilder() {
        if (fromMainPostingBuilder_ != null) {
          return fromMainPostingBuilder_.getMessageOrBuilder();
        } else {
          return fromMainPosting_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : fromMainPosting_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue from_main_posting = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getFromMainPostingFieldBuilder() {
        if (fromMainPostingBuilder_ == null) {
          fromMainPostingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getFromMainPosting(),
                  getParentForChildren(),
                  isClean());
          fromMainPosting_ = null;
        }
        return fromMainPostingBuilder_;
      }

      private boolean fromMainPostingNull_ ;
      /**
       * <code>optional bool from_main_posting_null = 1006;</code>
       */
      public boolean getFromMainPostingNull() {
        return fromMainPostingNull_;
      }
      /**
       * <code>optional bool from_main_posting_null = 1006;</code>
       */
      public Builder setFromMainPostingNull(boolean value) {
        
        fromMainPostingNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_main_posting_null = 1006;</code>
       */
      public Builder clearFromMainPostingNull() {
        
        fromMainPostingNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue maxNumberOfThreads_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxNumberOfThreadsBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public boolean hasMaxNumberOfThreads() {
        return maxNumberOfThreadsBuilder_ != null || maxNumberOfThreads_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public io.dstore.engine.Values.integerValue getMaxNumberOfThreads() {
        if (maxNumberOfThreadsBuilder_ == null) {
          return maxNumberOfThreads_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfThreads_;
        } else {
          return maxNumberOfThreadsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public Builder setMaxNumberOfThreads(io.dstore.engine.Values.integerValue value) {
        if (maxNumberOfThreadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxNumberOfThreads_ = value;
          onChanged();
        } else {
          maxNumberOfThreadsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public Builder setMaxNumberOfThreads(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (maxNumberOfThreadsBuilder_ == null) {
          maxNumberOfThreads_ = builderForValue.build();
          onChanged();
        } else {
          maxNumberOfThreadsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public Builder mergeMaxNumberOfThreads(io.dstore.engine.Values.integerValue value) {
        if (maxNumberOfThreadsBuilder_ == null) {
          if (maxNumberOfThreads_ != null) {
            maxNumberOfThreads_ =
              io.dstore.engine.Values.integerValue.newBuilder(maxNumberOfThreads_).mergeFrom(value).buildPartial();
          } else {
            maxNumberOfThreads_ = value;
          }
          onChanged();
        } else {
          maxNumberOfThreadsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public Builder clearMaxNumberOfThreads() {
        if (maxNumberOfThreadsBuilder_ == null) {
          maxNumberOfThreads_ = null;
          onChanged();
        } else {
          maxNumberOfThreads_ = null;
          maxNumberOfThreadsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getMaxNumberOfThreadsBuilder() {
        
        onChanged();
        return getMaxNumberOfThreadsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfThreadsOrBuilder() {
        if (maxNumberOfThreadsBuilder_ != null) {
          return maxNumberOfThreadsBuilder_.getMessageOrBuilder();
        } else {
          return maxNumberOfThreads_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfThreads_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_threads = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getMaxNumberOfThreadsFieldBuilder() {
        if (maxNumberOfThreadsBuilder_ == null) {
          maxNumberOfThreadsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getMaxNumberOfThreads(),
                  getParentForChildren(),
                  isClean());
          maxNumberOfThreads_ = null;
        }
        return maxNumberOfThreadsBuilder_;
      }

      private boolean maxNumberOfThreadsNull_ ;
      /**
       * <code>optional bool max_number_of_threads_null = 1007;</code>
       */
      public boolean getMaxNumberOfThreadsNull() {
        return maxNumberOfThreadsNull_;
      }
      /**
       * <code>optional bool max_number_of_threads_null = 1007;</code>
       */
      public Builder setMaxNumberOfThreadsNull(boolean value) {
        
        maxNumberOfThreadsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool max_number_of_threads_null = 1007;</code>
       */
      public Builder clearMaxNumberOfThreadsNull() {
        
        maxNumberOfThreadsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue includePostingBodies_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> includePostingBodiesBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public boolean hasIncludePostingBodies() {
        return includePostingBodiesBuilder_ != null || includePostingBodies_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public io.dstore.engine.Values.booleanValue getIncludePostingBodies() {
        if (includePostingBodiesBuilder_ == null) {
          return includePostingBodies_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePostingBodies_;
        } else {
          return includePostingBodiesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public Builder setIncludePostingBodies(io.dstore.engine.Values.booleanValue value) {
        if (includePostingBodiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includePostingBodies_ = value;
          onChanged();
        } else {
          includePostingBodiesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public Builder setIncludePostingBodies(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (includePostingBodiesBuilder_ == null) {
          includePostingBodies_ = builderForValue.build();
          onChanged();
        } else {
          includePostingBodiesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public Builder mergeIncludePostingBodies(io.dstore.engine.Values.booleanValue value) {
        if (includePostingBodiesBuilder_ == null) {
          if (includePostingBodies_ != null) {
            includePostingBodies_ =
              io.dstore.engine.Values.booleanValue.newBuilder(includePostingBodies_).mergeFrom(value).buildPartial();
          } else {
            includePostingBodies_ = value;
          }
          onChanged();
        } else {
          includePostingBodiesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public Builder clearIncludePostingBodies() {
        if (includePostingBodiesBuilder_ == null) {
          includePostingBodies_ = null;
          onChanged();
        } else {
          includePostingBodies_ = null;
          includePostingBodiesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getIncludePostingBodiesBuilder() {
        
        onChanged();
        return getIncludePostingBodiesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getIncludePostingBodiesOrBuilder() {
        if (includePostingBodiesBuilder_ != null) {
          return includePostingBodiesBuilder_.getMessageOrBuilder();
        } else {
          return includePostingBodies_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePostingBodies_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_posting_bodies = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getIncludePostingBodiesFieldBuilder() {
        if (includePostingBodiesBuilder_ == null) {
          includePostingBodiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getIncludePostingBodies(),
                  getParentForChildren(),
                  isClean());
          includePostingBodies_ = null;
        }
        return includePostingBodiesBuilder_;
      }

      private boolean includePostingBodiesNull_ ;
      /**
       * <code>optional bool include_posting_bodies_null = 1008;</code>
       */
      public boolean getIncludePostingBodiesNull() {
        return includePostingBodiesNull_;
      }
      /**
       * <code>optional bool include_posting_bodies_null = 1008;</code>
       */
      public Builder setIncludePostingBodiesNull(boolean value) {
        
        includePostingBodiesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_posting_bodies_null = 1008;</code>
       */
      public Builder clearIncludePostingBodiesNull() {
        
        includePostingBodiesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue visibility_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> visibilityBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public boolean hasVisibility() {
        return visibilityBuilder_ != null || visibility_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public io.dstore.engine.Values.integerValue getVisibility() {
        if (visibilityBuilder_ == null) {
          return visibility_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : visibility_;
        } else {
          return visibilityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public Builder setVisibility(io.dstore.engine.Values.integerValue value) {
        if (visibilityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          visibility_ = value;
          onChanged();
        } else {
          visibilityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public Builder setVisibility(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (visibilityBuilder_ == null) {
          visibility_ = builderForValue.build();
          onChanged();
        } else {
          visibilityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public Builder mergeVisibility(io.dstore.engine.Values.integerValue value) {
        if (visibilityBuilder_ == null) {
          if (visibility_ != null) {
            visibility_ =
              io.dstore.engine.Values.integerValue.newBuilder(visibility_).mergeFrom(value).buildPartial();
          } else {
            visibility_ = value;
          }
          onChanged();
        } else {
          visibilityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public Builder clearVisibility() {
        if (visibilityBuilder_ == null) {
          visibility_ = null;
          onChanged();
        } else {
          visibility_ = null;
          visibilityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getVisibilityBuilder() {
        
        onChanged();
        return getVisibilityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getVisibilityOrBuilder() {
        if (visibilityBuilder_ != null) {
          return visibilityBuilder_.getMessageOrBuilder();
        } else {
          return visibility_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : visibility_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visibility = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getVisibilityFieldBuilder() {
        if (visibilityBuilder_ == null) {
          visibilityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getVisibility(),
                  getParentForChildren(),
                  isClean());
          visibility_ = null;
        }
        return visibilityBuilder_;
      }

      private boolean visibilityNull_ ;
      /**
       * <code>optional bool visibility_null = 1009;</code>
       */
      public boolean getVisibilityNull() {
        return visibilityNull_;
      }
      /**
       * <code>optional bool visibility_null = 1009;</code>
       */
      public Builder setVisibilityNull(boolean value) {
        
        visibilityNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool visibility_null = 1009;</code>
       */
      public Builder clearVisibilityNull() {
        
        visibilityNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue showPostDateOfMainPosting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> showPostDateOfMainPostingBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public boolean hasShowPostDateOfMainPosting() {
        return showPostDateOfMainPostingBuilder_ != null || showPostDateOfMainPosting_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public io.dstore.engine.Values.booleanValue getShowPostDateOfMainPosting() {
        if (showPostDateOfMainPostingBuilder_ == null) {
          return showPostDateOfMainPosting_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : showPostDateOfMainPosting_;
        } else {
          return showPostDateOfMainPostingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public Builder setShowPostDateOfMainPosting(io.dstore.engine.Values.booleanValue value) {
        if (showPostDateOfMainPostingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          showPostDateOfMainPosting_ = value;
          onChanged();
        } else {
          showPostDateOfMainPostingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public Builder setShowPostDateOfMainPosting(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (showPostDateOfMainPostingBuilder_ == null) {
          showPostDateOfMainPosting_ = builderForValue.build();
          onChanged();
        } else {
          showPostDateOfMainPostingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public Builder mergeShowPostDateOfMainPosting(io.dstore.engine.Values.booleanValue value) {
        if (showPostDateOfMainPostingBuilder_ == null) {
          if (showPostDateOfMainPosting_ != null) {
            showPostDateOfMainPosting_ =
              io.dstore.engine.Values.booleanValue.newBuilder(showPostDateOfMainPosting_).mergeFrom(value).buildPartial();
          } else {
            showPostDateOfMainPosting_ = value;
          }
          onChanged();
        } else {
          showPostDateOfMainPostingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public Builder clearShowPostDateOfMainPosting() {
        if (showPostDateOfMainPostingBuilder_ == null) {
          showPostDateOfMainPosting_ = null;
          onChanged();
        } else {
          showPostDateOfMainPosting_ = null;
          showPostDateOfMainPostingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getShowPostDateOfMainPostingBuilder() {
        
        onChanged();
        return getShowPostDateOfMainPostingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getShowPostDateOfMainPostingOrBuilder() {
        if (showPostDateOfMainPostingBuilder_ != null) {
          return showPostDateOfMainPostingBuilder_.getMessageOrBuilder();
        } else {
          return showPostDateOfMainPosting_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : showPostDateOfMainPosting_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_post_date_of_main_posting = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getShowPostDateOfMainPostingFieldBuilder() {
        if (showPostDateOfMainPostingBuilder_ == null) {
          showPostDateOfMainPostingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getShowPostDateOfMainPosting(),
                  getParentForChildren(),
                  isClean());
          showPostDateOfMainPosting_ = null;
        }
        return showPostDateOfMainPostingBuilder_;
      }

      private boolean showPostDateOfMainPostingNull_ ;
      /**
       * <code>optional bool show_post_date_of_main_posting_null = 1010;</code>
       */
      public boolean getShowPostDateOfMainPostingNull() {
        return showPostDateOfMainPostingNull_;
      }
      /**
       * <code>optional bool show_post_date_of_main_posting_null = 1010;</code>
       */
      public Builder setShowPostDateOfMainPostingNull(boolean value) {
        
        showPostDateOfMainPostingNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_post_date_of_main_posting_null = 1010;</code>
       */
      public Builder clearShowPostDateOfMainPostingNull() {
        
        showPostDateOfMainPostingNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getOwnNotApprovedPostings_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getOwnNotApprovedPostingsBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public boolean hasGetOwnNotApprovedPostings() {
        return getOwnNotApprovedPostingsBuilder_ != null || getOwnNotApprovedPostings_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetOwnNotApprovedPostings() {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          return getOwnNotApprovedPostings_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getOwnNotApprovedPostings_;
        } else {
          return getOwnNotApprovedPostingsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public Builder setGetOwnNotApprovedPostings(io.dstore.engine.Values.booleanValue value) {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getOwnNotApprovedPostings_ = value;
          onChanged();
        } else {
          getOwnNotApprovedPostingsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public Builder setGetOwnNotApprovedPostings(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          getOwnNotApprovedPostings_ = builderForValue.build();
          onChanged();
        } else {
          getOwnNotApprovedPostingsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public Builder mergeGetOwnNotApprovedPostings(io.dstore.engine.Values.booleanValue value) {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          if (getOwnNotApprovedPostings_ != null) {
            getOwnNotApprovedPostings_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getOwnNotApprovedPostings_).mergeFrom(value).buildPartial();
          } else {
            getOwnNotApprovedPostings_ = value;
          }
          onChanged();
        } else {
          getOwnNotApprovedPostingsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public Builder clearGetOwnNotApprovedPostings() {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          getOwnNotApprovedPostings_ = null;
          onChanged();
        } else {
          getOwnNotApprovedPostings_ = null;
          getOwnNotApprovedPostingsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetOwnNotApprovedPostingsBuilder() {
        
        onChanged();
        return getGetOwnNotApprovedPostingsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetOwnNotApprovedPostingsOrBuilder() {
        if (getOwnNotApprovedPostingsBuilder_ != null) {
          return getOwnNotApprovedPostingsBuilder_.getMessageOrBuilder();
        } else {
          return getOwnNotApprovedPostings_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getOwnNotApprovedPostings_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_own_not_approved_postings = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetOwnNotApprovedPostingsFieldBuilder() {
        if (getOwnNotApprovedPostingsBuilder_ == null) {
          getOwnNotApprovedPostingsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetOwnNotApprovedPostings(),
                  getParentForChildren(),
                  isClean());
          getOwnNotApprovedPostings_ = null;
        }
        return getOwnNotApprovedPostingsBuilder_;
      }

      private boolean getOwnNotApprovedPostingsNull_ ;
      /**
       * <code>optional bool get_own_not_approved_postings_null = 1011;</code>
       */
      public boolean getGetOwnNotApprovedPostingsNull() {
        return getOwnNotApprovedPostingsNull_;
      }
      /**
       * <code>optional bool get_own_not_approved_postings_null = 1011;</code>
       */
      public Builder setGetOwnNotApprovedPostingsNull(boolean value) {
        
        getOwnNotApprovedPostingsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_own_not_approved_postings_null = 1011;</code>
       */
      public Builder clearGetOwnNotApprovedPostingsNull() {
        
        getOwnNotApprovedPostingsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue outputIntoOneId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> outputIntoOneIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public boolean hasOutputIntoOneId() {
        return outputIntoOneIdBuilder_ != null || outputIntoOneId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValue getOutputIntoOneId() {
        if (outputIntoOneIdBuilder_ == null) {
          return outputIntoOneId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputIntoOneId_;
        } else {
          return outputIntoOneIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public Builder setOutputIntoOneId(io.dstore.engine.Values.integerValue value) {
        if (outputIntoOneIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputIntoOneId_ = value;
          onChanged();
        } else {
          outputIntoOneIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public Builder setOutputIntoOneId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (outputIntoOneIdBuilder_ == null) {
          outputIntoOneId_ = builderForValue.build();
          onChanged();
        } else {
          outputIntoOneIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public Builder mergeOutputIntoOneId(io.dstore.engine.Values.integerValue value) {
        if (outputIntoOneIdBuilder_ == null) {
          if (outputIntoOneId_ != null) {
            outputIntoOneId_ =
              io.dstore.engine.Values.integerValue.newBuilder(outputIntoOneId_).mergeFrom(value).buildPartial();
          } else {
            outputIntoOneId_ = value;
          }
          onChanged();
        } else {
          outputIntoOneIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public Builder clearOutputIntoOneId() {
        if (outputIntoOneIdBuilder_ == null) {
          outputIntoOneId_ = null;
          onChanged();
        } else {
          outputIntoOneId_ = null;
          outputIntoOneIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getOutputIntoOneIdBuilder() {
        
        onChanged();
        return getOutputIntoOneIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOutputIntoOneIdOrBuilder() {
        if (outputIntoOneIdBuilder_ != null) {
          return outputIntoOneIdBuilder_.getMessageOrBuilder();
        } else {
          return outputIntoOneId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : outputIntoOneId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_into_one_id = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getOutputIntoOneIdFieldBuilder() {
        if (outputIntoOneIdBuilder_ == null) {
          outputIntoOneIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getOutputIntoOneId(),
                  getParentForChildren(),
                  isClean());
          outputIntoOneId_ = null;
        }
        return outputIntoOneIdBuilder_;
      }

      private boolean outputIntoOneIdNull_ ;
      /**
       * <code>optional bool output_into_one_id_null = 1012;</code>
       */
      public boolean getOutputIntoOneIdNull() {
        return outputIntoOneIdNull_;
      }
      /**
       * <code>optional bool output_into_one_id_null = 1012;</code>
       */
      public Builder setOutputIntoOneIdNull(boolean value) {
        
        outputIntoOneIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool output_into_one_id_null = 1012;</code>
       */
      public Builder clearOutputIntoOneIdNull() {
        
        outputIntoOneIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue sortingCriteriaNo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortingCriteriaNoBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public boolean hasSortingCriteriaNo() {
        return sortingCriteriaNoBuilder_ != null || sortingCriteriaNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public io.dstore.engine.Values.integerValue getSortingCriteriaNo() {
        if (sortingCriteriaNoBuilder_ == null) {
          return sortingCriteriaNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortingCriteriaNo_;
        } else {
          return sortingCriteriaNoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public Builder setSortingCriteriaNo(io.dstore.engine.Values.integerValue value) {
        if (sortingCriteriaNoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortingCriteriaNo_ = value;
          onChanged();
        } else {
          sortingCriteriaNoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public Builder setSortingCriteriaNo(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (sortingCriteriaNoBuilder_ == null) {
          sortingCriteriaNo_ = builderForValue.build();
          onChanged();
        } else {
          sortingCriteriaNoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public Builder mergeSortingCriteriaNo(io.dstore.engine.Values.integerValue value) {
        if (sortingCriteriaNoBuilder_ == null) {
          if (sortingCriteriaNo_ != null) {
            sortingCriteriaNo_ =
              io.dstore.engine.Values.integerValue.newBuilder(sortingCriteriaNo_).mergeFrom(value).buildPartial();
          } else {
            sortingCriteriaNo_ = value;
          }
          onChanged();
        } else {
          sortingCriteriaNoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public Builder clearSortingCriteriaNo() {
        if (sortingCriteriaNoBuilder_ == null) {
          sortingCriteriaNo_ = null;
          onChanged();
        } else {
          sortingCriteriaNo_ = null;
          sortingCriteriaNoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getSortingCriteriaNoBuilder() {
        
        onChanged();
        return getSortingCriteriaNoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortingCriteriaNoOrBuilder() {
        if (sortingCriteriaNoBuilder_ != null) {
          return sortingCriteriaNoBuilder_.getMessageOrBuilder();
        } else {
          return sortingCriteriaNo_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : sortingCriteriaNo_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sorting_criteria_no = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getSortingCriteriaNoFieldBuilder() {
        if (sortingCriteriaNoBuilder_ == null) {
          sortingCriteriaNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getSortingCriteriaNo(),
                  getParentForChildren(),
                  isClean());
          sortingCriteriaNo_ = null;
        }
        return sortingCriteriaNoBuilder_;
      }

      private boolean sortingCriteriaNoNull_ ;
      /**
       * <code>optional bool sorting_criteria_no_null = 1013;</code>
       */
      public boolean getSortingCriteriaNoNull() {
        return sortingCriteriaNoNull_;
      }
      /**
       * <code>optional bool sorting_criteria_no_null = 1013;</code>
       */
      public Builder setSortingCriteriaNoNull(boolean value) {
        
        sortingCriteriaNoNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sorting_criteria_no_null = 1013;</code>
       */
      public Builder clearSortingCriteriaNoNull() {
        
        sortingCriteriaNoNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue reverseOrderOfSorting_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> reverseOrderOfSortingBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public boolean hasReverseOrderOfSorting() {
        return reverseOrderOfSortingBuilder_ != null || reverseOrderOfSorting_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public io.dstore.engine.Values.booleanValue getReverseOrderOfSorting() {
        if (reverseOrderOfSortingBuilder_ == null) {
          return reverseOrderOfSorting_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : reverseOrderOfSorting_;
        } else {
          return reverseOrderOfSortingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public Builder setReverseOrderOfSorting(io.dstore.engine.Values.booleanValue value) {
        if (reverseOrderOfSortingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reverseOrderOfSorting_ = value;
          onChanged();
        } else {
          reverseOrderOfSortingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public Builder setReverseOrderOfSorting(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (reverseOrderOfSortingBuilder_ == null) {
          reverseOrderOfSorting_ = builderForValue.build();
          onChanged();
        } else {
          reverseOrderOfSortingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public Builder mergeReverseOrderOfSorting(io.dstore.engine.Values.booleanValue value) {
        if (reverseOrderOfSortingBuilder_ == null) {
          if (reverseOrderOfSorting_ != null) {
            reverseOrderOfSorting_ =
              io.dstore.engine.Values.booleanValue.newBuilder(reverseOrderOfSorting_).mergeFrom(value).buildPartial();
          } else {
            reverseOrderOfSorting_ = value;
          }
          onChanged();
        } else {
          reverseOrderOfSortingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public Builder clearReverseOrderOfSorting() {
        if (reverseOrderOfSortingBuilder_ == null) {
          reverseOrderOfSorting_ = null;
          onChanged();
        } else {
          reverseOrderOfSorting_ = null;
          reverseOrderOfSortingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getReverseOrderOfSortingBuilder() {
        
        onChanged();
        return getReverseOrderOfSortingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getReverseOrderOfSortingOrBuilder() {
        if (reverseOrderOfSortingBuilder_ != null) {
          return reverseOrderOfSortingBuilder_.getMessageOrBuilder();
        } else {
          return reverseOrderOfSorting_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : reverseOrderOfSorting_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue reverse_order_of_sorting = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getReverseOrderOfSortingFieldBuilder() {
        if (reverseOrderOfSortingBuilder_ == null) {
          reverseOrderOfSortingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getReverseOrderOfSorting(),
                  getParentForChildren(),
                  isClean());
          reverseOrderOfSorting_ = null;
        }
        return reverseOrderOfSortingBuilder_;
      }

      private boolean reverseOrderOfSortingNull_ ;
      /**
       * <code>optional bool reverse_order_of_sorting_null = 1014;</code>
       */
      public boolean getReverseOrderOfSortingNull() {
        return reverseOrderOfSortingNull_;
      }
      /**
       * <code>optional bool reverse_order_of_sorting_null = 1014;</code>
       */
      public Builder setReverseOrderOfSortingNull(boolean value) {
        
        reverseOrderOfSortingNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool reverse_order_of_sorting_null = 1014;</code>
       */
      public Builder clearReverseOrderOfSortingNull() {
        
        reverseOrderOfSortingNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue separatorInIdentVals_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> separatorInIdentValsBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public boolean hasSeparatorInIdentVals() {
        return separatorInIdentValsBuilder_ != null || separatorInIdentVals_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public io.dstore.engine.Values.stringValue getSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          return separatorInIdentVals_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        } else {
          return separatorInIdentValsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public Builder setSeparatorInIdentVals(io.dstore.engine.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          separatorInIdentVals_ = value;
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public Builder setSeparatorInIdentVals(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = builderForValue.build();
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public Builder mergeSeparatorInIdentVals(io.dstore.engine.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (separatorInIdentVals_ != null) {
            separatorInIdentVals_ =
              io.dstore.engine.Values.stringValue.newBuilder(separatorInIdentVals_).mergeFrom(value).buildPartial();
          } else {
            separatorInIdentVals_ = value;
          }
          onChanged();
        } else {
          separatorInIdentValsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public Builder clearSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
          onChanged();
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getSeparatorInIdentValsBuilder() {
        
        onChanged();
        return getSeparatorInIdentValsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
        if (separatorInIdentValsBuilder_ != null) {
          return separatorInIdentValsBuilder_.getMessageOrBuilder();
        } else {
          return separatorInIdentVals_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_in_ident_vals = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getSeparatorInIdentValsFieldBuilder() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentValsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getSeparatorInIdentVals(),
                  getParentForChildren(),
                  isClean());
          separatorInIdentVals_ = null;
        }
        return separatorInIdentValsBuilder_;
      }

      private boolean separatorInIdentValsNull_ ;
      /**
       * <code>optional bool separator_in_ident_vals_null = 1015;</code>
       */
      public boolean getSeparatorInIdentValsNull() {
        return separatorInIdentValsNull_;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1015;</code>
       */
      public Builder setSeparatorInIdentValsNull(boolean value) {
        
        separatorInIdentValsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1015;</code>
       */
      public Builder clearSeparatorInIdentValsNull() {
        
        separatorInIdentValsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetMainPostings_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetMainPostings_Pu.Parameters)
    private static final io.dstore.engine.procs.FoGetMainPostingsPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetMainPostingsPu.Parameters();
    }

    public static io.dstore.engine.procs.FoGetMainPostingsPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetMainPostingsPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetMainPostings_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetMainPostings_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetMainPostingsPu.Response.class, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetMainPostings_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      boolean hasAlreadyRead();
      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getAlreadyRead();
      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getAlreadyReadOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      boolean hasSmallBody();
      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      io.dstore.engine.Values.stringValue getSmallBody();
      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getSmallBodyOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      boolean hasPostingId();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPostingId();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPostingIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      boolean hasPostingIdOfLatestPosting();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPostingIdOfLatestPosting();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPostingIdOfLatestPostingOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      boolean hasSubject();
      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getSubject();
      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getSubjectOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      boolean hasPostingsInThread();
      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPostingsInThread();
      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPostingsInThreadOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      boolean hasEMailOfAuthor();
      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getEMailOfAuthor();
      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      boolean hasAuthorPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getAuthorPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      boolean hasVisible();
      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getVisible();
      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getVisibleOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      boolean hasHasBinaries();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getHasBinaries();
      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getHasBinariesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      boolean hasAuthor();
      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getAuthor();
      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getAuthorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      boolean hasMainPostingPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getMainPostingPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getMainPostingPostDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      boolean hasLatestPostingPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLatestPostingPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLatestPostingPostDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      boolean hasPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPostDate();
      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPostDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      boolean hasNewPostingsInThread();
      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNewPostingsInThread();
      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNewPostingsInThreadOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      boolean hasBody();
      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      io.dstore.engine.Values.stringValue getBody();
      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetMainPostings_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (alreadyRead_ != null) {
                  subBuilder = alreadyRead_.toBuilder();
                }
                alreadyRead_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(alreadyRead_);
                  alreadyRead_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (smallBody_ != null) {
                  subBuilder = smallBody_.toBuilder();
                }
                smallBody_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(smallBody_);
                  smallBody_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (postingId_ != null) {
                  subBuilder = postingId_.toBuilder();
                }
                postingId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postingId_);
                  postingId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (postingIdOfLatestPosting_ != null) {
                  subBuilder = postingIdOfLatestPosting_.toBuilder();
                }
                postingIdOfLatestPosting_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postingIdOfLatestPosting_);
                  postingIdOfLatestPosting_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (subject_ != null) {
                  subBuilder = subject_.toBuilder();
                }
                subject_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(subject_);
                  subject_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (postingsInThread_ != null) {
                  subBuilder = postingsInThread_.toBuilder();
                }
                postingsInThread_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postingsInThread_);
                  postingsInThread_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (eMailOfAuthor_ != null) {
                  subBuilder = eMailOfAuthor_.toBuilder();
                }
                eMailOfAuthor_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(eMailOfAuthor_);
                  eMailOfAuthor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (authorPersonId_ != null) {
                  subBuilder = authorPersonId_.toBuilder();
                }
                authorPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(authorPersonId_);
                  authorPersonId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (visible_ != null) {
                  subBuilder = visible_.toBuilder();
                }
                visible_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(visible_);
                  visible_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (hasBinaries_ != null) {
                  subBuilder = hasBinaries_.toBuilder();
                }
                hasBinaries_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasBinaries_);
                  hasBinaries_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (author_ != null) {
                  subBuilder = author_.toBuilder();
                }
                author_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(author_);
                  author_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (mainPostingPostDate_ != null) {
                  subBuilder = mainPostingPostDate_.toBuilder();
                }
                mainPostingPostDate_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mainPostingPostDate_);
                  mainPostingPostDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (latestPostingPostDate_ != null) {
                  subBuilder = latestPostingPostDate_.toBuilder();
                }
                latestPostingPostDate_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(latestPostingPostDate_);
                  latestPostingPostDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (postDate_ != null) {
                  subBuilder = postDate_.toBuilder();
                }
                postDate_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postDate_);
                  postDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (newPostingsInThread_ != null) {
                  subBuilder = newPostingsInThread_.toBuilder();
                }
                newPostingsInThread_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(newPostingsInThread_);
                  newPostingsInThread_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (body_ != null) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.class, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int ALREADY_READ_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.booleanValue alreadyRead_;
      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      public boolean hasAlreadyRead() {
        return alreadyRead_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getAlreadyRead() {
        return alreadyRead_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : alreadyRead_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
       *
       * <pre>
       * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getAlreadyReadOrBuilder() {
        return getAlreadyRead();
      }

      public static final int SMALL_BODY_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue smallBody_;
      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public boolean hasSmallBody() {
        return smallBody_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getSmallBody() {
        return smallBody_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : smallBody_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSmallBodyOrBuilder() {
        return getSmallBody();
      }

      public static final int POSTING_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue postingId_;
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      public boolean hasPostingId() {
        return postingId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPostingId() {
        return postingId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
       *
       * <pre>
       * ID eines MainPostings
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPostingIdOrBuilder() {
        return getPostingId();
      }

      public static final int POSTING_ID_OF_LATEST_POSTING_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue postingIdOfLatestPosting_;
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      public boolean hasPostingIdOfLatestPosting() {
        return postingIdOfLatestPosting_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPostingIdOfLatestPosting() {
        return postingIdOfLatestPosting_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingIdOfLatestPosting_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
       *
       * <pre>
       * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPostingIdOfLatestPostingOrBuilder() {
        return getPostingIdOfLatestPosting();
      }

      public static final int SUBJECT_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue subject_;
      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      public boolean hasSubject() {
        return subject_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getSubject() {
        return subject_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : subject_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
       *
       * <pre>
       * Der Titel des Beitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSubjectOrBuilder() {
        return getSubject();
      }

      public static final int POSTINGS_IN_THREAD_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue postingsInThread_;
      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      public boolean hasPostingsInThread() {
        return postingsInThread_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPostingsInThread() {
        return postingsInThread_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingsInThread_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
       *
       * <pre>
       * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPostingsInThreadOrBuilder() {
        return getPostingsInThread();
      }

      public static final int E_MAIL_OF_AUTHOR_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue eMailOfAuthor_;
      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public boolean hasEMailOfAuthor() {
        return eMailOfAuthor_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getEMailOfAuthor() {
        return eMailOfAuthor_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder() {
        return getEMailOfAuthor();
      }

      public static final int AUTHOR_PERSON_ID_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue authorPersonId_;
      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public boolean hasAuthorPersonId() {
        return authorPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getAuthorPersonId() {
        return authorPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : authorPersonId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder() {
        return getAuthorPersonId();
      }

      public static final int VISIBLE_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue visible_;
      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public boolean hasVisible() {
        return visible_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getVisible() {
        return visible_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : visible_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getVisibleOrBuilder() {
        return getVisible();
      }

      public static final int HAS_BINARIES_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.booleanValue hasBinaries_;
      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      public boolean hasHasBinaries() {
        return hasBinaries_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getHasBinaries() {
        return hasBinaries_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasBinaries_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getHasBinariesOrBuilder() {
        return getHasBinaries();
      }

      public static final int AUTHOR_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.stringValue author_;
      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      public boolean hasAuthor() {
        return author_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getAuthor() {
        return author_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : author_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "PostingID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getAuthorOrBuilder() {
        return getAuthor();
      }

      public static final int MAIN_POSTING_POST_DATE_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.stringValue mainPostingPostDate_;
      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public boolean hasMainPostingPostDate() {
        return mainPostingPostDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getMainPostingPostDate() {
        return mainPostingPostDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : mainPostingPostDate_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
       *
       * <pre>
       * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getMainPostingPostDateOrBuilder() {
        return getMainPostingPostDate();
      }

      public static final int LATEST_POSTING_POST_DATE_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.stringValue latestPostingPostDate_;
      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public boolean hasLatestPostingPostDate() {
        return latestPostingPostDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLatestPostingPostDate() {
        return latestPostingPostDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : latestPostingPostDate_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
       *
       * <pre>
       * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLatestPostingPostDateOrBuilder() {
        return getLatestPostingPostDate();
      }

      public static final int POST_DATE_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.stringValue postDate_;
      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      public boolean hasPostDate() {
        return postDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPostDate() {
        return postDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : postDate_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPostDateOrBuilder() {
        return getPostDate();
      }

      public static final int NEW_POSTINGS_IN_THREAD_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.integerValue newPostingsInThread_;
      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      public boolean hasNewPostingsInThread() {
        return newPostingsInThread_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNewPostingsInThread() {
        return newPostingsInThread_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : newPostingsInThread_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
       *
       * <pre>
       * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNewPostingsInThreadOrBuilder() {
        return getNewPostingsInThread();
      }

      public static final int BODY_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.stringValue body_;
      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public boolean hasBody() {
        return body_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getBody() {
        return body_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : body_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBodyOrBuilder() {
        return getBody();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (alreadyRead_ != null) {
          output.writeMessage(10001, getAlreadyRead());
        }
        if (smallBody_ != null) {
          output.writeMessage(10002, getSmallBody());
        }
        if (postingId_ != null) {
          output.writeMessage(10003, getPostingId());
        }
        if (postingIdOfLatestPosting_ != null) {
          output.writeMessage(10004, getPostingIdOfLatestPosting());
        }
        if (subject_ != null) {
          output.writeMessage(10005, getSubject());
        }
        if (postingsInThread_ != null) {
          output.writeMessage(10006, getPostingsInThread());
        }
        if (eMailOfAuthor_ != null) {
          output.writeMessage(10007, getEMailOfAuthor());
        }
        if (authorPersonId_ != null) {
          output.writeMessage(10008, getAuthorPersonId());
        }
        if (visible_ != null) {
          output.writeMessage(10009, getVisible());
        }
        if (hasBinaries_ != null) {
          output.writeMessage(10010, getHasBinaries());
        }
        if (author_ != null) {
          output.writeMessage(10011, getAuthor());
        }
        if (mainPostingPostDate_ != null) {
          output.writeMessage(10012, getMainPostingPostDate());
        }
        if (latestPostingPostDate_ != null) {
          output.writeMessage(10013, getLatestPostingPostDate());
        }
        if (postDate_ != null) {
          output.writeMessage(10014, getPostDate());
        }
        if (newPostingsInThread_ != null) {
          output.writeMessage(10015, getNewPostingsInThread());
        }
        if (body_ != null) {
          output.writeMessage(10016, getBody());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (alreadyRead_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getAlreadyRead());
        }
        if (smallBody_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getSmallBody());
        }
        if (postingId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPostingId());
        }
        if (postingIdOfLatestPosting_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPostingIdOfLatestPosting());
        }
        if (subject_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getSubject());
        }
        if (postingsInThread_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getPostingsInThread());
        }
        if (eMailOfAuthor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getEMailOfAuthor());
        }
        if (authorPersonId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getAuthorPersonId());
        }
        if (visible_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getVisible());
        }
        if (hasBinaries_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getHasBinaries());
        }
        if (author_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getAuthor());
        }
        if (mainPostingPostDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getMainPostingPostDate());
        }
        if (latestPostingPostDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getLatestPostingPostDate());
        }
        if (postDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getPostDate());
        }
        if (newPostingsInThread_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getNewPostingsInThread());
        }
        if (body_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getBody());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetMainPostings_Pu.Response.Row)
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.class, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (alreadyReadBuilder_ == null) {
            alreadyRead_ = null;
          } else {
            alreadyRead_ = null;
            alreadyReadBuilder_ = null;
          }
          if (smallBodyBuilder_ == null) {
            smallBody_ = null;
          } else {
            smallBody_ = null;
            smallBodyBuilder_ = null;
          }
          if (postingIdBuilder_ == null) {
            postingId_ = null;
          } else {
            postingId_ = null;
            postingIdBuilder_ = null;
          }
          if (postingIdOfLatestPostingBuilder_ == null) {
            postingIdOfLatestPosting_ = null;
          } else {
            postingIdOfLatestPosting_ = null;
            postingIdOfLatestPostingBuilder_ = null;
          }
          if (subjectBuilder_ == null) {
            subject_ = null;
          } else {
            subject_ = null;
            subjectBuilder_ = null;
          }
          if (postingsInThreadBuilder_ == null) {
            postingsInThread_ = null;
          } else {
            postingsInThread_ = null;
            postingsInThreadBuilder_ = null;
          }
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = null;
          } else {
            eMailOfAuthor_ = null;
            eMailOfAuthorBuilder_ = null;
          }
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = null;
          } else {
            authorPersonId_ = null;
            authorPersonIdBuilder_ = null;
          }
          if (visibleBuilder_ == null) {
            visible_ = null;
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = null;
          } else {
            hasBinaries_ = null;
            hasBinariesBuilder_ = null;
          }
          if (authorBuilder_ == null) {
            author_ = null;
          } else {
            author_ = null;
            authorBuilder_ = null;
          }
          if (mainPostingPostDateBuilder_ == null) {
            mainPostingPostDate_ = null;
          } else {
            mainPostingPostDate_ = null;
            mainPostingPostDateBuilder_ = null;
          }
          if (latestPostingPostDateBuilder_ == null) {
            latestPostingPostDate_ = null;
          } else {
            latestPostingPostDate_ = null;
            latestPostingPostDateBuilder_ = null;
          }
          if (postDateBuilder_ == null) {
            postDate_ = null;
          } else {
            postDate_ = null;
            postDateBuilder_ = null;
          }
          if (newPostingsInThreadBuilder_ == null) {
            newPostingsInThread_ = null;
          } else {
            newPostingsInThread_ = null;
            newPostingsInThreadBuilder_ = null;
          }
          if (bodyBuilder_ == null) {
            body_ = null;
          } else {
            body_ = null;
            bodyBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row build() {
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row buildPartial() {
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row result = new io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (alreadyReadBuilder_ == null) {
            result.alreadyRead_ = alreadyRead_;
          } else {
            result.alreadyRead_ = alreadyReadBuilder_.build();
          }
          if (smallBodyBuilder_ == null) {
            result.smallBody_ = smallBody_;
          } else {
            result.smallBody_ = smallBodyBuilder_.build();
          }
          if (postingIdBuilder_ == null) {
            result.postingId_ = postingId_;
          } else {
            result.postingId_ = postingIdBuilder_.build();
          }
          if (postingIdOfLatestPostingBuilder_ == null) {
            result.postingIdOfLatestPosting_ = postingIdOfLatestPosting_;
          } else {
            result.postingIdOfLatestPosting_ = postingIdOfLatestPostingBuilder_.build();
          }
          if (subjectBuilder_ == null) {
            result.subject_ = subject_;
          } else {
            result.subject_ = subjectBuilder_.build();
          }
          if (postingsInThreadBuilder_ == null) {
            result.postingsInThread_ = postingsInThread_;
          } else {
            result.postingsInThread_ = postingsInThreadBuilder_.build();
          }
          if (eMailOfAuthorBuilder_ == null) {
            result.eMailOfAuthor_ = eMailOfAuthor_;
          } else {
            result.eMailOfAuthor_ = eMailOfAuthorBuilder_.build();
          }
          if (authorPersonIdBuilder_ == null) {
            result.authorPersonId_ = authorPersonId_;
          } else {
            result.authorPersonId_ = authorPersonIdBuilder_.build();
          }
          if (visibleBuilder_ == null) {
            result.visible_ = visible_;
          } else {
            result.visible_ = visibleBuilder_.build();
          }
          if (hasBinariesBuilder_ == null) {
            result.hasBinaries_ = hasBinaries_;
          } else {
            result.hasBinaries_ = hasBinariesBuilder_.build();
          }
          if (authorBuilder_ == null) {
            result.author_ = author_;
          } else {
            result.author_ = authorBuilder_.build();
          }
          if (mainPostingPostDateBuilder_ == null) {
            result.mainPostingPostDate_ = mainPostingPostDate_;
          } else {
            result.mainPostingPostDate_ = mainPostingPostDateBuilder_.build();
          }
          if (latestPostingPostDateBuilder_ == null) {
            result.latestPostingPostDate_ = latestPostingPostDate_;
          } else {
            result.latestPostingPostDate_ = latestPostingPostDateBuilder_.build();
          }
          if (postDateBuilder_ == null) {
            result.postDate_ = postDate_;
          } else {
            result.postDate_ = postDateBuilder_.build();
          }
          if (newPostingsInThreadBuilder_ == null) {
            result.newPostingsInThread_ = newPostingsInThread_;
          } else {
            result.newPostingsInThread_ = newPostingsInThreadBuilder_.build();
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row other) {
          if (other == io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasAlreadyRead()) {
            mergeAlreadyRead(other.getAlreadyRead());
          }
          if (other.hasSmallBody()) {
            mergeSmallBody(other.getSmallBody());
          }
          if (other.hasPostingId()) {
            mergePostingId(other.getPostingId());
          }
          if (other.hasPostingIdOfLatestPosting()) {
            mergePostingIdOfLatestPosting(other.getPostingIdOfLatestPosting());
          }
          if (other.hasSubject()) {
            mergeSubject(other.getSubject());
          }
          if (other.hasPostingsInThread()) {
            mergePostingsInThread(other.getPostingsInThread());
          }
          if (other.hasEMailOfAuthor()) {
            mergeEMailOfAuthor(other.getEMailOfAuthor());
          }
          if (other.hasAuthorPersonId()) {
            mergeAuthorPersonId(other.getAuthorPersonId());
          }
          if (other.hasVisible()) {
            mergeVisible(other.getVisible());
          }
          if (other.hasHasBinaries()) {
            mergeHasBinaries(other.getHasBinaries());
          }
          if (other.hasAuthor()) {
            mergeAuthor(other.getAuthor());
          }
          if (other.hasMainPostingPostDate()) {
            mergeMainPostingPostDate(other.getMainPostingPostDate());
          }
          if (other.hasLatestPostingPostDate()) {
            mergeLatestPostingPostDate(other.getLatestPostingPostDate());
          }
          if (other.hasPostDate()) {
            mergePostDate(other.getPostDate());
          }
          if (other.hasNewPostingsInThread()) {
            mergeNewPostingsInThread(other.getNewPostingsInThread());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.booleanValue alreadyRead_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> alreadyReadBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public boolean hasAlreadyRead() {
          return alreadyReadBuilder_ != null || alreadyRead_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getAlreadyRead() {
          if (alreadyReadBuilder_ == null) {
            return alreadyRead_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : alreadyRead_;
          } else {
            return alreadyReadBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public Builder setAlreadyRead(io.dstore.engine.Values.booleanValue value) {
          if (alreadyReadBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            alreadyRead_ = value;
            onChanged();
          } else {
            alreadyReadBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public Builder setAlreadyRead(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (alreadyReadBuilder_ == null) {
            alreadyRead_ = builderForValue.build();
            onChanged();
          } else {
            alreadyReadBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public Builder mergeAlreadyRead(io.dstore.engine.Values.booleanValue value) {
          if (alreadyReadBuilder_ == null) {
            if (alreadyRead_ != null) {
              alreadyRead_ =
                io.dstore.engine.Values.booleanValue.newBuilder(alreadyRead_).mergeFrom(value).buildPartial();
            } else {
              alreadyRead_ = value;
            }
            onChanged();
          } else {
            alreadyReadBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public Builder clearAlreadyRead() {
          if (alreadyReadBuilder_ == null) {
            alreadyRead_ = null;
            onChanged();
          } else {
            alreadyRead_ = null;
            alreadyReadBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getAlreadyReadBuilder() {
          
          onChanged();
          return getAlreadyReadFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getAlreadyReadOrBuilder() {
          if (alreadyReadBuilder_ != null) {
            return alreadyReadBuilder_.getMessageOrBuilder();
          } else {
            return alreadyRead_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : alreadyRead_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue already_read = 10001;</code>
         *
         * <pre>
         * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getAlreadyReadFieldBuilder() {
          if (alreadyReadBuilder_ == null) {
            alreadyReadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getAlreadyRead(),
                    getParentForChildren(),
                    isClean());
            alreadyRead_ = null;
          }
          return alreadyReadBuilder_;
        }

        private io.dstore.engine.Values.stringValue smallBody_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> smallBodyBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public boolean hasSmallBody() {
          return smallBodyBuilder_ != null || smallBody_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getSmallBody() {
          if (smallBodyBuilder_ == null) {
            return smallBody_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : smallBody_;
          } else {
            return smallBodyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder setSmallBody(io.dstore.engine.Values.stringValue value) {
          if (smallBodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            smallBody_ = value;
            onChanged();
          } else {
            smallBodyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder setSmallBody(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (smallBodyBuilder_ == null) {
            smallBody_ = builderForValue.build();
            onChanged();
          } else {
            smallBodyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder mergeSmallBody(io.dstore.engine.Values.stringValue value) {
          if (smallBodyBuilder_ == null) {
            if (smallBody_ != null) {
              smallBody_ =
                io.dstore.engine.Values.stringValue.newBuilder(smallBody_).mergeFrom(value).buildPartial();
            } else {
              smallBody_ = value;
            }
            onChanged();
          } else {
            smallBodyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder clearSmallBody() {
          if (smallBodyBuilder_ == null) {
            smallBody_ = null;
            onChanged();
          } else {
            smallBody_ = null;
            smallBodyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getSmallBodyBuilder() {
          
          onChanged();
          return getSmallBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getSmallBodyOrBuilder() {
          if (smallBodyBuilder_ != null) {
            return smallBodyBuilder_.getMessageOrBuilder();
          } else {
            return smallBody_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : smallBody_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue small_body = 10002;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getSmallBodyFieldBuilder() {
          if (smallBodyBuilder_ == null) {
            smallBodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getSmallBody(),
                    getParentForChildren(),
                    isClean());
            smallBody_ = null;
          }
          return smallBodyBuilder_;
        }

        private io.dstore.engine.Values.integerValue postingId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> postingIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public boolean hasPostingId() {
          return postingIdBuilder_ != null || postingId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPostingId() {
          if (postingIdBuilder_ == null) {
            return postingId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingId_;
          } else {
            return postingIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public Builder setPostingId(io.dstore.engine.Values.integerValue value) {
          if (postingIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postingId_ = value;
            onChanged();
          } else {
            postingIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public Builder setPostingId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (postingIdBuilder_ == null) {
            postingId_ = builderForValue.build();
            onChanged();
          } else {
            postingIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public Builder mergePostingId(io.dstore.engine.Values.integerValue value) {
          if (postingIdBuilder_ == null) {
            if (postingId_ != null) {
              postingId_ =
                io.dstore.engine.Values.integerValue.newBuilder(postingId_).mergeFrom(value).buildPartial();
            } else {
              postingId_ = value;
            }
            onChanged();
          } else {
            postingIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public Builder clearPostingId() {
          if (postingIdBuilder_ == null) {
            postingId_ = null;
            onChanged();
          } else {
            postingId_ = null;
            postingIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPostingIdBuilder() {
          
          onChanged();
          return getPostingIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPostingIdOrBuilder() {
          if (postingIdBuilder_ != null) {
            return postingIdBuilder_.getMessageOrBuilder();
          } else {
            return postingId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : postingId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id = 10003;</code>
         *
         * <pre>
         * ID eines MainPostings
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPostingIdFieldBuilder() {
          if (postingIdBuilder_ == null) {
            postingIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPostingId(),
                    getParentForChildren(),
                    isClean());
            postingId_ = null;
          }
          return postingIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue postingIdOfLatestPosting_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> postingIdOfLatestPostingBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public boolean hasPostingIdOfLatestPosting() {
          return postingIdOfLatestPostingBuilder_ != null || postingIdOfLatestPosting_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPostingIdOfLatestPosting() {
          if (postingIdOfLatestPostingBuilder_ == null) {
            return postingIdOfLatestPosting_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingIdOfLatestPosting_;
          } else {
            return postingIdOfLatestPostingBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public Builder setPostingIdOfLatestPosting(io.dstore.engine.Values.integerValue value) {
          if (postingIdOfLatestPostingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postingIdOfLatestPosting_ = value;
            onChanged();
          } else {
            postingIdOfLatestPostingBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public Builder setPostingIdOfLatestPosting(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (postingIdOfLatestPostingBuilder_ == null) {
            postingIdOfLatestPosting_ = builderForValue.build();
            onChanged();
          } else {
            postingIdOfLatestPostingBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public Builder mergePostingIdOfLatestPosting(io.dstore.engine.Values.integerValue value) {
          if (postingIdOfLatestPostingBuilder_ == null) {
            if (postingIdOfLatestPosting_ != null) {
              postingIdOfLatestPosting_ =
                io.dstore.engine.Values.integerValue.newBuilder(postingIdOfLatestPosting_).mergeFrom(value).buildPartial();
            } else {
              postingIdOfLatestPosting_ = value;
            }
            onChanged();
          } else {
            postingIdOfLatestPostingBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public Builder clearPostingIdOfLatestPosting() {
          if (postingIdOfLatestPostingBuilder_ == null) {
            postingIdOfLatestPosting_ = null;
            onChanged();
          } else {
            postingIdOfLatestPosting_ = null;
            postingIdOfLatestPostingBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPostingIdOfLatestPostingBuilder() {
          
          onChanged();
          return getPostingIdOfLatestPostingFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPostingIdOfLatestPostingOrBuilder() {
          if (postingIdOfLatestPostingBuilder_ != null) {
            return postingIdOfLatestPostingBuilder_.getMessageOrBuilder();
          } else {
            return postingIdOfLatestPosting_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : postingIdOfLatestPosting_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_id_of_latest_posting = 10004;</code>
         *
         * <pre>
         * ID des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPostingIdOfLatestPostingFieldBuilder() {
          if (postingIdOfLatestPostingBuilder_ == null) {
            postingIdOfLatestPostingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPostingIdOfLatestPosting(),
                    getParentForChildren(),
                    isClean());
            postingIdOfLatestPosting_ = null;
          }
          return postingIdOfLatestPostingBuilder_;
        }

        private io.dstore.engine.Values.stringValue subject_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> subjectBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public boolean hasSubject() {
          return subjectBuilder_ != null || subject_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getSubject() {
          if (subjectBuilder_ == null) {
            return subject_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : subject_;
          } else {
            return subjectBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public Builder setSubject(io.dstore.engine.Values.stringValue value) {
          if (subjectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            subject_ = value;
            onChanged();
          } else {
            subjectBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public Builder setSubject(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (subjectBuilder_ == null) {
            subject_ = builderForValue.build();
            onChanged();
          } else {
            subjectBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public Builder mergeSubject(io.dstore.engine.Values.stringValue value) {
          if (subjectBuilder_ == null) {
            if (subject_ != null) {
              subject_ =
                io.dstore.engine.Values.stringValue.newBuilder(subject_).mergeFrom(value).buildPartial();
            } else {
              subject_ = value;
            }
            onChanged();
          } else {
            subjectBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public Builder clearSubject() {
          if (subjectBuilder_ == null) {
            subject_ = null;
            onChanged();
          } else {
            subject_ = null;
            subjectBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getSubjectBuilder() {
          
          onChanged();
          return getSubjectFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getSubjectOrBuilder() {
          if (subjectBuilder_ != null) {
            return subjectBuilder_.getMessageOrBuilder();
          } else {
            return subject_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : subject_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue subject = 10005;</code>
         *
         * <pre>
         * Der Titel des Beitrags "PostingID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getSubjectFieldBuilder() {
          if (subjectBuilder_ == null) {
            subjectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getSubject(),
                    getParentForChildren(),
                    isClean());
            subject_ = null;
          }
          return subjectBuilder_;
        }

        private io.dstore.engine.Values.integerValue postingsInThread_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> postingsInThreadBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public boolean hasPostingsInThread() {
          return postingsInThreadBuilder_ != null || postingsInThread_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPostingsInThread() {
          if (postingsInThreadBuilder_ == null) {
            return postingsInThread_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingsInThread_;
          } else {
            return postingsInThreadBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public Builder setPostingsInThread(io.dstore.engine.Values.integerValue value) {
          if (postingsInThreadBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postingsInThread_ = value;
            onChanged();
          } else {
            postingsInThreadBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public Builder setPostingsInThread(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (postingsInThreadBuilder_ == null) {
            postingsInThread_ = builderForValue.build();
            onChanged();
          } else {
            postingsInThreadBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public Builder mergePostingsInThread(io.dstore.engine.Values.integerValue value) {
          if (postingsInThreadBuilder_ == null) {
            if (postingsInThread_ != null) {
              postingsInThread_ =
                io.dstore.engine.Values.integerValue.newBuilder(postingsInThread_).mergeFrom(value).buildPartial();
            } else {
              postingsInThread_ = value;
            }
            onChanged();
          } else {
            postingsInThreadBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public Builder clearPostingsInThread() {
          if (postingsInThreadBuilder_ == null) {
            postingsInThread_ = null;
            onChanged();
          } else {
            postingsInThread_ = null;
            postingsInThreadBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPostingsInThreadBuilder() {
          
          onChanged();
          return getPostingsInThreadFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPostingsInThreadOrBuilder() {
          if (postingsInThreadBuilder_ != null) {
            return postingsInThreadBuilder_.getMessageOrBuilder();
          } else {
            return postingsInThread_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : postingsInThread_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue postings_in_thread = 10006;</code>
         *
         * <pre>
         * Wieviele Antworten hat "PostingID" (inkl. Antworten auf Antworten usw.). Dabei zählen nur Beiträge, die einen "&#64;Visibility" entsprechenden "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identifizierte Person ist!
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPostingsInThreadFieldBuilder() {
          if (postingsInThreadBuilder_ == null) {
            postingsInThreadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPostingsInThread(),
                    getParentForChildren(),
                    isClean());
            postingsInThread_ = null;
          }
          return postingsInThreadBuilder_;
        }

        private io.dstore.engine.Values.stringValue eMailOfAuthor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> eMailOfAuthorBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public boolean hasEMailOfAuthor() {
          return eMailOfAuthorBuilder_ != null || eMailOfAuthor_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getEMailOfAuthor() {
          if (eMailOfAuthorBuilder_ == null) {
            return eMailOfAuthor_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
          } else {
            return eMailOfAuthorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder setEMailOfAuthor(io.dstore.engine.Values.stringValue value) {
          if (eMailOfAuthorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eMailOfAuthor_ = value;
            onChanged();
          } else {
            eMailOfAuthorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder setEMailOfAuthor(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = builderForValue.build();
            onChanged();
          } else {
            eMailOfAuthorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder mergeEMailOfAuthor(io.dstore.engine.Values.stringValue value) {
          if (eMailOfAuthorBuilder_ == null) {
            if (eMailOfAuthor_ != null) {
              eMailOfAuthor_ =
                io.dstore.engine.Values.stringValue.newBuilder(eMailOfAuthor_).mergeFrom(value).buildPartial();
            } else {
              eMailOfAuthor_ = value;
            }
            onChanged();
          } else {
            eMailOfAuthorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder clearEMailOfAuthor() {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = null;
            onChanged();
          } else {
            eMailOfAuthor_ = null;
            eMailOfAuthorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getEMailOfAuthorBuilder() {
          
          onChanged();
          return getEMailOfAuthorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder() {
          if (eMailOfAuthorBuilder_ != null) {
            return eMailOfAuthorBuilder_.getMessageOrBuilder();
          } else {
            return eMailOfAuthor_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue e_mail_of_author = 10007;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getEMailOfAuthorFieldBuilder() {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getEMailOfAuthor(),
                    getParentForChildren(),
                    isClean());
            eMailOfAuthor_ = null;
          }
          return eMailOfAuthorBuilder_;
        }

        private io.dstore.engine.Values.integerValue authorPersonId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> authorPersonIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public boolean hasAuthorPersonId() {
          return authorPersonIdBuilder_ != null || authorPersonId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getAuthorPersonId() {
          if (authorPersonIdBuilder_ == null) {
            return authorPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : authorPersonId_;
          } else {
            return authorPersonIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder setAuthorPersonId(io.dstore.engine.Values.integerValue value) {
          if (authorPersonIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            authorPersonId_ = value;
            onChanged();
          } else {
            authorPersonIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder setAuthorPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = builderForValue.build();
            onChanged();
          } else {
            authorPersonIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder mergeAuthorPersonId(io.dstore.engine.Values.integerValue value) {
          if (authorPersonIdBuilder_ == null) {
            if (authorPersonId_ != null) {
              authorPersonId_ =
                io.dstore.engine.Values.integerValue.newBuilder(authorPersonId_).mergeFrom(value).buildPartial();
            } else {
              authorPersonId_ = value;
            }
            onChanged();
          } else {
            authorPersonIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder clearAuthorPersonId() {
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = null;
            onChanged();
          } else {
            authorPersonId_ = null;
            authorPersonIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getAuthorPersonIdBuilder() {
          
          onChanged();
          return getAuthorPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder() {
          if (authorPersonIdBuilder_ != null) {
            return authorPersonIdBuilder_.getMessageOrBuilder();
          } else {
            return authorPersonId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : authorPersonId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue author_person_id = 10008;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getAuthorPersonIdFieldBuilder() {
          if (authorPersonIdBuilder_ == null) {
            authorPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getAuthorPersonId(),
                    getParentForChildren(),
                    isClean());
            authorPersonId_ = null;
          }
          return authorPersonIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue visible_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> visibleBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public boolean hasVisible() {
          return visibleBuilder_ != null || visible_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getVisible() {
          if (visibleBuilder_ == null) {
            return visible_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : visible_;
          } else {
            return visibleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder setVisible(io.dstore.engine.Values.integerValue value) {
          if (visibleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            visible_ = value;
            onChanged();
          } else {
            visibleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder setVisible(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (visibleBuilder_ == null) {
            visible_ = builderForValue.build();
            onChanged();
          } else {
            visibleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder mergeVisible(io.dstore.engine.Values.integerValue value) {
          if (visibleBuilder_ == null) {
            if (visible_ != null) {
              visible_ =
                io.dstore.engine.Values.integerValue.newBuilder(visible_).mergeFrom(value).buildPartial();
            } else {
              visible_ = value;
            }
            onChanged();
          } else {
            visibleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder clearVisible() {
          if (visibleBuilder_ == null) {
            visible_ = null;
            onChanged();
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getVisibleBuilder() {
          
          onChanged();
          return getVisibleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getVisibleOrBuilder() {
          if (visibleBuilder_ != null) {
            return visibleBuilder_.getMessageOrBuilder();
          } else {
            return visible_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : visible_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue visible = 10009;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getVisibleFieldBuilder() {
          if (visibleBuilder_ == null) {
            visibleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getVisible(),
                    getParentForChildren(),
                    isClean());
            visible_ = null;
          }
          return visibleBuilder_;
        }

        private io.dstore.engine.Values.booleanValue hasBinaries_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> hasBinariesBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public boolean hasHasBinaries() {
          return hasBinariesBuilder_ != null || hasBinaries_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getHasBinaries() {
          if (hasBinariesBuilder_ == null) {
            return hasBinaries_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasBinaries_;
          } else {
            return hasBinariesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public Builder setHasBinaries(io.dstore.engine.Values.booleanValue value) {
          if (hasBinariesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasBinaries_ = value;
            onChanged();
          } else {
            hasBinariesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public Builder setHasBinaries(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = builderForValue.build();
            onChanged();
          } else {
            hasBinariesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public Builder mergeHasBinaries(io.dstore.engine.Values.booleanValue value) {
          if (hasBinariesBuilder_ == null) {
            if (hasBinaries_ != null) {
              hasBinaries_ =
                io.dstore.engine.Values.booleanValue.newBuilder(hasBinaries_).mergeFrom(value).buildPartial();
            } else {
              hasBinaries_ = value;
            }
            onChanged();
          } else {
            hasBinariesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public Builder clearHasBinaries() {
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = null;
            onChanged();
          } else {
            hasBinaries_ = null;
            hasBinariesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getHasBinariesBuilder() {
          
          onChanged();
          return getHasBinariesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getHasBinariesOrBuilder() {
          if (hasBinariesBuilder_ != null) {
            return hasBinariesBuilder_.getMessageOrBuilder();
          } else {
            return hasBinaries_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : hasBinaries_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue has_binaries = 10010;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getHasBinariesFieldBuilder() {
          if (hasBinariesBuilder_ == null) {
            hasBinariesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getHasBinaries(),
                    getParentForChildren(),
                    isClean());
            hasBinaries_ = null;
          }
          return hasBinariesBuilder_;
        }

        private io.dstore.engine.Values.stringValue author_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> authorBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public boolean hasAuthor() {
          return authorBuilder_ != null || author_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getAuthor() {
          if (authorBuilder_ == null) {
            return author_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : author_;
          } else {
            return authorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public Builder setAuthor(io.dstore.engine.Values.stringValue value) {
          if (authorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            author_ = value;
            onChanged();
          } else {
            authorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public Builder setAuthor(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (authorBuilder_ == null) {
            author_ = builderForValue.build();
            onChanged();
          } else {
            authorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public Builder mergeAuthor(io.dstore.engine.Values.stringValue value) {
          if (authorBuilder_ == null) {
            if (author_ != null) {
              author_ =
                io.dstore.engine.Values.stringValue.newBuilder(author_).mergeFrom(value).buildPartial();
            } else {
              author_ = value;
            }
            onChanged();
          } else {
            authorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public Builder clearAuthor() {
          if (authorBuilder_ == null) {
            author_ = null;
            onChanged();
          } else {
            author_ = null;
            authorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getAuthorBuilder() {
          
          onChanged();
          return getAuthorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getAuthorOrBuilder() {
          if (authorBuilder_ != null) {
            return authorBuilder_.getMessageOrBuilder();
          } else {
            return author_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : author_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue author = 10011;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "PostingID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getAuthorFieldBuilder() {
          if (authorBuilder_ == null) {
            authorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getAuthor(),
                    getParentForChildren(),
                    isClean());
            author_ = null;
          }
          return authorBuilder_;
        }

        private io.dstore.engine.Values.stringValue mainPostingPostDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> mainPostingPostDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public boolean hasMainPostingPostDate() {
          return mainPostingPostDateBuilder_ != null || mainPostingPostDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getMainPostingPostDate() {
          if (mainPostingPostDateBuilder_ == null) {
            return mainPostingPostDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : mainPostingPostDate_;
          } else {
            return mainPostingPostDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder setMainPostingPostDate(io.dstore.engine.Values.stringValue value) {
          if (mainPostingPostDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mainPostingPostDate_ = value;
            onChanged();
          } else {
            mainPostingPostDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder setMainPostingPostDate(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (mainPostingPostDateBuilder_ == null) {
            mainPostingPostDate_ = builderForValue.build();
            onChanged();
          } else {
            mainPostingPostDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder mergeMainPostingPostDate(io.dstore.engine.Values.stringValue value) {
          if (mainPostingPostDateBuilder_ == null) {
            if (mainPostingPostDate_ != null) {
              mainPostingPostDate_ =
                io.dstore.engine.Values.stringValue.newBuilder(mainPostingPostDate_).mergeFrom(value).buildPartial();
            } else {
              mainPostingPostDate_ = value;
            }
            onChanged();
          } else {
            mainPostingPostDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder clearMainPostingPostDate() {
          if (mainPostingPostDateBuilder_ == null) {
            mainPostingPostDate_ = null;
            onChanged();
          } else {
            mainPostingPostDate_ = null;
            mainPostingPostDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getMainPostingPostDateBuilder() {
          
          onChanged();
          return getMainPostingPostDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getMainPostingPostDateOrBuilder() {
          if (mainPostingPostDateBuilder_ != null) {
            return mainPostingPostDateBuilder_.getMessageOrBuilder();
          } else {
            return mainPostingPostDate_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : mainPostingPostDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue main_posting_post_date = 10012;</code>
         *
         * <pre>
         * Enthält das Datum des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getMainPostingPostDateFieldBuilder() {
          if (mainPostingPostDateBuilder_ == null) {
            mainPostingPostDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getMainPostingPostDate(),
                    getParentForChildren(),
                    isClean());
            mainPostingPostDate_ = null;
          }
          return mainPostingPostDateBuilder_;
        }

        private io.dstore.engine.Values.stringValue latestPostingPostDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> latestPostingPostDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public boolean hasLatestPostingPostDate() {
          return latestPostingPostDateBuilder_ != null || latestPostingPostDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLatestPostingPostDate() {
          if (latestPostingPostDateBuilder_ == null) {
            return latestPostingPostDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : latestPostingPostDate_;
          } else {
            return latestPostingPostDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder setLatestPostingPostDate(io.dstore.engine.Values.stringValue value) {
          if (latestPostingPostDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            latestPostingPostDate_ = value;
            onChanged();
          } else {
            latestPostingPostDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder setLatestPostingPostDate(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (latestPostingPostDateBuilder_ == null) {
            latestPostingPostDate_ = builderForValue.build();
            onChanged();
          } else {
            latestPostingPostDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder mergeLatestPostingPostDate(io.dstore.engine.Values.stringValue value) {
          if (latestPostingPostDateBuilder_ == null) {
            if (latestPostingPostDate_ != null) {
              latestPostingPostDate_ =
                io.dstore.engine.Values.stringValue.newBuilder(latestPostingPostDate_).mergeFrom(value).buildPartial();
            } else {
              latestPostingPostDate_ = value;
            }
            onChanged();
          } else {
            latestPostingPostDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public Builder clearLatestPostingPostDate() {
          if (latestPostingPostDateBuilder_ == null) {
            latestPostingPostDate_ = null;
            onChanged();
          } else {
            latestPostingPostDate_ = null;
            latestPostingPostDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLatestPostingPostDateBuilder() {
          
          onChanged();
          return getLatestPostingPostDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLatestPostingPostDateOrBuilder() {
          if (latestPostingPostDateBuilder_ != null) {
            return latestPostingPostDateBuilder_.getMessageOrBuilder();
          } else {
            return latestPostingPostDate_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : latestPostingPostDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue latest_posting_post_date = 10013;</code>
         *
         * <pre>
         * Enthält das Datum des aktuellsten Beitrags (dessen "Visible"-Status "&#64;Visibility" entspricht) im gesamten "Thread" des Hauptbeitrags "PostingID", und zwar im Format "15.03.2001 20:48:13"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLatestPostingPostDateFieldBuilder() {
          if (latestPostingPostDateBuilder_ == null) {
            latestPostingPostDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLatestPostingPostDate(),
                    getParentForChildren(),
                    isClean());
            latestPostingPostDate_ = null;
          }
          return latestPostingPostDateBuilder_;
        }

        private io.dstore.engine.Values.stringValue postDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> postDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public boolean hasPostDate() {
          return postDateBuilder_ != null || postDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPostDate() {
          if (postDateBuilder_ == null) {
            return postDate_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : postDate_;
          } else {
            return postDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public Builder setPostDate(io.dstore.engine.Values.stringValue value) {
          if (postDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postDate_ = value;
            onChanged();
          } else {
            postDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public Builder setPostDate(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (postDateBuilder_ == null) {
            postDate_ = builderForValue.build();
            onChanged();
          } else {
            postDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public Builder mergePostDate(io.dstore.engine.Values.stringValue value) {
          if (postDateBuilder_ == null) {
            if (postDate_ != null) {
              postDate_ =
                io.dstore.engine.Values.stringValue.newBuilder(postDate_).mergeFrom(value).buildPartial();
            } else {
              postDate_ = value;
            }
            onChanged();
          } else {
            postDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public Builder clearPostDate() {
          if (postDateBuilder_ == null) {
            postDate_ = null;
            onChanged();
          } else {
            postDate_ = null;
            postDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPostDateBuilder() {
          
          onChanged();
          return getPostDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPostDateOrBuilder() {
          if (postDateBuilder_ != null) {
            return postDateBuilder_.getMessageOrBuilder();
          } else {
            return postDate_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : postDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue post_date = 10014;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! Datum des Beitrags "PostingID" (Format : "15.03.2001 20:48:13"). Im Fall "&#64;SortCriteria = 1" und "&#64;ShowPostDateOfMainPosting = 0" wird hier jedoch das Datum des aktuellsten Beitrags im gesamten "PostingID-Thread" ausgegeben.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPostDateFieldBuilder() {
          if (postDateBuilder_ == null) {
            postDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPostDate(),
                    getParentForChildren(),
                    isClean());
            postDate_ = null;
          }
          return postDateBuilder_;
        }

        private io.dstore.engine.Values.integerValue newPostingsInThread_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> newPostingsInThreadBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public boolean hasNewPostingsInThread() {
          return newPostingsInThreadBuilder_ != null || newPostingsInThread_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNewPostingsInThread() {
          if (newPostingsInThreadBuilder_ == null) {
            return newPostingsInThread_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : newPostingsInThread_;
          } else {
            return newPostingsInThreadBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public Builder setNewPostingsInThread(io.dstore.engine.Values.integerValue value) {
          if (newPostingsInThreadBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            newPostingsInThread_ = value;
            onChanged();
          } else {
            newPostingsInThreadBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public Builder setNewPostingsInThread(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (newPostingsInThreadBuilder_ == null) {
            newPostingsInThread_ = builderForValue.build();
            onChanged();
          } else {
            newPostingsInThreadBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public Builder mergeNewPostingsInThread(io.dstore.engine.Values.integerValue value) {
          if (newPostingsInThreadBuilder_ == null) {
            if (newPostingsInThread_ != null) {
              newPostingsInThread_ =
                io.dstore.engine.Values.integerValue.newBuilder(newPostingsInThread_).mergeFrom(value).buildPartial();
            } else {
              newPostingsInThread_ = value;
            }
            onChanged();
          } else {
            newPostingsInThreadBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public Builder clearNewPostingsInThread() {
          if (newPostingsInThreadBuilder_ == null) {
            newPostingsInThread_ = null;
            onChanged();
          } else {
            newPostingsInThread_ = null;
            newPostingsInThreadBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNewPostingsInThreadBuilder() {
          
          onChanged();
          return getNewPostingsInThreadFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNewPostingsInThreadOrBuilder() {
          if (newPostingsInThreadBuilder_ != null) {
            return newPostingsInThreadBuilder_.getMessageOrBuilder();
          } else {
            return newPostingsInThread_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : newPostingsInThread_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue new_postings_in_thread = 10015;</code>
         *
         * <pre>
         * Wieviele (für die identif. Person) "neue" (s. "AlreadyRead") Postings gibt es im Thread. Es zählen nur Beiträge, die einen "&#64;Visibility" entspr. "Sichtbarkeits-Status" haben bzw. (falls "&#64;GetOwnNotApprovedPosting = 1") deren Autor die identif. Person ist!
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNewPostingsInThreadFieldBuilder() {
          if (newPostingsInThreadBuilder_ == null) {
            newPostingsInThreadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNewPostingsInThread(),
                    getParentForChildren(),
                    isClean());
            newPostingsInThread_ = null;
          }
          return newPostingsInThreadBuilder_;
        }

        private io.dstore.engine.Values.stringValue body_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> bodyBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public boolean hasBody() {
          return bodyBuilder_ != null || body_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getBody() {
          if (bodyBuilder_ == null) {
            return body_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder setBody(io.dstore.engine.Values.stringValue value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder setBody(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder mergeBody(io.dstore.engine.Values.stringValue value) {
          if (bodyBuilder_ == null) {
            if (body_ != null) {
              body_ =
                io.dstore.engine.Values.stringValue.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = null;
            onChanged();
          } else {
            body_ = null;
            bodyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getBodyBuilder() {
          
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : body_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - immer "NULL" falls "&#64;IncludePostingBodies = 0" oder wenn "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getBody(),
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetMainPostings_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetMainPostings_Pu.Response.Row)
      private static final io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row();
      }

      public static io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetMainPostingsPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetMainPostings_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetMainPostings_Pu.Response)
        io.dstore.engine.procs.FoGetMainPostingsPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetMainPostingsPu.Response.class, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetMainPostingsPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor;
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetMainPostingsPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Response build() {
        io.dstore.engine.procs.FoGetMainPostingsPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetMainPostingsPu.Response buildPartial() {
        io.dstore.engine.procs.FoGetMainPostingsPu.Response result = new io.dstore.engine.procs.FoGetMainPostingsPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetMainPostingsPu.Response) {
          return mergeFrom((io.dstore.engine.procs.FoGetMainPostingsPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetMainPostingsPu.Response other) {
        if (other == io.dstore.engine.procs.FoGetMainPostingsPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetMainPostingsPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetMainPostingsPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder, io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetMainPostings_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder, io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row, io.dstore.engine.procs.FoGetMainPostingsPu.Response.Row.Builder, io.dstore.engine.procs.FoGetMainPostingsPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetMainPostings_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetMainPostings_Pu.Response)
    private static final io.dstore.engine.procs.FoGetMainPostingsPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetMainPostingsPu.Response();
    }

    public static io.dstore.engine.procs.FoGetMainPostingsPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetMainPostingsPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4dstore/engine/procedures/fo_GetMainPos" +
      "tings_Pu.proto\022#dstore.engine.fo_GetMain" +
      "Postings_Pu\032\032dstore/engine/values.proto\032" +
      "\031dstore/engine/error.proto\032\033dstore/engin" +
      "e/message.proto\"\345\013\n\nParameters\022G\n\034person" +
      "_identification_values\030\001 \001(\0132!.dstore.en" +
      "gine.values.stringValue\022*\n!person_identi" +
      "fication_values_null\030\351\007 \001(\010\022:\n\016person_ty" +
      "pe_id\030\002 \001(\0132\".dstore.engine.values.integ" +
      "erValue\022\034\n\023person_type_id_null\030\352\007 \001(\010\0224\n",
      "\tunique_id\030\003 \001(\0132!.dstore.engine.values." +
      "stringValue\022\027\n\016unique_id_null\030\353\007 \001(\010\0224\n\010" +
      "forum_id\030\004 \001(\0132\".dstore.engine.values.in" +
      "tegerValue\022\026\n\rforum_id_null\030\354\007 \001(\010\0229\n\rso" +
      "rt_criteria\030\005 \001(\0132\".dstore.engine.values" +
      ".integerValue\022\033\n\022sort_criteria_null\030\355\007 \001" +
      "(\010\022=\n\021from_main_posting\030\006 \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022\037\n\026from_main_p" +
      "osting_null\030\356\007 \001(\010\022A\n\025max_number_of_thre" +
      "ads\030\007 \001(\0132\".dstore.engine.values.integer",
      "Value\022#\n\032max_number_of_threads_null\030\357\007 \001" +
      "(\010\022B\n\026include_posting_bodies\030\010 \001(\0132\".dst" +
      "ore.engine.values.booleanValue\022$\n\033includ" +
      "e_posting_bodies_null\030\360\007 \001(\010\0226\n\nvisibili" +
      "ty\030\t \001(\0132\".dstore.engine.values.integerV" +
      "alue\022\030\n\017visibility_null\030\361\007 \001(\010\022J\n\036show_p" +
      "ost_date_of_main_posting\030\n \001(\0132\".dstore." +
      "engine.values.booleanValue\022,\n#show_post_" +
      "date_of_main_posting_null\030\362\007 \001(\010\022I\n\035get_" +
      "own_not_approved_postings\030\013 \001(\0132\".dstore",
      ".engine.values.booleanValue\022+\n\"get_own_n" +
      "ot_approved_postings_null\030\363\007 \001(\010\022>\n\022outp" +
      "ut_into_one_id\030\014 \001(\0132\".dstore.engine.val" +
      "ues.integerValue\022 \n\027output_into_one_id_n" +
      "ull\030\364\007 \001(\010\022?\n\023sorting_criteria_no\030\r \001(\0132" +
      "\".dstore.engine.values.integerValue\022!\n\030s" +
      "orting_criteria_no_null\030\365\007 \001(\010\022D\n\030revers" +
      "e_order_of_sorting\030\016 \001(\0132\".dstore.engine" +
      ".values.booleanValue\022&\n\035reverse_order_of" +
      "_sorting_null\030\366\007 \001(\010\022B\n\027separator_in_ide",
      "nt_vals\030\017 \001(\0132!.dstore.engine.values.str" +
      "ingValue\022%\n\034separator_in_ident_vals_null" +
      "\030\367\007 \001(\010\"\206\t\n\010Response\022)\n\005error\030\001 \001(\0132\032.ds" +
      "tore.engine.error.Error\022/\n\007message\030\003 \003(\013" +
      "2\036.dstore.engine.message.Message\022>\n\003row\030" +
      "\004 \003(\01321.dstore.engine.fo_GetMainPostings" +
      "_Pu.Response.Row\032\335\007\n\003Row\022\017\n\006row_id\030\220N \001(" +
      "\005\0229\n\014already_read\030\221N \001(\0132\".dstore.engine" +
      ".values.booleanValue\0226\n\nsmall_body\030\222N \001(" +
      "\0132!.dstore.engine.values.stringValue\0227\n\n",
      "posting_id\030\223N \001(\0132\".dstore.engine.values" +
      ".integerValue\022I\n\034posting_id_of_latest_po" +
      "sting\030\224N \001(\0132\".dstore.engine.values.inte" +
      "gerValue\0223\n\007subject\030\225N \001(\0132!.dstore.engi" +
      "ne.values.stringValue\022?\n\022postings_in_thr" +
      "ead\030\226N \001(\0132\".dstore.engine.values.intege" +
      "rValue\022<\n\020e_mail_of_author\030\227N \001(\0132!.dsto" +
      "re.engine.values.stringValue\022=\n\020author_p" +
      "erson_id\030\230N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\0224\n\007visible\030\231N \001(\0132\".dstore.e",
      "ngine.values.integerValue\0229\n\014has_binarie" +
      "s\030\232N \001(\0132\".dstore.engine.values.booleanV" +
      "alue\0222\n\006author\030\233N \001(\0132!.dstore.engine.va" +
      "lues.stringValue\022B\n\026main_posting_post_da" +
      "te\030\234N \001(\0132!.dstore.engine.values.stringV" +
      "alue\022D\n\030latest_posting_post_date\030\235N \001(\0132" +
      "!.dstore.engine.values.stringValue\0225\n\tpo" +
      "st_date\030\236N \001(\0132!.dstore.engine.values.st" +
      "ringValue\022C\n\026new_postings_in_thread\030\237N \001" +
      "(\0132\".dstore.engine.values.integerValue\0220",
      "\n\004body\030\240N \001(\0132!.dstore.engine.values.str" +
      "ingValueB\030\n\026io.dstore.engine.procsb\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetMainPostings_Pu_Parameters_descriptor,
        new java.lang.String[] { "PersonIdentificationValues", "PersonIdentificationValuesNull", "PersonTypeId", "PersonTypeIdNull", "UniqueId", "UniqueIdNull", "ForumId", "ForumIdNull", "SortCriteria", "SortCriteriaNull", "FromMainPosting", "FromMainPostingNull", "MaxNumberOfThreads", "MaxNumberOfThreadsNull", "IncludePostingBodies", "IncludePostingBodiesNull", "Visibility", "VisibilityNull", "ShowPostDateOfMainPosting", "ShowPostDateOfMainPostingNull", "GetOwnNotApprovedPostings", "GetOwnNotApprovedPostingsNull", "OutputIntoOneId", "OutputIntoOneIdNull", "SortingCriteriaNo", "SortingCriteriaNoNull", "ReverseOrderOfSorting", "ReverseOrderOfSortingNull", "SeparatorInIdentVals", "SeparatorInIdentValsNull", });
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetMainPostings_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "AlreadyRead", "SmallBody", "PostingId", "PostingIdOfLatestPosting", "Subject", "PostingsInThread", "EMailOfAuthor", "AuthorPersonId", "Visible", "HasBinaries", "Author", "MainPostingPostDate", "LatestPostingPostDate", "PostDate", "NewPostingsInThread", "Body", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
