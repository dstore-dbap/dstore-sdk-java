// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetHTreeNodeIDs_Ad.proto

package io.dstore.engine.procs;

public final class ImGetHTreeNodeIDsAd {
  private ImGetHTreeNodeIDsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    boolean hasNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

    /**
     * <code>optional bool node_id_null = 1001;</code>
     */
    boolean getNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    boolean hasIsTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    io.dstore.engine.Values.booleanValue getIsTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getIsTreeNodeIdOrBuilder();

    /**
     * <code>optional bool is_tree_node_id_null = 1002;</code>
     */
    boolean getIsTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    boolean hasGetHierarchyIndependentNodes();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    io.dstore.engine.Values.booleanValue getGetHierarchyIndependentNodes();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetHierarchyIndependentNodesOrBuilder();

    /**
     * <code>optional bool get_hierarchy_independent_nodes_null = 1003;</code>
     */
    boolean getGetHierarchyIndependentNodesNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      nodeIdNull_ = false;
      isTreeNodeIdNull_ = false;
      getHierarchyIndependentNodesNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeId_ != null) {
                subBuilder = nodeId_.toBuilder();
              }
              nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeId_);
                nodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (isTreeNodeId_ != null) {
                subBuilder = isTreeNodeId_.toBuilder();
              }
              isTreeNodeId_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(isTreeNodeId_);
                isTreeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getHierarchyIndependentNodes_ != null) {
                subBuilder = getHierarchyIndependentNodes_.toBuilder();
              }
              getHierarchyIndependentNodes_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getHierarchyIndependentNodes_);
                getHierarchyIndependentNodes_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              nodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              isTreeNodeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              getHierarchyIndependentNodesNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue nodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public boolean hasNodeId() {
      return nodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeId() {
      return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
      return getNodeId();
    }

    public static final int NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean nodeIdNull_;
    /**
     * <code>optional bool node_id_null = 1001;</code>
     */
    public boolean getNodeIdNull() {
      return nodeIdNull_;
    }

    public static final int IS_TREE_NODE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.booleanValue isTreeNodeId_;
    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    public boolean hasIsTreeNodeId() {
      return isTreeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    public io.dstore.engine.Values.booleanValue getIsTreeNodeId() {
      return isTreeNodeId_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : isTreeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getIsTreeNodeIdOrBuilder() {
      return getIsTreeNodeId();
    }

    public static final int IS_TREE_NODE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean isTreeNodeIdNull_;
    /**
     * <code>optional bool is_tree_node_id_null = 1002;</code>
     */
    public boolean getIsTreeNodeIdNull() {
      return isTreeNodeIdNull_;
    }

    public static final int GET_HIERARCHY_INDEPENDENT_NODES_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.booleanValue getHierarchyIndependentNodes_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    public boolean hasGetHierarchyIndependentNodes() {
      return getHierarchyIndependentNodes_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetHierarchyIndependentNodes() {
      return getHierarchyIndependentNodes_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getHierarchyIndependentNodes_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetHierarchyIndependentNodesOrBuilder() {
      return getGetHierarchyIndependentNodes();
    }

    public static final int GET_HIERARCHY_INDEPENDENT_NODES_NULL_FIELD_NUMBER = 1003;
    private boolean getHierarchyIndependentNodesNull_;
    /**
     * <code>optional bool get_hierarchy_independent_nodes_null = 1003;</code>
     */
    public boolean getGetHierarchyIndependentNodesNull() {
      return getHierarchyIndependentNodesNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != null) {
        output.writeMessage(1, getNodeId());
      }
      if (isTreeNodeId_ != null) {
        output.writeMessage(2, getIsTreeNodeId());
      }
      if (getHierarchyIndependentNodes_ != null) {
        output.writeMessage(3, getGetHierarchyIndependentNodes());
      }
      if (nodeIdNull_ != false) {
        output.writeBool(1001, nodeIdNull_);
      }
      if (isTreeNodeIdNull_ != false) {
        output.writeBool(1002, isTreeNodeIdNull_);
      }
      if (getHierarchyIndependentNodesNull_ != false) {
        output.writeBool(1003, getHierarchyIndependentNodesNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodeId());
      }
      if (isTreeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIsTreeNodeId());
      }
      if (getHierarchyIndependentNodes_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGetHierarchyIndependentNodes());
      }
      if (nodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, nodeIdNull_);
      }
      if (isTreeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, isTreeNodeIdNull_);
      }
      if (getHierarchyIndependentNodesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, getHierarchyIndependentNodesNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters)
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeIdBuilder_ == null) {
          nodeId_ = null;
        } else {
          nodeId_ = null;
          nodeIdBuilder_ = null;
        }
        nodeIdNull_ = false;

        if (isTreeNodeIdBuilder_ == null) {
          isTreeNodeId_ = null;
        } else {
          isTreeNodeId_ = null;
          isTreeNodeIdBuilder_ = null;
        }
        isTreeNodeIdNull_ = false;

        if (getHierarchyIndependentNodesBuilder_ == null) {
          getHierarchyIndependentNodes_ = null;
        } else {
          getHierarchyIndependentNodes_ = null;
          getHierarchyIndependentNodesBuilder_ = null;
        }
        getHierarchyIndependentNodesNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters build() {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters buildPartial() {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters result = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters(this);
        if (nodeIdBuilder_ == null) {
          result.nodeId_ = nodeId_;
        } else {
          result.nodeId_ = nodeIdBuilder_.build();
        }
        result.nodeIdNull_ = nodeIdNull_;
        if (isTreeNodeIdBuilder_ == null) {
          result.isTreeNodeId_ = isTreeNodeId_;
        } else {
          result.isTreeNodeId_ = isTreeNodeIdBuilder_.build();
        }
        result.isTreeNodeIdNull_ = isTreeNodeIdNull_;
        if (getHierarchyIndependentNodesBuilder_ == null) {
          result.getHierarchyIndependentNodes_ = getHierarchyIndependentNodes_;
        } else {
          result.getHierarchyIndependentNodes_ = getHierarchyIndependentNodesBuilder_.build();
        }
        result.getHierarchyIndependentNodesNull_ = getHierarchyIndependentNodesNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters other) {
        if (other == io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          mergeNodeId(other.getNodeId());
        }
        if (other.getNodeIdNull() != false) {
          setNodeIdNull(other.getNodeIdNull());
        }
        if (other.hasIsTreeNodeId()) {
          mergeIsTreeNodeId(other.getIsTreeNodeId());
        }
        if (other.getIsTreeNodeIdNull() != false) {
          setIsTreeNodeIdNull(other.getIsTreeNodeIdNull());
        }
        if (other.hasGetHierarchyIndependentNodes()) {
          mergeGetHierarchyIndependentNodes(other.getGetHierarchyIndependentNodes());
        }
        if (other.getGetHierarchyIndependentNodesNull() != false) {
          setGetHierarchyIndependentNodesNull(other.getGetHierarchyIndependentNodesNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return nodeIdBuilder_ != null || nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        if (nodeIdBuilder_ == null) {
          return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
        } else {
          return nodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
        if (nodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeId_ = value;
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder setNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeIdBuilder_ == null) {
          nodeId_ = builderForValue.build();
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
        if (nodeIdBuilder_ == null) {
          if (nodeId_ != null) {
            nodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
          } else {
            nodeId_ = value;
          }
          onChanged();
        } else {
          nodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder clearNodeId() {
        if (nodeIdBuilder_ == null) {
          nodeId_ = null;
          onChanged();
        } else {
          nodeId_ = null;
          nodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
        
        onChanged();
        return getNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        if (nodeIdBuilder_ != null) {
          return nodeIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeIdFieldBuilder() {
        if (nodeIdBuilder_ == null) {
          nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeId(),
                  getParentForChildren(),
                  isClean());
          nodeId_ = null;
        }
        return nodeIdBuilder_;
      }

      private boolean nodeIdNull_ ;
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public boolean getNodeIdNull() {
        return nodeIdNull_;
      }
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public Builder setNodeIdNull(boolean value) {
        
        nodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public Builder clearNodeIdNull() {
        
        nodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue isTreeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> isTreeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public boolean hasIsTreeNodeId() {
        return isTreeNodeIdBuilder_ != null || isTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue getIsTreeNodeId() {
        if (isTreeNodeIdBuilder_ == null) {
          return isTreeNodeId_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : isTreeNodeId_;
        } else {
          return isTreeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public Builder setIsTreeNodeId(io.dstore.engine.Values.booleanValue value) {
        if (isTreeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          isTreeNodeId_ = value;
          onChanged();
        } else {
          isTreeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public Builder setIsTreeNodeId(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (isTreeNodeIdBuilder_ == null) {
          isTreeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          isTreeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public Builder mergeIsTreeNodeId(io.dstore.engine.Values.booleanValue value) {
        if (isTreeNodeIdBuilder_ == null) {
          if (isTreeNodeId_ != null) {
            isTreeNodeId_ =
              io.dstore.engine.Values.booleanValue.newBuilder(isTreeNodeId_).mergeFrom(value).buildPartial();
          } else {
            isTreeNodeId_ = value;
          }
          onChanged();
        } else {
          isTreeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public Builder clearIsTreeNodeId() {
        if (isTreeNodeIdBuilder_ == null) {
          isTreeNodeId_ = null;
          onChanged();
        } else {
          isTreeNodeId_ = null;
          isTreeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getIsTreeNodeIdBuilder() {
        
        onChanged();
        return getIsTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getIsTreeNodeIdOrBuilder() {
        if (isTreeNodeIdBuilder_ != null) {
          return isTreeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return isTreeNodeId_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : isTreeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue is_tree_node_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getIsTreeNodeIdFieldBuilder() {
        if (isTreeNodeIdBuilder_ == null) {
          isTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getIsTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          isTreeNodeId_ = null;
        }
        return isTreeNodeIdBuilder_;
      }

      private boolean isTreeNodeIdNull_ ;
      /**
       * <code>optional bool is_tree_node_id_null = 1002;</code>
       */
      public boolean getIsTreeNodeIdNull() {
        return isTreeNodeIdNull_;
      }
      /**
       * <code>optional bool is_tree_node_id_null = 1002;</code>
       */
      public Builder setIsTreeNodeIdNull(boolean value) {
        
        isTreeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_tree_node_id_null = 1002;</code>
       */
      public Builder clearIsTreeNodeIdNull() {
        
        isTreeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getHierarchyIndependentNodes_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getHierarchyIndependentNodesBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public boolean hasGetHierarchyIndependentNodes() {
        return getHierarchyIndependentNodesBuilder_ != null || getHierarchyIndependentNodes_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetHierarchyIndependentNodes() {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          return getHierarchyIndependentNodes_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getHierarchyIndependentNodes_;
        } else {
          return getHierarchyIndependentNodesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public Builder setGetHierarchyIndependentNodes(io.dstore.engine.Values.booleanValue value) {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getHierarchyIndependentNodes_ = value;
          onChanged();
        } else {
          getHierarchyIndependentNodesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public Builder setGetHierarchyIndependentNodes(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          getHierarchyIndependentNodes_ = builderForValue.build();
          onChanged();
        } else {
          getHierarchyIndependentNodesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public Builder mergeGetHierarchyIndependentNodes(io.dstore.engine.Values.booleanValue value) {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          if (getHierarchyIndependentNodes_ != null) {
            getHierarchyIndependentNodes_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getHierarchyIndependentNodes_).mergeFrom(value).buildPartial();
          } else {
            getHierarchyIndependentNodes_ = value;
          }
          onChanged();
        } else {
          getHierarchyIndependentNodesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public Builder clearGetHierarchyIndependentNodes() {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          getHierarchyIndependentNodes_ = null;
          onChanged();
        } else {
          getHierarchyIndependentNodes_ = null;
          getHierarchyIndependentNodesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetHierarchyIndependentNodesBuilder() {
        
        onChanged();
        return getGetHierarchyIndependentNodesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetHierarchyIndependentNodesOrBuilder() {
        if (getHierarchyIndependentNodesBuilder_ != null) {
          return getHierarchyIndependentNodesBuilder_.getMessageOrBuilder();
        } else {
          return getHierarchyIndependentNodes_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getHierarchyIndependentNodes_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_hierarchy_independent_nodes = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetHierarchyIndependentNodesFieldBuilder() {
        if (getHierarchyIndependentNodesBuilder_ == null) {
          getHierarchyIndependentNodesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetHierarchyIndependentNodes(),
                  getParentForChildren(),
                  isClean());
          getHierarchyIndependentNodes_ = null;
        }
        return getHierarchyIndependentNodesBuilder_;
      }

      private boolean getHierarchyIndependentNodesNull_ ;
      /**
       * <code>optional bool get_hierarchy_independent_nodes_null = 1003;</code>
       */
      public boolean getGetHierarchyIndependentNodesNull() {
        return getHierarchyIndependentNodesNull_;
      }
      /**
       * <code>optional bool get_hierarchy_independent_nodes_null = 1003;</code>
       */
      public Builder setGetHierarchyIndependentNodesNull(boolean value) {
        
        getHierarchyIndependentNodesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_hierarchy_independent_nodes_null = 1003;</code>
       */
      public Builder clearGetHierarchyIndependentNodesNull() {
        
        getHierarchyIndependentNodesNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Parameters)
    private static final io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters();
    }

    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetHTreeNodeIDs_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      boolean hasPredecessorTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPredecessorTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPredecessorTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      boolean hasPredecessorDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPredecessorDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPredecessorDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      boolean hasHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      io.dstore.engine.Values.integerValue getHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      boolean hasPrePredecessorDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPrePredecessorDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      boolean hasPrePredecessorTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrePredecessorTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      boolean hasFromDate();
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getFromDate();
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      boolean hasToDate();
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getToDate();
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      boolean hasToDateChar();
      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getToDateChar();
      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getToDateCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      boolean hasFromDateChar();
      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFromDateChar();
      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFromDateCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (predecessorTreeNodeId_ != null) {
                  subBuilder = predecessorTreeNodeId_.toBuilder();
                }
                predecessorTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessorTreeNodeId_);
                  predecessorTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (predecessorDescription_ != null) {
                  subBuilder = predecessorDescription_.toBuilder();
                }
                predecessorDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessorDescription_);
                  predecessorDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (hTreeNodeId_ != null) {
                  subBuilder = hTreeNodeId_.toBuilder();
                }
                hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hTreeNodeId_);
                  hTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (prePredecessorDescription_ != null) {
                  subBuilder = prePredecessorDescription_.toBuilder();
                }
                prePredecessorDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(prePredecessorDescription_);
                  prePredecessorDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (prePredecessorTreeNodeId_ != null) {
                  subBuilder = prePredecessorTreeNodeId_.toBuilder();
                }
                prePredecessorTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(prePredecessorTreeNodeId_);
                  prePredecessorTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (fromDate_ != null) {
                  subBuilder = fromDate_.toBuilder();
                }
                fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fromDate_);
                  fromDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (toDate_ != null) {
                  subBuilder = toDate_.toBuilder();
                }
                toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(toDate_);
                  toDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (toDateChar_ != null) {
                  subBuilder = toDateChar_.toBuilder();
                }
                toDateChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(toDateChar_);
                  toDateChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (fromDateChar_ != null) {
                  subBuilder = fromDateChar_.toBuilder();
                }
                fromDateChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fromDateChar_);
                  fromDateChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int PREDECESSOR_TREE_NODE_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue predecessorTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public boolean hasPredecessorTreeNodeId() {
        return predecessorTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPredecessorTreeNodeId() {
        return predecessorTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPredecessorTreeNodeIdOrBuilder() {
        return getPredecessorTreeNodeId();
      }

      public static final int PREDECESSOR_DESCRIPTION_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue predecessorDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      public boolean hasPredecessorDescription() {
        return predecessorDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPredecessorDescription() {
        return predecessorDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPredecessorDescriptionOrBuilder() {
        return getPredecessorDescription();
      }

      public static final int H_TREE_NODE_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue hTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
       *
       * <pre>
       * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        return getHTreeNodeId();
      }

      public static final int PRE_PREDECESSOR_DESCRIPTION_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue prePredecessorDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      public boolean hasPrePredecessorDescription() {
        return prePredecessorDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPrePredecessorDescription() {
        return prePredecessorDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorDescriptionOrBuilder() {
        return getPrePredecessorDescription();
      }

      public static final int PRE_PREDECESSOR_TREE_NODE_ID_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue prePredecessorTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      public boolean hasPrePredecessorTreeNodeId() {
        return prePredecessorTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrePredecessorTreeNodeId() {
        return prePredecessorTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
       *
       * <pre>
       * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorTreeNodeIdOrBuilder() {
        return getPrePredecessorTreeNodeId();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int FROM_DATE_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.timestampValue fromDate_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      public boolean hasFromDate() {
        return fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
       *
       * <pre>
       * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        return getFromDate();
      }

      public static final int TO_DATE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.timestampValue toDate_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      public boolean hasToDate() {
        return toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
       *
       * <pre>
       * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        return getToDate();
      }

      public static final int TO_DATE_CHAR_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.stringValue toDateChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public boolean hasToDateChar() {
        return toDateChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getToDateChar() {
        return toDateChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : toDateChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
       *
       * <pre>
       * "ToDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getToDateCharOrBuilder() {
        return getToDateChar();
      }

      public static final int FROM_DATE_CHAR_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.stringValue fromDateChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public boolean hasFromDateChar() {
        return fromDateChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFromDateChar() {
        return fromDateChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDateChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
       *
       * <pre>
       * "FromDate" als "String" im Format "05.08.2000 18:45:22"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFromDateCharOrBuilder() {
        return getFromDateChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10001, getNodeDescription());
        }
        if (predecessorTreeNodeId_ != null) {
          output.writeMessage(10002, getPredecessorTreeNodeId());
        }
        if (predecessorDescription_ != null) {
          output.writeMessage(10003, getPredecessorDescription());
        }
        if (hTreeNodeId_ != null) {
          output.writeMessage(10004, getHTreeNodeId());
        }
        if (prePredecessorDescription_ != null) {
          output.writeMessage(10005, getPrePredecessorDescription());
        }
        if (prePredecessorTreeNodeId_ != null) {
          output.writeMessage(10006, getPrePredecessorTreeNodeId());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10007, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10008, getNodeId());
        }
        if (fromDate_ != null) {
          output.writeMessage(10009, getFromDate());
        }
        if (toDate_ != null) {
          output.writeMessage(10010, getToDate());
        }
        if (toDateChar_ != null) {
          output.writeMessage(10011, getToDateChar());
        }
        if (fromDateChar_ != null) {
          output.writeMessage(10012, getFromDateChar());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getNodeDescription());
        }
        if (predecessorTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPredecessorTreeNodeId());
        }
        if (predecessorDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPredecessorDescription());
        }
        if (hTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getHTreeNodeId());
        }
        if (prePredecessorDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getPrePredecessorDescription());
        }
        if (prePredecessorTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getPrePredecessorTreeNodeId());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getNodeId());
        }
        if (fromDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getFromDate());
        }
        if (toDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getToDate());
        }
        if (toDateChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getToDateChar());
        }
        if (fromDateChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getFromDateChar());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row)
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (predecessorTreeNodeIdBuilder_ == null) {
            predecessorTreeNodeId_ = null;
          } else {
            predecessorTreeNodeId_ = null;
            predecessorTreeNodeIdBuilder_ = null;
          }
          if (predecessorDescriptionBuilder_ == null) {
            predecessorDescription_ = null;
          } else {
            predecessorDescription_ = null;
            predecessorDescriptionBuilder_ = null;
          }
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }
          if (prePredecessorDescriptionBuilder_ == null) {
            prePredecessorDescription_ = null;
          } else {
            prePredecessorDescription_ = null;
            prePredecessorDescriptionBuilder_ = null;
          }
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            prePredecessorTreeNodeId_ = null;
          } else {
            prePredecessorTreeNodeId_ = null;
            prePredecessorTreeNodeIdBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (fromDateBuilder_ == null) {
            fromDate_ = null;
          } else {
            fromDate_ = null;
            fromDateBuilder_ = null;
          }
          if (toDateBuilder_ == null) {
            toDate_ = null;
          } else {
            toDate_ = null;
            toDateBuilder_ = null;
          }
          if (toDateCharBuilder_ == null) {
            toDateChar_ = null;
          } else {
            toDateChar_ = null;
            toDateCharBuilder_ = null;
          }
          if (fromDateCharBuilder_ == null) {
            fromDateChar_ = null;
          } else {
            fromDateChar_ = null;
            fromDateCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row build() {
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row result = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (predecessorTreeNodeIdBuilder_ == null) {
            result.predecessorTreeNodeId_ = predecessorTreeNodeId_;
          } else {
            result.predecessorTreeNodeId_ = predecessorTreeNodeIdBuilder_.build();
          }
          if (predecessorDescriptionBuilder_ == null) {
            result.predecessorDescription_ = predecessorDescription_;
          } else {
            result.predecessorDescription_ = predecessorDescriptionBuilder_.build();
          }
          if (hTreeNodeIdBuilder_ == null) {
            result.hTreeNodeId_ = hTreeNodeId_;
          } else {
            result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
          }
          if (prePredecessorDescriptionBuilder_ == null) {
            result.prePredecessorDescription_ = prePredecessorDescription_;
          } else {
            result.prePredecessorDescription_ = prePredecessorDescriptionBuilder_.build();
          }
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            result.prePredecessorTreeNodeId_ = prePredecessorTreeNodeId_;
          } else {
            result.prePredecessorTreeNodeId_ = prePredecessorTreeNodeIdBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (fromDateBuilder_ == null) {
            result.fromDate_ = fromDate_;
          } else {
            result.fromDate_ = fromDateBuilder_.build();
          }
          if (toDateBuilder_ == null) {
            result.toDate_ = toDate_;
          } else {
            result.toDate_ = toDateBuilder_.build();
          }
          if (toDateCharBuilder_ == null) {
            result.toDateChar_ = toDateChar_;
          } else {
            result.toDateChar_ = toDateCharBuilder_.build();
          }
          if (fromDateCharBuilder_ == null) {
            result.fromDateChar_ = fromDateChar_;
          } else {
            result.fromDateChar_ = fromDateCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasPredecessorTreeNodeId()) {
            mergePredecessorTreeNodeId(other.getPredecessorTreeNodeId());
          }
          if (other.hasPredecessorDescription()) {
            mergePredecessorDescription(other.getPredecessorDescription());
          }
          if (other.hasHTreeNodeId()) {
            mergeHTreeNodeId(other.getHTreeNodeId());
          }
          if (other.hasPrePredecessorDescription()) {
            mergePrePredecessorDescription(other.getPrePredecessorDescription());
          }
          if (other.hasPrePredecessorTreeNodeId()) {
            mergePrePredecessorTreeNodeId(other.getPrePredecessorTreeNodeId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasFromDate()) {
            mergeFromDate(other.getFromDate());
          }
          if (other.hasToDate()) {
            mergeToDate(other.getToDate());
          }
          if (other.hasToDateChar()) {
            mergeToDateChar(other.getToDateChar());
          }
          if (other.hasFromDateChar()) {
            mergeFromDateChar(other.getFromDateChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue predecessorTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> predecessorTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public boolean hasPredecessorTreeNodeId() {
          return predecessorTreeNodeIdBuilder_ != null || predecessorTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPredecessorTreeNodeId() {
          if (predecessorTreeNodeIdBuilder_ == null) {
            return predecessorTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorTreeNodeId_;
          } else {
            return predecessorTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder setPredecessorTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (predecessorTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessorTreeNodeId_ = value;
            onChanged();
          } else {
            predecessorTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder setPredecessorTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (predecessorTreeNodeIdBuilder_ == null) {
            predecessorTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            predecessorTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder mergePredecessorTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (predecessorTreeNodeIdBuilder_ == null) {
            if (predecessorTreeNodeId_ != null) {
              predecessorTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(predecessorTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              predecessorTreeNodeId_ = value;
            }
            onChanged();
          } else {
            predecessorTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public Builder clearPredecessorTreeNodeId() {
          if (predecessorTreeNodeIdBuilder_ == null) {
            predecessorTreeNodeId_ = null;
            onChanged();
          } else {
            predecessorTreeNodeId_ = null;
            predecessorTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPredecessorTreeNodeIdBuilder() {
          
          onChanged();
          return getPredecessorTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPredecessorTreeNodeIdOrBuilder() {
          if (predecessorTreeNodeIdBuilder_ != null) {
            return predecessorTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return predecessorTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor_tree_node_id = 10002;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPredecessorTreeNodeIdFieldBuilder() {
          if (predecessorTreeNodeIdBuilder_ == null) {
            predecessorTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPredecessorTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            predecessorTreeNodeId_ = null;
          }
          return predecessorTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue predecessorDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> predecessorDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public boolean hasPredecessorDescription() {
          return predecessorDescriptionBuilder_ != null || predecessorDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPredecessorDescription() {
          if (predecessorDescriptionBuilder_ == null) {
            return predecessorDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorDescription_;
          } else {
            return predecessorDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public Builder setPredecessorDescription(io.dstore.engine.Values.stringValue value) {
          if (predecessorDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessorDescription_ = value;
            onChanged();
          } else {
            predecessorDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public Builder setPredecessorDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (predecessorDescriptionBuilder_ == null) {
            predecessorDescription_ = builderForValue.build();
            onChanged();
          } else {
            predecessorDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public Builder mergePredecessorDescription(io.dstore.engine.Values.stringValue value) {
          if (predecessorDescriptionBuilder_ == null) {
            if (predecessorDescription_ != null) {
              predecessorDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(predecessorDescription_).mergeFrom(value).buildPartial();
            } else {
              predecessorDescription_ = value;
            }
            onChanged();
          } else {
            predecessorDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public Builder clearPredecessorDescription() {
          if (predecessorDescriptionBuilder_ == null) {
            predecessorDescription_ = null;
            onChanged();
          } else {
            predecessorDescription_ = null;
            predecessorDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPredecessorDescriptionBuilder() {
          
          onChanged();
          return getPredecessorDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPredecessorDescriptionOrBuilder() {
          if (predecessorDescriptionBuilder_ != null) {
            return predecessorDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return predecessorDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessor_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers "PredecessorTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPredecessorDescriptionFieldBuilder() {
          if (predecessorDescriptionBuilder_ == null) {
            predecessorDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPredecessorDescription(),
                    getParentForChildren(),
                    isClean());
            predecessorDescription_ = null;
          }
          return predecessorDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public boolean hasHTreeNodeId() {
          return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          } else {
            return hTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hTreeNodeId_ = value;
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public Builder setHTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (hTreeNodeId_ != null) {
              hTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              hTreeNodeId_ = value;
            }
            onChanged();
          } else {
            hTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public Builder clearHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
            onChanged();
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
          
          onChanged();
          return getHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
          if (hTreeNodeIdBuilder_ != null) {
            return hTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return hTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10004;</code>
         *
         * <pre>
         * ID eines zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView", in der die Historie des gesamten Artikelbaums abgebildet wird
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getHTreeNodeIdFieldBuilder() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            hTreeNodeId_ = null;
          }
          return hTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue prePredecessorDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> prePredecessorDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public boolean hasPrePredecessorDescription() {
          return prePredecessorDescriptionBuilder_ != null || prePredecessorDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPrePredecessorDescription() {
          if (prePredecessorDescriptionBuilder_ == null) {
            return prePredecessorDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorDescription_;
          } else {
            return prePredecessorDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public Builder setPrePredecessorDescription(io.dstore.engine.Values.stringValue value) {
          if (prePredecessorDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            prePredecessorDescription_ = value;
            onChanged();
          } else {
            prePredecessorDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public Builder setPrePredecessorDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (prePredecessorDescriptionBuilder_ == null) {
            prePredecessorDescription_ = builderForValue.build();
            onChanged();
          } else {
            prePredecessorDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public Builder mergePrePredecessorDescription(io.dstore.engine.Values.stringValue value) {
          if (prePredecessorDescriptionBuilder_ == null) {
            if (prePredecessorDescription_ != null) {
              prePredecessorDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(prePredecessorDescription_).mergeFrom(value).buildPartial();
            } else {
              prePredecessorDescription_ = value;
            }
            onChanged();
          } else {
            prePredecessorDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public Builder clearPrePredecessorDescription() {
          if (prePredecessorDescriptionBuilder_ == null) {
            prePredecessorDescription_ = null;
            onChanged();
          } else {
            prePredecessorDescription_ = null;
            prePredecessorDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPrePredecessorDescriptionBuilder() {
          
          onChanged();
          return getPrePredecessorDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorDescriptionOrBuilder() {
          if (prePredecessorDescriptionBuilder_ != null) {
            return prePredecessorDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return prePredecessorDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessor_description = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers "PrePredecessorTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPrePredecessorDescriptionFieldBuilder() {
          if (prePredecessorDescriptionBuilder_ == null) {
            prePredecessorDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPrePredecessorDescription(),
                    getParentForChildren(),
                    isClean());
            prePredecessorDescription_ = null;
          }
          return prePredecessorDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue prePredecessorTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> prePredecessorTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public boolean hasPrePredecessorTreeNodeId() {
          return prePredecessorTreeNodeIdBuilder_ != null || prePredecessorTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrePredecessorTreeNodeId() {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            return prePredecessorTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorTreeNodeId_;
          } else {
            return prePredecessorTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public Builder setPrePredecessorTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            prePredecessorTreeNodeId_ = value;
            onChanged();
          } else {
            prePredecessorTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public Builder setPrePredecessorTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            prePredecessorTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            prePredecessorTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public Builder mergePrePredecessorTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            if (prePredecessorTreeNodeId_ != null) {
              prePredecessorTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(prePredecessorTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              prePredecessorTreeNodeId_ = value;
            }
            onChanged();
          } else {
            prePredecessorTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public Builder clearPrePredecessorTreeNodeId() {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            prePredecessorTreeNodeId_ = null;
            onChanged();
          } else {
            prePredecessorTreeNodeId_ = null;
            prePredecessorTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrePredecessorTreeNodeIdBuilder() {
          
          onChanged();
          return getPrePredecessorTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorTreeNodeIdOrBuilder() {
          if (prePredecessorTreeNodeIdBuilder_ != null) {
            return prePredecessorTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return prePredecessorTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessor_tree_node_id = 10006;</code>
         *
         * <pre>
         * ID des zum Zeitpunkt "FromDate" gültigen Vorgängers von "PredecessorTreeNodeID" (siehe auch Beschreibung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrePredecessorTreeNodeIdFieldBuilder() {
          if (prePredecessorTreeNodeIdBuilder_ == null) {
            prePredecessorTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrePredecessorTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            prePredecessorTreeNodeId_ = null;
          }
          return prePredecessorTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 1" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten handelt es sich um ein Element im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * Falls "&#64;IsTreeNodeID = 0" ist, entspricht der Wert der "&#64;NodeID" bzw. einer in "tempdb.dbo.OneID" übergebenen ID, ansonsten ist es die ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.timestampValue fromDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public boolean hasFromDate() {
          return fromDateBuilder_ != null || fromDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getFromDate() {
          if (fromDateBuilder_ == null) {
            return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
          } else {
            return fromDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
          if (fromDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fromDate_ = value;
            onChanged();
          } else {
            fromDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public Builder setFromDate(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (fromDateBuilder_ == null) {
            fromDate_ = builderForValue.build();
            onChanged();
          } else {
            fromDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
          if (fromDateBuilder_ == null) {
            if (fromDate_ != null) {
              fromDate_ =
                io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
            } else {
              fromDate_ = value;
            }
            onChanged();
          } else {
            fromDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public Builder clearFromDate() {
          if (fromDateBuilder_ == null) {
            fromDate_ = null;
            onChanged();
          } else {
            fromDate_ = null;
            fromDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
          
          onChanged();
          return getFromDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
          if (fromDateBuilder_ != null) {
            return fromDateBuilder_.getMessageOrBuilder();
          } else {
            return fromDate_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue from_date = 10009;</code>
         *
         * <pre>
         * Beginn des Gültigkeitszeitraums der "HTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getFromDateFieldBuilder() {
          if (fromDateBuilder_ == null) {
            fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getFromDate(),
                    getParentForChildren(),
                    isClean());
            fromDate_ = null;
          }
          return fromDateBuilder_;
        }

        private io.dstore.engine.Values.timestampValue toDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public boolean hasToDate() {
          return toDateBuilder_ != null || toDate_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getToDate() {
          if (toDateBuilder_ == null) {
            return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
          } else {
            return toDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
          if (toDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            toDate_ = value;
            onChanged();
          } else {
            toDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public Builder setToDate(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (toDateBuilder_ == null) {
            toDate_ = builderForValue.build();
            onChanged();
          } else {
            toDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
          if (toDateBuilder_ == null) {
            if (toDate_ != null) {
              toDate_ =
                io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
            } else {
              toDate_ = value;
            }
            onChanged();
          } else {
            toDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public Builder clearToDate() {
          if (toDateBuilder_ == null) {
            toDate_ = null;
            onChanged();
          } else {
            toDate_ = null;
            toDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
          
          onChanged();
          return getToDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
          if (toDateBuilder_ != null) {
            return toDateBuilder_.getMessageOrBuilder();
          } else {
            return toDate_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue to_date = 10010;</code>
         *
         * <pre>
         * Ende des Gültigkeitszeitraums der "HTreeNodeID" - falls "NULL", ist "HTreeNodeID" aktuell noch gültig
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getToDateFieldBuilder() {
          if (toDateBuilder_ == null) {
            toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getToDate(),
                    getParentForChildren(),
                    isClean());
            toDate_ = null;
          }
          return toDateBuilder_;
        }

        private io.dstore.engine.Values.stringValue toDateChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> toDateCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public boolean hasToDateChar() {
          return toDateCharBuilder_ != null || toDateChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getToDateChar() {
          if (toDateCharBuilder_ == null) {
            return toDateChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : toDateChar_;
          } else {
            return toDateCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder setToDateChar(io.dstore.engine.Values.stringValue value) {
          if (toDateCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            toDateChar_ = value;
            onChanged();
          } else {
            toDateCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder setToDateChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (toDateCharBuilder_ == null) {
            toDateChar_ = builderForValue.build();
            onChanged();
          } else {
            toDateCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder mergeToDateChar(io.dstore.engine.Values.stringValue value) {
          if (toDateCharBuilder_ == null) {
            if (toDateChar_ != null) {
              toDateChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(toDateChar_).mergeFrom(value).buildPartial();
            } else {
              toDateChar_ = value;
            }
            onChanged();
          } else {
            toDateCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder clearToDateChar() {
          if (toDateCharBuilder_ == null) {
            toDateChar_ = null;
            onChanged();
          } else {
            toDateChar_ = null;
            toDateCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getToDateCharBuilder() {
          
          onChanged();
          return getToDateCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getToDateCharOrBuilder() {
          if (toDateCharBuilder_ != null) {
            return toDateCharBuilder_.getMessageOrBuilder();
          } else {
            return toDateChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : toDateChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue to_date_char = 10011;</code>
         *
         * <pre>
         * "ToDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getToDateCharFieldBuilder() {
          if (toDateCharBuilder_ == null) {
            toDateCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getToDateChar(),
                    getParentForChildren(),
                    isClean());
            toDateChar_ = null;
          }
          return toDateCharBuilder_;
        }

        private io.dstore.engine.Values.stringValue fromDateChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> fromDateCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public boolean hasFromDateChar() {
          return fromDateCharBuilder_ != null || fromDateChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFromDateChar() {
          if (fromDateCharBuilder_ == null) {
            return fromDateChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDateChar_;
          } else {
            return fromDateCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder setFromDateChar(io.dstore.engine.Values.stringValue value) {
          if (fromDateCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fromDateChar_ = value;
            onChanged();
          } else {
            fromDateCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder setFromDateChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (fromDateCharBuilder_ == null) {
            fromDateChar_ = builderForValue.build();
            onChanged();
          } else {
            fromDateCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder mergeFromDateChar(io.dstore.engine.Values.stringValue value) {
          if (fromDateCharBuilder_ == null) {
            if (fromDateChar_ != null) {
              fromDateChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(fromDateChar_).mergeFrom(value).buildPartial();
            } else {
              fromDateChar_ = value;
            }
            onChanged();
          } else {
            fromDateCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public Builder clearFromDateChar() {
          if (fromDateCharBuilder_ == null) {
            fromDateChar_ = null;
            onChanged();
          } else {
            fromDateChar_ = null;
            fromDateCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFromDateCharBuilder() {
          
          onChanged();
          return getFromDateCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFromDateCharOrBuilder() {
          if (fromDateCharBuilder_ != null) {
            return fromDateCharBuilder_.getMessageOrBuilder();
          } else {
            return fromDateChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : fromDateChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue from_date_char = 10012;</code>
         *
         * <pre>
         * "FromDate" als "String" im Format "05.08.2000 18:45:22"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFromDateCharFieldBuilder() {
          if (fromDateCharBuilder_ == null) {
            fromDateCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFromDateChar(),
                    getParentForChildren(),
                    isClean());
            fromDateChar_ = null;
          }
          return fromDateCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row)
      private static final io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row();
      }

      public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetHTreeNodeIDs_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetHTreeNodeIDs_Ad.Response)
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.class, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response build() {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response buildPartial() {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response result = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response other) {
        if (other == io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetHTreeNodeIDs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.Row.Builder, io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetHTreeNodeIDs_Ad.Response)
    private static final io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response();
    }

    public static io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetHTreeNodeIDsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4dstore/engine/procedures/im_GetHTreeNo" +
      "deIDs_Ad.proto\022#dstore.engine.im_GetHTre" +
      "eNodeIDs_Ad\032\032dstore/engine/values.proto\032" +
      "\031dstore/engine/error.proto\032\033dstore/engin" +
      "e/message.proto\"\260\002\n\nParameters\0223\n\007node_i" +
      "d\030\001 \001(\0132\".dstore.engine.values.integerVa" +
      "lue\022\025\n\014node_id_null\030\351\007 \001(\010\022;\n\017is_tree_no" +
      "de_id\030\002 \001(\0132\".dstore.engine.values.boole" +
      "anValue\022\035\n\024is_tree_node_id_null\030\352\007 \001(\010\022K" +
      "\n\037get_hierarchy_independent_nodes\030\003 \001(\0132",
      "\".dstore.engine.values.booleanValue\022-\n$g" +
      "et_hierarchy_independent_nodes_null\030\353\007 \001" +
      "(\010\"\263\007\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstore." +
      "engine.error.Error\022/\n\007message\030\003 \003(\0132\036.ds" +
      "tore.engine.message.Message\022>\n\003row\030\004 \003(\013" +
      "21.dstore.engine.im_GetHTreeNodeIDs_Ad.R" +
      "esponse.Row\032\212\006\n\003Row\022\017\n\006row_id\030\220N \001(\005\022<\n\020" +
      "node_description\030\221N \001(\0132!.dstore.engine." +
      "values.stringValue\022E\n\030predecessor_tree_n" +
      "ode_id\030\222N \001(\0132\".dstore.engine.values.int",
      "egerValue\022C\n\027predecessor_description\030\223N " +
      "\001(\0132!.dstore.engine.values.stringValue\022;" +
      "\n\016h_tree_node_id\030\224N \001(\0132\".dstore.engine." +
      "values.integerValue\022G\n\033pre_predecessor_d" +
      "escription\030\225N \001(\0132!.dstore.engine.values" +
      ".stringValue\022I\n\034pre_predecessor_tree_nod" +
      "e_id\030\226N \001(\0132\".dstore.engine.values.integ" +
      "erValue\0229\n\014tree_node_id\030\227N \001(\0132\".dstore." +
      "engine.values.integerValue\0224\n\007node_id\030\230N" +
      " \001(\0132\".dstore.engine.values.integerValue",
      "\0228\n\tfrom_date\030\231N \001(\0132$.dstore.engine.val" +
      "ues.timestampValue\0226\n\007to_date\030\232N \001(\0132$.d" +
      "store.engine.values.timestampValue\0228\n\014to" +
      "_date_char\030\233N \001(\0132!.dstore.engine.values" +
      ".stringValue\022:\n\016from_date_char\030\234N \001(\0132!." +
      "dstore.engine.values.stringValueB\030\n\026io.d" +
      "store.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Parameters_descriptor,
        new java.lang.String[] { "NodeId", "NodeIdNull", "IsTreeNodeId", "IsTreeNodeIdNull", "GetHierarchyIndependentNodes", "GetHierarchyIndependentNodesNull", });
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetHTreeNodeIDs_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "NodeDescription", "PredecessorTreeNodeId", "PredecessorDescription", "HTreeNodeId", "PrePredecessorDescription", "PrePredecessorTreeNodeId", "TreeNodeId", "NodeId", "FromDate", "ToDate", "ToDateChar", "FromDateChar", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
