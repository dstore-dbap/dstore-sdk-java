// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_ExportOrders_Ad.proto

package io.dstore.engine.procs;

public final class OmExportOrdersAd {
  private OmExportOrdersAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_ExportOrders_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    boolean hasFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    io.dstore.engine.Values.timestampValue getFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

    /**
     * <code>optional bool from_date_null = 1001;</code>
     */
    boolean getFromDateNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    boolean hasToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValue getToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

    /**
     * <code>optional bool to_date_null = 1002;</code>
     */
    boolean getToDateNull();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    boolean hasNodeCharacteristicId1();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId1();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId1OrBuilder();

    /**
     * <code>optional bool node_characteristic_id1_null = 1003;</code>
     */
    boolean getNodeCharacteristicId1Null();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    boolean hasNodeCharacteristicId2();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId2();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId2OrBuilder();

    /**
     * <code>optional bool node_characteristic_id2_null = 1004;</code>
     */
    boolean getNodeCharacteristicId2Null();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    boolean hasNodeCharacteristicId3();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId3();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId3OrBuilder();

    /**
     * <code>optional bool node_characteristic_id3_null = 1005;</code>
     */
    boolean getNodeCharacteristicId3Null();

    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    boolean hasSkipOHavingDifferentOStates();
    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    io.dstore.engine.Values.booleanValue getSkipOHavingDifferentOStates();
    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getSkipOHavingDifferentOStatesOrBuilder();

    /**
     * <code>optional bool skip_o_having_different_o_states_null = 1006;</code>
     */
    boolean getSkipOHavingDifferentOStatesNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    boolean hasGetAllPositionsOfOrder();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    io.dstore.engine.Values.booleanValue getGetAllPositionsOfOrder();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetAllPositionsOfOrderOrBuilder();

    /**
     * <code>optional bool get_all_positions_of_order_null = 1007;</code>
     */
    boolean getGetAllPositionsOfOrderNull();

    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    boolean hasMaxNumberOfOrders();
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    io.dstore.engine.Values.integerValue getMaxNumberOfOrders();
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfOrdersOrBuilder();

    /**
     * <code>optional bool max_number_of_orders_null = 1008;</code>
     */
    boolean getMaxNumberOfOrdersNull();

    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    boolean hasIncludeOrdersWithOrderNo();
    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    io.dstore.engine.Values.integerValue getIncludeOrdersWithOrderNo();
    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getIncludeOrdersWithOrderNoOrBuilder();

    /**
     * <code>optional bool include_orders_with_order_no_null = 1009;</code>
     */
    boolean getIncludeOrdersWithOrderNoNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    boolean hasGetActualItemInfo();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    io.dstore.engine.Values.booleanValue getGetActualItemInfo();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetActualItemInfoOrBuilder();

    /**
     * <code>optional bool get_actual_item_info_null = 1010;</code>
     */
    boolean getGetActualItemInfoNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_ExportOrders_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      fromDateNull_ = false;
      toDateNull_ = false;
      nodeCharacteristicId1Null_ = false;
      nodeCharacteristicId2Null_ = false;
      nodeCharacteristicId3Null_ = false;
      skipOHavingDifferentOStatesNull_ = false;
      getAllPositionsOfOrderNull_ = false;
      maxNumberOfOrdersNull_ = false;
      includeOrdersWithOrderNoNull_ = false;
      getActualItemInfoNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (fromDate_ != null) {
                subBuilder = fromDate_.toBuilder();
              }
              fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromDate_);
                fromDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (toDate_ != null) {
                subBuilder = toDate_.toBuilder();
              }
              toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toDate_);
                toDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId1_ != null) {
                subBuilder = nodeCharacteristicId1_.toBuilder();
              }
              nodeCharacteristicId1_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId1_);
                nodeCharacteristicId1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId2_ != null) {
                subBuilder = nodeCharacteristicId2_.toBuilder();
              }
              nodeCharacteristicId2_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId2_);
                nodeCharacteristicId2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId3_ != null) {
                subBuilder = nodeCharacteristicId3_.toBuilder();
              }
              nodeCharacteristicId3_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId3_);
                nodeCharacteristicId3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (skipOHavingDifferentOStates_ != null) {
                subBuilder = skipOHavingDifferentOStates_.toBuilder();
              }
              skipOHavingDifferentOStates_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(skipOHavingDifferentOStates_);
                skipOHavingDifferentOStates_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getAllPositionsOfOrder_ != null) {
                subBuilder = getAllPositionsOfOrder_.toBuilder();
              }
              getAllPositionsOfOrder_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAllPositionsOfOrder_);
                getAllPositionsOfOrder_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (maxNumberOfOrders_ != null) {
                subBuilder = maxNumberOfOrders_.toBuilder();
              }
              maxNumberOfOrders_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxNumberOfOrders_);
                maxNumberOfOrders_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (includeOrdersWithOrderNo_ != null) {
                subBuilder = includeOrdersWithOrderNo_.toBuilder();
              }
              includeOrdersWithOrderNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includeOrdersWithOrderNo_);
                includeOrdersWithOrderNo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getActualItemInfo_ != null) {
                subBuilder = getActualItemInfo_.toBuilder();
              }
              getActualItemInfo_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getActualItemInfo_);
                getActualItemInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              fromDateNull_ = input.readBool();
              break;
            }
            case 8016: {

              toDateNull_ = input.readBool();
              break;
            }
            case 8024: {

              nodeCharacteristicId1Null_ = input.readBool();
              break;
            }
            case 8032: {

              nodeCharacteristicId2Null_ = input.readBool();
              break;
            }
            case 8040: {

              nodeCharacteristicId3Null_ = input.readBool();
              break;
            }
            case 8048: {

              skipOHavingDifferentOStatesNull_ = input.readBool();
              break;
            }
            case 8056: {

              getAllPositionsOfOrderNull_ = input.readBool();
              break;
            }
            case 8064: {

              maxNumberOfOrdersNull_ = input.readBool();
              break;
            }
            case 8072: {

              includeOrdersWithOrderNoNull_ = input.readBool();
              break;
            }
            case 8080: {

              getActualItemInfoNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmExportOrdersAd.Parameters.class, io.dstore.engine.procs.OmExportOrdersAd.Parameters.Builder.class);
    }

    public static final int FROM_DATE_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.timestampValue fromDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    public boolean hasFromDate() {
      return fromDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    public io.dstore.engine.Values.timestampValue getFromDate() {
      return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
      return getFromDate();
    }

    public static final int FROM_DATE_NULL_FIELD_NUMBER = 1001;
    private boolean fromDateNull_;
    /**
     * <code>optional bool from_date_null = 1001;</code>
     */
    public boolean getFromDateNull() {
      return fromDateNull_;
    }

    public static final int TO_DATE_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.timestampValue toDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    public boolean hasToDate() {
      return toDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValue getToDate() {
      return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
      return getToDate();
    }

    public static final int TO_DATE_NULL_FIELD_NUMBER = 1002;
    private boolean toDateNull_;
    /**
     * <code>optional bool to_date_null = 1002;</code>
     */
    public boolean getToDateNull() {
      return toDateNull_;
    }

    public static final int NODE_CHARACTERISTIC_ID1_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId1_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    public boolean hasNodeCharacteristicId1() {
      return nodeCharacteristicId1_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId1() {
      return nodeCharacteristicId1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId1_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId1OrBuilder() {
      return getNodeCharacteristicId1();
    }

    public static final int NODE_CHARACTERISTIC_ID1_NULL_FIELD_NUMBER = 1003;
    private boolean nodeCharacteristicId1Null_;
    /**
     * <code>optional bool node_characteristic_id1_null = 1003;</code>
     */
    public boolean getNodeCharacteristicId1Null() {
      return nodeCharacteristicId1Null_;
    }

    public static final int NODE_CHARACTERISTIC_ID2_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId2_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    public boolean hasNodeCharacteristicId2() {
      return nodeCharacteristicId2_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId2() {
      return nodeCharacteristicId2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId2_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId2OrBuilder() {
      return getNodeCharacteristicId2();
    }

    public static final int NODE_CHARACTERISTIC_ID2_NULL_FIELD_NUMBER = 1004;
    private boolean nodeCharacteristicId2Null_;
    /**
     * <code>optional bool node_characteristic_id2_null = 1004;</code>
     */
    public boolean getNodeCharacteristicId2Null() {
      return nodeCharacteristicId2Null_;
    }

    public static final int NODE_CHARACTERISTIC_ID3_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId3_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    public boolean hasNodeCharacteristicId3() {
      return nodeCharacteristicId3_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId3() {
      return nodeCharacteristicId3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId3_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId3OrBuilder() {
      return getNodeCharacteristicId3();
    }

    public static final int NODE_CHARACTERISTIC_ID3_NULL_FIELD_NUMBER = 1005;
    private boolean nodeCharacteristicId3Null_;
    /**
     * <code>optional bool node_characteristic_id3_null = 1005;</code>
     */
    public boolean getNodeCharacteristicId3Null() {
      return nodeCharacteristicId3Null_;
    }

    public static final int SKIP_O_HAVING_DIFFERENT_O_STATES_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.booleanValue skipOHavingDifferentOStates_;
    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    public boolean hasSkipOHavingDifferentOStates() {
      return skipOHavingDifferentOStates_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    public io.dstore.engine.Values.booleanValue getSkipOHavingDifferentOStates() {
      return skipOHavingDifferentOStates_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : skipOHavingDifferentOStates_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getSkipOHavingDifferentOStatesOrBuilder() {
      return getSkipOHavingDifferentOStates();
    }

    public static final int SKIP_O_HAVING_DIFFERENT_O_STATES_NULL_FIELD_NUMBER = 1006;
    private boolean skipOHavingDifferentOStatesNull_;
    /**
     * <code>optional bool skip_o_having_different_o_states_null = 1006;</code>
     */
    public boolean getSkipOHavingDifferentOStatesNull() {
      return skipOHavingDifferentOStatesNull_;
    }

    public static final int GET_ALL_POSITIONS_OF_ORDER_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.booleanValue getAllPositionsOfOrder_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    public boolean hasGetAllPositionsOfOrder() {
      return getAllPositionsOfOrder_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetAllPositionsOfOrder() {
      return getAllPositionsOfOrder_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAllPositionsOfOrder_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetAllPositionsOfOrderOrBuilder() {
      return getGetAllPositionsOfOrder();
    }

    public static final int GET_ALL_POSITIONS_OF_ORDER_NULL_FIELD_NUMBER = 1007;
    private boolean getAllPositionsOfOrderNull_;
    /**
     * <code>optional bool get_all_positions_of_order_null = 1007;</code>
     */
    public boolean getGetAllPositionsOfOrderNull() {
      return getAllPositionsOfOrderNull_;
    }

    public static final int MAX_NUMBER_OF_ORDERS_FIELD_NUMBER = 8;
    private io.dstore.engine.Values.integerValue maxNumberOfOrders_;
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    public boolean hasMaxNumberOfOrders() {
      return maxNumberOfOrders_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    public io.dstore.engine.Values.integerValue getMaxNumberOfOrders() {
      return maxNumberOfOrders_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfOrders_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfOrdersOrBuilder() {
      return getMaxNumberOfOrders();
    }

    public static final int MAX_NUMBER_OF_ORDERS_NULL_FIELD_NUMBER = 1008;
    private boolean maxNumberOfOrdersNull_;
    /**
     * <code>optional bool max_number_of_orders_null = 1008;</code>
     */
    public boolean getMaxNumberOfOrdersNull() {
      return maxNumberOfOrdersNull_;
    }

    public static final int INCLUDE_ORDERS_WITH_ORDER_NO_FIELD_NUMBER = 9;
    private io.dstore.engine.Values.integerValue includeOrdersWithOrderNo_;
    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    public boolean hasIncludeOrdersWithOrderNo() {
      return includeOrdersWithOrderNo_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    public io.dstore.engine.Values.integerValue getIncludeOrdersWithOrderNo() {
      return includeOrdersWithOrderNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : includeOrdersWithOrderNo_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getIncludeOrdersWithOrderNoOrBuilder() {
      return getIncludeOrdersWithOrderNo();
    }

    public static final int INCLUDE_ORDERS_WITH_ORDER_NO_NULL_FIELD_NUMBER = 1009;
    private boolean includeOrdersWithOrderNoNull_;
    /**
     * <code>optional bool include_orders_with_order_no_null = 1009;</code>
     */
    public boolean getIncludeOrdersWithOrderNoNull() {
      return includeOrdersWithOrderNoNull_;
    }

    public static final int GET_ACTUAL_ITEM_INFO_FIELD_NUMBER = 10;
    private io.dstore.engine.Values.booleanValue getActualItemInfo_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    public boolean hasGetActualItemInfo() {
      return getActualItemInfo_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetActualItemInfo() {
      return getActualItemInfo_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualItemInfo_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetActualItemInfoOrBuilder() {
      return getGetActualItemInfo();
    }

    public static final int GET_ACTUAL_ITEM_INFO_NULL_FIELD_NUMBER = 1010;
    private boolean getActualItemInfoNull_;
    /**
     * <code>optional bool get_actual_item_info_null = 1010;</code>
     */
    public boolean getGetActualItemInfoNull() {
      return getActualItemInfoNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fromDate_ != null) {
        output.writeMessage(1, getFromDate());
      }
      if (toDate_ != null) {
        output.writeMessage(2, getToDate());
      }
      if (nodeCharacteristicId1_ != null) {
        output.writeMessage(3, getNodeCharacteristicId1());
      }
      if (nodeCharacteristicId2_ != null) {
        output.writeMessage(4, getNodeCharacteristicId2());
      }
      if (nodeCharacteristicId3_ != null) {
        output.writeMessage(5, getNodeCharacteristicId3());
      }
      if (skipOHavingDifferentOStates_ != null) {
        output.writeMessage(6, getSkipOHavingDifferentOStates());
      }
      if (getAllPositionsOfOrder_ != null) {
        output.writeMessage(7, getGetAllPositionsOfOrder());
      }
      if (maxNumberOfOrders_ != null) {
        output.writeMessage(8, getMaxNumberOfOrders());
      }
      if (includeOrdersWithOrderNo_ != null) {
        output.writeMessage(9, getIncludeOrdersWithOrderNo());
      }
      if (getActualItemInfo_ != null) {
        output.writeMessage(10, getGetActualItemInfo());
      }
      if (fromDateNull_ != false) {
        output.writeBool(1001, fromDateNull_);
      }
      if (toDateNull_ != false) {
        output.writeBool(1002, toDateNull_);
      }
      if (nodeCharacteristicId1Null_ != false) {
        output.writeBool(1003, nodeCharacteristicId1Null_);
      }
      if (nodeCharacteristicId2Null_ != false) {
        output.writeBool(1004, nodeCharacteristicId2Null_);
      }
      if (nodeCharacteristicId3Null_ != false) {
        output.writeBool(1005, nodeCharacteristicId3Null_);
      }
      if (skipOHavingDifferentOStatesNull_ != false) {
        output.writeBool(1006, skipOHavingDifferentOStatesNull_);
      }
      if (getAllPositionsOfOrderNull_ != false) {
        output.writeBool(1007, getAllPositionsOfOrderNull_);
      }
      if (maxNumberOfOrdersNull_ != false) {
        output.writeBool(1008, maxNumberOfOrdersNull_);
      }
      if (includeOrdersWithOrderNoNull_ != false) {
        output.writeBool(1009, includeOrdersWithOrderNoNull_);
      }
      if (getActualItemInfoNull_ != false) {
        output.writeBool(1010, getActualItemInfoNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (fromDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFromDate());
      }
      if (toDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getToDate());
      }
      if (nodeCharacteristicId1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getNodeCharacteristicId1());
      }
      if (nodeCharacteristicId2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getNodeCharacteristicId2());
      }
      if (nodeCharacteristicId3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getNodeCharacteristicId3());
      }
      if (skipOHavingDifferentOStates_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSkipOHavingDifferentOStates());
      }
      if (getAllPositionsOfOrder_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getGetAllPositionsOfOrder());
      }
      if (maxNumberOfOrders_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMaxNumberOfOrders());
      }
      if (includeOrdersWithOrderNo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getIncludeOrdersWithOrderNo());
      }
      if (getActualItemInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getGetActualItemInfo());
      }
      if (fromDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, fromDateNull_);
      }
      if (toDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, toDateNull_);
      }
      if (nodeCharacteristicId1Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, nodeCharacteristicId1Null_);
      }
      if (nodeCharacteristicId2Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, nodeCharacteristicId2Null_);
      }
      if (nodeCharacteristicId3Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, nodeCharacteristicId3Null_);
      }
      if (skipOHavingDifferentOStatesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, skipOHavingDifferentOStatesNull_);
      }
      if (getAllPositionsOfOrderNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, getAllPositionsOfOrderNull_);
      }
      if (maxNumberOfOrdersNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, maxNumberOfOrdersNull_);
      }
      if (includeOrdersWithOrderNoNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1009, includeOrdersWithOrderNoNull_);
      }
      if (getActualItemInfoNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1010, getActualItemInfoNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmExportOrdersAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_ExportOrders_Ad.Parameters)
        io.dstore.engine.procs.OmExportOrdersAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmExportOrdersAd.Parameters.class, io.dstore.engine.procs.OmExportOrdersAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmExportOrdersAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }
        fromDateNull_ = false;

        if (toDateBuilder_ == null) {
          toDate_ = null;
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }
        toDateNull_ = false;

        if (nodeCharacteristicId1Builder_ == null) {
          nodeCharacteristicId1_ = null;
        } else {
          nodeCharacteristicId1_ = null;
          nodeCharacteristicId1Builder_ = null;
        }
        nodeCharacteristicId1Null_ = false;

        if (nodeCharacteristicId2Builder_ == null) {
          nodeCharacteristicId2_ = null;
        } else {
          nodeCharacteristicId2_ = null;
          nodeCharacteristicId2Builder_ = null;
        }
        nodeCharacteristicId2Null_ = false;

        if (nodeCharacteristicId3Builder_ == null) {
          nodeCharacteristicId3_ = null;
        } else {
          nodeCharacteristicId3_ = null;
          nodeCharacteristicId3Builder_ = null;
        }
        nodeCharacteristicId3Null_ = false;

        if (skipOHavingDifferentOStatesBuilder_ == null) {
          skipOHavingDifferentOStates_ = null;
        } else {
          skipOHavingDifferentOStates_ = null;
          skipOHavingDifferentOStatesBuilder_ = null;
        }
        skipOHavingDifferentOStatesNull_ = false;

        if (getAllPositionsOfOrderBuilder_ == null) {
          getAllPositionsOfOrder_ = null;
        } else {
          getAllPositionsOfOrder_ = null;
          getAllPositionsOfOrderBuilder_ = null;
        }
        getAllPositionsOfOrderNull_ = false;

        if (maxNumberOfOrdersBuilder_ == null) {
          maxNumberOfOrders_ = null;
        } else {
          maxNumberOfOrders_ = null;
          maxNumberOfOrdersBuilder_ = null;
        }
        maxNumberOfOrdersNull_ = false;

        if (includeOrdersWithOrderNoBuilder_ == null) {
          includeOrdersWithOrderNo_ = null;
        } else {
          includeOrdersWithOrderNo_ = null;
          includeOrdersWithOrderNoBuilder_ = null;
        }
        includeOrdersWithOrderNoNull_ = false;

        if (getActualItemInfoBuilder_ == null) {
          getActualItemInfo_ = null;
        } else {
          getActualItemInfo_ = null;
          getActualItemInfoBuilder_ = null;
        }
        getActualItemInfoNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmExportOrdersAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Parameters build() {
        io.dstore.engine.procs.OmExportOrdersAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Parameters buildPartial() {
        io.dstore.engine.procs.OmExportOrdersAd.Parameters result = new io.dstore.engine.procs.OmExportOrdersAd.Parameters(this);
        if (fromDateBuilder_ == null) {
          result.fromDate_ = fromDate_;
        } else {
          result.fromDate_ = fromDateBuilder_.build();
        }
        result.fromDateNull_ = fromDateNull_;
        if (toDateBuilder_ == null) {
          result.toDate_ = toDate_;
        } else {
          result.toDate_ = toDateBuilder_.build();
        }
        result.toDateNull_ = toDateNull_;
        if (nodeCharacteristicId1Builder_ == null) {
          result.nodeCharacteristicId1_ = nodeCharacteristicId1_;
        } else {
          result.nodeCharacteristicId1_ = nodeCharacteristicId1Builder_.build();
        }
        result.nodeCharacteristicId1Null_ = nodeCharacteristicId1Null_;
        if (nodeCharacteristicId2Builder_ == null) {
          result.nodeCharacteristicId2_ = nodeCharacteristicId2_;
        } else {
          result.nodeCharacteristicId2_ = nodeCharacteristicId2Builder_.build();
        }
        result.nodeCharacteristicId2Null_ = nodeCharacteristicId2Null_;
        if (nodeCharacteristicId3Builder_ == null) {
          result.nodeCharacteristicId3_ = nodeCharacteristicId3_;
        } else {
          result.nodeCharacteristicId3_ = nodeCharacteristicId3Builder_.build();
        }
        result.nodeCharacteristicId3Null_ = nodeCharacteristicId3Null_;
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          result.skipOHavingDifferentOStates_ = skipOHavingDifferentOStates_;
        } else {
          result.skipOHavingDifferentOStates_ = skipOHavingDifferentOStatesBuilder_.build();
        }
        result.skipOHavingDifferentOStatesNull_ = skipOHavingDifferentOStatesNull_;
        if (getAllPositionsOfOrderBuilder_ == null) {
          result.getAllPositionsOfOrder_ = getAllPositionsOfOrder_;
        } else {
          result.getAllPositionsOfOrder_ = getAllPositionsOfOrderBuilder_.build();
        }
        result.getAllPositionsOfOrderNull_ = getAllPositionsOfOrderNull_;
        if (maxNumberOfOrdersBuilder_ == null) {
          result.maxNumberOfOrders_ = maxNumberOfOrders_;
        } else {
          result.maxNumberOfOrders_ = maxNumberOfOrdersBuilder_.build();
        }
        result.maxNumberOfOrdersNull_ = maxNumberOfOrdersNull_;
        if (includeOrdersWithOrderNoBuilder_ == null) {
          result.includeOrdersWithOrderNo_ = includeOrdersWithOrderNo_;
        } else {
          result.includeOrdersWithOrderNo_ = includeOrdersWithOrderNoBuilder_.build();
        }
        result.includeOrdersWithOrderNoNull_ = includeOrdersWithOrderNoNull_;
        if (getActualItemInfoBuilder_ == null) {
          result.getActualItemInfo_ = getActualItemInfo_;
        } else {
          result.getActualItemInfo_ = getActualItemInfoBuilder_.build();
        }
        result.getActualItemInfoNull_ = getActualItemInfoNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmExportOrdersAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmExportOrdersAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmExportOrdersAd.Parameters other) {
        if (other == io.dstore.engine.procs.OmExportOrdersAd.Parameters.getDefaultInstance()) return this;
        if (other.hasFromDate()) {
          mergeFromDate(other.getFromDate());
        }
        if (other.getFromDateNull() != false) {
          setFromDateNull(other.getFromDateNull());
        }
        if (other.hasToDate()) {
          mergeToDate(other.getToDate());
        }
        if (other.getToDateNull() != false) {
          setToDateNull(other.getToDateNull());
        }
        if (other.hasNodeCharacteristicId1()) {
          mergeNodeCharacteristicId1(other.getNodeCharacteristicId1());
        }
        if (other.getNodeCharacteristicId1Null() != false) {
          setNodeCharacteristicId1Null(other.getNodeCharacteristicId1Null());
        }
        if (other.hasNodeCharacteristicId2()) {
          mergeNodeCharacteristicId2(other.getNodeCharacteristicId2());
        }
        if (other.getNodeCharacteristicId2Null() != false) {
          setNodeCharacteristicId2Null(other.getNodeCharacteristicId2Null());
        }
        if (other.hasNodeCharacteristicId3()) {
          mergeNodeCharacteristicId3(other.getNodeCharacteristicId3());
        }
        if (other.getNodeCharacteristicId3Null() != false) {
          setNodeCharacteristicId3Null(other.getNodeCharacteristicId3Null());
        }
        if (other.hasSkipOHavingDifferentOStates()) {
          mergeSkipOHavingDifferentOStates(other.getSkipOHavingDifferentOStates());
        }
        if (other.getSkipOHavingDifferentOStatesNull() != false) {
          setSkipOHavingDifferentOStatesNull(other.getSkipOHavingDifferentOStatesNull());
        }
        if (other.hasGetAllPositionsOfOrder()) {
          mergeGetAllPositionsOfOrder(other.getGetAllPositionsOfOrder());
        }
        if (other.getGetAllPositionsOfOrderNull() != false) {
          setGetAllPositionsOfOrderNull(other.getGetAllPositionsOfOrderNull());
        }
        if (other.hasMaxNumberOfOrders()) {
          mergeMaxNumberOfOrders(other.getMaxNumberOfOrders());
        }
        if (other.getMaxNumberOfOrdersNull() != false) {
          setMaxNumberOfOrdersNull(other.getMaxNumberOfOrdersNull());
        }
        if (other.hasIncludeOrdersWithOrderNo()) {
          mergeIncludeOrdersWithOrderNo(other.getIncludeOrdersWithOrderNo());
        }
        if (other.getIncludeOrdersWithOrderNoNull() != false) {
          setIncludeOrdersWithOrderNoNull(other.getIncludeOrdersWithOrderNoNull());
        }
        if (other.hasGetActualItemInfo()) {
          mergeGetActualItemInfo(other.getGetActualItemInfo());
        }
        if (other.getGetActualItemInfoNull() != false) {
          setGetActualItemInfoNull(other.getGetActualItemInfoNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmExportOrdersAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmExportOrdersAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.timestampValue fromDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public boolean hasFromDate() {
        return fromDateBuilder_ != null || fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        if (fromDateBuilder_ == null) {
          return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        } else {
          return fromDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromDate_ = value;
          onChanged();
        } else {
          fromDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public Builder setFromDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (fromDateBuilder_ == null) {
          fromDate_ = builderForValue.build();
          onChanged();
        } else {
          fromDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (fromDate_ != null) {
            fromDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
          } else {
            fromDate_ = value;
          }
          onChanged();
        } else {
          fromDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public Builder clearFromDate() {
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
          onChanged();
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
        
        onChanged();
        return getFromDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        if (fromDateBuilder_ != null) {
          return fromDateBuilder_.getMessageOrBuilder();
        } else {
          return fromDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getFromDateFieldBuilder() {
        if (fromDateBuilder_ == null) {
          fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getFromDate(),
                  getParentForChildren(),
                  isClean());
          fromDate_ = null;
        }
        return fromDateBuilder_;
      }

      private boolean fromDateNull_ ;
      /**
       * <code>optional bool from_date_null = 1001;</code>
       */
      public boolean getFromDateNull() {
        return fromDateNull_;
      }
      /**
       * <code>optional bool from_date_null = 1001;</code>
       */
      public Builder setFromDateNull(boolean value) {
        
        fromDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_date_null = 1001;</code>
       */
      public Builder clearFromDateNull() {
        
        fromDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue toDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public boolean hasToDate() {
        return toDateBuilder_ != null || toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        if (toDateBuilder_ == null) {
          return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        } else {
          return toDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toDate_ = value;
          onChanged();
        } else {
          toDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public Builder setToDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (toDateBuilder_ == null) {
          toDate_ = builderForValue.build();
          onChanged();
        } else {
          toDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (toDate_ != null) {
            toDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
          } else {
            toDate_ = value;
          }
          onChanged();
        } else {
          toDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public Builder clearToDate() {
        if (toDateBuilder_ == null) {
          toDate_ = null;
          onChanged();
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
        
        onChanged();
        return getToDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        if (toDateBuilder_ != null) {
          return toDateBuilder_.getMessageOrBuilder();
        } else {
          return toDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getToDateFieldBuilder() {
        if (toDateBuilder_ == null) {
          toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getToDate(),
                  getParentForChildren(),
                  isClean());
          toDate_ = null;
        }
        return toDateBuilder_;
      }

      private boolean toDateNull_ ;
      /**
       * <code>optional bool to_date_null = 1002;</code>
       */
      public boolean getToDateNull() {
        return toDateNull_;
      }
      /**
       * <code>optional bool to_date_null = 1002;</code>
       */
      public Builder setToDateNull(boolean value) {
        
        toDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool to_date_null = 1002;</code>
       */
      public Builder clearToDateNull() {
        
        toDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId1_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicId1Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public boolean hasNodeCharacteristicId1() {
        return nodeCharacteristicId1Builder_ != null || nodeCharacteristicId1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId1() {
        if (nodeCharacteristicId1Builder_ == null) {
          return nodeCharacteristicId1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId1_;
        } else {
          return nodeCharacteristicId1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public Builder setNodeCharacteristicId1(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId1_ = value;
          onChanged();
        } else {
          nodeCharacteristicId1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public Builder setNodeCharacteristicId1(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicId1Builder_ == null) {
          nodeCharacteristicId1_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicId1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public Builder mergeNodeCharacteristicId1(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId1Builder_ == null) {
          if (nodeCharacteristicId1_ != null) {
            nodeCharacteristicId1_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId1_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId1_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicId1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public Builder clearNodeCharacteristicId1() {
        if (nodeCharacteristicId1Builder_ == null) {
          nodeCharacteristicId1_ = null;
          onChanged();
        } else {
          nodeCharacteristicId1_ = null;
          nodeCharacteristicId1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicId1Builder() {
        
        onChanged();
        return getNodeCharacteristicId1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId1OrBuilder() {
        if (nodeCharacteristicId1Builder_ != null) {
          return nodeCharacteristicId1Builder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId1_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId1_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id1 = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicId1FieldBuilder() {
        if (nodeCharacteristicId1Builder_ == null) {
          nodeCharacteristicId1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId1(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId1_ = null;
        }
        return nodeCharacteristicId1Builder_;
      }

      private boolean nodeCharacteristicId1Null_ ;
      /**
       * <code>optional bool node_characteristic_id1_null = 1003;</code>
       */
      public boolean getNodeCharacteristicId1Null() {
        return nodeCharacteristicId1Null_;
      }
      /**
       * <code>optional bool node_characteristic_id1_null = 1003;</code>
       */
      public Builder setNodeCharacteristicId1Null(boolean value) {
        
        nodeCharacteristicId1Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id1_null = 1003;</code>
       */
      public Builder clearNodeCharacteristicId1Null() {
        
        nodeCharacteristicId1Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId2_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicId2Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public boolean hasNodeCharacteristicId2() {
        return nodeCharacteristicId2Builder_ != null || nodeCharacteristicId2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId2() {
        if (nodeCharacteristicId2Builder_ == null) {
          return nodeCharacteristicId2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId2_;
        } else {
          return nodeCharacteristicId2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public Builder setNodeCharacteristicId2(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId2_ = value;
          onChanged();
        } else {
          nodeCharacteristicId2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public Builder setNodeCharacteristicId2(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicId2Builder_ == null) {
          nodeCharacteristicId2_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicId2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public Builder mergeNodeCharacteristicId2(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId2Builder_ == null) {
          if (nodeCharacteristicId2_ != null) {
            nodeCharacteristicId2_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId2_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId2_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicId2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public Builder clearNodeCharacteristicId2() {
        if (nodeCharacteristicId2Builder_ == null) {
          nodeCharacteristicId2_ = null;
          onChanged();
        } else {
          nodeCharacteristicId2_ = null;
          nodeCharacteristicId2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicId2Builder() {
        
        onChanged();
        return getNodeCharacteristicId2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId2OrBuilder() {
        if (nodeCharacteristicId2Builder_ != null) {
          return nodeCharacteristicId2Builder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId2_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId2_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id2 = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicId2FieldBuilder() {
        if (nodeCharacteristicId2Builder_ == null) {
          nodeCharacteristicId2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId2(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId2_ = null;
        }
        return nodeCharacteristicId2Builder_;
      }

      private boolean nodeCharacteristicId2Null_ ;
      /**
       * <code>optional bool node_characteristic_id2_null = 1004;</code>
       */
      public boolean getNodeCharacteristicId2Null() {
        return nodeCharacteristicId2Null_;
      }
      /**
       * <code>optional bool node_characteristic_id2_null = 1004;</code>
       */
      public Builder setNodeCharacteristicId2Null(boolean value) {
        
        nodeCharacteristicId2Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id2_null = 1004;</code>
       */
      public Builder clearNodeCharacteristicId2Null() {
        
        nodeCharacteristicId2Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId3_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicId3Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public boolean hasNodeCharacteristicId3() {
        return nodeCharacteristicId3Builder_ != null || nodeCharacteristicId3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId3() {
        if (nodeCharacteristicId3Builder_ == null) {
          return nodeCharacteristicId3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId3_;
        } else {
          return nodeCharacteristicId3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public Builder setNodeCharacteristicId3(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId3_ = value;
          onChanged();
        } else {
          nodeCharacteristicId3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public Builder setNodeCharacteristicId3(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicId3Builder_ == null) {
          nodeCharacteristicId3_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicId3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public Builder mergeNodeCharacteristicId3(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicId3Builder_ == null) {
          if (nodeCharacteristicId3_ != null) {
            nodeCharacteristicId3_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId3_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId3_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicId3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public Builder clearNodeCharacteristicId3() {
        if (nodeCharacteristicId3Builder_ == null) {
          nodeCharacteristicId3_ = null;
          onChanged();
        } else {
          nodeCharacteristicId3_ = null;
          nodeCharacteristicId3Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicId3Builder() {
        
        onChanged();
        return getNodeCharacteristicId3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicId3OrBuilder() {
        if (nodeCharacteristicId3Builder_ != null) {
          return nodeCharacteristicId3Builder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId3_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId3_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id3 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicId3FieldBuilder() {
        if (nodeCharacteristicId3Builder_ == null) {
          nodeCharacteristicId3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId3(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId3_ = null;
        }
        return nodeCharacteristicId3Builder_;
      }

      private boolean nodeCharacteristicId3Null_ ;
      /**
       * <code>optional bool node_characteristic_id3_null = 1005;</code>
       */
      public boolean getNodeCharacteristicId3Null() {
        return nodeCharacteristicId3Null_;
      }
      /**
       * <code>optional bool node_characteristic_id3_null = 1005;</code>
       */
      public Builder setNodeCharacteristicId3Null(boolean value) {
        
        nodeCharacteristicId3Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id3_null = 1005;</code>
       */
      public Builder clearNodeCharacteristicId3Null() {
        
        nodeCharacteristicId3Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue skipOHavingDifferentOStates_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> skipOHavingDifferentOStatesBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public boolean hasSkipOHavingDifferentOStates() {
        return skipOHavingDifferentOStatesBuilder_ != null || skipOHavingDifferentOStates_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public io.dstore.engine.Values.booleanValue getSkipOHavingDifferentOStates() {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          return skipOHavingDifferentOStates_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : skipOHavingDifferentOStates_;
        } else {
          return skipOHavingDifferentOStatesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public Builder setSkipOHavingDifferentOStates(io.dstore.engine.Values.booleanValue value) {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          skipOHavingDifferentOStates_ = value;
          onChanged();
        } else {
          skipOHavingDifferentOStatesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public Builder setSkipOHavingDifferentOStates(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          skipOHavingDifferentOStates_ = builderForValue.build();
          onChanged();
        } else {
          skipOHavingDifferentOStatesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public Builder mergeSkipOHavingDifferentOStates(io.dstore.engine.Values.booleanValue value) {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          if (skipOHavingDifferentOStates_ != null) {
            skipOHavingDifferentOStates_ =
              io.dstore.engine.Values.booleanValue.newBuilder(skipOHavingDifferentOStates_).mergeFrom(value).buildPartial();
          } else {
            skipOHavingDifferentOStates_ = value;
          }
          onChanged();
        } else {
          skipOHavingDifferentOStatesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public Builder clearSkipOHavingDifferentOStates() {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          skipOHavingDifferentOStates_ = null;
          onChanged();
        } else {
          skipOHavingDifferentOStates_ = null;
          skipOHavingDifferentOStatesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getSkipOHavingDifferentOStatesBuilder() {
        
        onChanged();
        return getSkipOHavingDifferentOStatesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getSkipOHavingDifferentOStatesOrBuilder() {
        if (skipOHavingDifferentOStatesBuilder_ != null) {
          return skipOHavingDifferentOStatesBuilder_.getMessageOrBuilder();
        } else {
          return skipOHavingDifferentOStates_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : skipOHavingDifferentOStates_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue skip_o_having_different_o_states = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getSkipOHavingDifferentOStatesFieldBuilder() {
        if (skipOHavingDifferentOStatesBuilder_ == null) {
          skipOHavingDifferentOStatesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getSkipOHavingDifferentOStates(),
                  getParentForChildren(),
                  isClean());
          skipOHavingDifferentOStates_ = null;
        }
        return skipOHavingDifferentOStatesBuilder_;
      }

      private boolean skipOHavingDifferentOStatesNull_ ;
      /**
       * <code>optional bool skip_o_having_different_o_states_null = 1006;</code>
       */
      public boolean getSkipOHavingDifferentOStatesNull() {
        return skipOHavingDifferentOStatesNull_;
      }
      /**
       * <code>optional bool skip_o_having_different_o_states_null = 1006;</code>
       */
      public Builder setSkipOHavingDifferentOStatesNull(boolean value) {
        
        skipOHavingDifferentOStatesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool skip_o_having_different_o_states_null = 1006;</code>
       */
      public Builder clearSkipOHavingDifferentOStatesNull() {
        
        skipOHavingDifferentOStatesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getAllPositionsOfOrder_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getAllPositionsOfOrderBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public boolean hasGetAllPositionsOfOrder() {
        return getAllPositionsOfOrderBuilder_ != null || getAllPositionsOfOrder_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetAllPositionsOfOrder() {
        if (getAllPositionsOfOrderBuilder_ == null) {
          return getAllPositionsOfOrder_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAllPositionsOfOrder_;
        } else {
          return getAllPositionsOfOrderBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public Builder setGetAllPositionsOfOrder(io.dstore.engine.Values.booleanValue value) {
        if (getAllPositionsOfOrderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAllPositionsOfOrder_ = value;
          onChanged();
        } else {
          getAllPositionsOfOrderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public Builder setGetAllPositionsOfOrder(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getAllPositionsOfOrderBuilder_ == null) {
          getAllPositionsOfOrder_ = builderForValue.build();
          onChanged();
        } else {
          getAllPositionsOfOrderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public Builder mergeGetAllPositionsOfOrder(io.dstore.engine.Values.booleanValue value) {
        if (getAllPositionsOfOrderBuilder_ == null) {
          if (getAllPositionsOfOrder_ != null) {
            getAllPositionsOfOrder_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getAllPositionsOfOrder_).mergeFrom(value).buildPartial();
          } else {
            getAllPositionsOfOrder_ = value;
          }
          onChanged();
        } else {
          getAllPositionsOfOrderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public Builder clearGetAllPositionsOfOrder() {
        if (getAllPositionsOfOrderBuilder_ == null) {
          getAllPositionsOfOrder_ = null;
          onChanged();
        } else {
          getAllPositionsOfOrder_ = null;
          getAllPositionsOfOrderBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetAllPositionsOfOrderBuilder() {
        
        onChanged();
        return getGetAllPositionsOfOrderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetAllPositionsOfOrderOrBuilder() {
        if (getAllPositionsOfOrderBuilder_ != null) {
          return getAllPositionsOfOrderBuilder_.getMessageOrBuilder();
        } else {
          return getAllPositionsOfOrder_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAllPositionsOfOrder_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_all_positions_of_order = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetAllPositionsOfOrderFieldBuilder() {
        if (getAllPositionsOfOrderBuilder_ == null) {
          getAllPositionsOfOrderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetAllPositionsOfOrder(),
                  getParentForChildren(),
                  isClean());
          getAllPositionsOfOrder_ = null;
        }
        return getAllPositionsOfOrderBuilder_;
      }

      private boolean getAllPositionsOfOrderNull_ ;
      /**
       * <code>optional bool get_all_positions_of_order_null = 1007;</code>
       */
      public boolean getGetAllPositionsOfOrderNull() {
        return getAllPositionsOfOrderNull_;
      }
      /**
       * <code>optional bool get_all_positions_of_order_null = 1007;</code>
       */
      public Builder setGetAllPositionsOfOrderNull(boolean value) {
        
        getAllPositionsOfOrderNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_all_positions_of_order_null = 1007;</code>
       */
      public Builder clearGetAllPositionsOfOrderNull() {
        
        getAllPositionsOfOrderNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue maxNumberOfOrders_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxNumberOfOrdersBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public boolean hasMaxNumberOfOrders() {
        return maxNumberOfOrdersBuilder_ != null || maxNumberOfOrders_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public io.dstore.engine.Values.integerValue getMaxNumberOfOrders() {
        if (maxNumberOfOrdersBuilder_ == null) {
          return maxNumberOfOrders_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfOrders_;
        } else {
          return maxNumberOfOrdersBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public Builder setMaxNumberOfOrders(io.dstore.engine.Values.integerValue value) {
        if (maxNumberOfOrdersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxNumberOfOrders_ = value;
          onChanged();
        } else {
          maxNumberOfOrdersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public Builder setMaxNumberOfOrders(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (maxNumberOfOrdersBuilder_ == null) {
          maxNumberOfOrders_ = builderForValue.build();
          onChanged();
        } else {
          maxNumberOfOrdersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public Builder mergeMaxNumberOfOrders(io.dstore.engine.Values.integerValue value) {
        if (maxNumberOfOrdersBuilder_ == null) {
          if (maxNumberOfOrders_ != null) {
            maxNumberOfOrders_ =
              io.dstore.engine.Values.integerValue.newBuilder(maxNumberOfOrders_).mergeFrom(value).buildPartial();
          } else {
            maxNumberOfOrders_ = value;
          }
          onChanged();
        } else {
          maxNumberOfOrdersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public Builder clearMaxNumberOfOrders() {
        if (maxNumberOfOrdersBuilder_ == null) {
          maxNumberOfOrders_ = null;
          onChanged();
        } else {
          maxNumberOfOrders_ = null;
          maxNumberOfOrdersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getMaxNumberOfOrdersBuilder() {
        
        onChanged();
        return getMaxNumberOfOrdersFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfOrdersOrBuilder() {
        if (maxNumberOfOrdersBuilder_ != null) {
          return maxNumberOfOrdersBuilder_.getMessageOrBuilder();
        } else {
          return maxNumberOfOrders_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfOrders_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_orders = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getMaxNumberOfOrdersFieldBuilder() {
        if (maxNumberOfOrdersBuilder_ == null) {
          maxNumberOfOrdersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getMaxNumberOfOrders(),
                  getParentForChildren(),
                  isClean());
          maxNumberOfOrders_ = null;
        }
        return maxNumberOfOrdersBuilder_;
      }

      private boolean maxNumberOfOrdersNull_ ;
      /**
       * <code>optional bool max_number_of_orders_null = 1008;</code>
       */
      public boolean getMaxNumberOfOrdersNull() {
        return maxNumberOfOrdersNull_;
      }
      /**
       * <code>optional bool max_number_of_orders_null = 1008;</code>
       */
      public Builder setMaxNumberOfOrdersNull(boolean value) {
        
        maxNumberOfOrdersNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool max_number_of_orders_null = 1008;</code>
       */
      public Builder clearMaxNumberOfOrdersNull() {
        
        maxNumberOfOrdersNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue includeOrdersWithOrderNo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> includeOrdersWithOrderNoBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public boolean hasIncludeOrdersWithOrderNo() {
        return includeOrdersWithOrderNoBuilder_ != null || includeOrdersWithOrderNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public io.dstore.engine.Values.integerValue getIncludeOrdersWithOrderNo() {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          return includeOrdersWithOrderNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : includeOrdersWithOrderNo_;
        } else {
          return includeOrdersWithOrderNoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public Builder setIncludeOrdersWithOrderNo(io.dstore.engine.Values.integerValue value) {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includeOrdersWithOrderNo_ = value;
          onChanged();
        } else {
          includeOrdersWithOrderNoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public Builder setIncludeOrdersWithOrderNo(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          includeOrdersWithOrderNo_ = builderForValue.build();
          onChanged();
        } else {
          includeOrdersWithOrderNoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public Builder mergeIncludeOrdersWithOrderNo(io.dstore.engine.Values.integerValue value) {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          if (includeOrdersWithOrderNo_ != null) {
            includeOrdersWithOrderNo_ =
              io.dstore.engine.Values.integerValue.newBuilder(includeOrdersWithOrderNo_).mergeFrom(value).buildPartial();
          } else {
            includeOrdersWithOrderNo_ = value;
          }
          onChanged();
        } else {
          includeOrdersWithOrderNoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public Builder clearIncludeOrdersWithOrderNo() {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          includeOrdersWithOrderNo_ = null;
          onChanged();
        } else {
          includeOrdersWithOrderNo_ = null;
          includeOrdersWithOrderNoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getIncludeOrdersWithOrderNoBuilder() {
        
        onChanged();
        return getIncludeOrdersWithOrderNoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getIncludeOrdersWithOrderNoOrBuilder() {
        if (includeOrdersWithOrderNoBuilder_ != null) {
          return includeOrdersWithOrderNoBuilder_.getMessageOrBuilder();
        } else {
          return includeOrdersWithOrderNo_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : includeOrdersWithOrderNo_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue include_orders_with_order_no = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getIncludeOrdersWithOrderNoFieldBuilder() {
        if (includeOrdersWithOrderNoBuilder_ == null) {
          includeOrdersWithOrderNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getIncludeOrdersWithOrderNo(),
                  getParentForChildren(),
                  isClean());
          includeOrdersWithOrderNo_ = null;
        }
        return includeOrdersWithOrderNoBuilder_;
      }

      private boolean includeOrdersWithOrderNoNull_ ;
      /**
       * <code>optional bool include_orders_with_order_no_null = 1009;</code>
       */
      public boolean getIncludeOrdersWithOrderNoNull() {
        return includeOrdersWithOrderNoNull_;
      }
      /**
       * <code>optional bool include_orders_with_order_no_null = 1009;</code>
       */
      public Builder setIncludeOrdersWithOrderNoNull(boolean value) {
        
        includeOrdersWithOrderNoNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_orders_with_order_no_null = 1009;</code>
       */
      public Builder clearIncludeOrdersWithOrderNoNull() {
        
        includeOrdersWithOrderNoNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getActualItemInfo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getActualItemInfoBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public boolean hasGetActualItemInfo() {
        return getActualItemInfoBuilder_ != null || getActualItemInfo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetActualItemInfo() {
        if (getActualItemInfoBuilder_ == null) {
          return getActualItemInfo_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualItemInfo_;
        } else {
          return getActualItemInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public Builder setGetActualItemInfo(io.dstore.engine.Values.booleanValue value) {
        if (getActualItemInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getActualItemInfo_ = value;
          onChanged();
        } else {
          getActualItemInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public Builder setGetActualItemInfo(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getActualItemInfoBuilder_ == null) {
          getActualItemInfo_ = builderForValue.build();
          onChanged();
        } else {
          getActualItemInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public Builder mergeGetActualItemInfo(io.dstore.engine.Values.booleanValue value) {
        if (getActualItemInfoBuilder_ == null) {
          if (getActualItemInfo_ != null) {
            getActualItemInfo_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getActualItemInfo_).mergeFrom(value).buildPartial();
          } else {
            getActualItemInfo_ = value;
          }
          onChanged();
        } else {
          getActualItemInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public Builder clearGetActualItemInfo() {
        if (getActualItemInfoBuilder_ == null) {
          getActualItemInfo_ = null;
          onChanged();
        } else {
          getActualItemInfo_ = null;
          getActualItemInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetActualItemInfoBuilder() {
        
        onChanged();
        return getGetActualItemInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetActualItemInfoOrBuilder() {
        if (getActualItemInfoBuilder_ != null) {
          return getActualItemInfoBuilder_.getMessageOrBuilder();
        } else {
          return getActualItemInfo_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualItemInfo_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_item_info = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetActualItemInfoFieldBuilder() {
        if (getActualItemInfoBuilder_ == null) {
          getActualItemInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetActualItemInfo(),
                  getParentForChildren(),
                  isClean());
          getActualItemInfo_ = null;
        }
        return getActualItemInfoBuilder_;
      }

      private boolean getActualItemInfoNull_ ;
      /**
       * <code>optional bool get_actual_item_info_null = 1010;</code>
       */
      public boolean getGetActualItemInfoNull() {
        return getActualItemInfoNull_;
      }
      /**
       * <code>optional bool get_actual_item_info_null = 1010;</code>
       */
      public Builder setGetActualItemInfoNull(boolean value) {
        
        getActualItemInfoNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_actual_item_info_null = 1010;</code>
       */
      public Builder clearGetActualItemInfoNull() {
        
        getActualItemInfoNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_ExportOrders_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_ExportOrders_Ad.Parameters)
    private static final io.dstore.engine.procs.OmExportOrdersAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmExportOrdersAd.Parameters();
    }

    public static io.dstore.engine.procs.OmExportOrdersAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmExportOrdersAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_ExportOrders_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmExportOrdersAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_ExportOrders_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmExportOrdersAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmExportOrdersAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmExportOrdersAd.Response.class, io.dstore.engine.procs.OmExportOrdersAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_ExportOrders_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      boolean hasDeliveryDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getDeliveryDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getDeliveryDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      boolean hasDeliveryDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDeliveryDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDeliveryDateAndTimeCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      boolean hasNetShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getNetShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getNetShippingCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      boolean hasOrderId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      io.dstore.engine.Values.integerValue getOrderId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      boolean hasOrderContentId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getOrderContentId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getOrderContentIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      boolean hasPreciseNetShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseNetShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetShippingCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      boolean hasPreciseGrossPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseGrossPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPaymentCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      boolean hasPreciseNetSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseNetSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      boolean hasCurrency();
      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCurrency();
      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCurrencyOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      boolean hasOrderStateId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getOrderStateId();
      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getOrderStateIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      boolean hasShippingTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getShippingTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      boolean hasGrossPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getGrossPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getGrossPaymentCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      boolean hasShippingType();
      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getShippingType();
      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getShippingTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPosition();
      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPositionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      boolean hasPreciseNetPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseNetPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPaymentCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      boolean hasGrossPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getGrossPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getGrossPositionSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      boolean hasSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      boolean hasPreciseGrossShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseGrossShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossShippingCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      boolean hasPreciseGrossSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseGrossSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      boolean hasHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      io.dstore.engine.Values.integerValue getHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      boolean hasPaymentTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPaymentTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      boolean hasSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      boolean hasOrderDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getOrderDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getOrderDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      boolean hasValue3();
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue3();
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      boolean hasValue1();
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue1();
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      boolean hasValue2();
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue2();
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      boolean hasOrderDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getOrderDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getOrderDateAndTimeCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      boolean hasNetSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getNetSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getNetSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      boolean hasPaymentType();
      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPaymentType();
      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPaymentTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      boolean hasPositionCount();
      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPositionCount();
      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPositionCountOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      boolean hasNetPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getNetPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getNetPositionSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      boolean hasSurchargeIsAbsoluteValue();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSurchargeIsAbsoluteValue();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      boolean hasPreciseNetPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseNetPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPositionSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      boolean hasNetPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getNetPaymentCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getNetPaymentCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      boolean hasDeliveryPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      io.dstore.engine.Values.integerValue getDeliveryPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      boolean hasQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      boolean hasGrossShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getGrossShippingCost();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getGrossShippingCostOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      boolean hasGrossSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getGrossSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getGrossSumOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      boolean hasCurrencyId();
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCurrencyId();
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      boolean hasPreciseGrossPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseGrossPositionSum();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPositionSumOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_ExportOrders_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (deliveryDateAndTime_ != null) {
                  subBuilder = deliveryDateAndTime_.toBuilder();
                }
                deliveryDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deliveryDateAndTime_);
                  deliveryDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (deliveryDateAndTimeChar_ != null) {
                  subBuilder = deliveryDateAndTimeChar_.toBuilder();
                }
                deliveryDateAndTimeChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deliveryDateAndTimeChar_);
                  deliveryDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (netShippingCost_ != null) {
                  subBuilder = netShippingCost_.toBuilder();
                }
                netShippingCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(netShippingCost_);
                  netShippingCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (orderId_ != null) {
                  subBuilder = orderId_.toBuilder();
                }
                orderId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(orderId_);
                  orderId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (orderContentId_ != null) {
                  subBuilder = orderContentId_.toBuilder();
                }
                orderContentId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(orderContentId_);
                  orderContentId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseNetShippingCost_ != null) {
                  subBuilder = preciseNetShippingCost_.toBuilder();
                }
                preciseNetShippingCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseNetShippingCost_);
                  preciseNetShippingCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseGrossPaymentCost_ != null) {
                  subBuilder = preciseGrossPaymentCost_.toBuilder();
                }
                preciseGrossPaymentCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseGrossPaymentCost_);
                  preciseGrossPaymentCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseNetSum_ != null) {
                  subBuilder = preciseNetSum_.toBuilder();
                }
                preciseNetSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseNetSum_);
                  preciseNetSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (currency_ != null) {
                  subBuilder = currency_.toBuilder();
                }
                currency_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currency_);
                  currency_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (orderStateId_ != null) {
                  subBuilder = orderStateId_.toBuilder();
                }
                orderStateId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(orderStateId_);
                  orderStateId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (shippingTypeId_ != null) {
                  subBuilder = shippingTypeId_.toBuilder();
                }
                shippingTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingTypeId_);
                  shippingTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (grossPaymentCost_ != null) {
                  subBuilder = grossPaymentCost_.toBuilder();
                }
                grossPaymentCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossPaymentCost_);
                  grossPaymentCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (shippingType_ != null) {
                  subBuilder = shippingType_.toBuilder();
                }
                shippingType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingType_);
                  shippingType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (position_ != null) {
                  subBuilder = position_.toBuilder();
                }
                position_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(position_);
                  position_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseNetPaymentCost_ != null) {
                  subBuilder = preciseNetPaymentCost_.toBuilder();
                }
                preciseNetPaymentCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseNetPaymentCost_);
                  preciseNetPaymentCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (grossPositionSum_ != null) {
                  subBuilder = grossPositionSum_.toBuilder();
                }
                grossPositionSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossPositionSum_);
                  grossPositionSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80154: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseGrossShippingCost_ != null) {
                  subBuilder = preciseGrossShippingCost_.toBuilder();
                }
                preciseGrossShippingCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseGrossShippingCost_);
                  preciseGrossShippingCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80162: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseGrossSum_ != null) {
                  subBuilder = preciseGrossSum_.toBuilder();
                }
                preciseGrossSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseGrossSum_);
                  preciseGrossSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80170: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (hTreeNodeId_ != null) {
                  subBuilder = hTreeNodeId_.toBuilder();
                }
                hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hTreeNodeId_);
                  hTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80178: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (paymentTypeId_ != null) {
                  subBuilder = paymentTypeId_.toBuilder();
                }
                paymentTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(paymentTypeId_);
                  paymentTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80186: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80194: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (orderDateAndTime_ != null) {
                  subBuilder = orderDateAndTime_.toBuilder();
                }
                orderDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(orderDateAndTime_);
                  orderDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80202: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value3_ != null) {
                  subBuilder = value3_.toBuilder();
                }
                value3_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3_);
                  value3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80210: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value1_ != null) {
                  subBuilder = value1_.toBuilder();
                }
                value1_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1_);
                  value1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80218: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value2_ != null) {
                  subBuilder = value2_.toBuilder();
                }
                value2_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2_);
                  value2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80226: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (orderDateAndTimeChar_ != null) {
                  subBuilder = orderDateAndTimeChar_.toBuilder();
                }
                orderDateAndTimeChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(orderDateAndTimeChar_);
                  orderDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80234: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (netSum_ != null) {
                  subBuilder = netSum_.toBuilder();
                }
                netSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(netSum_);
                  netSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80242: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80250: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (paymentType_ != null) {
                  subBuilder = paymentType_.toBuilder();
                }
                paymentType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(paymentType_);
                  paymentType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80258: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (positionCount_ != null) {
                  subBuilder = positionCount_.toBuilder();
                }
                positionCount_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(positionCount_);
                  positionCount_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80266: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (netPositionSum_ != null) {
                  subBuilder = netPositionSum_.toBuilder();
                }
                netPositionSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(netPositionSum_);
                  netPositionSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80274: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (surchargeIsAbsoluteValue_ != null) {
                  subBuilder = surchargeIsAbsoluteValue_.toBuilder();
                }
                surchargeIsAbsoluteValue_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeIsAbsoluteValue_);
                  surchargeIsAbsoluteValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80282: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseNetPositionSum_ != null) {
                  subBuilder = preciseNetPositionSum_.toBuilder();
                }
                preciseNetPositionSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseNetPositionSum_);
                  preciseNetPositionSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80290: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (netPaymentCost_ != null) {
                  subBuilder = netPaymentCost_.toBuilder();
                }
                netPaymentCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(netPaymentCost_);
                  netPaymentCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80298: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (deliveryPersonId_ != null) {
                  subBuilder = deliveryPersonId_.toBuilder();
                }
                deliveryPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deliveryPersonId_);
                  deliveryPersonId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80306: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (quantity_ != null) {
                  subBuilder = quantity_.toBuilder();
                }
                quantity_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quantity_);
                  quantity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80314: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (grossShippingCost_ != null) {
                  subBuilder = grossShippingCost_.toBuilder();
                }
                grossShippingCost_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossShippingCost_);
                  grossShippingCost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80322: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (grossSum_ != null) {
                  subBuilder = grossSum_.toBuilder();
                }
                grossSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossSum_);
                  grossSum_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80330: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (currencyId_ != null) {
                  subBuilder = currencyId_.toBuilder();
                }
                currencyId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currencyId_);
                  currencyId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80338: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseGrossPositionSum_ != null) {
                  subBuilder = preciseGrossPositionSum_.toBuilder();
                }
                preciseGrossPositionSum_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseGrossPositionSum_);
                  preciseGrossPositionSum_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmExportOrdersAd.Response.Row.class, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int DELIVERY_DATE_AND_TIME_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.timestampValue deliveryDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      public boolean hasDeliveryDateAndTime() {
        return deliveryDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getDeliveryDateAndTime() {
        return deliveryDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : deliveryDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
       *
       * <pre>
       * Vom Auftraggeber gewünschter Liefertermin
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getDeliveryDateAndTimeOrBuilder() {
        return getDeliveryDateAndTime();
      }

      public static final int DELIVERY_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue deliveryDateAndTimeChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public boolean hasDeliveryDateAndTimeChar() {
        return deliveryDateAndTimeChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDeliveryDateAndTimeChar() {
        return deliveryDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : deliveryDateAndTimeChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
       *
       * <pre>
       * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDeliveryDateAndTimeCharOrBuilder() {
        return getDeliveryDateAndTimeChar();
      }

      public static final int NET_SHIPPING_COST_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.decimalValue netShippingCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public boolean hasNetShippingCost() {
        return netShippingCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getNetShippingCost() {
        return netShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netShippingCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getNetShippingCostOrBuilder() {
        return getNetShippingCost();
      }

      public static final int ORDER_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue orderId_;
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      public boolean hasOrderId() {
        return orderId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getOrderId() {
        return orderId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
       *
       * <pre>
       * ID eines Auftrags
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder() {
        return getOrderId();
      }

      public static final int ORDER_CONTENT_ID_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue orderContentId_;
      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      public boolean hasOrderContentId() {
        return orderContentId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getOrderContentId() {
        return orderContentId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderContentId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
       *
       * <pre>
       * ID einer Position des Auftrags "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOrderContentIdOrBuilder() {
        return getOrderContentId();
      }

      public static final int PRECISE_NET_SHIPPING_COST_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.decimalValue preciseNetShippingCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      public boolean hasPreciseNetShippingCost() {
        return preciseNetShippingCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseNetShippingCost() {
        return preciseNetShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetShippingCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetShippingCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetShippingCostOrBuilder() {
        return getPreciseNetShippingCost();
      }

      public static final int PRECISE_GROSS_PAYMENT_COST_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.decimalValue preciseGrossPaymentCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      public boolean hasPreciseGrossPaymentCost() {
        return preciseGrossPaymentCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseGrossPaymentCost() {
        return preciseGrossPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPaymentCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPaymentCostOrBuilder() {
        return getPreciseGrossPaymentCost();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
       *
       * <pre>
       * ID der Person, die den Auftrag "OrderID" aufgegeben hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int PRECISE_NET_SUM_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.decimalValue preciseNetSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      public boolean hasPreciseNetSum() {
        return preciseNetSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseNetSum() {
        return preciseNetSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetSumOrBuilder() {
        return getPreciseNetSum();
      }

      public static final int CURRENCY_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue currency_;
      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public boolean hasCurrency() {
        return currency_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCurrency() {
        return currency_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : currency_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCurrencyOrBuilder() {
        return getCurrency();
      }

      public static final int ORDER_STATE_ID_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.integerValue orderStateId_;
      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      public boolean hasOrderStateId() {
        return orderStateId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getOrderStateId() {
        return orderStateId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderStateId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
       *
       * <pre>
       * ID des Status für die Auftrags-Position "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOrderStateIdOrBuilder() {
        return getOrderStateId();
      }

      public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue shippingTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getShippingTypeId() {
        return shippingTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
       *
       * <pre>
       * ID der Versandart für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        return getShippingTypeId();
      }

      public static final int GROSS_PAYMENT_COST_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.decimalValue grossPaymentCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public boolean hasGrossPaymentCost() {
        return grossPaymentCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getGrossPaymentCost() {
        return grossPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPaymentCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getGrossPaymentCostOrBuilder() {
        return getGrossPaymentCost();
      }

      public static final int SHIPPING_TYPE_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.stringValue shippingType_;
      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public boolean hasShippingType() {
        return shippingType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getShippingType() {
        return shippingType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : shippingType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getShippingTypeOrBuilder() {
        return getShippingType();
      }

      public static final int POSITION_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.integerValue position_;
      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      public boolean hasPosition() {
        return position_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPosition() {
        return position_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : position_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
       *
       * <pre>
       * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPositionOrBuilder() {
        return getPosition();
      }

      public static final int PRECISE_NET_PAYMENT_COST_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.decimalValue preciseNetPaymentCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      public boolean hasPreciseNetPaymentCost() {
        return preciseNetPaymentCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseNetPaymentCost() {
        return preciseNetPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPaymentCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPaymentCostOrBuilder() {
        return getPreciseNetPaymentCost();
      }

      public static final int GROSS_POSITION_SUM_FIELD_NUMBER = 10017;
      private io.dstore.engine.Values.decimalValue grossPositionSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public boolean hasGrossPositionSum() {
        return grossPositionSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getGrossPositionSum() {
        return grossPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPositionSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getGrossPositionSumOrBuilder() {
        return getGrossPositionSum();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10018;
      private io.dstore.engine.Values.decimalValue surchargeValue_;
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
       *
       * <pre>
       * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int PRECISE_GROSS_SHIPPING_COST_FIELD_NUMBER = 10019;
      private io.dstore.engine.Values.decimalValue preciseGrossShippingCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      public boolean hasPreciseGrossShippingCost() {
        return preciseGrossShippingCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseGrossShippingCost() {
        return preciseGrossShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossShippingCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossShippingCostOrBuilder() {
        return getPreciseGrossShippingCost();
      }

      public static final int PRECISE_GROSS_SUM_FIELD_NUMBER = 10020;
      private io.dstore.engine.Values.decimalValue preciseGrossSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      public boolean hasPreciseGrossSum() {
        return preciseGrossSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseGrossSum() {
        return preciseGrossSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossSumOrBuilder() {
        return getPreciseGrossSum();
      }

      public static final int H_TREE_NODE_ID_FIELD_NUMBER = 10021;
      private io.dstore.engine.Values.integerValue hTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
       *
       * <pre>
       * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        return getHTreeNodeId();
      }

      public static final int PAYMENT_TYPE_ID_FIELD_NUMBER = 10022;
      private io.dstore.engine.Values.integerValue paymentTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      public boolean hasPaymentTypeId() {
        return paymentTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPaymentTypeId() {
        return paymentTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
       *
       * <pre>
       * ID der Zahlungsart für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder() {
        return getPaymentTypeId();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10023;
      private io.dstore.engine.Values.integerValue surchargeTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
       *
       * <pre>
       * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      public static final int ORDER_DATE_AND_TIME_FIELD_NUMBER = 10024;
      private io.dstore.engine.Values.timestampValue orderDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      public boolean hasOrderDateAndTime() {
        return orderDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getOrderDateAndTime() {
        return orderDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : orderDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
       *
       * <pre>
       * Eingangsdatum des Auftrags "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getOrderDateAndTimeOrBuilder() {
        return getOrderDateAndTime();
      }

      public static final int VALUE3_FIELD_NUMBER = 10025;
      private io.dstore.engine.Values.stringValue value3_;
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public boolean hasValue3() {
        return value3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue3() {
        return value3_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder() {
        return getValue3();
      }

      public static final int VALUE1_FIELD_NUMBER = 10026;
      private io.dstore.engine.Values.stringValue value1_;
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public boolean hasValue1() {
        return value1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue1() {
        return value1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder() {
        return getValue1();
      }

      public static final int VALUE2_FIELD_NUMBER = 10027;
      private io.dstore.engine.Values.stringValue value2_;
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public boolean hasValue2() {
        return value2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue2() {
        return value2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
       *
       * <pre>
       * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder() {
        return getValue2();
      }

      public static final int ORDER_DATE_AND_TIME_CHAR_FIELD_NUMBER = 10028;
      private io.dstore.engine.Values.stringValue orderDateAndTimeChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public boolean hasOrderDateAndTimeChar() {
        return orderDateAndTimeChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getOrderDateAndTimeChar() {
        return orderDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : orderDateAndTimeChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
       *
       * <pre>
       * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getOrderDateAndTimeCharOrBuilder() {
        return getOrderDateAndTimeChar();
      }

      public static final int NET_SUM_FIELD_NUMBER = 10029;
      private io.dstore.engine.Values.decimalValue netSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public boolean hasNetSum() {
        return netSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getNetSum() {
        return netSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getNetSumOrBuilder() {
        return getNetSum();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10030;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
       *
       * <pre>
       * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int PAYMENT_TYPE_FIELD_NUMBER = 10031;
      private io.dstore.engine.Values.stringValue paymentType_;
      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public boolean hasPaymentType() {
        return paymentType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPaymentType() {
        return paymentType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : paymentType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
       *
       * <pre>
       * Bezeichnung der Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPaymentTypeOrBuilder() {
        return getPaymentType();
      }

      public static final int POSITION_COUNT_FIELD_NUMBER = 10032;
      private io.dstore.engine.Values.integerValue positionCount_;
      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      public boolean hasPositionCount() {
        return positionCount_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPositionCount() {
        return positionCount_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : positionCount_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
       *
       * <pre>
       * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPositionCountOrBuilder() {
        return getPositionCount();
      }

      public static final int NET_POSITION_SUM_FIELD_NUMBER = 10033;
      private io.dstore.engine.Values.decimalValue netPositionSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public boolean hasNetPositionSum() {
        return netPositionSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getNetPositionSum() {
        return netPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPositionSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
       *
       * <pre>
       * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getNetPositionSumOrBuilder() {
        return getNetPositionSum();
      }

      public static final int SURCHARGE_IS_ABSOLUTE_VALUE_FIELD_NUMBER = 10034;
      private io.dstore.engine.Values.integerValue surchargeIsAbsoluteValue_;
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public boolean hasSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
        return getSurchargeIsAbsoluteValue();
      }

      public static final int PRECISE_NET_POSITION_SUM_FIELD_NUMBER = 10035;
      private io.dstore.engine.Values.decimalValue preciseNetPositionSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      public boolean hasPreciseNetPositionSum() {
        return preciseNetPositionSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseNetPositionSum() {
        return preciseNetPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPositionSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "NetPositionSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPositionSumOrBuilder() {
        return getPreciseNetPositionSum();
      }

      public static final int NET_PAYMENT_COST_FIELD_NUMBER = 10036;
      private io.dstore.engine.Values.decimalValue netPaymentCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public boolean hasNetPaymentCost() {
        return netPaymentCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getNetPaymentCost() {
        return netPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPaymentCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
       *
       * <pre>
       * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getNetPaymentCostOrBuilder() {
        return getNetPaymentCost();
      }

      public static final int DELIVERY_PERSON_ID_FIELD_NUMBER = 10037;
      private io.dstore.engine.Values.integerValue deliveryPersonId_;
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      public boolean hasDeliveryPersonId() {
        return deliveryPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getDeliveryPersonId() {
        return deliveryPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
       *
       * <pre>
       * ID der Person, an die die Ware geliefert werden soll
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder() {
        return getDeliveryPersonId();
      }

      public static final int QUANTITY_FIELD_NUMBER = 10038;
      private io.dstore.engine.Values.integerValue quantity_;
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      public boolean hasQuantity() {
        return quantity_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getQuantity() {
        return quantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
       *
       * <pre>
       * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder() {
        return getQuantity();
      }

      public static final int GROSS_SHIPPING_COST_FIELD_NUMBER = 10039;
      private io.dstore.engine.Values.decimalValue grossShippingCost_;
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public boolean hasGrossShippingCost() {
        return grossShippingCost_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getGrossShippingCost() {
        return grossShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossShippingCost_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
       *
       * <pre>
       * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getGrossShippingCostOrBuilder() {
        return getGrossShippingCost();
      }

      public static final int GROSS_SUM_FIELD_NUMBER = 10040;
      private io.dstore.engine.Values.decimalValue grossSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public boolean hasGrossSum() {
        return grossSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getGrossSum() {
        return grossSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
       *
       * <pre>
       * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getGrossSumOrBuilder() {
        return getGrossSum();
      }

      public static final int CURRENCY_ID_FIELD_NUMBER = 10041;
      private io.dstore.engine.Values.integerValue currencyId_;
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      public boolean hasCurrencyId() {
        return currencyId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCurrencyId() {
        return currencyId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
       *
       * <pre>
       * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
        return getCurrencyId();
      }

      public static final int PRECISE_GROSS_POSITION_SUM_FIELD_NUMBER = 10042;
      private io.dstore.engine.Values.decimalValue preciseGrossPositionSum_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      public boolean hasPreciseGrossPositionSum() {
        return preciseGrossPositionSum_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseGrossPositionSum() {
        return preciseGrossPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPositionSum_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPositionSumOrBuilder() {
        return getPreciseGrossPositionSum();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (deliveryDateAndTime_ != null) {
          output.writeMessage(10001, getDeliveryDateAndTime());
        }
        if (deliveryDateAndTimeChar_ != null) {
          output.writeMessage(10002, getDeliveryDateAndTimeChar());
        }
        if (netShippingCost_ != null) {
          output.writeMessage(10003, getNetShippingCost());
        }
        if (orderId_ != null) {
          output.writeMessage(10004, getOrderId());
        }
        if (orderContentId_ != null) {
          output.writeMessage(10005, getOrderContentId());
        }
        if (preciseNetShippingCost_ != null) {
          output.writeMessage(10006, getPreciseNetShippingCost());
        }
        if (preciseGrossPaymentCost_ != null) {
          output.writeMessage(10007, getPreciseGrossPaymentCost());
        }
        if (personId_ != null) {
          output.writeMessage(10008, getPersonId());
        }
        if (preciseNetSum_ != null) {
          output.writeMessage(10009, getPreciseNetSum());
        }
        if (currency_ != null) {
          output.writeMessage(10010, getCurrency());
        }
        if (orderStateId_ != null) {
          output.writeMessage(10011, getOrderStateId());
        }
        if (shippingTypeId_ != null) {
          output.writeMessage(10012, getShippingTypeId());
        }
        if (grossPaymentCost_ != null) {
          output.writeMessage(10013, getGrossPaymentCost());
        }
        if (shippingType_ != null) {
          output.writeMessage(10014, getShippingType());
        }
        if (position_ != null) {
          output.writeMessage(10015, getPosition());
        }
        if (preciseNetPaymentCost_ != null) {
          output.writeMessage(10016, getPreciseNetPaymentCost());
        }
        if (grossPositionSum_ != null) {
          output.writeMessage(10017, getGrossPositionSum());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10018, getSurchargeValue());
        }
        if (preciseGrossShippingCost_ != null) {
          output.writeMessage(10019, getPreciseGrossShippingCost());
        }
        if (preciseGrossSum_ != null) {
          output.writeMessage(10020, getPreciseGrossSum());
        }
        if (hTreeNodeId_ != null) {
          output.writeMessage(10021, getHTreeNodeId());
        }
        if (paymentTypeId_ != null) {
          output.writeMessage(10022, getPaymentTypeId());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10023, getSurchargeTypeId());
        }
        if (orderDateAndTime_ != null) {
          output.writeMessage(10024, getOrderDateAndTime());
        }
        if (value3_ != null) {
          output.writeMessage(10025, getValue3());
        }
        if (value1_ != null) {
          output.writeMessage(10026, getValue1());
        }
        if (value2_ != null) {
          output.writeMessage(10027, getValue2());
        }
        if (orderDateAndTimeChar_ != null) {
          output.writeMessage(10028, getOrderDateAndTimeChar());
        }
        if (netSum_ != null) {
          output.writeMessage(10029, getNetSum());
        }
        if (nodeId_ != null) {
          output.writeMessage(10030, getNodeId());
        }
        if (paymentType_ != null) {
          output.writeMessage(10031, getPaymentType());
        }
        if (positionCount_ != null) {
          output.writeMessage(10032, getPositionCount());
        }
        if (netPositionSum_ != null) {
          output.writeMessage(10033, getNetPositionSum());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          output.writeMessage(10034, getSurchargeIsAbsoluteValue());
        }
        if (preciseNetPositionSum_ != null) {
          output.writeMessage(10035, getPreciseNetPositionSum());
        }
        if (netPaymentCost_ != null) {
          output.writeMessage(10036, getNetPaymentCost());
        }
        if (deliveryPersonId_ != null) {
          output.writeMessage(10037, getDeliveryPersonId());
        }
        if (quantity_ != null) {
          output.writeMessage(10038, getQuantity());
        }
        if (grossShippingCost_ != null) {
          output.writeMessage(10039, getGrossShippingCost());
        }
        if (grossSum_ != null) {
          output.writeMessage(10040, getGrossSum());
        }
        if (currencyId_ != null) {
          output.writeMessage(10041, getCurrencyId());
        }
        if (preciseGrossPositionSum_ != null) {
          output.writeMessage(10042, getPreciseGrossPositionSum());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (deliveryDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getDeliveryDateAndTime());
        }
        if (deliveryDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getDeliveryDateAndTimeChar());
        }
        if (netShippingCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getNetShippingCost());
        }
        if (orderId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getOrderId());
        }
        if (orderContentId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getOrderContentId());
        }
        if (preciseNetShippingCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getPreciseNetShippingCost());
        }
        if (preciseGrossPaymentCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getPreciseGrossPaymentCost());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getPersonId());
        }
        if (preciseNetSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getPreciseNetSum());
        }
        if (currency_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getCurrency());
        }
        if (orderStateId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getOrderStateId());
        }
        if (shippingTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getShippingTypeId());
        }
        if (grossPaymentCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getGrossPaymentCost());
        }
        if (shippingType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getShippingType());
        }
        if (position_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getPosition());
        }
        if (preciseNetPaymentCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getPreciseNetPaymentCost());
        }
        if (grossPositionSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getGrossPositionSum());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getSurchargeValue());
        }
        if (preciseGrossShippingCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10019, getPreciseGrossShippingCost());
        }
        if (preciseGrossSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10020, getPreciseGrossSum());
        }
        if (hTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10021, getHTreeNodeId());
        }
        if (paymentTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10022, getPaymentTypeId());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10023, getSurchargeTypeId());
        }
        if (orderDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10024, getOrderDateAndTime());
        }
        if (value3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10025, getValue3());
        }
        if (value1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10026, getValue1());
        }
        if (value2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10027, getValue2());
        }
        if (orderDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10028, getOrderDateAndTimeChar());
        }
        if (netSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10029, getNetSum());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10030, getNodeId());
        }
        if (paymentType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10031, getPaymentType());
        }
        if (positionCount_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10032, getPositionCount());
        }
        if (netPositionSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10033, getNetPositionSum());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10034, getSurchargeIsAbsoluteValue());
        }
        if (preciseNetPositionSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10035, getPreciseNetPositionSum());
        }
        if (netPaymentCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10036, getNetPaymentCost());
        }
        if (deliveryPersonId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10037, getDeliveryPersonId());
        }
        if (quantity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10038, getQuantity());
        }
        if (grossShippingCost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10039, getGrossShippingCost());
        }
        if (grossSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10040, getGrossSum());
        }
        if (currencyId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10041, getCurrencyId());
        }
        if (preciseGrossPositionSum_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10042, getPreciseGrossPositionSum());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmExportOrdersAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_ExportOrders_Ad.Response.Row)
          io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmExportOrdersAd.Response.Row.class, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmExportOrdersAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (deliveryDateAndTimeBuilder_ == null) {
            deliveryDateAndTime_ = null;
          } else {
            deliveryDateAndTime_ = null;
            deliveryDateAndTimeBuilder_ = null;
          }
          if (deliveryDateAndTimeCharBuilder_ == null) {
            deliveryDateAndTimeChar_ = null;
          } else {
            deliveryDateAndTimeChar_ = null;
            deliveryDateAndTimeCharBuilder_ = null;
          }
          if (netShippingCostBuilder_ == null) {
            netShippingCost_ = null;
          } else {
            netShippingCost_ = null;
            netShippingCostBuilder_ = null;
          }
          if (orderIdBuilder_ == null) {
            orderId_ = null;
          } else {
            orderId_ = null;
            orderIdBuilder_ = null;
          }
          if (orderContentIdBuilder_ == null) {
            orderContentId_ = null;
          } else {
            orderContentId_ = null;
            orderContentIdBuilder_ = null;
          }
          if (preciseNetShippingCostBuilder_ == null) {
            preciseNetShippingCost_ = null;
          } else {
            preciseNetShippingCost_ = null;
            preciseNetShippingCostBuilder_ = null;
          }
          if (preciseGrossPaymentCostBuilder_ == null) {
            preciseGrossPaymentCost_ = null;
          } else {
            preciseGrossPaymentCost_ = null;
            preciseGrossPaymentCostBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (preciseNetSumBuilder_ == null) {
            preciseNetSum_ = null;
          } else {
            preciseNetSum_ = null;
            preciseNetSumBuilder_ = null;
          }
          if (currencyBuilder_ == null) {
            currency_ = null;
          } else {
            currency_ = null;
            currencyBuilder_ = null;
          }
          if (orderStateIdBuilder_ == null) {
            orderStateId_ = null;
          } else {
            orderStateId_ = null;
            orderStateIdBuilder_ = null;
          }
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }
          if (grossPaymentCostBuilder_ == null) {
            grossPaymentCost_ = null;
          } else {
            grossPaymentCost_ = null;
            grossPaymentCostBuilder_ = null;
          }
          if (shippingTypeBuilder_ == null) {
            shippingType_ = null;
          } else {
            shippingType_ = null;
            shippingTypeBuilder_ = null;
          }
          if (positionBuilder_ == null) {
            position_ = null;
          } else {
            position_ = null;
            positionBuilder_ = null;
          }
          if (preciseNetPaymentCostBuilder_ == null) {
            preciseNetPaymentCost_ = null;
          } else {
            preciseNetPaymentCost_ = null;
            preciseNetPaymentCostBuilder_ = null;
          }
          if (grossPositionSumBuilder_ == null) {
            grossPositionSum_ = null;
          } else {
            grossPositionSum_ = null;
            grossPositionSumBuilder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (preciseGrossShippingCostBuilder_ == null) {
            preciseGrossShippingCost_ = null;
          } else {
            preciseGrossShippingCost_ = null;
            preciseGrossShippingCostBuilder_ = null;
          }
          if (preciseGrossSumBuilder_ == null) {
            preciseGrossSum_ = null;
          } else {
            preciseGrossSum_ = null;
            preciseGrossSumBuilder_ = null;
          }
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }
          if (paymentTypeIdBuilder_ == null) {
            paymentTypeId_ = null;
          } else {
            paymentTypeId_ = null;
            paymentTypeIdBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          if (orderDateAndTimeBuilder_ == null) {
            orderDateAndTime_ = null;
          } else {
            orderDateAndTime_ = null;
            orderDateAndTimeBuilder_ = null;
          }
          if (value3Builder_ == null) {
            value3_ = null;
          } else {
            value3_ = null;
            value3Builder_ = null;
          }
          if (value1Builder_ == null) {
            value1_ = null;
          } else {
            value1_ = null;
            value1Builder_ = null;
          }
          if (value2Builder_ == null) {
            value2_ = null;
          } else {
            value2_ = null;
            value2Builder_ = null;
          }
          if (orderDateAndTimeCharBuilder_ == null) {
            orderDateAndTimeChar_ = null;
          } else {
            orderDateAndTimeChar_ = null;
            orderDateAndTimeCharBuilder_ = null;
          }
          if (netSumBuilder_ == null) {
            netSum_ = null;
          } else {
            netSum_ = null;
            netSumBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (paymentTypeBuilder_ == null) {
            paymentType_ = null;
          } else {
            paymentType_ = null;
            paymentTypeBuilder_ = null;
          }
          if (positionCountBuilder_ == null) {
            positionCount_ = null;
          } else {
            positionCount_ = null;
            positionCountBuilder_ = null;
          }
          if (netPositionSumBuilder_ == null) {
            netPositionSum_ = null;
          } else {
            netPositionSum_ = null;
            netPositionSumBuilder_ = null;
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }
          if (preciseNetPositionSumBuilder_ == null) {
            preciseNetPositionSum_ = null;
          } else {
            preciseNetPositionSum_ = null;
            preciseNetPositionSumBuilder_ = null;
          }
          if (netPaymentCostBuilder_ == null) {
            netPaymentCost_ = null;
          } else {
            netPaymentCost_ = null;
            netPaymentCostBuilder_ = null;
          }
          if (deliveryPersonIdBuilder_ == null) {
            deliveryPersonId_ = null;
          } else {
            deliveryPersonId_ = null;
            deliveryPersonIdBuilder_ = null;
          }
          if (quantityBuilder_ == null) {
            quantity_ = null;
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }
          if (grossShippingCostBuilder_ == null) {
            grossShippingCost_ = null;
          } else {
            grossShippingCost_ = null;
            grossShippingCostBuilder_ = null;
          }
          if (grossSumBuilder_ == null) {
            grossSum_ = null;
          } else {
            grossSum_ = null;
            grossSumBuilder_ = null;
          }
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }
          if (preciseGrossPositionSumBuilder_ == null) {
            preciseGrossPositionSum_ = null;
          } else {
            preciseGrossPositionSum_ = null;
            preciseGrossPositionSumBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmExportOrdersAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmExportOrdersAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmExportOrdersAd.Response.Row build() {
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmExportOrdersAd.Response.Row buildPartial() {
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row result = new io.dstore.engine.procs.OmExportOrdersAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (deliveryDateAndTimeBuilder_ == null) {
            result.deliveryDateAndTime_ = deliveryDateAndTime_;
          } else {
            result.deliveryDateAndTime_ = deliveryDateAndTimeBuilder_.build();
          }
          if (deliveryDateAndTimeCharBuilder_ == null) {
            result.deliveryDateAndTimeChar_ = deliveryDateAndTimeChar_;
          } else {
            result.deliveryDateAndTimeChar_ = deliveryDateAndTimeCharBuilder_.build();
          }
          if (netShippingCostBuilder_ == null) {
            result.netShippingCost_ = netShippingCost_;
          } else {
            result.netShippingCost_ = netShippingCostBuilder_.build();
          }
          if (orderIdBuilder_ == null) {
            result.orderId_ = orderId_;
          } else {
            result.orderId_ = orderIdBuilder_.build();
          }
          if (orderContentIdBuilder_ == null) {
            result.orderContentId_ = orderContentId_;
          } else {
            result.orderContentId_ = orderContentIdBuilder_.build();
          }
          if (preciseNetShippingCostBuilder_ == null) {
            result.preciseNetShippingCost_ = preciseNetShippingCost_;
          } else {
            result.preciseNetShippingCost_ = preciseNetShippingCostBuilder_.build();
          }
          if (preciseGrossPaymentCostBuilder_ == null) {
            result.preciseGrossPaymentCost_ = preciseGrossPaymentCost_;
          } else {
            result.preciseGrossPaymentCost_ = preciseGrossPaymentCostBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (preciseNetSumBuilder_ == null) {
            result.preciseNetSum_ = preciseNetSum_;
          } else {
            result.preciseNetSum_ = preciseNetSumBuilder_.build();
          }
          if (currencyBuilder_ == null) {
            result.currency_ = currency_;
          } else {
            result.currency_ = currencyBuilder_.build();
          }
          if (orderStateIdBuilder_ == null) {
            result.orderStateId_ = orderStateId_;
          } else {
            result.orderStateId_ = orderStateIdBuilder_.build();
          }
          if (shippingTypeIdBuilder_ == null) {
            result.shippingTypeId_ = shippingTypeId_;
          } else {
            result.shippingTypeId_ = shippingTypeIdBuilder_.build();
          }
          if (grossPaymentCostBuilder_ == null) {
            result.grossPaymentCost_ = grossPaymentCost_;
          } else {
            result.grossPaymentCost_ = grossPaymentCostBuilder_.build();
          }
          if (shippingTypeBuilder_ == null) {
            result.shippingType_ = shippingType_;
          } else {
            result.shippingType_ = shippingTypeBuilder_.build();
          }
          if (positionBuilder_ == null) {
            result.position_ = position_;
          } else {
            result.position_ = positionBuilder_.build();
          }
          if (preciseNetPaymentCostBuilder_ == null) {
            result.preciseNetPaymentCost_ = preciseNetPaymentCost_;
          } else {
            result.preciseNetPaymentCost_ = preciseNetPaymentCostBuilder_.build();
          }
          if (grossPositionSumBuilder_ == null) {
            result.grossPositionSum_ = grossPositionSum_;
          } else {
            result.grossPositionSum_ = grossPositionSumBuilder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (preciseGrossShippingCostBuilder_ == null) {
            result.preciseGrossShippingCost_ = preciseGrossShippingCost_;
          } else {
            result.preciseGrossShippingCost_ = preciseGrossShippingCostBuilder_.build();
          }
          if (preciseGrossSumBuilder_ == null) {
            result.preciseGrossSum_ = preciseGrossSum_;
          } else {
            result.preciseGrossSum_ = preciseGrossSumBuilder_.build();
          }
          if (hTreeNodeIdBuilder_ == null) {
            result.hTreeNodeId_ = hTreeNodeId_;
          } else {
            result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
          }
          if (paymentTypeIdBuilder_ == null) {
            result.paymentTypeId_ = paymentTypeId_;
          } else {
            result.paymentTypeId_ = paymentTypeIdBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          if (orderDateAndTimeBuilder_ == null) {
            result.orderDateAndTime_ = orderDateAndTime_;
          } else {
            result.orderDateAndTime_ = orderDateAndTimeBuilder_.build();
          }
          if (value3Builder_ == null) {
            result.value3_ = value3_;
          } else {
            result.value3_ = value3Builder_.build();
          }
          if (value1Builder_ == null) {
            result.value1_ = value1_;
          } else {
            result.value1_ = value1Builder_.build();
          }
          if (value2Builder_ == null) {
            result.value2_ = value2_;
          } else {
            result.value2_ = value2Builder_.build();
          }
          if (orderDateAndTimeCharBuilder_ == null) {
            result.orderDateAndTimeChar_ = orderDateAndTimeChar_;
          } else {
            result.orderDateAndTimeChar_ = orderDateAndTimeCharBuilder_.build();
          }
          if (netSumBuilder_ == null) {
            result.netSum_ = netSum_;
          } else {
            result.netSum_ = netSumBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (paymentTypeBuilder_ == null) {
            result.paymentType_ = paymentType_;
          } else {
            result.paymentType_ = paymentTypeBuilder_.build();
          }
          if (positionCountBuilder_ == null) {
            result.positionCount_ = positionCount_;
          } else {
            result.positionCount_ = positionCountBuilder_.build();
          }
          if (netPositionSumBuilder_ == null) {
            result.netPositionSum_ = netPositionSum_;
          } else {
            result.netPositionSum_ = netPositionSumBuilder_.build();
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValue_;
          } else {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValueBuilder_.build();
          }
          if (preciseNetPositionSumBuilder_ == null) {
            result.preciseNetPositionSum_ = preciseNetPositionSum_;
          } else {
            result.preciseNetPositionSum_ = preciseNetPositionSumBuilder_.build();
          }
          if (netPaymentCostBuilder_ == null) {
            result.netPaymentCost_ = netPaymentCost_;
          } else {
            result.netPaymentCost_ = netPaymentCostBuilder_.build();
          }
          if (deliveryPersonIdBuilder_ == null) {
            result.deliveryPersonId_ = deliveryPersonId_;
          } else {
            result.deliveryPersonId_ = deliveryPersonIdBuilder_.build();
          }
          if (quantityBuilder_ == null) {
            result.quantity_ = quantity_;
          } else {
            result.quantity_ = quantityBuilder_.build();
          }
          if (grossShippingCostBuilder_ == null) {
            result.grossShippingCost_ = grossShippingCost_;
          } else {
            result.grossShippingCost_ = grossShippingCostBuilder_.build();
          }
          if (grossSumBuilder_ == null) {
            result.grossSum_ = grossSum_;
          } else {
            result.grossSum_ = grossSumBuilder_.build();
          }
          if (currencyIdBuilder_ == null) {
            result.currencyId_ = currencyId_;
          } else {
            result.currencyId_ = currencyIdBuilder_.build();
          }
          if (preciseGrossPositionSumBuilder_ == null) {
            result.preciseGrossPositionSum_ = preciseGrossPositionSum_;
          } else {
            result.preciseGrossPositionSum_ = preciseGrossPositionSumBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmExportOrdersAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmExportOrdersAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmExportOrdersAd.Response.Row other) {
          if (other == io.dstore.engine.procs.OmExportOrdersAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasDeliveryDateAndTime()) {
            mergeDeliveryDateAndTime(other.getDeliveryDateAndTime());
          }
          if (other.hasDeliveryDateAndTimeChar()) {
            mergeDeliveryDateAndTimeChar(other.getDeliveryDateAndTimeChar());
          }
          if (other.hasNetShippingCost()) {
            mergeNetShippingCost(other.getNetShippingCost());
          }
          if (other.hasOrderId()) {
            mergeOrderId(other.getOrderId());
          }
          if (other.hasOrderContentId()) {
            mergeOrderContentId(other.getOrderContentId());
          }
          if (other.hasPreciseNetShippingCost()) {
            mergePreciseNetShippingCost(other.getPreciseNetShippingCost());
          }
          if (other.hasPreciseGrossPaymentCost()) {
            mergePreciseGrossPaymentCost(other.getPreciseGrossPaymentCost());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasPreciseNetSum()) {
            mergePreciseNetSum(other.getPreciseNetSum());
          }
          if (other.hasCurrency()) {
            mergeCurrency(other.getCurrency());
          }
          if (other.hasOrderStateId()) {
            mergeOrderStateId(other.getOrderStateId());
          }
          if (other.hasShippingTypeId()) {
            mergeShippingTypeId(other.getShippingTypeId());
          }
          if (other.hasGrossPaymentCost()) {
            mergeGrossPaymentCost(other.getGrossPaymentCost());
          }
          if (other.hasShippingType()) {
            mergeShippingType(other.getShippingType());
          }
          if (other.hasPosition()) {
            mergePosition(other.getPosition());
          }
          if (other.hasPreciseNetPaymentCost()) {
            mergePreciseNetPaymentCost(other.getPreciseNetPaymentCost());
          }
          if (other.hasGrossPositionSum()) {
            mergeGrossPositionSum(other.getGrossPositionSum());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasPreciseGrossShippingCost()) {
            mergePreciseGrossShippingCost(other.getPreciseGrossShippingCost());
          }
          if (other.hasPreciseGrossSum()) {
            mergePreciseGrossSum(other.getPreciseGrossSum());
          }
          if (other.hasHTreeNodeId()) {
            mergeHTreeNodeId(other.getHTreeNodeId());
          }
          if (other.hasPaymentTypeId()) {
            mergePaymentTypeId(other.getPaymentTypeId());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          if (other.hasOrderDateAndTime()) {
            mergeOrderDateAndTime(other.getOrderDateAndTime());
          }
          if (other.hasValue3()) {
            mergeValue3(other.getValue3());
          }
          if (other.hasValue1()) {
            mergeValue1(other.getValue1());
          }
          if (other.hasValue2()) {
            mergeValue2(other.getValue2());
          }
          if (other.hasOrderDateAndTimeChar()) {
            mergeOrderDateAndTimeChar(other.getOrderDateAndTimeChar());
          }
          if (other.hasNetSum()) {
            mergeNetSum(other.getNetSum());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasPaymentType()) {
            mergePaymentType(other.getPaymentType());
          }
          if (other.hasPositionCount()) {
            mergePositionCount(other.getPositionCount());
          }
          if (other.hasNetPositionSum()) {
            mergeNetPositionSum(other.getNetPositionSum());
          }
          if (other.hasSurchargeIsAbsoluteValue()) {
            mergeSurchargeIsAbsoluteValue(other.getSurchargeIsAbsoluteValue());
          }
          if (other.hasPreciseNetPositionSum()) {
            mergePreciseNetPositionSum(other.getPreciseNetPositionSum());
          }
          if (other.hasNetPaymentCost()) {
            mergeNetPaymentCost(other.getNetPaymentCost());
          }
          if (other.hasDeliveryPersonId()) {
            mergeDeliveryPersonId(other.getDeliveryPersonId());
          }
          if (other.hasQuantity()) {
            mergeQuantity(other.getQuantity());
          }
          if (other.hasGrossShippingCost()) {
            mergeGrossShippingCost(other.getGrossShippingCost());
          }
          if (other.hasGrossSum()) {
            mergeGrossSum(other.getGrossSum());
          }
          if (other.hasCurrencyId()) {
            mergeCurrencyId(other.getCurrencyId());
          }
          if (other.hasPreciseGrossPositionSum()) {
            mergePreciseGrossPositionSum(other.getPreciseGrossPositionSum());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmExportOrdersAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.timestampValue deliveryDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> deliveryDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public boolean hasDeliveryDateAndTime() {
          return deliveryDateAndTimeBuilder_ != null || deliveryDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getDeliveryDateAndTime() {
          if (deliveryDateAndTimeBuilder_ == null) {
            return deliveryDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : deliveryDateAndTime_;
          } else {
            return deliveryDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public Builder setDeliveryDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (deliveryDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deliveryDateAndTime_ = value;
            onChanged();
          } else {
            deliveryDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public Builder setDeliveryDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (deliveryDateAndTimeBuilder_ == null) {
            deliveryDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            deliveryDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public Builder mergeDeliveryDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (deliveryDateAndTimeBuilder_ == null) {
            if (deliveryDateAndTime_ != null) {
              deliveryDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(deliveryDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              deliveryDateAndTime_ = value;
            }
            onChanged();
          } else {
            deliveryDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public Builder clearDeliveryDateAndTime() {
          if (deliveryDateAndTimeBuilder_ == null) {
            deliveryDateAndTime_ = null;
            onChanged();
          } else {
            deliveryDateAndTime_ = null;
            deliveryDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getDeliveryDateAndTimeBuilder() {
          
          onChanged();
          return getDeliveryDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getDeliveryDateAndTimeOrBuilder() {
          if (deliveryDateAndTimeBuilder_ != null) {
            return deliveryDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return deliveryDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : deliveryDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue delivery_date_and_time = 10001;</code>
         *
         * <pre>
         * Vom Auftraggeber gewünschter Liefertermin
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getDeliveryDateAndTimeFieldBuilder() {
          if (deliveryDateAndTimeBuilder_ == null) {
            deliveryDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getDeliveryDateAndTime(),
                    getParentForChildren(),
                    isClean());
            deliveryDateAndTime_ = null;
          }
          return deliveryDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.stringValue deliveryDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> deliveryDateAndTimeCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public boolean hasDeliveryDateAndTimeChar() {
          return deliveryDateAndTimeCharBuilder_ != null || deliveryDateAndTimeChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDeliveryDateAndTimeChar() {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            return deliveryDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : deliveryDateAndTimeChar_;
          } else {
            return deliveryDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder setDeliveryDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deliveryDateAndTimeChar_ = value;
            onChanged();
          } else {
            deliveryDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder setDeliveryDateAndTimeChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            deliveryDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            deliveryDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder mergeDeliveryDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            if (deliveryDateAndTimeChar_ != null) {
              deliveryDateAndTimeChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(deliveryDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              deliveryDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            deliveryDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder clearDeliveryDateAndTimeChar() {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            deliveryDateAndTimeChar_ = null;
            onChanged();
          } else {
            deliveryDateAndTimeChar_ = null;
            deliveryDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDeliveryDateAndTimeCharBuilder() {
          
          onChanged();
          return getDeliveryDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDeliveryDateAndTimeCharOrBuilder() {
          if (deliveryDateAndTimeCharBuilder_ != null) {
            return deliveryDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return deliveryDateAndTimeChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : deliveryDateAndTimeChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue delivery_date_and_time_char = 10002;</code>
         *
         * <pre>
         * "DeliveryDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDeliveryDateAndTimeCharFieldBuilder() {
          if (deliveryDateAndTimeCharBuilder_ == null) {
            deliveryDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDeliveryDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            deliveryDateAndTimeChar_ = null;
          }
          return deliveryDateAndTimeCharBuilder_;
        }

        private io.dstore.engine.Values.decimalValue netShippingCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> netShippingCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public boolean hasNetShippingCost() {
          return netShippingCostBuilder_ != null || netShippingCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getNetShippingCost() {
          if (netShippingCostBuilder_ == null) {
            return netShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netShippingCost_;
          } else {
            return netShippingCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setNetShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (netShippingCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            netShippingCost_ = value;
            onChanged();
          } else {
            netShippingCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setNetShippingCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (netShippingCostBuilder_ == null) {
            netShippingCost_ = builderForValue.build();
            onChanged();
          } else {
            netShippingCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder mergeNetShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (netShippingCostBuilder_ == null) {
            if (netShippingCost_ != null) {
              netShippingCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(netShippingCost_).mergeFrom(value).buildPartial();
            } else {
              netShippingCost_ = value;
            }
            onChanged();
          } else {
            netShippingCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder clearNetShippingCost() {
          if (netShippingCostBuilder_ == null) {
            netShippingCost_ = null;
            onChanged();
          } else {
            netShippingCost_ = null;
            netShippingCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getNetShippingCostBuilder() {
          
          onChanged();
          return getNetShippingCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getNetShippingCostOrBuilder() {
          if (netShippingCostBuilder_ != null) {
            return netShippingCostBuilder_.getMessageOrBuilder();
          } else {
            return netShippingCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : netShippingCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_shipping_cost = 10003;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getNetShippingCostFieldBuilder() {
          if (netShippingCostBuilder_ == null) {
            netShippingCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getNetShippingCost(),
                    getParentForChildren(),
                    isClean());
            netShippingCost_ = null;
          }
          return netShippingCostBuilder_;
        }

        private io.dstore.engine.Values.integerValue orderId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> orderIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public boolean hasOrderId() {
          return orderIdBuilder_ != null || orderId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getOrderId() {
          if (orderIdBuilder_ == null) {
            return orderId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
          } else {
            return orderIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public Builder setOrderId(io.dstore.engine.Values.integerValue value) {
          if (orderIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            orderId_ = value;
            onChanged();
          } else {
            orderIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public Builder setOrderId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (orderIdBuilder_ == null) {
            orderId_ = builderForValue.build();
            onChanged();
          } else {
            orderIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public Builder mergeOrderId(io.dstore.engine.Values.integerValue value) {
          if (orderIdBuilder_ == null) {
            if (orderId_ != null) {
              orderId_ =
                io.dstore.engine.Values.integerValue.newBuilder(orderId_).mergeFrom(value).buildPartial();
            } else {
              orderId_ = value;
            }
            onChanged();
          } else {
            orderIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public Builder clearOrderId() {
          if (orderIdBuilder_ == null) {
            orderId_ = null;
            onChanged();
          } else {
            orderId_ = null;
            orderIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getOrderIdBuilder() {
          
          onChanged();
          return getOrderIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder() {
          if (orderIdBuilder_ != null) {
            return orderIdBuilder_.getMessageOrBuilder();
          } else {
            return orderId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_id = 10004;</code>
         *
         * <pre>
         * ID eines Auftrags
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getOrderIdFieldBuilder() {
          if (orderIdBuilder_ == null) {
            orderIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getOrderId(),
                    getParentForChildren(),
                    isClean());
            orderId_ = null;
          }
          return orderIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue orderContentId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> orderContentIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public boolean hasOrderContentId() {
          return orderContentIdBuilder_ != null || orderContentId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getOrderContentId() {
          if (orderContentIdBuilder_ == null) {
            return orderContentId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderContentId_;
          } else {
            return orderContentIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public Builder setOrderContentId(io.dstore.engine.Values.integerValue value) {
          if (orderContentIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            orderContentId_ = value;
            onChanged();
          } else {
            orderContentIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public Builder setOrderContentId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (orderContentIdBuilder_ == null) {
            orderContentId_ = builderForValue.build();
            onChanged();
          } else {
            orderContentIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public Builder mergeOrderContentId(io.dstore.engine.Values.integerValue value) {
          if (orderContentIdBuilder_ == null) {
            if (orderContentId_ != null) {
              orderContentId_ =
                io.dstore.engine.Values.integerValue.newBuilder(orderContentId_).mergeFrom(value).buildPartial();
            } else {
              orderContentId_ = value;
            }
            onChanged();
          } else {
            orderContentIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public Builder clearOrderContentId() {
          if (orderContentIdBuilder_ == null) {
            orderContentId_ = null;
            onChanged();
          } else {
            orderContentId_ = null;
            orderContentIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getOrderContentIdBuilder() {
          
          onChanged();
          return getOrderContentIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getOrderContentIdOrBuilder() {
          if (orderContentIdBuilder_ != null) {
            return orderContentIdBuilder_.getMessageOrBuilder();
          } else {
            return orderContentId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : orderContentId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_content_id = 10005;</code>
         *
         * <pre>
         * ID einer Position des Auftrags "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getOrderContentIdFieldBuilder() {
          if (orderContentIdBuilder_ == null) {
            orderContentIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getOrderContentId(),
                    getParentForChildren(),
                    isClean());
            orderContentId_ = null;
          }
          return orderContentIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseNetShippingCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseNetShippingCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public boolean hasPreciseNetShippingCost() {
          return preciseNetShippingCostBuilder_ != null || preciseNetShippingCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseNetShippingCost() {
          if (preciseNetShippingCostBuilder_ == null) {
            return preciseNetShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetShippingCost_;
          } else {
            return preciseNetShippingCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public Builder setPreciseNetShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetShippingCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseNetShippingCost_ = value;
            onChanged();
          } else {
            preciseNetShippingCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public Builder setPreciseNetShippingCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseNetShippingCostBuilder_ == null) {
            preciseNetShippingCost_ = builderForValue.build();
            onChanged();
          } else {
            preciseNetShippingCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public Builder mergePreciseNetShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetShippingCostBuilder_ == null) {
            if (preciseNetShippingCost_ != null) {
              preciseNetShippingCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseNetShippingCost_).mergeFrom(value).buildPartial();
            } else {
              preciseNetShippingCost_ = value;
            }
            onChanged();
          } else {
            preciseNetShippingCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public Builder clearPreciseNetShippingCost() {
          if (preciseNetShippingCostBuilder_ == null) {
            preciseNetShippingCost_ = null;
            onChanged();
          } else {
            preciseNetShippingCost_ = null;
            preciseNetShippingCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseNetShippingCostBuilder() {
          
          onChanged();
          return getPreciseNetShippingCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetShippingCostOrBuilder() {
          if (preciseNetShippingCostBuilder_ != null) {
            return preciseNetShippingCostBuilder_.getMessageOrBuilder();
          } else {
            return preciseNetShippingCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetShippingCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_shipping_cost = 10006;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetShippingCost"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseNetShippingCostFieldBuilder() {
          if (preciseNetShippingCostBuilder_ == null) {
            preciseNetShippingCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseNetShippingCost(),
                    getParentForChildren(),
                    isClean());
            preciseNetShippingCost_ = null;
          }
          return preciseNetShippingCostBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseGrossPaymentCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseGrossPaymentCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public boolean hasPreciseGrossPaymentCost() {
          return preciseGrossPaymentCostBuilder_ != null || preciseGrossPaymentCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseGrossPaymentCost() {
          if (preciseGrossPaymentCostBuilder_ == null) {
            return preciseGrossPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPaymentCost_;
          } else {
            return preciseGrossPaymentCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public Builder setPreciseGrossPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossPaymentCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseGrossPaymentCost_ = value;
            onChanged();
          } else {
            preciseGrossPaymentCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public Builder setPreciseGrossPaymentCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseGrossPaymentCostBuilder_ == null) {
            preciseGrossPaymentCost_ = builderForValue.build();
            onChanged();
          } else {
            preciseGrossPaymentCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public Builder mergePreciseGrossPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossPaymentCostBuilder_ == null) {
            if (preciseGrossPaymentCost_ != null) {
              preciseGrossPaymentCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseGrossPaymentCost_).mergeFrom(value).buildPartial();
            } else {
              preciseGrossPaymentCost_ = value;
            }
            onChanged();
          } else {
            preciseGrossPaymentCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public Builder clearPreciseGrossPaymentCost() {
          if (preciseGrossPaymentCostBuilder_ == null) {
            preciseGrossPaymentCost_ = null;
            onChanged();
          } else {
            preciseGrossPaymentCost_ = null;
            preciseGrossPaymentCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseGrossPaymentCostBuilder() {
          
          onChanged();
          return getPreciseGrossPaymentCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPaymentCostOrBuilder() {
          if (preciseGrossPaymentCostBuilder_ != null) {
            return preciseGrossPaymentCostBuilder_.getMessageOrBuilder();
          } else {
            return preciseGrossPaymentCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPaymentCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_payment_cost = 10007;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPaymentCost"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseGrossPaymentCostFieldBuilder() {
          if (preciseGrossPaymentCostBuilder_ == null) {
            preciseGrossPaymentCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseGrossPaymentCost(),
                    getParentForChildren(),
                    isClean());
            preciseGrossPaymentCost_ = null;
          }
          return preciseGrossPaymentCostBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10008;</code>
         *
         * <pre>
         * ID der Person, die den Auftrag "OrderID" aufgegeben hat
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseNetSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseNetSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public boolean hasPreciseNetSum() {
          return preciseNetSumBuilder_ != null || preciseNetSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseNetSum() {
          if (preciseNetSumBuilder_ == null) {
            return preciseNetSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetSum_;
          } else {
            return preciseNetSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public Builder setPreciseNetSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseNetSum_ = value;
            onChanged();
          } else {
            preciseNetSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public Builder setPreciseNetSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseNetSumBuilder_ == null) {
            preciseNetSum_ = builderForValue.build();
            onChanged();
          } else {
            preciseNetSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public Builder mergePreciseNetSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetSumBuilder_ == null) {
            if (preciseNetSum_ != null) {
              preciseNetSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseNetSum_).mergeFrom(value).buildPartial();
            } else {
              preciseNetSum_ = value;
            }
            onChanged();
          } else {
            preciseNetSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public Builder clearPreciseNetSum() {
          if (preciseNetSumBuilder_ == null) {
            preciseNetSum_ = null;
            onChanged();
          } else {
            preciseNetSum_ = null;
            preciseNetSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseNetSumBuilder() {
          
          onChanged();
          return getPreciseNetSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetSumOrBuilder() {
          if (preciseNetSumBuilder_ != null) {
            return preciseNetSumBuilder_.getMessageOrBuilder();
          } else {
            return preciseNetSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_sum = 10009;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetSum"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseNetSumFieldBuilder() {
          if (preciseNetSumBuilder_ == null) {
            preciseNetSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseNetSum(),
                    getParentForChildren(),
                    isClean());
            preciseNetSum_ = null;
          }
          return preciseNetSumBuilder_;
        }

        private io.dstore.engine.Values.stringValue currency_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> currencyBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public boolean hasCurrency() {
          return currencyBuilder_ != null || currency_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCurrency() {
          if (currencyBuilder_ == null) {
            return currency_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : currency_;
          } else {
            return currencyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder setCurrency(io.dstore.engine.Values.stringValue value) {
          if (currencyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currency_ = value;
            onChanged();
          } else {
            currencyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder setCurrency(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (currencyBuilder_ == null) {
            currency_ = builderForValue.build();
            onChanged();
          } else {
            currencyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder mergeCurrency(io.dstore.engine.Values.stringValue value) {
          if (currencyBuilder_ == null) {
            if (currency_ != null) {
              currency_ =
                io.dstore.engine.Values.stringValue.newBuilder(currency_).mergeFrom(value).buildPartial();
            } else {
              currency_ = value;
            }
            onChanged();
          } else {
            currencyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder clearCurrency() {
          if (currencyBuilder_ == null) {
            currency_ = null;
            onChanged();
          } else {
            currency_ = null;
            currencyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCurrencyBuilder() {
          
          onChanged();
          return getCurrencyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCurrencyOrBuilder() {
          if (currencyBuilder_ != null) {
            return currencyBuilder_.getMessageOrBuilder();
          } else {
            return currency_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : currency_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCurrencyFieldBuilder() {
          if (currencyBuilder_ == null) {
            currencyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCurrency(),
                    getParentForChildren(),
                    isClean());
            currency_ = null;
          }
          return currencyBuilder_;
        }

        private io.dstore.engine.Values.integerValue orderStateId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> orderStateIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public boolean hasOrderStateId() {
          return orderStateIdBuilder_ != null || orderStateId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getOrderStateId() {
          if (orderStateIdBuilder_ == null) {
            return orderStateId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderStateId_;
          } else {
            return orderStateIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public Builder setOrderStateId(io.dstore.engine.Values.integerValue value) {
          if (orderStateIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            orderStateId_ = value;
            onChanged();
          } else {
            orderStateIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public Builder setOrderStateId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (orderStateIdBuilder_ == null) {
            orderStateId_ = builderForValue.build();
            onChanged();
          } else {
            orderStateIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public Builder mergeOrderStateId(io.dstore.engine.Values.integerValue value) {
          if (orderStateIdBuilder_ == null) {
            if (orderStateId_ != null) {
              orderStateId_ =
                io.dstore.engine.Values.integerValue.newBuilder(orderStateId_).mergeFrom(value).buildPartial();
            } else {
              orderStateId_ = value;
            }
            onChanged();
          } else {
            orderStateIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public Builder clearOrderStateId() {
          if (orderStateIdBuilder_ == null) {
            orderStateId_ = null;
            onChanged();
          } else {
            orderStateId_ = null;
            orderStateIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getOrderStateIdBuilder() {
          
          onChanged();
          return getOrderStateIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getOrderStateIdOrBuilder() {
          if (orderStateIdBuilder_ != null) {
            return orderStateIdBuilder_.getMessageOrBuilder();
          } else {
            return orderStateId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : orderStateId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue order_state_id = 10011;</code>
         *
         * <pre>
         * ID des Status für die Auftrags-Position "OrderContentID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getOrderStateIdFieldBuilder() {
          if (orderStateIdBuilder_ == null) {
            orderStateIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getOrderStateId(),
                    getParentForChildren(),
                    isClean());
            orderStateId_ = null;
          }
          return orderStateIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue shippingTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public boolean hasShippingTypeId() {
          return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            return shippingTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          } else {
            return shippingTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setShippingTypeId(io.dstore.engine.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingTypeId_ = value;
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setShippingTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder mergeShippingTypeId(io.dstore.engine.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (shippingTypeId_ != null) {
              shippingTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
            } else {
              shippingTypeId_ = value;
            }
            onChanged();
          } else {
            shippingTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder clearShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
            onChanged();
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getShippingTypeIdBuilder() {
          
          onChanged();
          return getShippingTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
          if (shippingTypeIdBuilder_ != null) {
            return shippingTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return shippingTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue shipping_type_id = 10012;</code>
         *
         * <pre>
         * ID der Versandart für den Auftrag "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getShippingTypeIdFieldBuilder() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getShippingTypeId(),
                    getParentForChildren(),
                    isClean());
            shippingTypeId_ = null;
          }
          return shippingTypeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue grossPaymentCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> grossPaymentCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public boolean hasGrossPaymentCost() {
          return grossPaymentCostBuilder_ != null || grossPaymentCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getGrossPaymentCost() {
          if (grossPaymentCostBuilder_ == null) {
            return grossPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPaymentCost_;
          } else {
            return grossPaymentCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setGrossPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (grossPaymentCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossPaymentCost_ = value;
            onChanged();
          } else {
            grossPaymentCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setGrossPaymentCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (grossPaymentCostBuilder_ == null) {
            grossPaymentCost_ = builderForValue.build();
            onChanged();
          } else {
            grossPaymentCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder mergeGrossPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (grossPaymentCostBuilder_ == null) {
            if (grossPaymentCost_ != null) {
              grossPaymentCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(grossPaymentCost_).mergeFrom(value).buildPartial();
            } else {
              grossPaymentCost_ = value;
            }
            onChanged();
          } else {
            grossPaymentCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder clearGrossPaymentCost() {
          if (grossPaymentCostBuilder_ == null) {
            grossPaymentCost_ = null;
            onChanged();
          } else {
            grossPaymentCost_ = null;
            grossPaymentCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getGrossPaymentCostBuilder() {
          
          onChanged();
          return getGrossPaymentCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getGrossPaymentCostOrBuilder() {
          if (grossPaymentCostBuilder_ != null) {
            return grossPaymentCostBuilder_.getMessageOrBuilder();
          } else {
            return grossPaymentCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPaymentCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_payment_cost = 10013;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getGrossPaymentCostFieldBuilder() {
          if (grossPaymentCostBuilder_ == null) {
            grossPaymentCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getGrossPaymentCost(),
                    getParentForChildren(),
                    isClean());
            grossPaymentCost_ = null;
          }
          return grossPaymentCostBuilder_;
        }

        private io.dstore.engine.Values.stringValue shippingType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> shippingTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public boolean hasShippingType() {
          return shippingTypeBuilder_ != null || shippingType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getShippingType() {
          if (shippingTypeBuilder_ == null) {
            return shippingType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : shippingType_;
          } else {
            return shippingTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setShippingType(io.dstore.engine.Values.stringValue value) {
          if (shippingTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingType_ = value;
            onChanged();
          } else {
            shippingTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setShippingType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (shippingTypeBuilder_ == null) {
            shippingType_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder mergeShippingType(io.dstore.engine.Values.stringValue value) {
          if (shippingTypeBuilder_ == null) {
            if (shippingType_ != null) {
              shippingType_ =
                io.dstore.engine.Values.stringValue.newBuilder(shippingType_).mergeFrom(value).buildPartial();
            } else {
              shippingType_ = value;
            }
            onChanged();
          } else {
            shippingTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder clearShippingType() {
          if (shippingTypeBuilder_ == null) {
            shippingType_ = null;
            onChanged();
          } else {
            shippingType_ = null;
            shippingTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getShippingTypeBuilder() {
          
          onChanged();
          return getShippingTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getShippingTypeOrBuilder() {
          if (shippingTypeBuilder_ != null) {
            return shippingTypeBuilder_.getMessageOrBuilder();
          } else {
            return shippingType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : shippingType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue shipping_type = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getShippingTypeFieldBuilder() {
          if (shippingTypeBuilder_ == null) {
            shippingTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getShippingType(),
                    getParentForChildren(),
                    isClean());
            shippingType_ = null;
          }
          return shippingTypeBuilder_;
        }

        private io.dstore.engine.Values.integerValue position_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> positionBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public boolean hasPosition() {
          return positionBuilder_ != null || position_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPosition() {
          if (positionBuilder_ == null) {
            return position_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : position_;
          } else {
            return positionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public Builder setPosition(io.dstore.engine.Values.integerValue value) {
          if (positionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            position_ = value;
            onChanged();
          } else {
            positionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public Builder setPosition(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (positionBuilder_ == null) {
            position_ = builderForValue.build();
            onChanged();
          } else {
            positionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public Builder mergePosition(io.dstore.engine.Values.integerValue value) {
          if (positionBuilder_ == null) {
            if (position_ != null) {
              position_ =
                io.dstore.engine.Values.integerValue.newBuilder(position_).mergeFrom(value).buildPartial();
            } else {
              position_ = value;
            }
            onChanged();
          } else {
            positionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public Builder clearPosition() {
          if (positionBuilder_ == null) {
            position_ = null;
            onChanged();
          } else {
            position_ = null;
            positionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPositionBuilder() {
          
          onChanged();
          return getPositionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPositionOrBuilder() {
          if (positionBuilder_ != null) {
            return positionBuilder_.getMessageOrBuilder();
          } else {
            return position_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : position_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position = 10015;</code>
         *
         * <pre>
         * Um die wievielte Position des Auftrags handelt es sich bei "OrderContentID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPositionFieldBuilder() {
          if (positionBuilder_ == null) {
            positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPosition(),
                    getParentForChildren(),
                    isClean());
            position_ = null;
          }
          return positionBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseNetPaymentCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseNetPaymentCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public boolean hasPreciseNetPaymentCost() {
          return preciseNetPaymentCostBuilder_ != null || preciseNetPaymentCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseNetPaymentCost() {
          if (preciseNetPaymentCostBuilder_ == null) {
            return preciseNetPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPaymentCost_;
          } else {
            return preciseNetPaymentCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public Builder setPreciseNetPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetPaymentCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseNetPaymentCost_ = value;
            onChanged();
          } else {
            preciseNetPaymentCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public Builder setPreciseNetPaymentCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseNetPaymentCostBuilder_ == null) {
            preciseNetPaymentCost_ = builderForValue.build();
            onChanged();
          } else {
            preciseNetPaymentCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public Builder mergePreciseNetPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetPaymentCostBuilder_ == null) {
            if (preciseNetPaymentCost_ != null) {
              preciseNetPaymentCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseNetPaymentCost_).mergeFrom(value).buildPartial();
            } else {
              preciseNetPaymentCost_ = value;
            }
            onChanged();
          } else {
            preciseNetPaymentCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public Builder clearPreciseNetPaymentCost() {
          if (preciseNetPaymentCostBuilder_ == null) {
            preciseNetPaymentCost_ = null;
            onChanged();
          } else {
            preciseNetPaymentCost_ = null;
            preciseNetPaymentCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseNetPaymentCostBuilder() {
          
          onChanged();
          return getPreciseNetPaymentCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPaymentCostOrBuilder() {
          if (preciseNetPaymentCostBuilder_ != null) {
            return preciseNetPaymentCostBuilder_.getMessageOrBuilder();
          } else {
            return preciseNetPaymentCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPaymentCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_payment_cost = 10016;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPaymentCost"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseNetPaymentCostFieldBuilder() {
          if (preciseNetPaymentCostBuilder_ == null) {
            preciseNetPaymentCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseNetPaymentCost(),
                    getParentForChildren(),
                    isClean());
            preciseNetPaymentCost_ = null;
          }
          return preciseNetPaymentCostBuilder_;
        }

        private io.dstore.engine.Values.decimalValue grossPositionSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> grossPositionSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public boolean hasGrossPositionSum() {
          return grossPositionSumBuilder_ != null || grossPositionSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getGrossPositionSum() {
          if (grossPositionSumBuilder_ == null) {
            return grossPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPositionSum_;
          } else {
            return grossPositionSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder setGrossPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (grossPositionSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossPositionSum_ = value;
            onChanged();
          } else {
            grossPositionSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder setGrossPositionSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (grossPositionSumBuilder_ == null) {
            grossPositionSum_ = builderForValue.build();
            onChanged();
          } else {
            grossPositionSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder mergeGrossPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (grossPositionSumBuilder_ == null) {
            if (grossPositionSum_ != null) {
              grossPositionSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(grossPositionSum_).mergeFrom(value).buildPartial();
            } else {
              grossPositionSum_ = value;
            }
            onChanged();
          } else {
            grossPositionSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder clearGrossPositionSum() {
          if (grossPositionSumBuilder_ == null) {
            grossPositionSum_ = null;
            onChanged();
          } else {
            grossPositionSum_ = null;
            grossPositionSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getGrossPositionSumBuilder() {
          
          onChanged();
          return getGrossPositionSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getGrossPositionSumOrBuilder() {
          if (grossPositionSumBuilder_ != null) {
            return grossPositionSumBuilder_.getMessageOrBuilder();
          } else {
            return grossPositionSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossPositionSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_position_sum = 10017;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getGrossPositionSumFieldBuilder() {
          if (grossPositionSumBuilder_ == null) {
            grossPositionSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getGrossPositionSum(),
                    getParentForChildren(),
                    isClean());
            grossPositionSum_ = null;
          }
          return grossPositionSumBuilder_;
        }

        private io.dstore.engine.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder setSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder setSurchargeValue(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder mergeSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.engine.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10018;</code>
         *
         * <pre>
         * Ein Preis-Aufschlag oder Rabatt (je nach "SurchargeIsAbsoluteValue" ein prozentualer oder absoluter Wert), der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseGrossShippingCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseGrossShippingCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public boolean hasPreciseGrossShippingCost() {
          return preciseGrossShippingCostBuilder_ != null || preciseGrossShippingCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseGrossShippingCost() {
          if (preciseGrossShippingCostBuilder_ == null) {
            return preciseGrossShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossShippingCost_;
          } else {
            return preciseGrossShippingCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public Builder setPreciseGrossShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossShippingCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseGrossShippingCost_ = value;
            onChanged();
          } else {
            preciseGrossShippingCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public Builder setPreciseGrossShippingCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseGrossShippingCostBuilder_ == null) {
            preciseGrossShippingCost_ = builderForValue.build();
            onChanged();
          } else {
            preciseGrossShippingCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public Builder mergePreciseGrossShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossShippingCostBuilder_ == null) {
            if (preciseGrossShippingCost_ != null) {
              preciseGrossShippingCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseGrossShippingCost_).mergeFrom(value).buildPartial();
            } else {
              preciseGrossShippingCost_ = value;
            }
            onChanged();
          } else {
            preciseGrossShippingCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public Builder clearPreciseGrossShippingCost() {
          if (preciseGrossShippingCostBuilder_ == null) {
            preciseGrossShippingCost_ = null;
            onChanged();
          } else {
            preciseGrossShippingCost_ = null;
            preciseGrossShippingCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseGrossShippingCostBuilder() {
          
          onChanged();
          return getPreciseGrossShippingCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossShippingCostOrBuilder() {
          if (preciseGrossShippingCostBuilder_ != null) {
            return preciseGrossShippingCostBuilder_.getMessageOrBuilder();
          } else {
            return preciseGrossShippingCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossShippingCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_shipping_cost = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossShippingCost"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseGrossShippingCostFieldBuilder() {
          if (preciseGrossShippingCostBuilder_ == null) {
            preciseGrossShippingCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseGrossShippingCost(),
                    getParentForChildren(),
                    isClean());
            preciseGrossShippingCost_ = null;
          }
          return preciseGrossShippingCostBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseGrossSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseGrossSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public boolean hasPreciseGrossSum() {
          return preciseGrossSumBuilder_ != null || preciseGrossSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseGrossSum() {
          if (preciseGrossSumBuilder_ == null) {
            return preciseGrossSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossSum_;
          } else {
            return preciseGrossSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public Builder setPreciseGrossSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseGrossSum_ = value;
            onChanged();
          } else {
            preciseGrossSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public Builder setPreciseGrossSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseGrossSumBuilder_ == null) {
            preciseGrossSum_ = builderForValue.build();
            onChanged();
          } else {
            preciseGrossSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public Builder mergePreciseGrossSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossSumBuilder_ == null) {
            if (preciseGrossSum_ != null) {
              preciseGrossSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseGrossSum_).mergeFrom(value).buildPartial();
            } else {
              preciseGrossSum_ = value;
            }
            onChanged();
          } else {
            preciseGrossSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public Builder clearPreciseGrossSum() {
          if (preciseGrossSumBuilder_ == null) {
            preciseGrossSum_ = null;
            onChanged();
          } else {
            preciseGrossSum_ = null;
            preciseGrossSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseGrossSumBuilder() {
          
          onChanged();
          return getPreciseGrossSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossSumOrBuilder() {
          if (preciseGrossSumBuilder_ != null) {
            return preciseGrossSumBuilder_.getMessageOrBuilder();
          } else {
            return preciseGrossSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_sum = 10020;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossSum"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseGrossSumFieldBuilder() {
          if (preciseGrossSumBuilder_ == null) {
            preciseGrossSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseGrossSum(),
                    getParentForChildren(),
                    isClean());
            preciseGrossSum_ = null;
          }
          return preciseGrossSumBuilder_;
        }

        private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public boolean hasHTreeNodeId() {
          return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          } else {
            return hTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hTreeNodeId_ = value;
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public Builder setHTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (hTreeNodeId_ != null) {
              hTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              hTreeNodeId_ = value;
            }
            onChanged();
          } else {
            hTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public Builder clearHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
            onChanged();
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
          
          onChanged();
          return getHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
          if (hTreeNodeIdBuilder_ != null) {
            return hTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return hTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10021;</code>
         *
         * <pre>
         * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den bestellten Artikel der Position "OrderContentID" eindeutig kennzeichnet
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getHTreeNodeIdFieldBuilder() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            hTreeNodeId_ = null;
          }
          return hTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue paymentTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> paymentTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public boolean hasPaymentTypeId() {
          return paymentTypeIdBuilder_ != null || paymentTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPaymentTypeId() {
          if (paymentTypeIdBuilder_ == null) {
            return paymentTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
          } else {
            return paymentTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setPaymentTypeId(io.dstore.engine.Values.integerValue value) {
          if (paymentTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            paymentTypeId_ = value;
            onChanged();
          } else {
            paymentTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setPaymentTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (paymentTypeIdBuilder_ == null) {
            paymentTypeId_ = builderForValue.build();
            onChanged();
          } else {
            paymentTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder mergePaymentTypeId(io.dstore.engine.Values.integerValue value) {
          if (paymentTypeIdBuilder_ == null) {
            if (paymentTypeId_ != null) {
              paymentTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(paymentTypeId_).mergeFrom(value).buildPartial();
            } else {
              paymentTypeId_ = value;
            }
            onChanged();
          } else {
            paymentTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public Builder clearPaymentTypeId() {
          if (paymentTypeIdBuilder_ == null) {
            paymentTypeId_ = null;
            onChanged();
          } else {
            paymentTypeId_ = null;
            paymentTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPaymentTypeIdBuilder() {
          
          onChanged();
          return getPaymentTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder() {
          if (paymentTypeIdBuilder_ != null) {
            return paymentTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return paymentTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue payment_type_id = 10022;</code>
         *
         * <pre>
         * ID der Zahlungsart für den Auftrag "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPaymentTypeIdFieldBuilder() {
          if (paymentTypeIdBuilder_ == null) {
            paymentTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPaymentTypeId(),
                    getParentForChildren(),
                    isClean());
            paymentTypeId_ = null;
          }
          return paymentTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder setSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder setSurchargeTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder mergeSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10023;</code>
         *
         * <pre>
         * ID eines Preis-Aufschlags oder Rabatts, der im Preis der Position "OrderContentID" enthalten ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }

        private io.dstore.engine.Values.timestampValue orderDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> orderDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public boolean hasOrderDateAndTime() {
          return orderDateAndTimeBuilder_ != null || orderDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getOrderDateAndTime() {
          if (orderDateAndTimeBuilder_ == null) {
            return orderDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : orderDateAndTime_;
          } else {
            return orderDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public Builder setOrderDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (orderDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            orderDateAndTime_ = value;
            onChanged();
          } else {
            orderDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public Builder setOrderDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (orderDateAndTimeBuilder_ == null) {
            orderDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            orderDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public Builder mergeOrderDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (orderDateAndTimeBuilder_ == null) {
            if (orderDateAndTime_ != null) {
              orderDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(orderDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              orderDateAndTime_ = value;
            }
            onChanged();
          } else {
            orderDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public Builder clearOrderDateAndTime() {
          if (orderDateAndTimeBuilder_ == null) {
            orderDateAndTime_ = null;
            onChanged();
          } else {
            orderDateAndTime_ = null;
            orderDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getOrderDateAndTimeBuilder() {
          
          onChanged();
          return getOrderDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getOrderDateAndTimeOrBuilder() {
          if (orderDateAndTimeBuilder_ != null) {
            return orderDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return orderDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : orderDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue order_date_and_time = 10024;</code>
         *
         * <pre>
         * Eingangsdatum des Auftrags "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getOrderDateAndTimeFieldBuilder() {
          if (orderDateAndTimeBuilder_ == null) {
            orderDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getOrderDateAndTime(),
                    getParentForChildren(),
                    isClean());
            orderDateAndTime_ = null;
          }
          return orderDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.stringValue value3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value3Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public boolean hasValue3() {
          return value3Builder_ != null || value3_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue3() {
          if (value3Builder_ == null) {
            return value3_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
          } else {
            return value3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue3(io.dstore.engine.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3_ = value;
            onChanged();
          } else {
            value3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue3(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value3Builder_ == null) {
            value3_ = builderForValue.build();
            onChanged();
          } else {
            value3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder mergeValue3(io.dstore.engine.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value3_ != null) {
              value3_ =
                io.dstore.engine.Values.stringValue.newBuilder(value3_).mergeFrom(value).buildPartial();
            } else {
              value3_ = value;
            }
            onChanged();
          } else {
            value3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder clearValue3() {
          if (value3Builder_ == null) {
            value3_ = null;
            onChanged();
          } else {
            value3_ = null;
            value3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue3Builder() {
          
          onChanged();
          return getValue3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder() {
          if (value3Builder_ != null) {
            return value3Builder_.getMessageOrBuilder();
          } else {
            return value3_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10025;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID3" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue3FieldBuilder() {
          if (value3Builder_ == null) {
            value3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue3(),
                    getParentForChildren(),
                    isClean());
            value3_ = null;
          }
          return value3Builder_;
        }

        private io.dstore.engine.Values.stringValue value1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value1Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public boolean hasValue1() {
          return value1Builder_ != null || value1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue1() {
          if (value1Builder_ == null) {
            return value1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
          } else {
            return value1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue1(io.dstore.engine.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1_ = value;
            onChanged();
          } else {
            value1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue1(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value1Builder_ == null) {
            value1_ = builderForValue.build();
            onChanged();
          } else {
            value1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder mergeValue1(io.dstore.engine.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value1_ != null) {
              value1_ =
                io.dstore.engine.Values.stringValue.newBuilder(value1_).mergeFrom(value).buildPartial();
            } else {
              value1_ = value;
            }
            onChanged();
          } else {
            value1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder clearValue1() {
          if (value1Builder_ == null) {
            value1_ = null;
            onChanged();
          } else {
            value1_ = null;
            value1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue1Builder() {
          
          onChanged();
          return getValue1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder() {
          if (value1Builder_ != null) {
            return value1Builder_.getMessageOrBuilder();
          } else {
            return value1_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10026;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID1" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue1FieldBuilder() {
          if (value1Builder_ == null) {
            value1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue1(),
                    getParentForChildren(),
                    isClean());
            value1_ = null;
          }
          return value1Builder_;
        }

        private io.dstore.engine.Values.stringValue value2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value2Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public boolean hasValue2() {
          return value2Builder_ != null || value2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue2() {
          if (value2Builder_ == null) {
            return value2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
          } else {
            return value2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue2(io.dstore.engine.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2_ = value;
            onChanged();
          } else {
            value2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder setValue2(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value2Builder_ == null) {
            value2_ = builderForValue.build();
            onChanged();
          } else {
            value2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder mergeValue2(io.dstore.engine.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value2_ != null) {
              value2_ =
                io.dstore.engine.Values.stringValue.newBuilder(value2_).mergeFrom(value).buildPartial();
            } else {
              value2_ = value;
            }
            onChanged();
          } else {
            value2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public Builder clearValue2() {
          if (value2Builder_ == null) {
            value2_ = null;
            onChanged();
          } else {
            value2_ = null;
            value2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue2Builder() {
          
          onChanged();
          return getValue2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder() {
          if (value2Builder_ != null) {
            return value2Builder_.getMessageOrBuilder();
          } else {
            return value2_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10027;</code>
         *
         * <pre>
         * (Direkte !) Eigenschaft des zur "HTreeNodeID" zugehörigen Artikel-Elementes zum durch "&#64;NodeCharacteristicID2" angegebenen Merkmal zum Zeitpunkt "OrderDateAndTime" bzw. (falls "&#64;GetActualItemInfo = 1" ist) zum aktuellen Zeitpunkt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue2FieldBuilder() {
          if (value2Builder_ == null) {
            value2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue2(),
                    getParentForChildren(),
                    isClean());
            value2_ = null;
          }
          return value2Builder_;
        }

        private io.dstore.engine.Values.stringValue orderDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> orderDateAndTimeCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public boolean hasOrderDateAndTimeChar() {
          return orderDateAndTimeCharBuilder_ != null || orderDateAndTimeChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getOrderDateAndTimeChar() {
          if (orderDateAndTimeCharBuilder_ == null) {
            return orderDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : orderDateAndTimeChar_;
          } else {
            return orderDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder setOrderDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (orderDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            orderDateAndTimeChar_ = value;
            onChanged();
          } else {
            orderDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder setOrderDateAndTimeChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (orderDateAndTimeCharBuilder_ == null) {
            orderDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            orderDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder mergeOrderDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (orderDateAndTimeCharBuilder_ == null) {
            if (orderDateAndTimeChar_ != null) {
              orderDateAndTimeChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(orderDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              orderDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            orderDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public Builder clearOrderDateAndTimeChar() {
          if (orderDateAndTimeCharBuilder_ == null) {
            orderDateAndTimeChar_ = null;
            onChanged();
          } else {
            orderDateAndTimeChar_ = null;
            orderDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getOrderDateAndTimeCharBuilder() {
          
          onChanged();
          return getOrderDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getOrderDateAndTimeCharOrBuilder() {
          if (orderDateAndTimeCharBuilder_ != null) {
            return orderDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return orderDateAndTimeChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : orderDateAndTimeChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue order_date_and_time_char = 10028;</code>
         *
         * <pre>
         * "OrderDateAndTime" als String im Format "15.04.2000 12:33:28:120"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getOrderDateAndTimeCharFieldBuilder() {
          if (orderDateAndTimeCharBuilder_ == null) {
            orderDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getOrderDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            orderDateAndTimeChar_ = null;
          }
          return orderDateAndTimeCharBuilder_;
        }

        private io.dstore.engine.Values.decimalValue netSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> netSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public boolean hasNetSum() {
          return netSumBuilder_ != null || netSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getNetSum() {
          if (netSumBuilder_ == null) {
            return netSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netSum_;
          } else {
            return netSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setNetSum(io.dstore.engine.Values.decimalValue value) {
          if (netSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            netSum_ = value;
            onChanged();
          } else {
            netSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setNetSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (netSumBuilder_ == null) {
            netSum_ = builderForValue.build();
            onChanged();
          } else {
            netSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder mergeNetSum(io.dstore.engine.Values.decimalValue value) {
          if (netSumBuilder_ == null) {
            if (netSum_ != null) {
              netSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(netSum_).mergeFrom(value).buildPartial();
            } else {
              netSum_ = value;
            }
            onChanged();
          } else {
            netSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder clearNetSum() {
          if (netSumBuilder_ == null) {
            netSum_ = null;
            onChanged();
          } else {
            netSum_ = null;
            netSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getNetSumBuilder() {
          
          onChanged();
          return getNetSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getNetSumOrBuilder() {
          if (netSumBuilder_ != null) {
            return netSumBuilder_.getMessageOrBuilder();
          } else {
            return netSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : netSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_sum = 10029;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getNetSumFieldBuilder() {
          if (netSumBuilder_ == null) {
            netSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getNetSum(),
                    getParentForChildren(),
                    isClean());
            netSum_ = null;
          }
          return netSumBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10030;</code>
         *
         * <pre>
         * ID des von "HTreeNodeID" referenzierten Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue paymentType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> paymentTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public boolean hasPaymentType() {
          return paymentTypeBuilder_ != null || paymentType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPaymentType() {
          if (paymentTypeBuilder_ == null) {
            return paymentType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : paymentType_;
          } else {
            return paymentTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setPaymentType(io.dstore.engine.Values.stringValue value) {
          if (paymentTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            paymentType_ = value;
            onChanged();
          } else {
            paymentTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setPaymentType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (paymentTypeBuilder_ == null) {
            paymentType_ = builderForValue.build();
            onChanged();
          } else {
            paymentTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder mergePaymentType(io.dstore.engine.Values.stringValue value) {
          if (paymentTypeBuilder_ == null) {
            if (paymentType_ != null) {
              paymentType_ =
                io.dstore.engine.Values.stringValue.newBuilder(paymentType_).mergeFrom(value).buildPartial();
            } else {
              paymentType_ = value;
            }
            onChanged();
          } else {
            paymentTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder clearPaymentType() {
          if (paymentTypeBuilder_ == null) {
            paymentType_ = null;
            onChanged();
          } else {
            paymentType_ = null;
            paymentTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPaymentTypeBuilder() {
          
          onChanged();
          return getPaymentTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPaymentTypeOrBuilder() {
          if (paymentTypeBuilder_ != null) {
            return paymentTypeBuilder_.getMessageOrBuilder();
          } else {
            return paymentType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : paymentType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue payment_type = 10031;</code>
         *
         * <pre>
         * Bezeichnung der Zahlungsart "PaymentTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPaymentTypeFieldBuilder() {
          if (paymentTypeBuilder_ == null) {
            paymentTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPaymentType(),
                    getParentForChildren(),
                    isClean());
            paymentType_ = null;
          }
          return paymentTypeBuilder_;
        }

        private io.dstore.engine.Values.integerValue positionCount_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> positionCountBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public boolean hasPositionCount() {
          return positionCountBuilder_ != null || positionCount_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPositionCount() {
          if (positionCountBuilder_ == null) {
            return positionCount_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : positionCount_;
          } else {
            return positionCountBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public Builder setPositionCount(io.dstore.engine.Values.integerValue value) {
          if (positionCountBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            positionCount_ = value;
            onChanged();
          } else {
            positionCountBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public Builder setPositionCount(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (positionCountBuilder_ == null) {
            positionCount_ = builderForValue.build();
            onChanged();
          } else {
            positionCountBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public Builder mergePositionCount(io.dstore.engine.Values.integerValue value) {
          if (positionCountBuilder_ == null) {
            if (positionCount_ != null) {
              positionCount_ =
                io.dstore.engine.Values.integerValue.newBuilder(positionCount_).mergeFrom(value).buildPartial();
            } else {
              positionCount_ = value;
            }
            onChanged();
          } else {
            positionCountBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public Builder clearPositionCount() {
          if (positionCountBuilder_ == null) {
            positionCount_ = null;
            onChanged();
          } else {
            positionCount_ = null;
            positionCountBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPositionCountBuilder() {
          
          onChanged();
          return getPositionCountFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPositionCountOrBuilder() {
          if (positionCountBuilder_ != null) {
            return positionCountBuilder_.getMessageOrBuilder();
          } else {
            return positionCount_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : positionCount_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue position_count = 10032;</code>
         *
         * <pre>
         * Wieviele Positionen (unabhängig vom Status) enthält der Auftrag "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPositionCountFieldBuilder() {
          if (positionCountBuilder_ == null) {
            positionCountBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPositionCount(),
                    getParentForChildren(),
                    isClean());
            positionCount_ = null;
          }
          return positionCountBuilder_;
        }

        private io.dstore.engine.Values.decimalValue netPositionSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> netPositionSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public boolean hasNetPositionSum() {
          return netPositionSumBuilder_ != null || netPositionSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getNetPositionSum() {
          if (netPositionSumBuilder_ == null) {
            return netPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPositionSum_;
          } else {
            return netPositionSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder setNetPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (netPositionSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            netPositionSum_ = value;
            onChanged();
          } else {
            netPositionSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder setNetPositionSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (netPositionSumBuilder_ == null) {
            netPositionSum_ = builderForValue.build();
            onChanged();
          } else {
            netPositionSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder mergeNetPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (netPositionSumBuilder_ == null) {
            if (netPositionSum_ != null) {
              netPositionSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(netPositionSum_).mergeFrom(value).buildPartial();
            } else {
              netPositionSum_ = value;
            }
            onChanged();
          } else {
            netPositionSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public Builder clearNetPositionSum() {
          if (netPositionSumBuilder_ == null) {
            netPositionSum_ = null;
            onChanged();
          } else {
            netPositionSum_ = null;
            netPositionSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getNetPositionSumBuilder() {
          
          onChanged();
          return getNetPositionSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getNetPositionSumOrBuilder() {
          if (netPositionSumBuilder_ != null) {
            return netPositionSumBuilder_.getMessageOrBuilder();
          } else {
            return netPositionSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPositionSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_position_sum = 10033;</code>
         *
         * <pre>
         * Netto-Betrag (in der durch "CurrencyID" angegebenen Währung) der Auftragsposition "OrderContentID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getNetPositionSumFieldBuilder() {
          if (netPositionSumBuilder_ == null) {
            netPositionSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getNetPositionSum(),
                    getParentForChildren(),
                    isClean());
            netPositionSum_ = null;
          }
          return netPositionSumBuilder_;
        }

        private io.dstore.engine.Values.integerValue surchargeIsAbsoluteValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> surchargeIsAbsoluteValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public boolean hasSurchargeIsAbsoluteValue() {
          return surchargeIsAbsoluteValueBuilder_ != null || surchargeIsAbsoluteValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            return surchargeIsAbsoluteValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          } else {
            return surchargeIsAbsoluteValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder setSurchargeIsAbsoluteValue(io.dstore.engine.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeIsAbsoluteValue_ = value;
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder setSurchargeIsAbsoluteValue(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder mergeSurchargeIsAbsoluteValue(io.dstore.engine.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (surchargeIsAbsoluteValue_ != null) {
              surchargeIsAbsoluteValue_ =
                io.dstore.engine.Values.integerValue.newBuilder(surchargeIsAbsoluteValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeIsAbsoluteValue_ = value;
            }
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder clearSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
            onChanged();
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSurchargeIsAbsoluteValueBuilder() {
          
          onChanged();
          return getSurchargeIsAbsoluteValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ != null) {
            return surchargeIsAbsoluteValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeIsAbsoluteValue_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_is_absolute_value = 10034;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit "CurrencyID", und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSurchargeIsAbsoluteValueFieldBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSurchargeIsAbsoluteValue(),
                    getParentForChildren(),
                    isClean());
            surchargeIsAbsoluteValue_ = null;
          }
          return surchargeIsAbsoluteValueBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseNetPositionSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseNetPositionSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public boolean hasPreciseNetPositionSum() {
          return preciseNetPositionSumBuilder_ != null || preciseNetPositionSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseNetPositionSum() {
          if (preciseNetPositionSumBuilder_ == null) {
            return preciseNetPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPositionSum_;
          } else {
            return preciseNetPositionSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public Builder setPreciseNetPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetPositionSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseNetPositionSum_ = value;
            onChanged();
          } else {
            preciseNetPositionSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public Builder setPreciseNetPositionSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseNetPositionSumBuilder_ == null) {
            preciseNetPositionSum_ = builderForValue.build();
            onChanged();
          } else {
            preciseNetPositionSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public Builder mergePreciseNetPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseNetPositionSumBuilder_ == null) {
            if (preciseNetPositionSum_ != null) {
              preciseNetPositionSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseNetPositionSum_).mergeFrom(value).buildPartial();
            } else {
              preciseNetPositionSum_ = value;
            }
            onChanged();
          } else {
            preciseNetPositionSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public Builder clearPreciseNetPositionSum() {
          if (preciseNetPositionSumBuilder_ == null) {
            preciseNetPositionSum_ = null;
            onChanged();
          } else {
            preciseNetPositionSum_ = null;
            preciseNetPositionSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseNetPositionSumBuilder() {
          
          onChanged();
          return getPreciseNetPositionSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseNetPositionSumOrBuilder() {
          if (preciseNetPositionSumBuilder_ != null) {
            return preciseNetPositionSumBuilder_.getMessageOrBuilder();
          } else {
            return preciseNetPositionSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseNetPositionSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_net_position_sum = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "NetPositionSum"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseNetPositionSumFieldBuilder() {
          if (preciseNetPositionSumBuilder_ == null) {
            preciseNetPositionSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseNetPositionSum(),
                    getParentForChildren(),
                    isClean());
            preciseNetPositionSum_ = null;
          }
          return preciseNetPositionSumBuilder_;
        }

        private io.dstore.engine.Values.decimalValue netPaymentCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> netPaymentCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public boolean hasNetPaymentCost() {
          return netPaymentCostBuilder_ != null || netPaymentCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getNetPaymentCost() {
          if (netPaymentCostBuilder_ == null) {
            return netPaymentCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPaymentCost_;
          } else {
            return netPaymentCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setNetPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (netPaymentCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            netPaymentCost_ = value;
            onChanged();
          } else {
            netPaymentCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder setNetPaymentCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (netPaymentCostBuilder_ == null) {
            netPaymentCost_ = builderForValue.build();
            onChanged();
          } else {
            netPaymentCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder mergeNetPaymentCost(io.dstore.engine.Values.decimalValue value) {
          if (netPaymentCostBuilder_ == null) {
            if (netPaymentCost_ != null) {
              netPaymentCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(netPaymentCost_).mergeFrom(value).buildPartial();
            } else {
              netPaymentCost_ = value;
            }
            onChanged();
          } else {
            netPaymentCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public Builder clearNetPaymentCost() {
          if (netPaymentCostBuilder_ == null) {
            netPaymentCost_ = null;
            onChanged();
          } else {
            netPaymentCost_ = null;
            netPaymentCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getNetPaymentCostBuilder() {
          
          onChanged();
          return getNetPaymentCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getNetPaymentCostOrBuilder() {
          if (netPaymentCostBuilder_ != null) {
            return netPaymentCostBuilder_.getMessageOrBuilder();
          } else {
            return netPaymentCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : netPaymentCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue net_payment_cost = 10036;</code>
         *
         * <pre>
         * Evtl. anfallende (Netto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Zahlungsart "PaymentTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getNetPaymentCostFieldBuilder() {
          if (netPaymentCostBuilder_ == null) {
            netPaymentCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getNetPaymentCost(),
                    getParentForChildren(),
                    isClean());
            netPaymentCost_ = null;
          }
          return netPaymentCostBuilder_;
        }

        private io.dstore.engine.Values.integerValue deliveryPersonId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> deliveryPersonIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public boolean hasDeliveryPersonId() {
          return deliveryPersonIdBuilder_ != null || deliveryPersonId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getDeliveryPersonId() {
          if (deliveryPersonIdBuilder_ == null) {
            return deliveryPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
          } else {
            return deliveryPersonIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public Builder setDeliveryPersonId(io.dstore.engine.Values.integerValue value) {
          if (deliveryPersonIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deliveryPersonId_ = value;
            onChanged();
          } else {
            deliveryPersonIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public Builder setDeliveryPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (deliveryPersonIdBuilder_ == null) {
            deliveryPersonId_ = builderForValue.build();
            onChanged();
          } else {
            deliveryPersonIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public Builder mergeDeliveryPersonId(io.dstore.engine.Values.integerValue value) {
          if (deliveryPersonIdBuilder_ == null) {
            if (deliveryPersonId_ != null) {
              deliveryPersonId_ =
                io.dstore.engine.Values.integerValue.newBuilder(deliveryPersonId_).mergeFrom(value).buildPartial();
            } else {
              deliveryPersonId_ = value;
            }
            onChanged();
          } else {
            deliveryPersonIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public Builder clearDeliveryPersonId() {
          if (deliveryPersonIdBuilder_ == null) {
            deliveryPersonId_ = null;
            onChanged();
          } else {
            deliveryPersonId_ = null;
            deliveryPersonIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getDeliveryPersonIdBuilder() {
          
          onChanged();
          return getDeliveryPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder() {
          if (deliveryPersonIdBuilder_ != null) {
            return deliveryPersonIdBuilder_.getMessageOrBuilder();
          } else {
            return deliveryPersonId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue delivery_person_id = 10037;</code>
         *
         * <pre>
         * ID der Person, an die die Ware geliefert werden soll
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getDeliveryPersonIdFieldBuilder() {
          if (deliveryPersonIdBuilder_ == null) {
            deliveryPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getDeliveryPersonId(),
                    getParentForChildren(),
                    isClean());
            deliveryPersonId_ = null;
          }
          return deliveryPersonIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue quantity_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> quantityBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public boolean hasQuantity() {
          return quantityBuilder_ != null || quantity_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getQuantity() {
          if (quantityBuilder_ == null) {
            return quantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
          } else {
            return quantityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public Builder setQuantity(io.dstore.engine.Values.integerValue value) {
          if (quantityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quantity_ = value;
            onChanged();
          } else {
            quantityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public Builder setQuantity(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (quantityBuilder_ == null) {
            quantity_ = builderForValue.build();
            onChanged();
          } else {
            quantityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public Builder mergeQuantity(io.dstore.engine.Values.integerValue value) {
          if (quantityBuilder_ == null) {
            if (quantity_ != null) {
              quantity_ =
                io.dstore.engine.Values.integerValue.newBuilder(quantity_).mergeFrom(value).buildPartial();
            } else {
              quantity_ = value;
            }
            onChanged();
          } else {
            quantityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public Builder clearQuantity() {
          if (quantityBuilder_ == null) {
            quantity_ = null;
            onChanged();
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getQuantityBuilder() {
          
          onChanged();
          return getQuantityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder() {
          if (quantityBuilder_ != null) {
            return quantityBuilder_.getMessageOrBuilder();
          } else {
            return quantity_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10038;</code>
         *
         * <pre>
         * Wieviel wurde vom zur "HTreeNodeID" zugehörigen Artikel-Element bestellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getQuantityFieldBuilder() {
          if (quantityBuilder_ == null) {
            quantityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getQuantity(),
                    getParentForChildren(),
                    isClean());
            quantity_ = null;
          }
          return quantityBuilder_;
        }

        private io.dstore.engine.Values.decimalValue grossShippingCost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> grossShippingCostBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public boolean hasGrossShippingCost() {
          return grossShippingCostBuilder_ != null || grossShippingCost_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getGrossShippingCost() {
          if (grossShippingCostBuilder_ == null) {
            return grossShippingCost_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossShippingCost_;
          } else {
            return grossShippingCostBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setGrossShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (grossShippingCostBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossShippingCost_ = value;
            onChanged();
          } else {
            grossShippingCostBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setGrossShippingCost(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (grossShippingCostBuilder_ == null) {
            grossShippingCost_ = builderForValue.build();
            onChanged();
          } else {
            grossShippingCostBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder mergeGrossShippingCost(io.dstore.engine.Values.decimalValue value) {
          if (grossShippingCostBuilder_ == null) {
            if (grossShippingCost_ != null) {
              grossShippingCost_ =
                io.dstore.engine.Values.decimalValue.newBuilder(grossShippingCost_).mergeFrom(value).buildPartial();
            } else {
              grossShippingCost_ = value;
            }
            onChanged();
          } else {
            grossShippingCostBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder clearGrossShippingCost() {
          if (grossShippingCostBuilder_ == null) {
            grossShippingCost_ = null;
            onChanged();
          } else {
            grossShippingCost_ = null;
            grossShippingCostBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getGrossShippingCostBuilder() {
          
          onChanged();
          return getGrossShippingCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getGrossShippingCostOrBuilder() {
          if (grossShippingCostBuilder_ != null) {
            return grossShippingCostBuilder_.getMessageOrBuilder();
          } else {
            return grossShippingCost_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossShippingCost_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_shipping_cost = 10039;</code>
         *
         * <pre>
         * Evtl. anfallende (Brutto-)Kosten (in der durch "CurrencyID" angegebenen Währung) für die Versandart "ShippingTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getGrossShippingCostFieldBuilder() {
          if (grossShippingCostBuilder_ == null) {
            grossShippingCostBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getGrossShippingCost(),
                    getParentForChildren(),
                    isClean());
            grossShippingCost_ = null;
          }
          return grossShippingCostBuilder_;
        }

        private io.dstore.engine.Values.decimalValue grossSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> grossSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public boolean hasGrossSum() {
          return grossSumBuilder_ != null || grossSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getGrossSum() {
          if (grossSumBuilder_ == null) {
            return grossSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossSum_;
          } else {
            return grossSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setGrossSum(io.dstore.engine.Values.decimalValue value) {
          if (grossSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossSum_ = value;
            onChanged();
          } else {
            grossSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder setGrossSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (grossSumBuilder_ == null) {
            grossSum_ = builderForValue.build();
            onChanged();
          } else {
            grossSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder mergeGrossSum(io.dstore.engine.Values.decimalValue value) {
          if (grossSumBuilder_ == null) {
            if (grossSum_ != null) {
              grossSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(grossSum_).mergeFrom(value).buildPartial();
            } else {
              grossSum_ = value;
            }
            onChanged();
          } else {
            grossSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public Builder clearGrossSum() {
          if (grossSumBuilder_ == null) {
            grossSum_ = null;
            onChanged();
          } else {
            grossSum_ = null;
            grossSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getGrossSumBuilder() {
          
          onChanged();
          return getGrossSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getGrossSumOrBuilder() {
          if (grossSumBuilder_ != null) {
            return grossSumBuilder_.getMessageOrBuilder();
          } else {
            return grossSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : grossSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue gross_sum = 10040;</code>
         *
         * <pre>
         * Brutto-Betrag (in der durch "CurrencyID" angegebenen Währung) für den Auftrag "OrderID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getGrossSumFieldBuilder() {
          if (grossSumBuilder_ == null) {
            grossSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getGrossSum(),
                    getParentForChildren(),
                    isClean());
            grossSum_ = null;
          }
          return grossSumBuilder_;
        }

        private io.dstore.engine.Values.integerValue currencyId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> currencyIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public boolean hasCurrencyId() {
          return currencyIdBuilder_ != null || currencyId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCurrencyId() {
          if (currencyIdBuilder_ == null) {
            return currencyId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
          } else {
            return currencyIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public Builder setCurrencyId(io.dstore.engine.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currencyId_ = value;
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public Builder setCurrencyId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (currencyIdBuilder_ == null) {
            currencyId_ = builderForValue.build();
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public Builder mergeCurrencyId(io.dstore.engine.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (currencyId_ != null) {
              currencyId_ =
                io.dstore.engine.Values.integerValue.newBuilder(currencyId_).mergeFrom(value).buildPartial();
            } else {
              currencyId_ = value;
            }
            onChanged();
          } else {
            currencyIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public Builder clearCurrencyId() {
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
            onChanged();
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCurrencyIdBuilder() {
          
          onChanged();
          return getCurrencyIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
          if (currencyIdBuilder_ != null) {
            return currencyIdBuilder_.getMessageOrBuilder();
          } else {
            return currencyId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10041;</code>
         *
         * <pre>
         * ID einer Währung, in der die Kosten "NettoShippingCost", "BruttoShippingCost", "NettoPaymentCost", "BruttoPaymentCost", "NettoSum", "BruttoSum", "NettoPositionSum" und "BruttoPositionSum" angegeben sind
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCurrencyIdFieldBuilder() {
          if (currencyIdBuilder_ == null) {
            currencyIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCurrencyId(),
                    getParentForChildren(),
                    isClean());
            currencyId_ = null;
          }
          return currencyIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseGrossPositionSum_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseGrossPositionSumBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public boolean hasPreciseGrossPositionSum() {
          return preciseGrossPositionSumBuilder_ != null || preciseGrossPositionSum_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseGrossPositionSum() {
          if (preciseGrossPositionSumBuilder_ == null) {
            return preciseGrossPositionSum_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPositionSum_;
          } else {
            return preciseGrossPositionSumBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public Builder setPreciseGrossPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossPositionSumBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseGrossPositionSum_ = value;
            onChanged();
          } else {
            preciseGrossPositionSumBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public Builder setPreciseGrossPositionSum(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseGrossPositionSumBuilder_ == null) {
            preciseGrossPositionSum_ = builderForValue.build();
            onChanged();
          } else {
            preciseGrossPositionSumBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public Builder mergePreciseGrossPositionSum(io.dstore.engine.Values.decimalValue value) {
          if (preciseGrossPositionSumBuilder_ == null) {
            if (preciseGrossPositionSum_ != null) {
              preciseGrossPositionSum_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseGrossPositionSum_).mergeFrom(value).buildPartial();
            } else {
              preciseGrossPositionSum_ = value;
            }
            onChanged();
          } else {
            preciseGrossPositionSumBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public Builder clearPreciseGrossPositionSum() {
          if (preciseGrossPositionSumBuilder_ == null) {
            preciseGrossPositionSum_ = null;
            onChanged();
          } else {
            preciseGrossPositionSum_ = null;
            preciseGrossPositionSumBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseGrossPositionSumBuilder() {
          
          onChanged();
          return getPreciseGrossPositionSumFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseGrossPositionSumOrBuilder() {
          if (preciseGrossPositionSumBuilder_ != null) {
            return preciseGrossPositionSumBuilder_.getMessageOrBuilder();
          } else {
            return preciseGrossPositionSum_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseGrossPositionSum_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_gross_position_sum = 10042;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "GrossPositionSum"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseGrossPositionSumFieldBuilder() {
          if (preciseGrossPositionSumBuilder_ == null) {
            preciseGrossPositionSumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseGrossPositionSum(),
                    getParentForChildren(),
                    isClean());
            preciseGrossPositionSum_ = null;
          }
          return preciseGrossPositionSumBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_ExportOrders_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_ExportOrders_Ad.Response.Row)
      private static final io.dstore.engine.procs.OmExportOrdersAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmExportOrdersAd.Response.Row();
      }

      public static io.dstore.engine.procs.OmExportOrdersAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmExportOrdersAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmExportOrdersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmExportOrdersAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_ExportOrders_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_ExportOrders_Ad.Response)
        io.dstore.engine.procs.OmExportOrdersAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmExportOrdersAd.Response.class, io.dstore.engine.procs.OmExportOrdersAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmExportOrdersAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmExportOrdersAd.internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmExportOrdersAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Response build() {
        io.dstore.engine.procs.OmExportOrdersAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmExportOrdersAd.Response buildPartial() {
        io.dstore.engine.procs.OmExportOrdersAd.Response result = new io.dstore.engine.procs.OmExportOrdersAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmExportOrdersAd.Response) {
          return mergeFrom((io.dstore.engine.procs.OmExportOrdersAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmExportOrdersAd.Response other) {
        if (other == io.dstore.engine.procs.OmExportOrdersAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmExportOrdersAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmExportOrdersAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmExportOrdersAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmExportOrdersAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmExportOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.OmExportOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmExportOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmExportOrdersAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmExportOrdersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_ExportOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmExportOrdersAd.Response.Row, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmExportOrdersAd.Response.Row, io.dstore.engine.procs.OmExportOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmExportOrdersAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_ExportOrders_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_ExportOrders_Ad.Response)
    private static final io.dstore.engine.procs.OmExportOrdersAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmExportOrdersAd.Response();
    }

    public static io.dstore.engine.procs.OmExportOrdersAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmExportOrdersAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_ExportOrders_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1dstore/engine/procedures/om_ExportOrde" +
      "rs_Ad.proto\022 dstore.engine.om_ExportOrde" +
      "rs_Ad\032\032dstore/engine/values.proto\032\031dstor" +
      "e/engine/error.proto\032\033dstore/engine/mess" +
      "age.proto\"\242\010\n\nParameters\0227\n\tfrom_date\030\001 " +
      "\001(\0132$.dstore.engine.values.timestampValu" +
      "e\022\027\n\016from_date_null\030\351\007 \001(\010\0225\n\007to_date\030\002 " +
      "\001(\0132$.dstore.engine.values.timestampValu" +
      "e\022\025\n\014to_date_null\030\352\007 \001(\010\022C\n\027node_charact" +
      "eristic_id1\030\003 \001(\0132\".dstore.engine.values",
      ".integerValue\022%\n\034node_characteristic_id1" +
      "_null\030\353\007 \001(\010\022C\n\027node_characteristic_id2\030" +
      "\004 \001(\0132\".dstore.engine.values.integerValu" +
      "e\022%\n\034node_characteristic_id2_null\030\354\007 \001(\010" +
      "\022C\n\027node_characteristic_id3\030\005 \001(\0132\".dsto" +
      "re.engine.values.integerValue\022%\n\034node_ch" +
      "aracteristic_id3_null\030\355\007 \001(\010\022L\n skip_o_h" +
      "aving_different_o_states\030\006 \001(\0132\".dstore." +
      "engine.values.booleanValue\022.\n%skip_o_hav" +
      "ing_different_o_states_null\030\356\007 \001(\010\022F\n\032ge",
      "t_all_positions_of_order\030\007 \001(\0132\".dstore." +
      "engine.values.booleanValue\022(\n\037get_all_po" +
      "sitions_of_order_null\030\357\007 \001(\010\022@\n\024max_numb" +
      "er_of_orders\030\010 \001(\0132\".dstore.engine.value" +
      "s.integerValue\022\"\n\031max_number_of_orders_n" +
      "ull\030\360\007 \001(\010\022H\n\034include_orders_with_order_" +
      "no\030\t \001(\0132\".dstore.engine.values.integerV" +
      "alue\022*\n!include_orders_with_order_no_nul" +
      "l\030\361\007 \001(\010\022@\n\024get_actual_item_info\030\n \001(\0132\"" +
      ".dstore.engine.values.booleanValue\022\"\n\031ge",
      "t_actual_item_info_null\030\362\007 \001(\010\"\206\026\n\010Respo" +
      "nse\022)\n\005error\030\001 \001(\0132\032.dstore.engine.error" +
      ".Error\022/\n\007message\030\003 \003(\0132\036.dstore.engine." +
      "message.Message\022;\n\003row\030\004 \003(\0132..dstore.en" +
      "gine.om_ExportOrders_Ad.Response.Row\032\340\024\n" +
      "\003Row\022\017\n\006row_id\030\220N \001(\005\022E\n\026delivery_date_a" +
      "nd_time\030\221N \001(\0132$.dstore.engine.values.ti" +
      "mestampValue\022G\n\033delivery_date_and_time_c" +
      "har\030\222N \001(\0132!.dstore.engine.values.string" +
      "Value\022>\n\021net_shipping_cost\030\223N \001(\0132\".dsto",
      "re.engine.values.decimalValue\0225\n\010order_i" +
      "d\030\224N \001(\0132\".dstore.engine.values.integerV" +
      "alue\022=\n\020order_content_id\030\225N \001(\0132\".dstore" +
      ".engine.values.integerValue\022F\n\031precise_n" +
      "et_shipping_cost\030\226N \001(\0132\".dstore.engine." +
      "values.decimalValue\022G\n\032precise_gross_pay" +
      "ment_cost\030\227N \001(\0132\".dstore.engine.values." +
      "decimalValue\0226\n\tperson_id\030\230N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022<\n\017precise_" +
      "net_sum\030\231N \001(\0132\".dstore.engine.values.de",
      "cimalValue\0224\n\010currency\030\232N \001(\0132!.dstore.e" +
      "ngine.values.stringValue\022;\n\016order_state_" +
      "id\030\233N \001(\0132\".dstore.engine.values.integer" +
      "Value\022=\n\020shipping_type_id\030\234N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022?\n\022gross_pa" +
      "yment_cost\030\235N \001(\0132\".dstore.engine.values" +
      ".decimalValue\0229\n\rshipping_type\030\236N \001(\0132!." +
      "dstore.engine.values.stringValue\0225\n\010posi" +
      "tion\030\237N \001(\0132\".dstore.engine.values.integ" +
      "erValue\022E\n\030precise_net_payment_cost\030\240N \001",
      "(\0132\".dstore.engine.values.decimalValue\022?" +
      "\n\022gross_position_sum\030\241N \001(\0132\".dstore.eng" +
      "ine.values.decimalValue\022<\n\017surcharge_val" +
      "ue\030\242N \001(\0132\".dstore.engine.values.decimal" +
      "Value\022H\n\033precise_gross_shipping_cost\030\243N " +
      "\001(\0132\".dstore.engine.values.decimalValue\022" +
      ">\n\021precise_gross_sum\030\244N \001(\0132\".dstore.eng" +
      "ine.values.decimalValue\022;\n\016h_tree_node_i" +
      "d\030\245N \001(\0132\".dstore.engine.values.integerV" +
      "alue\022<\n\017payment_type_id\030\246N \001(\0132\".dstore.",
      "engine.values.integerValue\022>\n\021surcharge_" +
      "type_id\030\247N \001(\0132\".dstore.engine.values.in" +
      "tegerValue\022B\n\023order_date_and_time\030\250N \001(\013" +
      "2$.dstore.engine.values.timestampValue\0222" +
      "\n\006value3\030\251N \001(\0132!.dstore.engine.values.s" +
      "tringValue\0222\n\006value1\030\252N \001(\0132!.dstore.eng" +
      "ine.values.stringValue\0222\n\006value2\030\253N \001(\0132" +
      "!.dstore.engine.values.stringValue\022D\n\030or" +
      "der_date_and_time_char\030\254N \001(\0132!.dstore.e" +
      "ngine.values.stringValue\0224\n\007net_sum\030\255N \001",
      "(\0132\".dstore.engine.values.decimalValue\0224" +
      "\n\007node_id\030\256N \001(\0132\".dstore.engine.values." +
      "integerValue\0228\n\014payment_type\030\257N \001(\0132!.ds" +
      "tore.engine.values.stringValue\022;\n\016positi" +
      "on_count\030\260N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\022=\n\020net_position_sum\030\261N \001(\0132\"" +
      ".dstore.engine.values.decimalValue\022H\n\033su" +
      "rcharge_is_absolute_value\030\262N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022E\n\030precise_" +
      "net_position_sum\030\263N \001(\0132\".dstore.engine.",
      "values.decimalValue\022=\n\020net_payment_cost\030" +
      "\264N \001(\0132\".dstore.engine.values.decimalVal" +
      "ue\022?\n\022delivery_person_id\030\265N \001(\0132\".dstore" +
      ".engine.values.integerValue\0225\n\010quantity\030" +
      "\266N \001(\0132\".dstore.engine.values.integerVal" +
      "ue\022@\n\023gross_shipping_cost\030\267N \001(\0132\".dstor" +
      "e.engine.values.decimalValue\0226\n\tgross_su" +
      "m\030\270N \001(\0132\".dstore.engine.values.decimalV" +
      "alue\0228\n\013currency_id\030\271N \001(\0132\".dstore.engi" +
      "ne.values.integerValue\022G\n\032precise_gross_",
      "position_sum\030\272N \001(\0132\".dstore.engine.valu" +
      "es.decimalValueB\030\n\026io.dstore.engine.proc" +
      "sb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_ExportOrders_Ad_Parameters_descriptor,
        new java.lang.String[] { "FromDate", "FromDateNull", "ToDate", "ToDateNull", "NodeCharacteristicId1", "NodeCharacteristicId1Null", "NodeCharacteristicId2", "NodeCharacteristicId2Null", "NodeCharacteristicId3", "NodeCharacteristicId3Null", "SkipOHavingDifferentOStates", "SkipOHavingDifferentOStatesNull", "GetAllPositionsOfOrder", "GetAllPositionsOfOrderNull", "MaxNumberOfOrders", "MaxNumberOfOrdersNull", "IncludeOrdersWithOrderNo", "IncludeOrdersWithOrderNoNull", "GetActualItemInfo", "GetActualItemInfoNull", });
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_ExportOrders_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_ExportOrders_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "DeliveryDateAndTime", "DeliveryDateAndTimeChar", "NetShippingCost", "OrderId", "OrderContentId", "PreciseNetShippingCost", "PreciseGrossPaymentCost", "PersonId", "PreciseNetSum", "Currency", "OrderStateId", "ShippingTypeId", "GrossPaymentCost", "ShippingType", "Position", "PreciseNetPaymentCost", "GrossPositionSum", "SurchargeValue", "PreciseGrossShippingCost", "PreciseGrossSum", "HTreeNodeId", "PaymentTypeId", "SurchargeTypeId", "OrderDateAndTime", "Value3", "Value1", "Value2", "OrderDateAndTimeChar", "NetSum", "NodeId", "PaymentType", "PositionCount", "NetPositionSum", "SurchargeIsAbsoluteValue", "PreciseNetPositionSum", "NetPaymentCost", "DeliveryPersonId", "Quantity", "GrossShippingCost", "GrossSum", "CurrencyId", "PreciseGrossPositionSum", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
