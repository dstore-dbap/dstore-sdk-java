// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetSimpleProductInfo_Pu.proto

package io.dstore.engine.procs;

public final class ImGetSimpleProductInfoPu {
  private ImGetSimpleProductInfoPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetSimpleProductInfo_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    boolean hasProductTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getProductTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getProductTreeNodeIdOrBuilder();

    /**
     * <code>optional bool product_tree_node_id_null = 1001;</code>
     */
    boolean getProductTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    boolean hasInformationIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    io.dstore.engine.Values.stringValue getInformationIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getInformationIdListOrBuilder();

    /**
     * <code>optional bool information_id_list_null = 1002;</code>
     */
    boolean getInformationIdListNull();

    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    boolean hasTypeOfInformation();
    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    io.dstore.engine.Values.integerValue getTypeOfInformation();
    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getTypeOfInformationOrBuilder();

    /**
     * <code>optional bool type_of_information_null = 1003;</code>
     */
    boolean getTypeOfInformationNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      productTreeNodeIdNull_ = false;
      informationIdListNull_ = false;
      typeOfInformationNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (productTreeNodeId_ != null) {
                subBuilder = productTreeNodeId_.toBuilder();
              }
              productTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(productTreeNodeId_);
                productTreeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (informationIdList_ != null) {
                subBuilder = informationIdList_.toBuilder();
              }
              informationIdList_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(informationIdList_);
                informationIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (typeOfInformation_ != null) {
                subBuilder = typeOfInformation_.toBuilder();
              }
              typeOfInformation_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(typeOfInformation_);
                typeOfInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              productTreeNodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              informationIdListNull_ = input.readBool();
              break;
            }
            case 8024: {

              typeOfInformationNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.Builder.class);
    }

    public static final int PRODUCT_TREE_NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue productTreeNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    public boolean hasProductTreeNodeId() {
      return productTreeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getProductTreeNodeId() {
      return productTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : productTreeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getProductTreeNodeIdOrBuilder() {
      return getProductTreeNodeId();
    }

    public static final int PRODUCT_TREE_NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean productTreeNodeIdNull_;
    /**
     * <code>optional bool product_tree_node_id_null = 1001;</code>
     */
    public boolean getProductTreeNodeIdNull() {
      return productTreeNodeIdNull_;
    }

    public static final int INFORMATION_ID_LIST_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.stringValue informationIdList_;
    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    public boolean hasInformationIdList() {
      return informationIdList_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    public io.dstore.engine.Values.stringValue getInformationIdList() {
      return informationIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : informationIdList_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getInformationIdListOrBuilder() {
      return getInformationIdList();
    }

    public static final int INFORMATION_ID_LIST_NULL_FIELD_NUMBER = 1002;
    private boolean informationIdListNull_;
    /**
     * <code>optional bool information_id_list_null = 1002;</code>
     */
    public boolean getInformationIdListNull() {
      return informationIdListNull_;
    }

    public static final int TYPE_OF_INFORMATION_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue typeOfInformation_;
    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    public boolean hasTypeOfInformation() {
      return typeOfInformation_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getTypeOfInformation() {
      return typeOfInformation_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : typeOfInformation_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getTypeOfInformationOrBuilder() {
      return getTypeOfInformation();
    }

    public static final int TYPE_OF_INFORMATION_NULL_FIELD_NUMBER = 1003;
    private boolean typeOfInformationNull_;
    /**
     * <code>optional bool type_of_information_null = 1003;</code>
     */
    public boolean getTypeOfInformationNull() {
      return typeOfInformationNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (productTreeNodeId_ != null) {
        output.writeMessage(1, getProductTreeNodeId());
      }
      if (informationIdList_ != null) {
        output.writeMessage(2, getInformationIdList());
      }
      if (typeOfInformation_ != null) {
        output.writeMessage(3, getTypeOfInformation());
      }
      if (productTreeNodeIdNull_ != false) {
        output.writeBool(1001, productTreeNodeIdNull_);
      }
      if (informationIdListNull_ != false) {
        output.writeBool(1002, informationIdListNull_);
      }
      if (typeOfInformationNull_ != false) {
        output.writeBool(1003, typeOfInformationNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (productTreeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProductTreeNodeId());
      }
      if (informationIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInformationIdList());
      }
      if (typeOfInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTypeOfInformation());
      }
      if (productTreeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, productTreeNodeIdNull_);
      }
      if (informationIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, informationIdListNull_);
      }
      if (typeOfInformationNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, typeOfInformationNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Parameters)
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (productTreeNodeIdBuilder_ == null) {
          productTreeNodeId_ = null;
        } else {
          productTreeNodeId_ = null;
          productTreeNodeIdBuilder_ = null;
        }
        productTreeNodeIdNull_ = false;

        if (informationIdListBuilder_ == null) {
          informationIdList_ = null;
        } else {
          informationIdList_ = null;
          informationIdListBuilder_ = null;
        }
        informationIdListNull_ = false;

        if (typeOfInformationBuilder_ == null) {
          typeOfInformation_ = null;
        } else {
          typeOfInformation_ = null;
          typeOfInformationBuilder_ = null;
        }
        typeOfInformationNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters build() {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters buildPartial() {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters result = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters(this);
        if (productTreeNodeIdBuilder_ == null) {
          result.productTreeNodeId_ = productTreeNodeId_;
        } else {
          result.productTreeNodeId_ = productTreeNodeIdBuilder_.build();
        }
        result.productTreeNodeIdNull_ = productTreeNodeIdNull_;
        if (informationIdListBuilder_ == null) {
          result.informationIdList_ = informationIdList_;
        } else {
          result.informationIdList_ = informationIdListBuilder_.build();
        }
        result.informationIdListNull_ = informationIdListNull_;
        if (typeOfInformationBuilder_ == null) {
          result.typeOfInformation_ = typeOfInformation_;
        } else {
          result.typeOfInformation_ = typeOfInformationBuilder_.build();
        }
        result.typeOfInformationNull_ = typeOfInformationNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters) {
          return mergeFrom((io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters other) {
        if (other == io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters.getDefaultInstance()) return this;
        if (other.hasProductTreeNodeId()) {
          mergeProductTreeNodeId(other.getProductTreeNodeId());
        }
        if (other.getProductTreeNodeIdNull() != false) {
          setProductTreeNodeIdNull(other.getProductTreeNodeIdNull());
        }
        if (other.hasInformationIdList()) {
          mergeInformationIdList(other.getInformationIdList());
        }
        if (other.getInformationIdListNull() != false) {
          setInformationIdListNull(other.getInformationIdListNull());
        }
        if (other.hasTypeOfInformation()) {
          mergeTypeOfInformation(other.getTypeOfInformation());
        }
        if (other.getTypeOfInformationNull() != false) {
          setTypeOfInformationNull(other.getTypeOfInformationNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue productTreeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> productTreeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public boolean hasProductTreeNodeId() {
        return productTreeNodeIdBuilder_ != null || productTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getProductTreeNodeId() {
        if (productTreeNodeIdBuilder_ == null) {
          return productTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : productTreeNodeId_;
        } else {
          return productTreeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public Builder setProductTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (productTreeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          productTreeNodeId_ = value;
          onChanged();
        } else {
          productTreeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public Builder setProductTreeNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (productTreeNodeIdBuilder_ == null) {
          productTreeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          productTreeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public Builder mergeProductTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (productTreeNodeIdBuilder_ == null) {
          if (productTreeNodeId_ != null) {
            productTreeNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(productTreeNodeId_).mergeFrom(value).buildPartial();
          } else {
            productTreeNodeId_ = value;
          }
          onChanged();
        } else {
          productTreeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public Builder clearProductTreeNodeId() {
        if (productTreeNodeIdBuilder_ == null) {
          productTreeNodeId_ = null;
          onChanged();
        } else {
          productTreeNodeId_ = null;
          productTreeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getProductTreeNodeIdBuilder() {
        
        onChanged();
        return getProductTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getProductTreeNodeIdOrBuilder() {
        if (productTreeNodeIdBuilder_ != null) {
          return productTreeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return productTreeNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : productTreeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue product_tree_node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getProductTreeNodeIdFieldBuilder() {
        if (productTreeNodeIdBuilder_ == null) {
          productTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getProductTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          productTreeNodeId_ = null;
        }
        return productTreeNodeIdBuilder_;
      }

      private boolean productTreeNodeIdNull_ ;
      /**
       * <code>optional bool product_tree_node_id_null = 1001;</code>
       */
      public boolean getProductTreeNodeIdNull() {
        return productTreeNodeIdNull_;
      }
      /**
       * <code>optional bool product_tree_node_id_null = 1001;</code>
       */
      public Builder setProductTreeNodeIdNull(boolean value) {
        
        productTreeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool product_tree_node_id_null = 1001;</code>
       */
      public Builder clearProductTreeNodeIdNull() {
        
        productTreeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue informationIdList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> informationIdListBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public boolean hasInformationIdList() {
        return informationIdListBuilder_ != null || informationIdList_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public io.dstore.engine.Values.stringValue getInformationIdList() {
        if (informationIdListBuilder_ == null) {
          return informationIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : informationIdList_;
        } else {
          return informationIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public Builder setInformationIdList(io.dstore.engine.Values.stringValue value) {
        if (informationIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          informationIdList_ = value;
          onChanged();
        } else {
          informationIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public Builder setInformationIdList(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (informationIdListBuilder_ == null) {
          informationIdList_ = builderForValue.build();
          onChanged();
        } else {
          informationIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public Builder mergeInformationIdList(io.dstore.engine.Values.stringValue value) {
        if (informationIdListBuilder_ == null) {
          if (informationIdList_ != null) {
            informationIdList_ =
              io.dstore.engine.Values.stringValue.newBuilder(informationIdList_).mergeFrom(value).buildPartial();
          } else {
            informationIdList_ = value;
          }
          onChanged();
        } else {
          informationIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public Builder clearInformationIdList() {
        if (informationIdListBuilder_ == null) {
          informationIdList_ = null;
          onChanged();
        } else {
          informationIdList_ = null;
          informationIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getInformationIdListBuilder() {
        
        onChanged();
        return getInformationIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getInformationIdListOrBuilder() {
        if (informationIdListBuilder_ != null) {
          return informationIdListBuilder_.getMessageOrBuilder();
        } else {
          return informationIdList_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : informationIdList_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue information_id_list = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getInformationIdListFieldBuilder() {
        if (informationIdListBuilder_ == null) {
          informationIdListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getInformationIdList(),
                  getParentForChildren(),
                  isClean());
          informationIdList_ = null;
        }
        return informationIdListBuilder_;
      }

      private boolean informationIdListNull_ ;
      /**
       * <code>optional bool information_id_list_null = 1002;</code>
       */
      public boolean getInformationIdListNull() {
        return informationIdListNull_;
      }
      /**
       * <code>optional bool information_id_list_null = 1002;</code>
       */
      public Builder setInformationIdListNull(boolean value) {
        
        informationIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool information_id_list_null = 1002;</code>
       */
      public Builder clearInformationIdListNull() {
        
        informationIdListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue typeOfInformation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> typeOfInformationBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public boolean hasTypeOfInformation() {
        return typeOfInformationBuilder_ != null || typeOfInformation_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getTypeOfInformation() {
        if (typeOfInformationBuilder_ == null) {
          return typeOfInformation_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : typeOfInformation_;
        } else {
          return typeOfInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public Builder setTypeOfInformation(io.dstore.engine.Values.integerValue value) {
        if (typeOfInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeOfInformation_ = value;
          onChanged();
        } else {
          typeOfInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public Builder setTypeOfInformation(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (typeOfInformationBuilder_ == null) {
          typeOfInformation_ = builderForValue.build();
          onChanged();
        } else {
          typeOfInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public Builder mergeTypeOfInformation(io.dstore.engine.Values.integerValue value) {
        if (typeOfInformationBuilder_ == null) {
          if (typeOfInformation_ != null) {
            typeOfInformation_ =
              io.dstore.engine.Values.integerValue.newBuilder(typeOfInformation_).mergeFrom(value).buildPartial();
          } else {
            typeOfInformation_ = value;
          }
          onChanged();
        } else {
          typeOfInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public Builder clearTypeOfInformation() {
        if (typeOfInformationBuilder_ == null) {
          typeOfInformation_ = null;
          onChanged();
        } else {
          typeOfInformation_ = null;
          typeOfInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getTypeOfInformationBuilder() {
        
        onChanged();
        return getTypeOfInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTypeOfInformationOrBuilder() {
        if (typeOfInformationBuilder_ != null) {
          return typeOfInformationBuilder_.getMessageOrBuilder();
        } else {
          return typeOfInformation_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : typeOfInformation_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue type_of_information = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getTypeOfInformationFieldBuilder() {
        if (typeOfInformationBuilder_ == null) {
          typeOfInformationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getTypeOfInformation(),
                  getParentForChildren(),
                  isClean());
          typeOfInformation_ = null;
        }
        return typeOfInformationBuilder_;
      }

      private boolean typeOfInformationNull_ ;
      /**
       * <code>optional bool type_of_information_null = 1003;</code>
       */
      public boolean getTypeOfInformationNull() {
        return typeOfInformationNull_;
      }
      /**
       * <code>optional bool type_of_information_null = 1003;</code>
       */
      public Builder setTypeOfInformationNull(boolean value) {
        
        typeOfInformationNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool type_of_information_null = 1003;</code>
       */
      public Builder clearTypeOfInformationNull() {
        
        typeOfInformationNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Parameters)
    private static final io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters();
    }

    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetSimpleProductInfo_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      boolean hasValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      boolean hasDetails();
      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDetails();
      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDetailsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      boolean hasBinaryPropertyValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBinaryPropertyValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBinaryPropertyValueIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      boolean hasBinaryCodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBinaryCodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (valueId_ != null) {
                  subBuilder = valueId_.toBuilder();
                }
                valueId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueId_);
                  valueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (details_ != null) {
                  subBuilder = details_.toBuilder();
                }
                details_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(details_);
                  details_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (binaryPropertyValueId_ != null) {
                  subBuilder = binaryPropertyValueId_.toBuilder();
                }
                binaryPropertyValueId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryPropertyValueId_);
                  binaryPropertyValueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (binaryCodeId_ != null) {
                  subBuilder = binaryCodeId_.toBuilder();
                }
                binaryCodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryCodeId_);
                  binaryCodeId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
       *
       * <pre>
       * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
       *
       * <pre>
       * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int VALUE_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue value_;
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue() {
        return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
       *
       * <pre>
       * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int VALUE_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue valueId_;
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public boolean hasValueId() {
        return valueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getValueId() {
        return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
        return getValueId();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int DETAILS_FIELD_NUMBER = 20001;
      private io.dstore.engine.Values.stringValue details_;
      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      public boolean hasDetails() {
        return details_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDetails() {
        return details_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : details_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
       *
       * <pre>
       * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDetailsOrBuilder() {
        return getDetails();
      }

      public static final int BINARY_PROPERTY_VALUE_ID_FIELD_NUMBER = 30001;
      private io.dstore.engine.Values.integerValue binaryPropertyValueId_;
      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      public boolean hasBinaryPropertyValueId() {
        return binaryPropertyValueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBinaryPropertyValueId() {
        return binaryPropertyValueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryPropertyValueId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
       *
       * <pre>
       * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBinaryPropertyValueIdOrBuilder() {
        return getBinaryPropertyValueId();
      }

      public static final int BINARY_CODE_ID_FIELD_NUMBER = 30002;
      private io.dstore.engine.Values.integerValue binaryCodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      public boolean hasBinaryCodeId() {
        return binaryCodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBinaryCodeId() {
        return binaryCodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryCodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
       *
       * <pre>
       * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
        return getBinaryCodeId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10001, getTreeNodeId());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(10002, getNodeCharacteristicId());
        }
        if (value_ != null) {
          output.writeMessage(10003, getValue());
        }
        if (valueId_ != null) {
          output.writeMessage(10004, getValueId());
        }
        if (sortNo_ != null) {
          output.writeMessage(10005, getSortNo());
        }
        if (details_ != null) {
          output.writeMessage(20001, getDetails());
        }
        if (binaryPropertyValueId_ != null) {
          output.writeMessage(30001, getBinaryPropertyValueId());
        }
        if (binaryCodeId_ != null) {
          output.writeMessage(30002, getBinaryCodeId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTreeNodeId());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getNodeCharacteristicId());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getValue());
        }
        if (valueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getValueId());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getSortNo());
        }
        if (details_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20001, getDetails());
        }
        if (binaryPropertyValueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30001, getBinaryPropertyValueId());
        }
        if (binaryCodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30002, getBinaryCodeId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row)
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (valueIdBuilder_ == null) {
            valueId_ = null;
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (detailsBuilder_ == null) {
            details_ = null;
          } else {
            details_ = null;
            detailsBuilder_ = null;
          }
          if (binaryPropertyValueIdBuilder_ == null) {
            binaryPropertyValueId_ = null;
          } else {
            binaryPropertyValueId_ = null;
            binaryPropertyValueIdBuilder_ = null;
          }
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row build() {
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row buildPartial() {
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row result = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (valueIdBuilder_ == null) {
            result.valueId_ = valueId_;
          } else {
            result.valueId_ = valueIdBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (detailsBuilder_ == null) {
            result.details_ = details_;
          } else {
            result.details_ = detailsBuilder_.build();
          }
          if (binaryPropertyValueIdBuilder_ == null) {
            result.binaryPropertyValueId_ = binaryPropertyValueId_;
          } else {
            result.binaryPropertyValueId_ = binaryPropertyValueIdBuilder_.build();
          }
          if (binaryCodeIdBuilder_ == null) {
            result.binaryCodeId_ = binaryCodeId_;
          } else {
            result.binaryCodeId_ = binaryCodeIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row other) {
          if (other == io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasValueId()) {
            mergeValueId(other.getValueId());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasDetails()) {
            mergeDetails(other.getDetails());
          }
          if (other.hasBinaryPropertyValueId()) {
            mergeBinaryPropertyValueId(other.getBinaryPropertyValueId());
          }
          if (other.hasBinaryCodeId()) {
            mergeBinaryCodeId(other.getBinaryCodeId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10001;</code>
         *
         * <pre>
         * "&#64;ProductTreeNodeID" oder die "TreeNodeID" eines direkten Nachfolgers
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10002;</code>
         *
         * <pre>
         * ID eines in "&#64;InformationIDList" angegebenen Merkmals.Hinweis : Jede "TreeNodeID - NodeCharacteristicID"-Kombination ist eindeutig, eine Sortierung findet ausdrücklich NICHT statt, es werden nur Datensätze geliefert, bei denen "Value" NICHT "NULL" ist !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public Builder setValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public Builder setValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public Builder mergeValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.engine.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10003;</code>
         *
         * <pre>
         * Aktuelle, direkte, nicht rekursiv ausgewertete und auch nicht "formatierte" Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal "NodeCharacteristicID". Hinweis : Datums-Eigenschaften haben daher dasFormat "mm.dd.yyyy" !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.engine.Values.integerValue valueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> valueIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public boolean hasValueId() {
          return valueIdBuilder_ != null || valueId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getValueId() {
          if (valueIdBuilder_ == null) {
            return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          } else {
            return valueIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder setValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueId_ = value;
            onChanged();
          } else {
            valueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder setValueId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (valueIdBuilder_ == null) {
            valueId_ = builderForValue.build();
            onChanged();
          } else {
            valueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder mergeValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (valueId_ != null) {
              valueId_ =
                io.dstore.engine.Values.integerValue.newBuilder(valueId_).mergeFrom(value).buildPartial();
            } else {
              valueId_ = value;
            }
            onChanged();
          } else {
            valueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder clearValueId() {
          if (valueIdBuilder_ == null) {
            valueId_ = null;
            onChanged();
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getValueIdBuilder() {
          
          onChanged();
          return getValueIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
          if (valueIdBuilder_ != null) {
            return valueIdBuilder_.getMessageOrBuilder();
          } else {
            return valueId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10004;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getValueIdFieldBuilder() {
          if (valueIdBuilder_ == null) {
            valueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getValueId(),
                    getParentForChildren(),
                    isClean());
            valueId_ = null;
          }
          return valueIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "Value" innerhalb aller Werte zum Merkmal "NodeCharacteristicID", wobei gilt : eine größere "SortNo" bedeutet eine höhere Priorisierung (d.h. es muß quasi eine absteigende Sortierung angewandt werden).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.stringValue details_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> detailsBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public boolean hasDetails() {
          return detailsBuilder_ != null || details_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDetails() {
          if (detailsBuilder_ == null) {
            return details_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : details_;
          } else {
            return detailsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public Builder setDetails(io.dstore.engine.Values.stringValue value) {
          if (detailsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            details_ = value;
            onChanged();
          } else {
            detailsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public Builder setDetails(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (detailsBuilder_ == null) {
            details_ = builderForValue.build();
            onChanged();
          } else {
            detailsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public Builder mergeDetails(io.dstore.engine.Values.stringValue value) {
          if (detailsBuilder_ == null) {
            if (details_ != null) {
              details_ =
                io.dstore.engine.Values.stringValue.newBuilder(details_).mergeFrom(value).buildPartial();
            } else {
              details_ = value;
            }
            onChanged();
          } else {
            detailsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public Builder clearDetails() {
          if (detailsBuilder_ == null) {
            details_ = null;
            onChanged();
          } else {
            details_ = null;
            detailsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDetailsBuilder() {
          
          onChanged();
          return getDetailsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDetailsOrBuilder() {
          if (detailsBuilder_ != null) {
            return detailsBuilder_.getMessageOrBuilder();
          } else {
            return details_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : details_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue details = 20001;</code>
         *
         * <pre>
         * "ValueDetails", die zur aktuellen, direkten (nicht rekursiv ausgewerteten) Eigenschaft des zur "TreeNodeID" zugehörigen Artikel-Elementes zum Merkmal "NodeCharacteristicID" hinterlegt ist.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDetailsFieldBuilder() {
          if (detailsBuilder_ == null) {
            detailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDetails(),
                    getParentForChildren(),
                    isClean());
            details_ = null;
          }
          return detailsBuilder_;
        }

        private io.dstore.engine.Values.integerValue binaryPropertyValueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> binaryPropertyValueIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public boolean hasBinaryPropertyValueId() {
          return binaryPropertyValueIdBuilder_ != null || binaryPropertyValueId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBinaryPropertyValueId() {
          if (binaryPropertyValueIdBuilder_ == null) {
            return binaryPropertyValueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryPropertyValueId_;
          } else {
            return binaryPropertyValueIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public Builder setBinaryPropertyValueId(io.dstore.engine.Values.integerValue value) {
          if (binaryPropertyValueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryPropertyValueId_ = value;
            onChanged();
          } else {
            binaryPropertyValueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public Builder setBinaryPropertyValueId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (binaryPropertyValueIdBuilder_ == null) {
            binaryPropertyValueId_ = builderForValue.build();
            onChanged();
          } else {
            binaryPropertyValueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public Builder mergeBinaryPropertyValueId(io.dstore.engine.Values.integerValue value) {
          if (binaryPropertyValueIdBuilder_ == null) {
            if (binaryPropertyValueId_ != null) {
              binaryPropertyValueId_ =
                io.dstore.engine.Values.integerValue.newBuilder(binaryPropertyValueId_).mergeFrom(value).buildPartial();
            } else {
              binaryPropertyValueId_ = value;
            }
            onChanged();
          } else {
            binaryPropertyValueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public Builder clearBinaryPropertyValueId() {
          if (binaryPropertyValueIdBuilder_ == null) {
            binaryPropertyValueId_ = null;
            onChanged();
          } else {
            binaryPropertyValueId_ = null;
            binaryPropertyValueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBinaryPropertyValueIdBuilder() {
          
          onChanged();
          return getBinaryPropertyValueIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBinaryPropertyValueIdOrBuilder() {
          if (binaryPropertyValueIdBuilder_ != null) {
            return binaryPropertyValueIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryPropertyValueId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryPropertyValueId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_property_value_id = 30001;</code>
         *
         * <pre>
         * ID einer Eigenschaft von "Binaries", die in "&#64;InformationIDList" angegeben wurde. Hinweis : Zu einer "TreeNodeID - BinaryCharacteristicValueID"-Kombination kann es MEHRERE Datensätze geben, eine Sortierung findet ausdrücklich NICHT statt !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBinaryPropertyValueIdFieldBuilder() {
          if (binaryPropertyValueIdBuilder_ == null) {
            binaryPropertyValueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBinaryPropertyValueId(),
                    getParentForChildren(),
                    isClean());
            binaryPropertyValueId_ = null;
          }
          return binaryPropertyValueIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue binaryCodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> binaryCodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public boolean hasBinaryCodeId() {
          return binaryCodeIdBuilder_ != null || binaryCodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            return binaryCodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          } else {
            return binaryCodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public Builder setBinaryCodeId(io.dstore.engine.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryCodeId_ = value;
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public Builder setBinaryCodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = builderForValue.build();
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public Builder mergeBinaryCodeId(io.dstore.engine.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (binaryCodeId_ != null) {
              binaryCodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(binaryCodeId_).mergeFrom(value).buildPartial();
            } else {
              binaryCodeId_ = value;
            }
            onChanged();
          } else {
            binaryCodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public Builder clearBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
            onChanged();
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBinaryCodeIdBuilder() {
          
          onChanged();
          return getBinaryCodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
          if (binaryCodeIdBuilder_ != null) {
            return binaryCodeIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryCodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue binary_code_id = 30002;</code>
         *
         * <pre>
         * ID eines "Binaries", das dem zur "TreeNodeID" zugehörigen Artikel-Element zugewiesen ist und die Eigenschaft "BinaryPropertyValueID" besitzt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBinaryCodeIdFieldBuilder() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBinaryCodeId(),
                    getParentForChildren(),
                    isClean());
            binaryCodeId_ = null;
          }
          return binaryCodeIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row)
      private static final io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row();
      }

      public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetSimpleProductInfo_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetSimpleProductInfo_Pu.Response)
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.class, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor;
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response build() {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response buildPartial() {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response result = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response) {
          return mergeFrom((io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response other) {
        if (other == io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetSimpleProductInfo_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.Row.Builder, io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetSimpleProductInfo_Pu.Response)
    private static final io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response();
    }

    public static io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetSimpleProductInfoPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9dstore/engine/procedures/im_GetSimpleP" +
      "roductInfo_Pu.proto\022(dstore.engine.im_Ge" +
      "tSimpleProductInfo_Pu\032\032dstore/engine/val" +
      "ues.proto\032\031dstore/engine/error.proto\032\033ds" +
      "tore/engine/message.proto\032#dstore/engine" +
      "/metainformation.proto\"\271\002\n\nParameters\022@\n" +
      "\024product_tree_node_id\030\001 \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022\"\n\031product_tree_" +
      "node_id_null\030\351\007 \001(\010\022>\n\023information_id_li" +
      "st\030\002 \001(\0132!.dstore.engine.values.stringVa",
      "lue\022!\n\030information_id_list_null\030\352\007 \001(\010\022?" +
      "\n\023type_of_information\030\003 \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022!\n\030type_of_infor" +
      "mation_null\030\353\007 \001(\010\"\352\005\n\010Response\022)\n\005error" +
      "\030\001 \001(\0132\032.dstore.engine.error.Error\022H\n\020me" +
      "ta_information\030\002 \003(\0132..dstore.engine.met" +
      "ainformation.MetaInformation\022/\n\007message\030" +
      "\003 \003(\0132\036.dstore.engine.message.Message\022C\n" +
      "\003row\030\004 \003(\01326.dstore.engine.im_GetSimpleP" +
      "roductInfo_Pu.Response.Row\032\362\003\n\003Row\022\017\n\006ro",
      "w_id\030\220N \001(\005\0229\n\014tree_node_id\030\221N \001(\0132\".dst" +
      "ore.engine.values.integerValue\022C\n\026node_c" +
      "haracteristic_id\030\222N \001(\0132\".dstore.engine." +
      "values.integerValue\0221\n\005value\030\223N \001(\0132!.ds" +
      "tore.engine.values.stringValue\0225\n\010value_" +
      "id\030\224N \001(\0132\".dstore.engine.values.integer" +
      "Value\0224\n\007sort_no\030\225N \001(\0132\".dstore.engine." +
      "values.integerValue\0224\n\007details\030\241\234\001 \001(\0132!" +
      ".dstore.engine.values.stringValue\022F\n\030bin" +
      "ary_property_value_id\030\261\352\001 \001(\0132\".dstore.e",
      "ngine.values.integerValue\022<\n\016binary_code" +
      "_id\030\262\352\001 \001(\0132\".dstore.engine.values.integ" +
      "erValueB\030\n\026io.dstore.engine.procsb\006proto" +
      "3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Parameters_descriptor,
        new java.lang.String[] { "ProductTreeNodeId", "ProductTreeNodeIdNull", "InformationIdList", "InformationIdListNull", "TypeOfInformation", "TypeOfInformationNull", });
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetSimpleProductInfo_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TreeNodeId", "NodeCharacteristicId", "Value", "ValueId", "SortNo", "Details", "BinaryPropertyValueId", "BinaryCodeId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
