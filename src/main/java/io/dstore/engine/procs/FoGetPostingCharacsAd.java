// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/fo_GetPostingCharacs_Ad.proto

package io.dstore.engine.procs;

public final class FoGetPostingCharacsAd {
  private FoGetPostingCharacsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    boolean hasPostingCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getPostingCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder();

    /**
     * <code>optional bool posting_characteristic_id_null = 1001;</code>
     */
    boolean getPostingCharacteristicIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    boolean hasGetAssignedForumsOrCategories();
    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    io.dstore.engine.Values.integerValue getGetAssignedForumsOrCategories();
    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getGetAssignedForumsOrCategoriesOrBuilder();

    /**
     * <code>optional bool get_assigned_forums_or_categories_null = 1002;</code>
     */
    boolean getGetAssignedForumsOrCategoriesNull();

    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    boolean hasCharacsAssignedToForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    io.dstore.engine.Values.integerValue getCharacsAssignedToForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToForumIdOrBuilder();

    /**
     * <code>optional bool characs_assigned_to_forum_id_null = 1003;</code>
     */
    boolean getCharacsAssignedToForumIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    boolean hasCharacsAssignedToCategoryId();
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    io.dstore.engine.Values.integerValue getCharacsAssignedToCategoryId();
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToCategoryIdOrBuilder();

    /**
     * <code>optional bool characs_assigned_to_category_id_null = 1004;</code>
     */
    boolean getCharacsAssignedToCategoryIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      postingCharacteristicIdNull_ = false;
      getAssignedForumsOrCategoriesNull_ = false;
      characsAssignedToForumIdNull_ = false;
      characsAssignedToCategoryIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (postingCharacteristicId_ != null) {
                subBuilder = postingCharacteristicId_.toBuilder();
              }
              postingCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(postingCharacteristicId_);
                postingCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (getAssignedForumsOrCategories_ != null) {
                subBuilder = getAssignedForumsOrCategories_.toBuilder();
              }
              getAssignedForumsOrCategories_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAssignedForumsOrCategories_);
                getAssignedForumsOrCategories_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (characsAssignedToForumId_ != null) {
                subBuilder = characsAssignedToForumId_.toBuilder();
              }
              characsAssignedToForumId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characsAssignedToForumId_);
                characsAssignedToForumId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (characsAssignedToCategoryId_ != null) {
                subBuilder = characsAssignedToCategoryId_.toBuilder();
              }
              characsAssignedToCategoryId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characsAssignedToCategoryId_);
                characsAssignedToCategoryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              postingCharacteristicIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              getAssignedForumsOrCategoriesNull_ = input.readBool();
              break;
            }
            case 8024: {

              characsAssignedToForumIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              characsAssignedToCategoryIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.Builder.class);
    }

    public static final int POSTING_CHARACTERISTIC_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue postingCharacteristicId_;
    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    public boolean hasPostingCharacteristicId() {
      return postingCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getPostingCharacteristicId() {
      return postingCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
      return getPostingCharacteristicId();
    }

    public static final int POSTING_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1001;
    private boolean postingCharacteristicIdNull_;
    /**
     * <code>optional bool posting_characteristic_id_null = 1001;</code>
     */
    public boolean getPostingCharacteristicIdNull() {
      return postingCharacteristicIdNull_;
    }

    public static final int GET_ASSIGNED_FORUMS_OR_CATEGORIES_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue getAssignedForumsOrCategories_;
    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    public boolean hasGetAssignedForumsOrCategories() {
      return getAssignedForumsOrCategories_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getGetAssignedForumsOrCategories() {
      return getAssignedForumsOrCategories_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : getAssignedForumsOrCategories_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getGetAssignedForumsOrCategoriesOrBuilder() {
      return getGetAssignedForumsOrCategories();
    }

    public static final int GET_ASSIGNED_FORUMS_OR_CATEGORIES_NULL_FIELD_NUMBER = 1002;
    private boolean getAssignedForumsOrCategoriesNull_;
    /**
     * <code>optional bool get_assigned_forums_or_categories_null = 1002;</code>
     */
    public boolean getGetAssignedForumsOrCategoriesNull() {
      return getAssignedForumsOrCategoriesNull_;
    }

    public static final int CHARACS_ASSIGNED_TO_FORUM_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue characsAssignedToForumId_;
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    public boolean hasCharacsAssignedToForumId() {
      return characsAssignedToForumId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getCharacsAssignedToForumId() {
      return characsAssignedToForumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToForumId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToForumIdOrBuilder() {
      return getCharacsAssignedToForumId();
    }

    public static final int CHARACS_ASSIGNED_TO_FORUM_ID_NULL_FIELD_NUMBER = 1003;
    private boolean characsAssignedToForumIdNull_;
    /**
     * <code>optional bool characs_assigned_to_forum_id_null = 1003;</code>
     */
    public boolean getCharacsAssignedToForumIdNull() {
      return characsAssignedToForumIdNull_;
    }

    public static final int CHARACS_ASSIGNED_TO_CATEGORY_ID_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue characsAssignedToCategoryId_;
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    public boolean hasCharacsAssignedToCategoryId() {
      return characsAssignedToCategoryId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getCharacsAssignedToCategoryId() {
      return characsAssignedToCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToCategoryId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToCategoryIdOrBuilder() {
      return getCharacsAssignedToCategoryId();
    }

    public static final int CHARACS_ASSIGNED_TO_CATEGORY_ID_NULL_FIELD_NUMBER = 1004;
    private boolean characsAssignedToCategoryIdNull_;
    /**
     * <code>optional bool characs_assigned_to_category_id_null = 1004;</code>
     */
    public boolean getCharacsAssignedToCategoryIdNull() {
      return characsAssignedToCategoryIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (postingCharacteristicId_ != null) {
        output.writeMessage(1, getPostingCharacteristicId());
      }
      if (getAssignedForumsOrCategories_ != null) {
        output.writeMessage(2, getGetAssignedForumsOrCategories());
      }
      if (characsAssignedToForumId_ != null) {
        output.writeMessage(3, getCharacsAssignedToForumId());
      }
      if (characsAssignedToCategoryId_ != null) {
        output.writeMessage(4, getCharacsAssignedToCategoryId());
      }
      if (postingCharacteristicIdNull_ != false) {
        output.writeBool(1001, postingCharacteristicIdNull_);
      }
      if (getAssignedForumsOrCategoriesNull_ != false) {
        output.writeBool(1002, getAssignedForumsOrCategoriesNull_);
      }
      if (characsAssignedToForumIdNull_ != false) {
        output.writeBool(1003, characsAssignedToForumIdNull_);
      }
      if (characsAssignedToCategoryIdNull_ != false) {
        output.writeBool(1004, characsAssignedToCategoryIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (postingCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPostingCharacteristicId());
      }
      if (getAssignedForumsOrCategories_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGetAssignedForumsOrCategories());
      }
      if (characsAssignedToForumId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCharacsAssignedToForumId());
      }
      if (characsAssignedToCategoryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCharacsAssignedToCategoryId());
      }
      if (postingCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, postingCharacteristicIdNull_);
      }
      if (getAssignedForumsOrCategoriesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, getAssignedForumsOrCategoriesNull_);
      }
      if (characsAssignedToForumIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, characsAssignedToForumIdNull_);
      }
      if (characsAssignedToCategoryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, characsAssignedToCategoryIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Ad.Parameters)
        io.dstore.engine.procs.FoGetPostingCharacsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (postingCharacteristicIdBuilder_ == null) {
          postingCharacteristicId_ = null;
        } else {
          postingCharacteristicId_ = null;
          postingCharacteristicIdBuilder_ = null;
        }
        postingCharacteristicIdNull_ = false;

        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          getAssignedForumsOrCategories_ = null;
        } else {
          getAssignedForumsOrCategories_ = null;
          getAssignedForumsOrCategoriesBuilder_ = null;
        }
        getAssignedForumsOrCategoriesNull_ = false;

        if (characsAssignedToForumIdBuilder_ == null) {
          characsAssignedToForumId_ = null;
        } else {
          characsAssignedToForumId_ = null;
          characsAssignedToForumIdBuilder_ = null;
        }
        characsAssignedToForumIdNull_ = false;

        if (characsAssignedToCategoryIdBuilder_ == null) {
          characsAssignedToCategoryId_ = null;
        } else {
          characsAssignedToCategoryId_ = null;
          characsAssignedToCategoryIdBuilder_ = null;
        }
        characsAssignedToCategoryIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters build() {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters buildPartial() {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters result = new io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters(this);
        if (postingCharacteristicIdBuilder_ == null) {
          result.postingCharacteristicId_ = postingCharacteristicId_;
        } else {
          result.postingCharacteristicId_ = postingCharacteristicIdBuilder_.build();
        }
        result.postingCharacteristicIdNull_ = postingCharacteristicIdNull_;
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          result.getAssignedForumsOrCategories_ = getAssignedForumsOrCategories_;
        } else {
          result.getAssignedForumsOrCategories_ = getAssignedForumsOrCategoriesBuilder_.build();
        }
        result.getAssignedForumsOrCategoriesNull_ = getAssignedForumsOrCategoriesNull_;
        if (characsAssignedToForumIdBuilder_ == null) {
          result.characsAssignedToForumId_ = characsAssignedToForumId_;
        } else {
          result.characsAssignedToForumId_ = characsAssignedToForumIdBuilder_.build();
        }
        result.characsAssignedToForumIdNull_ = characsAssignedToForumIdNull_;
        if (characsAssignedToCategoryIdBuilder_ == null) {
          result.characsAssignedToCategoryId_ = characsAssignedToCategoryId_;
        } else {
          result.characsAssignedToCategoryId_ = characsAssignedToCategoryIdBuilder_.build();
        }
        result.characsAssignedToCategoryIdNull_ = characsAssignedToCategoryIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters other) {
        if (other == io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasPostingCharacteristicId()) {
          mergePostingCharacteristicId(other.getPostingCharacteristicId());
        }
        if (other.getPostingCharacteristicIdNull() != false) {
          setPostingCharacteristicIdNull(other.getPostingCharacteristicIdNull());
        }
        if (other.hasGetAssignedForumsOrCategories()) {
          mergeGetAssignedForumsOrCategories(other.getGetAssignedForumsOrCategories());
        }
        if (other.getGetAssignedForumsOrCategoriesNull() != false) {
          setGetAssignedForumsOrCategoriesNull(other.getGetAssignedForumsOrCategoriesNull());
        }
        if (other.hasCharacsAssignedToForumId()) {
          mergeCharacsAssignedToForumId(other.getCharacsAssignedToForumId());
        }
        if (other.getCharacsAssignedToForumIdNull() != false) {
          setCharacsAssignedToForumIdNull(other.getCharacsAssignedToForumIdNull());
        }
        if (other.hasCharacsAssignedToCategoryId()) {
          mergeCharacsAssignedToCategoryId(other.getCharacsAssignedToCategoryId());
        }
        if (other.getCharacsAssignedToCategoryIdNull() != false) {
          setCharacsAssignedToCategoryIdNull(other.getCharacsAssignedToCategoryIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue postingCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> postingCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public boolean hasPostingCharacteristicId() {
        return postingCharacteristicIdBuilder_ != null || postingCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getPostingCharacteristicId() {
        if (postingCharacteristicIdBuilder_ == null) {
          return postingCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
        } else {
          return postingCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public Builder setPostingCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (postingCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          postingCharacteristicId_ = value;
          onChanged();
        } else {
          postingCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public Builder setPostingCharacteristicId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (postingCharacteristicIdBuilder_ == null) {
          postingCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          postingCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public Builder mergePostingCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (postingCharacteristicIdBuilder_ == null) {
          if (postingCharacteristicId_ != null) {
            postingCharacteristicId_ =
              io.dstore.engine.Values.integerValue.newBuilder(postingCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            postingCharacteristicId_ = value;
          }
          onChanged();
        } else {
          postingCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public Builder clearPostingCharacteristicId() {
        if (postingCharacteristicIdBuilder_ == null) {
          postingCharacteristicId_ = null;
          onChanged();
        } else {
          postingCharacteristicId_ = null;
          postingCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPostingCharacteristicIdBuilder() {
        
        onChanged();
        return getPostingCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
        if (postingCharacteristicIdBuilder_ != null) {
          return postingCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return postingCharacteristicId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPostingCharacteristicIdFieldBuilder() {
        if (postingCharacteristicIdBuilder_ == null) {
          postingCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPostingCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          postingCharacteristicId_ = null;
        }
        return postingCharacteristicIdBuilder_;
      }

      private boolean postingCharacteristicIdNull_ ;
      /**
       * <code>optional bool posting_characteristic_id_null = 1001;</code>
       */
      public boolean getPostingCharacteristicIdNull() {
        return postingCharacteristicIdNull_;
      }
      /**
       * <code>optional bool posting_characteristic_id_null = 1001;</code>
       */
      public Builder setPostingCharacteristicIdNull(boolean value) {
        
        postingCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool posting_characteristic_id_null = 1001;</code>
       */
      public Builder clearPostingCharacteristicIdNull() {
        
        postingCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue getAssignedForumsOrCategories_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> getAssignedForumsOrCategoriesBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public boolean hasGetAssignedForumsOrCategories() {
        return getAssignedForumsOrCategoriesBuilder_ != null || getAssignedForumsOrCategories_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getGetAssignedForumsOrCategories() {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          return getAssignedForumsOrCategories_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : getAssignedForumsOrCategories_;
        } else {
          return getAssignedForumsOrCategoriesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public Builder setGetAssignedForumsOrCategories(io.dstore.engine.Values.integerValue value) {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAssignedForumsOrCategories_ = value;
          onChanged();
        } else {
          getAssignedForumsOrCategoriesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public Builder setGetAssignedForumsOrCategories(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          getAssignedForumsOrCategories_ = builderForValue.build();
          onChanged();
        } else {
          getAssignedForumsOrCategoriesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public Builder mergeGetAssignedForumsOrCategories(io.dstore.engine.Values.integerValue value) {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          if (getAssignedForumsOrCategories_ != null) {
            getAssignedForumsOrCategories_ =
              io.dstore.engine.Values.integerValue.newBuilder(getAssignedForumsOrCategories_).mergeFrom(value).buildPartial();
          } else {
            getAssignedForumsOrCategories_ = value;
          }
          onChanged();
        } else {
          getAssignedForumsOrCategoriesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public Builder clearGetAssignedForumsOrCategories() {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          getAssignedForumsOrCategories_ = null;
          onChanged();
        } else {
          getAssignedForumsOrCategories_ = null;
          getAssignedForumsOrCategoriesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getGetAssignedForumsOrCategoriesBuilder() {
        
        onChanged();
        return getGetAssignedForumsOrCategoriesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getGetAssignedForumsOrCategoriesOrBuilder() {
        if (getAssignedForumsOrCategoriesBuilder_ != null) {
          return getAssignedForumsOrCategoriesBuilder_.getMessageOrBuilder();
        } else {
          return getAssignedForumsOrCategories_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : getAssignedForumsOrCategories_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_assigned_forums_or_categories = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getGetAssignedForumsOrCategoriesFieldBuilder() {
        if (getAssignedForumsOrCategoriesBuilder_ == null) {
          getAssignedForumsOrCategoriesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getGetAssignedForumsOrCategories(),
                  getParentForChildren(),
                  isClean());
          getAssignedForumsOrCategories_ = null;
        }
        return getAssignedForumsOrCategoriesBuilder_;
      }

      private boolean getAssignedForumsOrCategoriesNull_ ;
      /**
       * <code>optional bool get_assigned_forums_or_categories_null = 1002;</code>
       */
      public boolean getGetAssignedForumsOrCategoriesNull() {
        return getAssignedForumsOrCategoriesNull_;
      }
      /**
       * <code>optional bool get_assigned_forums_or_categories_null = 1002;</code>
       */
      public Builder setGetAssignedForumsOrCategoriesNull(boolean value) {
        
        getAssignedForumsOrCategoriesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_assigned_forums_or_categories_null = 1002;</code>
       */
      public Builder clearGetAssignedForumsOrCategoriesNull() {
        
        getAssignedForumsOrCategoriesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue characsAssignedToForumId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> characsAssignedToForumIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public boolean hasCharacsAssignedToForumId() {
        return characsAssignedToForumIdBuilder_ != null || characsAssignedToForumId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getCharacsAssignedToForumId() {
        if (characsAssignedToForumIdBuilder_ == null) {
          return characsAssignedToForumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToForumId_;
        } else {
          return characsAssignedToForumIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public Builder setCharacsAssignedToForumId(io.dstore.engine.Values.integerValue value) {
        if (characsAssignedToForumIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characsAssignedToForumId_ = value;
          onChanged();
        } else {
          characsAssignedToForumIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public Builder setCharacsAssignedToForumId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (characsAssignedToForumIdBuilder_ == null) {
          characsAssignedToForumId_ = builderForValue.build();
          onChanged();
        } else {
          characsAssignedToForumIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public Builder mergeCharacsAssignedToForumId(io.dstore.engine.Values.integerValue value) {
        if (characsAssignedToForumIdBuilder_ == null) {
          if (characsAssignedToForumId_ != null) {
            characsAssignedToForumId_ =
              io.dstore.engine.Values.integerValue.newBuilder(characsAssignedToForumId_).mergeFrom(value).buildPartial();
          } else {
            characsAssignedToForumId_ = value;
          }
          onChanged();
        } else {
          characsAssignedToForumIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public Builder clearCharacsAssignedToForumId() {
        if (characsAssignedToForumIdBuilder_ == null) {
          characsAssignedToForumId_ = null;
          onChanged();
        } else {
          characsAssignedToForumId_ = null;
          characsAssignedToForumIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCharacsAssignedToForumIdBuilder() {
        
        onChanged();
        return getCharacsAssignedToForumIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToForumIdOrBuilder() {
        if (characsAssignedToForumIdBuilder_ != null) {
          return characsAssignedToForumIdBuilder_.getMessageOrBuilder();
        } else {
          return characsAssignedToForumId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToForumId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_forum_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCharacsAssignedToForumIdFieldBuilder() {
        if (characsAssignedToForumIdBuilder_ == null) {
          characsAssignedToForumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCharacsAssignedToForumId(),
                  getParentForChildren(),
                  isClean());
          characsAssignedToForumId_ = null;
        }
        return characsAssignedToForumIdBuilder_;
      }

      private boolean characsAssignedToForumIdNull_ ;
      /**
       * <code>optional bool characs_assigned_to_forum_id_null = 1003;</code>
       */
      public boolean getCharacsAssignedToForumIdNull() {
        return characsAssignedToForumIdNull_;
      }
      /**
       * <code>optional bool characs_assigned_to_forum_id_null = 1003;</code>
       */
      public Builder setCharacsAssignedToForumIdNull(boolean value) {
        
        characsAssignedToForumIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool characs_assigned_to_forum_id_null = 1003;</code>
       */
      public Builder clearCharacsAssignedToForumIdNull() {
        
        characsAssignedToForumIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue characsAssignedToCategoryId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> characsAssignedToCategoryIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public boolean hasCharacsAssignedToCategoryId() {
        return characsAssignedToCategoryIdBuilder_ != null || characsAssignedToCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getCharacsAssignedToCategoryId() {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          return characsAssignedToCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToCategoryId_;
        } else {
          return characsAssignedToCategoryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public Builder setCharacsAssignedToCategoryId(io.dstore.engine.Values.integerValue value) {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characsAssignedToCategoryId_ = value;
          onChanged();
        } else {
          characsAssignedToCategoryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public Builder setCharacsAssignedToCategoryId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          characsAssignedToCategoryId_ = builderForValue.build();
          onChanged();
        } else {
          characsAssignedToCategoryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public Builder mergeCharacsAssignedToCategoryId(io.dstore.engine.Values.integerValue value) {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          if (characsAssignedToCategoryId_ != null) {
            characsAssignedToCategoryId_ =
              io.dstore.engine.Values.integerValue.newBuilder(characsAssignedToCategoryId_).mergeFrom(value).buildPartial();
          } else {
            characsAssignedToCategoryId_ = value;
          }
          onChanged();
        } else {
          characsAssignedToCategoryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public Builder clearCharacsAssignedToCategoryId() {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          characsAssignedToCategoryId_ = null;
          onChanged();
        } else {
          characsAssignedToCategoryId_ = null;
          characsAssignedToCategoryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCharacsAssignedToCategoryIdBuilder() {
        
        onChanged();
        return getCharacsAssignedToCategoryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCharacsAssignedToCategoryIdOrBuilder() {
        if (characsAssignedToCategoryIdBuilder_ != null) {
          return characsAssignedToCategoryIdBuilder_.getMessageOrBuilder();
        } else {
          return characsAssignedToCategoryId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : characsAssignedToCategoryId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characs_assigned_to_category_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCharacsAssignedToCategoryIdFieldBuilder() {
        if (characsAssignedToCategoryIdBuilder_ == null) {
          characsAssignedToCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCharacsAssignedToCategoryId(),
                  getParentForChildren(),
                  isClean());
          characsAssignedToCategoryId_ = null;
        }
        return characsAssignedToCategoryIdBuilder_;
      }

      private boolean characsAssignedToCategoryIdNull_ ;
      /**
       * <code>optional bool characs_assigned_to_category_id_null = 1004;</code>
       */
      public boolean getCharacsAssignedToCategoryIdNull() {
        return characsAssignedToCategoryIdNull_;
      }
      /**
       * <code>optional bool characs_assigned_to_category_id_null = 1004;</code>
       */
      public Builder setCharacsAssignedToCategoryIdNull(boolean value) {
        
        characsAssignedToCategoryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool characs_assigned_to_category_id_null = 1004;</code>
       */
      public Builder clearCharacsAssignedToCategoryIdNull() {
        
        characsAssignedToCategoryIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Ad.Parameters)
    private static final io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters();
    }

    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetPostingCharacsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetPostingCharacsAd.Response.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPostingCharacs_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      boolean hasCharacteristicDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCharacteristicDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      boolean hasFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      boolean hasPostingCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPostingCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      boolean hasPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      boolean hasCommonCharacteristic();
      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCommonCharacteristic();
      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      boolean hasMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      boolean hasPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      boolean hasCheckPostingVisibility();
      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getCheckPostingVisibility();
      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      boolean hasFormat();
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFormat();
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      boolean hasBasicFieldType();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getBasicFieldType();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      boolean hasFieldTypeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFieldTypeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      boolean hasBasicFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBasicFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      boolean hasPropertyModificationAllowed();
      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPropertyModificationAllowed();
      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      boolean hasMaxNumberOfProperties();
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      io.dstore.engine.Values.integerValue getMaxNumberOfProperties();
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      boolean hasForumId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getForumId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      boolean hasForumName();
      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getForumName();
      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getForumNameOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      boolean hasForumCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getForumCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getForumCategoryIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      boolean hasCategoryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCategoryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPostingCharacs_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (characteristicDescription_ != null) {
                  subBuilder = characteristicDescription_.toBuilder();
                }
                characteristicDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(characteristicDescription_);
                  characteristicDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (fieldTypeId_ != null) {
                  subBuilder = fieldTypeId_.toBuilder();
                }
                fieldTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeId_);
                  fieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (postingCharacteristicId_ != null) {
                  subBuilder = postingCharacteristicId_.toBuilder();
                }
                postingCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postingCharacteristicId_);
                  postingCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (commonCharacteristic_ != null) {
                  subBuilder = commonCharacteristic_.toBuilder();
                }
                commonCharacteristic_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(commonCharacteristic_);
                  commonCharacteristic_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (maxLength_ != null) {
                  subBuilder = maxLength_.toBuilder();
                }
                maxLength_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxLength_);
                  maxLength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (predefinedValues_ != null) {
                  subBuilder = predefinedValues_.toBuilder();
                }
                predefinedValues_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predefinedValues_);
                  predefinedValues_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (checkPostingVisibility_ != null) {
                  subBuilder = checkPostingVisibility_.toBuilder();
                }
                checkPostingVisibility_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(checkPostingVisibility_);
                  checkPostingVisibility_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (format_ != null) {
                  subBuilder = format_.toBuilder();
                }
                format_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(format_);
                  format_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (basicFieldType_ != null) {
                  subBuilder = basicFieldType_.toBuilder();
                }
                basicFieldType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldType_);
                  basicFieldType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (fieldTypeDescription_ != null) {
                  subBuilder = fieldTypeDescription_.toBuilder();
                }
                fieldTypeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeDescription_);
                  fieldTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (basicFieldTypeId_ != null) {
                  subBuilder = basicFieldTypeId_.toBuilder();
                }
                basicFieldTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldTypeId_);
                  basicFieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (propertyModificationAllowed_ != null) {
                  subBuilder = propertyModificationAllowed_.toBuilder();
                }
                propertyModificationAllowed_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(propertyModificationAllowed_);
                  propertyModificationAllowed_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (maxNumberOfProperties_ != null) {
                  subBuilder = maxNumberOfProperties_.toBuilder();
                }
                maxNumberOfProperties_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxNumberOfProperties_);
                  maxNumberOfProperties_ = subBuilder.buildPartial();
                }

                break;
              }
              case 320026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (forumId_ != null) {
                  subBuilder = forumId_.toBuilder();
                }
                forumId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forumId_);
                  forumId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 320034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (forumName_ != null) {
                  subBuilder = forumName_.toBuilder();
                }
                forumName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forumName_);
                  forumName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 400090: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (forumCategoryId_ != null) {
                  subBuilder = forumCategoryId_.toBuilder();
                }
                forumCategoryId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forumCategoryId_);
                  forumCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 400114: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (categoryDescription_ != null) {
                  subBuilder = categoryDescription_.toBuilder();
                }
                categoryDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(categoryDescription_);
                  categoryDescription_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int CHARACTERISTIC_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue characteristicDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      public boolean hasCharacteristicDescription() {
        return characteristicDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCharacteristicDescription() {
        return characteristicDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PostingCharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
        return getCharacteristicDescription();
      }

      public static final int FIELD_TYPE_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue fieldTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public boolean hasFieldTypeId() {
        return fieldTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getFieldTypeId() {
        return fieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
        return getFieldTypeId();
      }

      public static final int POSTING_CHARACTERISTIC_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue postingCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      public boolean hasPostingCharacteristicId() {
        return postingCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPostingCharacteristicId() {
        return postingCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID eines Posting-Merkmals
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
        return getPostingCharacteristicId();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue precisionValue_;
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int COMMON_CHARACTERISTIC_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue commonCharacteristic_;
      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      public boolean hasCommonCharacteristic() {
        return commonCharacteristic_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCommonCharacteristic() {
        return commonCharacteristic_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
       *
       * <pre>
       * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder() {
        return getCommonCharacteristic();
      }

      public static final int MAX_LENGTH_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue maxLength_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      public boolean hasMaxLength() {
        return maxLength_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getMaxLength() {
        return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
        return getMaxLength();
      }

      public static final int PREDEFINED_VALUES_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.booleanValue predefinedValues_;
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      public boolean hasPredefinedValues() {
        return predefinedValues_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getPredefinedValues() {
        return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
       *
       * <pre>
       * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
        return getPredefinedValues();
      }

      public static final int CHECK_POSTING_VISIBILITY_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.booleanValue checkPostingVisibility_;
      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      public boolean hasCheckPostingVisibility() {
        return checkPostingVisibility_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getCheckPostingVisibility() {
        return checkPostingVisibility_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
       *
       * <pre>
       * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder() {
        return getCheckPostingVisibility();
      }

      public static final int FORMAT_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue format_;
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public boolean hasFormat() {
        return format_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFormat() {
        return format_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder() {
        return getFormat();
      }

      public static final int BASIC_FIELD_TYPE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue basicFieldType_;
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      public boolean hasBasicFieldType() {
        return basicFieldType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getBasicFieldType() {
        return basicFieldType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
        return getBasicFieldType();
      }

      public static final int FIELD_TYPE_DESCRIPTION_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.stringValue fieldTypeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      public boolean hasFieldTypeDescription() {
        return fieldTypeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFieldTypeDescription() {
        return fieldTypeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
       *
       * <pre>
       * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
        return getFieldTypeDescription();
      }

      public static final int BASIC_FIELD_TYPE_ID_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue basicFieldTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public boolean hasBasicFieldTypeId() {
        return basicFieldTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBasicFieldTypeId() {
        return basicFieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
        return getBasicFieldTypeId();
      }

      public static final int PROPERTY_MODIFICATION_ALLOWED_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue propertyModificationAllowed_;
      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      public boolean hasPropertyModificationAllowed() {
        return propertyModificationAllowed_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPropertyModificationAllowed() {
        return propertyModificationAllowed_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
       *
       * <pre>
       * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder() {
        return getPropertyModificationAllowed();
      }

      public static final int MAX_NUMBER_OF_PROPERTIES_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue maxNumberOfProperties_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      public boolean hasMaxNumberOfProperties() {
        return maxNumberOfProperties_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getMaxNumberOfProperties() {
        return maxNumberOfProperties_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
       *
       * <pre>
       * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder() {
        return getMaxNumberOfProperties();
      }

      public static final int FORUM_ID_FIELD_NUMBER = 40003;
      private io.dstore.engine.Values.integerValue forumId_;
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      public boolean hasForumId() {
        return forumId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getForumId() {
        return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
       *
       * <pre>
       * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
        return getForumId();
      }

      public static final int FORUM_NAME_FIELD_NUMBER = 40004;
      private io.dstore.engine.Values.stringValue forumName_;
      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      public boolean hasForumName() {
        return forumName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getForumName() {
        return forumName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : forumName_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
       *
       * <pre>
       * Name des Forums "ForumID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getForumNameOrBuilder() {
        return getForumName();
      }

      public static final int FORUM_CATEGORY_ID_FIELD_NUMBER = 50011;
      private io.dstore.engine.Values.integerValue forumCategoryId_;
      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      public boolean hasForumCategoryId() {
        return forumCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getForumCategoryId() {
        return forumCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumCategoryId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
       *
       * <pre>
       * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getForumCategoryIdOrBuilder() {
        return getForumCategoryId();
      }

      public static final int CATEGORY_DESCRIPTION_FIELD_NUMBER = 50014;
      private io.dstore.engine.Values.stringValue categoryDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      public boolean hasCategoryDescription() {
        return categoryDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCategoryDescription() {
        return categoryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : categoryDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
       *
       * <pre>
       * Bezeichnung der Kategorie "ForumCategoryID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder() {
        return getCategoryDescription();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (characteristicDescription_ != null) {
          output.writeMessage(10001, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          output.writeMessage(10002, getFieldTypeId());
        }
        if (postingCharacteristicId_ != null) {
          output.writeMessage(10003, getPostingCharacteristicId());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10004, getPrecisionValue());
        }
        if (commonCharacteristic_ != null) {
          output.writeMessage(10005, getCommonCharacteristic());
        }
        if (maxLength_ != null) {
          output.writeMessage(10006, getMaxLength());
        }
        if (predefinedValues_ != null) {
          output.writeMessage(10007, getPredefinedValues());
        }
        if (checkPostingVisibility_ != null) {
          output.writeMessage(10008, getCheckPostingVisibility());
        }
        if (format_ != null) {
          output.writeMessage(10009, getFormat());
        }
        if (basicFieldType_ != null) {
          output.writeMessage(10010, getBasicFieldType());
        }
        if (fieldTypeDescription_ != null) {
          output.writeMessage(10011, getFieldTypeDescription());
        }
        if (basicFieldTypeId_ != null) {
          output.writeMessage(10012, getBasicFieldTypeId());
        }
        if (propertyModificationAllowed_ != null) {
          output.writeMessage(10013, getPropertyModificationAllowed());
        }
        if (maxNumberOfProperties_ != null) {
          output.writeMessage(10014, getMaxNumberOfProperties());
        }
        if (forumId_ != null) {
          output.writeMessage(40003, getForumId());
        }
        if (forumName_ != null) {
          output.writeMessage(40004, getForumName());
        }
        if (forumCategoryId_ != null) {
          output.writeMessage(50011, getForumCategoryId());
        }
        if (categoryDescription_ != null) {
          output.writeMessage(50014, getCategoryDescription());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (characteristicDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getFieldTypeId());
        }
        if (postingCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPostingCharacteristicId());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPrecisionValue());
        }
        if (commonCharacteristic_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getCommonCharacteristic());
        }
        if (maxLength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getMaxLength());
        }
        if (predefinedValues_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getPredefinedValues());
        }
        if (checkPostingVisibility_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getCheckPostingVisibility());
        }
        if (format_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getFormat());
        }
        if (basicFieldType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getBasicFieldType());
        }
        if (fieldTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFieldTypeDescription());
        }
        if (basicFieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getBasicFieldTypeId());
        }
        if (propertyModificationAllowed_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getPropertyModificationAllowed());
        }
        if (maxNumberOfProperties_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getMaxNumberOfProperties());
        }
        if (forumId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(40003, getForumId());
        }
        if (forumName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(40004, getForumName());
        }
        if (forumCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(50011, getForumCategoryId());
        }
        if (categoryDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(50014, getCategoryDescription());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Ad.Response.Row)
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = null;
          } else {
            postingCharacteristicId_ = null;
            postingCharacteristicIdBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = null;
          } else {
            commonCharacteristic_ = null;
            commonCharacteristicBuilder_ = null;
          }
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = null;
          } else {
            checkPostingVisibility_ = null;
            checkPostingVisibilityBuilder_ = null;
          }
          if (formatBuilder_ == null) {
            format_ = null;
          } else {
            format_ = null;
            formatBuilder_ = null;
          }
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = null;
          } else {
            propertyModificationAllowed_ = null;
            propertyModificationAllowedBuilder_ = null;
          }
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = null;
          } else {
            maxNumberOfProperties_ = null;
            maxNumberOfPropertiesBuilder_ = null;
          }
          if (forumIdBuilder_ == null) {
            forumId_ = null;
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }
          if (forumNameBuilder_ == null) {
            forumName_ = null;
          } else {
            forumName_ = null;
            forumNameBuilder_ = null;
          }
          if (forumCategoryIdBuilder_ == null) {
            forumCategoryId_ = null;
          } else {
            forumCategoryId_ = null;
            forumCategoryIdBuilder_ = null;
          }
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = null;
          } else {
            categoryDescription_ = null;
            categoryDescriptionBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row build() {
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row result = new io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (characteristicDescriptionBuilder_ == null) {
            result.characteristicDescription_ = characteristicDescription_;
          } else {
            result.characteristicDescription_ = characteristicDescriptionBuilder_.build();
          }
          if (fieldTypeIdBuilder_ == null) {
            result.fieldTypeId_ = fieldTypeId_;
          } else {
            result.fieldTypeId_ = fieldTypeIdBuilder_.build();
          }
          if (postingCharacteristicIdBuilder_ == null) {
            result.postingCharacteristicId_ = postingCharacteristicId_;
          } else {
            result.postingCharacteristicId_ = postingCharacteristicIdBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (commonCharacteristicBuilder_ == null) {
            result.commonCharacteristic_ = commonCharacteristic_;
          } else {
            result.commonCharacteristic_ = commonCharacteristicBuilder_.build();
          }
          if (maxLengthBuilder_ == null) {
            result.maxLength_ = maxLength_;
          } else {
            result.maxLength_ = maxLengthBuilder_.build();
          }
          if (predefinedValuesBuilder_ == null) {
            result.predefinedValues_ = predefinedValues_;
          } else {
            result.predefinedValues_ = predefinedValuesBuilder_.build();
          }
          if (checkPostingVisibilityBuilder_ == null) {
            result.checkPostingVisibility_ = checkPostingVisibility_;
          } else {
            result.checkPostingVisibility_ = checkPostingVisibilityBuilder_.build();
          }
          if (formatBuilder_ == null) {
            result.format_ = format_;
          } else {
            result.format_ = formatBuilder_.build();
          }
          if (basicFieldTypeBuilder_ == null) {
            result.basicFieldType_ = basicFieldType_;
          } else {
            result.basicFieldType_ = basicFieldTypeBuilder_.build();
          }
          if (fieldTypeDescriptionBuilder_ == null) {
            result.fieldTypeDescription_ = fieldTypeDescription_;
          } else {
            result.fieldTypeDescription_ = fieldTypeDescriptionBuilder_.build();
          }
          if (basicFieldTypeIdBuilder_ == null) {
            result.basicFieldTypeId_ = basicFieldTypeId_;
          } else {
            result.basicFieldTypeId_ = basicFieldTypeIdBuilder_.build();
          }
          if (propertyModificationAllowedBuilder_ == null) {
            result.propertyModificationAllowed_ = propertyModificationAllowed_;
          } else {
            result.propertyModificationAllowed_ = propertyModificationAllowedBuilder_.build();
          }
          if (maxNumberOfPropertiesBuilder_ == null) {
            result.maxNumberOfProperties_ = maxNumberOfProperties_;
          } else {
            result.maxNumberOfProperties_ = maxNumberOfPropertiesBuilder_.build();
          }
          if (forumIdBuilder_ == null) {
            result.forumId_ = forumId_;
          } else {
            result.forumId_ = forumIdBuilder_.build();
          }
          if (forumNameBuilder_ == null) {
            result.forumName_ = forumName_;
          } else {
            result.forumName_ = forumNameBuilder_.build();
          }
          if (forumCategoryIdBuilder_ == null) {
            result.forumCategoryId_ = forumCategoryId_;
          } else {
            result.forumCategoryId_ = forumCategoryIdBuilder_.build();
          }
          if (categoryDescriptionBuilder_ == null) {
            result.categoryDescription_ = categoryDescription_;
          } else {
            result.categoryDescription_ = categoryDescriptionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasCharacteristicDescription()) {
            mergeCharacteristicDescription(other.getCharacteristicDescription());
          }
          if (other.hasFieldTypeId()) {
            mergeFieldTypeId(other.getFieldTypeId());
          }
          if (other.hasPostingCharacteristicId()) {
            mergePostingCharacteristicId(other.getPostingCharacteristicId());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasCommonCharacteristic()) {
            mergeCommonCharacteristic(other.getCommonCharacteristic());
          }
          if (other.hasMaxLength()) {
            mergeMaxLength(other.getMaxLength());
          }
          if (other.hasPredefinedValues()) {
            mergePredefinedValues(other.getPredefinedValues());
          }
          if (other.hasCheckPostingVisibility()) {
            mergeCheckPostingVisibility(other.getCheckPostingVisibility());
          }
          if (other.hasFormat()) {
            mergeFormat(other.getFormat());
          }
          if (other.hasBasicFieldType()) {
            mergeBasicFieldType(other.getBasicFieldType());
          }
          if (other.hasFieldTypeDescription()) {
            mergeFieldTypeDescription(other.getFieldTypeDescription());
          }
          if (other.hasBasicFieldTypeId()) {
            mergeBasicFieldTypeId(other.getBasicFieldTypeId());
          }
          if (other.hasPropertyModificationAllowed()) {
            mergePropertyModificationAllowed(other.getPropertyModificationAllowed());
          }
          if (other.hasMaxNumberOfProperties()) {
            mergeMaxNumberOfProperties(other.getMaxNumberOfProperties());
          }
          if (other.hasForumId()) {
            mergeForumId(other.getForumId());
          }
          if (other.hasForumName()) {
            mergeForumName(other.getForumName());
          }
          if (other.hasForumCategoryId()) {
            mergeForumCategoryId(other.getForumCategoryId());
          }
          if (other.hasCategoryDescription()) {
            mergeCategoryDescription(other.getCategoryDescription());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue characteristicDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> characteristicDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public boolean hasCharacteristicDescription() {
          return characteristicDescriptionBuilder_ != null || characteristicDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            return characteristicDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          } else {
            return characteristicDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public Builder setCharacteristicDescription(io.dstore.engine.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            characteristicDescription_ = value;
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public Builder setCharacteristicDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = builderForValue.build();
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public Builder mergeCharacteristicDescription(io.dstore.engine.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (characteristicDescription_ != null) {
              characteristicDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(characteristicDescription_).mergeFrom(value).buildPartial();
            } else {
              characteristicDescription_ = value;
            }
            onChanged();
          } else {
            characteristicDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public Builder clearCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
            onChanged();
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCharacteristicDescriptionBuilder() {
          
          onChanged();
          return getCharacteristicDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
          if (characteristicDescriptionBuilder_ != null) {
            return characteristicDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return characteristicDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PostingCharacteristicID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCharacteristicDescriptionFieldBuilder() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCharacteristicDescription(),
                    getParentForChildren(),
                    isClean());
            characteristicDescription_ = null;
          }
          return characteristicDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue fieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> fieldTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public boolean hasFieldTypeId() {
          return fieldTypeIdBuilder_ != null || fieldTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            return fieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          } else {
            return fieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder setFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeId_ = value;
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder setFieldTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder mergeFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (fieldTypeId_ != null) {
              fieldTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(fieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeId_ = value;
            }
            onChanged();
          } else {
            fieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder clearFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
            onChanged();
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getFieldTypeIdBuilder() {
          
          onChanged();
          return getFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
          if (fieldTypeIdBuilder_ != null) {
            return fieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10002;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "PostingCharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getFieldTypeIdFieldBuilder() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            fieldTypeId_ = null;
          }
          return fieldTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue postingCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> postingCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public boolean hasPostingCharacteristicId() {
          return postingCharacteristicIdBuilder_ != null || postingCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPostingCharacteristicId() {
          if (postingCharacteristicIdBuilder_ == null) {
            return postingCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
          } else {
            return postingCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public Builder setPostingCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (postingCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postingCharacteristicId_ = value;
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public Builder setPostingCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public Builder mergePostingCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (postingCharacteristicIdBuilder_ == null) {
            if (postingCharacteristicId_ != null) {
              postingCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(postingCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              postingCharacteristicId_ = value;
            }
            onChanged();
          } else {
            postingCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public Builder clearPostingCharacteristicId() {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicId_ = null;
            onChanged();
          } else {
            postingCharacteristicId_ = null;
            postingCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPostingCharacteristicIdBuilder() {
          
          onChanged();
          return getPostingCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPostingCharacteristicIdOrBuilder() {
          if (postingCharacteristicIdBuilder_ != null) {
            return postingCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return postingCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : postingCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue posting_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID eines Posting-Merkmals
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPostingCharacteristicIdFieldBuilder() {
          if (postingCharacteristicIdBuilder_ == null) {
            postingCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPostingCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            postingCharacteristicId_ = null;
          }
          return postingCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public Builder setPrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public Builder setPrecisionValue(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public Builder mergePrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.engine.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10004;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "PostingCharacteristicID" vorkommen dürfen.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.engine.Values.integerValue commonCharacteristic_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> commonCharacteristicBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public boolean hasCommonCharacteristic() {
          return commonCharacteristicBuilder_ != null || commonCharacteristic_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCommonCharacteristic() {
          if (commonCharacteristicBuilder_ == null) {
            return commonCharacteristic_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
          } else {
            return commonCharacteristicBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public Builder setCommonCharacteristic(io.dstore.engine.Values.integerValue value) {
          if (commonCharacteristicBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            commonCharacteristic_ = value;
            onChanged();
          } else {
            commonCharacteristicBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public Builder setCommonCharacteristic(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = builderForValue.build();
            onChanged();
          } else {
            commonCharacteristicBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public Builder mergeCommonCharacteristic(io.dstore.engine.Values.integerValue value) {
          if (commonCharacteristicBuilder_ == null) {
            if (commonCharacteristic_ != null) {
              commonCharacteristic_ =
                io.dstore.engine.Values.integerValue.newBuilder(commonCharacteristic_).mergeFrom(value).buildPartial();
            } else {
              commonCharacteristic_ = value;
            }
            onChanged();
          } else {
            commonCharacteristicBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public Builder clearCommonCharacteristic() {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristic_ = null;
            onChanged();
          } else {
            commonCharacteristic_ = null;
            commonCharacteristicBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCommonCharacteristicBuilder() {
          
          onChanged();
          return getCommonCharacteristicFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCommonCharacteristicOrBuilder() {
          if (commonCharacteristicBuilder_ != null) {
            return commonCharacteristicBuilder_.getMessageOrBuilder();
          } else {
            return commonCharacteristic_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : commonCharacteristic_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue common_characteristic = 10005;</code>
         *
         * <pre>
         * Gibt an, zu welchen "PersonID"s Eigenschaften zum Merkmal hinterlegt werden können :"0" : Nur "PersonID"s ungleich "0""1" : "PersonID" kann beliebig sein"2" : Nur "PersonID = 0"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCommonCharacteristicFieldBuilder() {
          if (commonCharacteristicBuilder_ == null) {
            commonCharacteristicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCommonCharacteristic(),
                    getParentForChildren(),
                    isClean());
            commonCharacteristic_ = null;
          }
          return commonCharacteristicBuilder_;
        }

        private io.dstore.engine.Values.integerValue maxLength_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxLengthBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public boolean hasMaxLength() {
          return maxLengthBuilder_ != null || maxLength_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getMaxLength() {
          if (maxLengthBuilder_ == null) {
            return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          } else {
            return maxLengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxLength_ = value;
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (maxLengthBuilder_ == null) {
            maxLength_ = builderForValue.build();
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public Builder mergeMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (maxLength_ != null) {
              maxLength_ =
                io.dstore.engine.Values.integerValue.newBuilder(maxLength_).mergeFrom(value).buildPartial();
            } else {
              maxLength_ = value;
            }
            onChanged();
          } else {
            maxLengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public Builder clearMaxLength() {
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
            onChanged();
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getMaxLengthBuilder() {
          
          onChanged();
          return getMaxLengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
          if (maxLengthBuilder_ != null) {
            return maxLengthBuilder_.getMessageOrBuilder();
          } else {
            return maxLength_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10006;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften zum Merkmal "PostingCharacteristicID" haben dürfen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getMaxLengthFieldBuilder() {
          if (maxLengthBuilder_ == null) {
            maxLengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getMaxLength(),
                    getParentForChildren(),
                    isClean());
            maxLength_ = null;
          }
          return maxLengthBuilder_;
        }

        private io.dstore.engine.Values.booleanValue predefinedValues_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> predefinedValuesBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public boolean hasPredefinedValues() {
          return predefinedValuesBuilder_ != null || predefinedValues_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          } else {
            return predefinedValuesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public Builder setPredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predefinedValues_ = value;
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public Builder setPredefinedValues(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = builderForValue.build();
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public Builder mergePredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (predefinedValues_ != null) {
              predefinedValues_ =
                io.dstore.engine.Values.booleanValue.newBuilder(predefinedValues_).mergeFrom(value).buildPartial();
            } else {
              predefinedValues_ = value;
            }
            onChanged();
          } else {
            predefinedValuesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public Builder clearPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
            onChanged();
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getPredefinedValuesBuilder() {
          
          onChanged();
          return getPredefinedValuesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
          if (predefinedValuesBuilder_ != null) {
            return predefinedValuesBuilder_.getMessageOrBuilder();
          } else {
            return predefinedValues_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10007;</code>
         *
         * <pre>
         * Sind mögliche Eigenschaften für Postings zum Merkmal vordefiniert ("1") oder nicht ("0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getPredefinedValuesFieldBuilder() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getPredefinedValues(),
                    getParentForChildren(),
                    isClean());
            predefinedValues_ = null;
          }
          return predefinedValuesBuilder_;
        }

        private io.dstore.engine.Values.booleanValue checkPostingVisibility_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> checkPostingVisibilityBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public boolean hasCheckPostingVisibility() {
          return checkPostingVisibilityBuilder_ != null || checkPostingVisibility_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getCheckPostingVisibility() {
          if (checkPostingVisibilityBuilder_ == null) {
            return checkPostingVisibility_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
          } else {
            return checkPostingVisibilityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public Builder setCheckPostingVisibility(io.dstore.engine.Values.booleanValue value) {
          if (checkPostingVisibilityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            checkPostingVisibility_ = value;
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public Builder setCheckPostingVisibility(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = builderForValue.build();
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public Builder mergeCheckPostingVisibility(io.dstore.engine.Values.booleanValue value) {
          if (checkPostingVisibilityBuilder_ == null) {
            if (checkPostingVisibility_ != null) {
              checkPostingVisibility_ =
                io.dstore.engine.Values.booleanValue.newBuilder(checkPostingVisibility_).mergeFrom(value).buildPartial();
            } else {
              checkPostingVisibility_ = value;
            }
            onChanged();
          } else {
            checkPostingVisibilityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public Builder clearCheckPostingVisibility() {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibility_ = null;
            onChanged();
          } else {
            checkPostingVisibility_ = null;
            checkPostingVisibilityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getCheckPostingVisibilityBuilder() {
          
          onChanged();
          return getCheckPostingVisibilityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getCheckPostingVisibilityOrBuilder() {
          if (checkPostingVisibilityBuilder_ != null) {
            return checkPostingVisibilityBuilder_.getMessageOrBuilder();
          } else {
            return checkPostingVisibility_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPostingVisibility_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue check_posting_visibility = 10008;</code>
         *
         * <pre>
         * "1" bedeutet, daß das LESEN von Eigenschaften zum Merkmal (über "fo_GetPostingProperties_Pu") nur erlaubt ist, wenn die identifizierte Person auch den Beitrag lesen darf - was ja vom "Visible"-Status des jeweiligen Beitrags abhängt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getCheckPostingVisibilityFieldBuilder() {
          if (checkPostingVisibilityBuilder_ == null) {
            checkPostingVisibilityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getCheckPostingVisibility(),
                    getParentForChildren(),
                    isClean());
            checkPostingVisibility_ = null;
          }
          return checkPostingVisibilityBuilder_;
        }

        private io.dstore.engine.Values.stringValue format_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> formatBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public boolean hasFormat() {
          return formatBuilder_ != null || format_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFormat() {
          if (formatBuilder_ == null) {
            return format_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
          } else {
            return formatBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder setFormat(io.dstore.engine.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            format_ = value;
            onChanged();
          } else {
            formatBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder setFormat(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (formatBuilder_ == null) {
            format_ = builderForValue.build();
            onChanged();
          } else {
            formatBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder mergeFormat(io.dstore.engine.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (format_ != null) {
              format_ =
                io.dstore.engine.Values.stringValue.newBuilder(format_).mergeFrom(value).buildPartial();
            } else {
              format_ = value;
            }
            onChanged();
          } else {
            formatBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder clearFormat() {
          if (formatBuilder_ == null) {
            format_ = null;
            onChanged();
          } else {
            format_ = null;
            formatBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFormatBuilder() {
          
          onChanged();
          return getFormatFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder() {
          if (formatBuilder_ != null) {
            return formatBuilder_.getMessageOrBuilder();
          } else {
            return format_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10009;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "PostingCharacteristicID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFormatFieldBuilder() {
          if (formatBuilder_ == null) {
            formatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFormat(),
                    getParentForChildren(),
                    isClean());
            format_ = null;
          }
          return formatBuilder_;
        }

        private io.dstore.engine.Values.stringValue basicFieldType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> basicFieldTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public boolean hasBasicFieldType() {
          return basicFieldTypeBuilder_ != null || basicFieldType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            return basicFieldType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
          } else {
            return basicFieldTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public Builder setBasicFieldType(io.dstore.engine.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldType_ = value;
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public Builder setBasicFieldType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public Builder mergeBasicFieldType(io.dstore.engine.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (basicFieldType_ != null) {
              basicFieldType_ =
                io.dstore.engine.Values.stringValue.newBuilder(basicFieldType_).mergeFrom(value).buildPartial();
            } else {
              basicFieldType_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public Builder clearBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
            onChanged();
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getBasicFieldTypeBuilder() {
          
          onChanged();
          return getBasicFieldTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
          if (basicFieldTypeBuilder_ != null) {
            return basicFieldTypeBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs (z.B. "Zahl")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getBasicFieldTypeFieldBuilder() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getBasicFieldType(),
                    getParentForChildren(),
                    isClean());
            basicFieldType_ = null;
          }
          return basicFieldTypeBuilder_;
        }

        private io.dstore.engine.Values.stringValue fieldTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> fieldTypeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public boolean hasFieldTypeDescription() {
          return fieldTypeDescriptionBuilder_ != null || fieldTypeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            return fieldTypeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          } else {
            return fieldTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public Builder setFieldTypeDescription(io.dstore.engine.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeDescription_ = value;
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public Builder setFieldTypeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public Builder mergeFieldTypeDescription(io.dstore.engine.Values.stringValue value) {
          if (fieldTypeDescriptionBuilder_ == null) {
            if (fieldTypeDescription_ != null) {
              fieldTypeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(fieldTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeDescription_ = value;
            }
            onChanged();
          } else {
            fieldTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public Builder clearFieldTypeDescription() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescription_ = null;
            onChanged();
          } else {
            fieldTypeDescription_ = null;
            fieldTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFieldTypeDescriptionBuilder() {
          
          onChanged();
          return getFieldTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFieldTypeDescriptionOrBuilder() {
          if (fieldTypeDescriptionBuilder_ != null) {
            return fieldTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : fieldTypeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue field_type_description = 10011;</code>
         *
         * <pre>
         * Bezeichnung des Feld-Typs "FieldTypeID", z.B. "Ganze Zahlen von -999 bis 999" oder "Text - 20 Zeichen"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFieldTypeDescriptionFieldBuilder() {
          if (fieldTypeDescriptionBuilder_ == null) {
            fieldTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFieldTypeDescription(),
                    getParentForChildren(),
                    isClean());
            fieldTypeDescription_ = null;
          }
          return fieldTypeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue basicFieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicFieldTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public boolean hasBasicFieldTypeId() {
          return basicFieldTypeIdBuilder_ != null || basicFieldTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            return basicFieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          } else {
            return basicFieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder setBasicFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldTypeId_ = value;
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder setBasicFieldTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder mergeBasicFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (basicFieldTypeId_ != null) {
              basicFieldTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(basicFieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              basicFieldTypeId_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder clearBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
            onChanged();
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBasicFieldTypeIdBuilder() {
          
          onChanged();
          return getBasicFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
          if (basicFieldTypeIdBuilder_ != null) {
            return basicFieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID des Basis-Feld-Typs, der "FieldTypeID" zugrunde liegt (siehe auch "mi_GetFieldTypes_Ad")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBasicFieldTypeIdFieldBuilder() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBasicFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            basicFieldTypeId_ = null;
          }
          return basicFieldTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue propertyModificationAllowed_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> propertyModificationAllowedBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public boolean hasPropertyModificationAllowed() {
          return propertyModificationAllowedBuilder_ != null || propertyModificationAllowed_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPropertyModificationAllowed() {
          if (propertyModificationAllowedBuilder_ == null) {
            return propertyModificationAllowed_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
          } else {
            return propertyModificationAllowedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public Builder setPropertyModificationAllowed(io.dstore.engine.Values.integerValue value) {
          if (propertyModificationAllowedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            propertyModificationAllowed_ = value;
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public Builder setPropertyModificationAllowed(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = builderForValue.build();
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public Builder mergePropertyModificationAllowed(io.dstore.engine.Values.integerValue value) {
          if (propertyModificationAllowedBuilder_ == null) {
            if (propertyModificationAllowed_ != null) {
              propertyModificationAllowed_ =
                io.dstore.engine.Values.integerValue.newBuilder(propertyModificationAllowed_).mergeFrom(value).buildPartial();
            } else {
              propertyModificationAllowed_ = value;
            }
            onChanged();
          } else {
            propertyModificationAllowedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public Builder clearPropertyModificationAllowed() {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowed_ = null;
            onChanged();
          } else {
            propertyModificationAllowed_ = null;
            propertyModificationAllowedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPropertyModificationAllowedBuilder() {
          
          onChanged();
          return getPropertyModificationAllowedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPropertyModificationAllowedOrBuilder() {
          if (propertyModificationAllowedBuilder_ != null) {
            return propertyModificationAllowedBuilder_.getMessageOrBuilder();
          } else {
            return propertyModificationAllowed_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : propertyModificationAllowed_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue property_modification_allowed = 10013;</code>
         *
         * <pre>
         * Gibt an, ob Eigenschaften zum Merkmal nachträglich geändert werden können. Es ist eine Summe folgender Werte :"0" : Hinzufügen, Ändern oder Löschen ist NICHT möglich"1" : Hinzufügen ist möglich"2" : Ändern ist möglich"4" : Löschen ist möglich
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPropertyModificationAllowedFieldBuilder() {
          if (propertyModificationAllowedBuilder_ == null) {
            propertyModificationAllowedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPropertyModificationAllowed(),
                    getParentForChildren(),
                    isClean());
            propertyModificationAllowed_ = null;
          }
          return propertyModificationAllowedBuilder_;
        }

        private io.dstore.engine.Values.integerValue maxNumberOfProperties_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxNumberOfPropertiesBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public boolean hasMaxNumberOfProperties() {
          return maxNumberOfPropertiesBuilder_ != null || maxNumberOfProperties_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getMaxNumberOfProperties() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            return maxNumberOfProperties_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
          } else {
            return maxNumberOfPropertiesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public Builder setMaxNumberOfProperties(io.dstore.engine.Values.integerValue value) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxNumberOfProperties_ = value;
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public Builder setMaxNumberOfProperties(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = builderForValue.build();
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public Builder mergeMaxNumberOfProperties(io.dstore.engine.Values.integerValue value) {
          if (maxNumberOfPropertiesBuilder_ == null) {
            if (maxNumberOfProperties_ != null) {
              maxNumberOfProperties_ =
                io.dstore.engine.Values.integerValue.newBuilder(maxNumberOfProperties_).mergeFrom(value).buildPartial();
            } else {
              maxNumberOfProperties_ = value;
            }
            onChanged();
          } else {
            maxNumberOfPropertiesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public Builder clearMaxNumberOfProperties() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfProperties_ = null;
            onChanged();
          } else {
            maxNumberOfProperties_ = null;
            maxNumberOfPropertiesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getMaxNumberOfPropertiesBuilder() {
          
          onChanged();
          return getMaxNumberOfPropertiesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getMaxNumberOfPropertiesOrBuilder() {
          if (maxNumberOfPropertiesBuilder_ != null) {
            return maxNumberOfPropertiesBuilder_.getMessageOrBuilder();
          } else {
            return maxNumberOfProperties_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : maxNumberOfProperties_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_number_of_properties = 10014;</code>
         *
         * <pre>
         * Gibt an, wieviele Eigenschaften zum Merkmal ein Beitrag (bei gleicher "PersonID") maximal haben darf :- "NULL" : Keine Einschränkung- "0"    : Dieser Wert ist nicht erlaubt- "1"    : Maximal 1 Eigenschaft- "2"    : Maximal 2 Eigenschaftenusw.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getMaxNumberOfPropertiesFieldBuilder() {
          if (maxNumberOfPropertiesBuilder_ == null) {
            maxNumberOfPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getMaxNumberOfProperties(),
                    getParentForChildren(),
                    isClean());
            maxNumberOfProperties_ = null;
          }
          return maxNumberOfPropertiesBuilder_;
        }

        private io.dstore.engine.Values.integerValue forumId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> forumIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public boolean hasForumId() {
          return forumIdBuilder_ != null || forumId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getForumId() {
          if (forumIdBuilder_ == null) {
            return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
          } else {
            return forumIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public Builder setForumId(io.dstore.engine.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forumId_ = value;
            onChanged();
          } else {
            forumIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public Builder setForumId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (forumIdBuilder_ == null) {
            forumId_ = builderForValue.build();
            onChanged();
          } else {
            forumIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public Builder mergeForumId(io.dstore.engine.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (forumId_ != null) {
              forumId_ =
                io.dstore.engine.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
            } else {
              forumId_ = value;
            }
            onChanged();
          } else {
            forumIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public Builder clearForumId() {
          if (forumIdBuilder_ == null) {
            forumId_ = null;
            onChanged();
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getForumIdBuilder() {
          
          onChanged();
          return getForumIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
          if (forumIdBuilder_ != null) {
            return forumIdBuilder_.getMessageOrBuilder();
          } else {
            return forumId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 40003;</code>
         *
         * <pre>
         * ID eines Forums, dem das Merkmal (direkt) zugeordnet ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getForumIdFieldBuilder() {
          if (forumIdBuilder_ == null) {
            forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getForumId(),
                    getParentForChildren(),
                    isClean());
            forumId_ = null;
          }
          return forumIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue forumName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> forumNameBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public boolean hasForumName() {
          return forumNameBuilder_ != null || forumName_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getForumName() {
          if (forumNameBuilder_ == null) {
            return forumName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : forumName_;
          } else {
            return forumNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public Builder setForumName(io.dstore.engine.Values.stringValue value) {
          if (forumNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forumName_ = value;
            onChanged();
          } else {
            forumNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public Builder setForumName(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (forumNameBuilder_ == null) {
            forumName_ = builderForValue.build();
            onChanged();
          } else {
            forumNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public Builder mergeForumName(io.dstore.engine.Values.stringValue value) {
          if (forumNameBuilder_ == null) {
            if (forumName_ != null) {
              forumName_ =
                io.dstore.engine.Values.stringValue.newBuilder(forumName_).mergeFrom(value).buildPartial();
            } else {
              forumName_ = value;
            }
            onChanged();
          } else {
            forumNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public Builder clearForumName() {
          if (forumNameBuilder_ == null) {
            forumName_ = null;
            onChanged();
          } else {
            forumName_ = null;
            forumNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getForumNameBuilder() {
          
          onChanged();
          return getForumNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getForumNameOrBuilder() {
          if (forumNameBuilder_ != null) {
            return forumNameBuilder_.getMessageOrBuilder();
          } else {
            return forumName_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : forumName_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue forum_name = 40004;</code>
         *
         * <pre>
         * Name des Forums "ForumID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getForumNameFieldBuilder() {
          if (forumNameBuilder_ == null) {
            forumNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getForumName(),
                    getParentForChildren(),
                    isClean());
            forumName_ = null;
          }
          return forumNameBuilder_;
        }

        private io.dstore.engine.Values.integerValue forumCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> forumCategoryIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public boolean hasForumCategoryId() {
          return forumCategoryIdBuilder_ != null || forumCategoryId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getForumCategoryId() {
          if (forumCategoryIdBuilder_ == null) {
            return forumCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumCategoryId_;
          } else {
            return forumCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public Builder setForumCategoryId(io.dstore.engine.Values.integerValue value) {
          if (forumCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forumCategoryId_ = value;
            onChanged();
          } else {
            forumCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public Builder setForumCategoryId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (forumCategoryIdBuilder_ == null) {
            forumCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            forumCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public Builder mergeForumCategoryId(io.dstore.engine.Values.integerValue value) {
          if (forumCategoryIdBuilder_ == null) {
            if (forumCategoryId_ != null) {
              forumCategoryId_ =
                io.dstore.engine.Values.integerValue.newBuilder(forumCategoryId_).mergeFrom(value).buildPartial();
            } else {
              forumCategoryId_ = value;
            }
            onChanged();
          } else {
            forumCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public Builder clearForumCategoryId() {
          if (forumCategoryIdBuilder_ == null) {
            forumCategoryId_ = null;
            onChanged();
          } else {
            forumCategoryId_ = null;
            forumCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getForumCategoryIdBuilder() {
          
          onChanged();
          return getForumCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getForumCategoryIdOrBuilder() {
          if (forumCategoryIdBuilder_ != null) {
            return forumCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return forumCategoryId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : forumCategoryId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_category_id = 50011;</code>
         *
         * <pre>
         * ID einer Forum-Kategorie, dem das Merkmal zugeordnet ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getForumCategoryIdFieldBuilder() {
          if (forumCategoryIdBuilder_ == null) {
            forumCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getForumCategoryId(),
                    getParentForChildren(),
                    isClean());
            forumCategoryId_ = null;
          }
          return forumCategoryIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue categoryDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> categoryDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public boolean hasCategoryDescription() {
          return categoryDescriptionBuilder_ != null || categoryDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCategoryDescription() {
          if (categoryDescriptionBuilder_ == null) {
            return categoryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : categoryDescription_;
          } else {
            return categoryDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public Builder setCategoryDescription(io.dstore.engine.Values.stringValue value) {
          if (categoryDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            categoryDescription_ = value;
            onChanged();
          } else {
            categoryDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public Builder setCategoryDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = builderForValue.build();
            onChanged();
          } else {
            categoryDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public Builder mergeCategoryDescription(io.dstore.engine.Values.stringValue value) {
          if (categoryDescriptionBuilder_ == null) {
            if (categoryDescription_ != null) {
              categoryDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(categoryDescription_).mergeFrom(value).buildPartial();
            } else {
              categoryDescription_ = value;
            }
            onChanged();
          } else {
            categoryDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public Builder clearCategoryDescription() {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescription_ = null;
            onChanged();
          } else {
            categoryDescription_ = null;
            categoryDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCategoryDescriptionBuilder() {
          
          onChanged();
          return getCategoryDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCategoryDescriptionOrBuilder() {
          if (categoryDescriptionBuilder_ != null) {
            return categoryDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return categoryDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : categoryDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue category_description = 50014;</code>
         *
         * <pre>
         * Bezeichnung der Kategorie "ForumCategoryID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCategoryDescriptionFieldBuilder() {
          if (categoryDescriptionBuilder_ == null) {
            categoryDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCategoryDescription(),
                    getParentForChildren(),
                    isClean());
            categoryDescription_ = null;
          }
          return categoryDescriptionBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Ad.Response.Row)
      private static final io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row();
      }

      public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetPostingCharacsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPostingCharacs_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPostingCharacs_Ad.Response)
        io.dstore.engine.procs.FoGetPostingCharacsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetPostingCharacsAd.Response.class, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetPostingCharacsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetPostingCharacsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response build() {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response buildPartial() {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Response result = new io.dstore.engine.procs.FoGetPostingCharacsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetPostingCharacsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.FoGetPostingCharacsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetPostingCharacsAd.Response other) {
        if (other == io.dstore.engine.procs.FoGetPostingCharacsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetPostingCharacsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetPostingCharacsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPostingCharacs_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.Row.Builder, io.dstore.engine.procs.FoGetPostingCharacsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPostingCharacs_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPostingCharacs_Ad.Response)
    private static final io.dstore.engine.procs.FoGetPostingCharacsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetPostingCharacsAd.Response();
    }

    public static io.dstore.engine.procs.FoGetPostingCharacsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetPostingCharacsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6dstore/engine/procedures/fo_GetPosting" +
      "Characs_Ad.proto\022%dstore.engine.fo_GetPo" +
      "stingCharacs_Ad\032\032dstore/engine/values.pr" +
      "oto\032\031dstore/engine/error.proto\032\033dstore/e" +
      "ngine/message.proto\"\356\003\n\nParameters\022E\n\031po" +
      "sting_characteristic_id\030\001 \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022\'\n\036posting_cha" +
      "racteristic_id_null\030\351\007 \001(\010\022M\n!get_assign" +
      "ed_forums_or_categories\030\002 \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022/\n&get_assigne",
      "d_forums_or_categories_null\030\352\007 \001(\010\022H\n\034ch" +
      "aracs_assigned_to_forum_id\030\003 \001(\0132\".dstor" +
      "e.engine.values.integerValue\022*\n!characs_" +
      "assigned_to_forum_id_null\030\353\007 \001(\010\022K\n\037char" +
      "acs_assigned_to_category_id\030\004 \001(\0132\".dsto" +
      "re.engine.values.integerValue\022-\n$characs" +
      "_assigned_to_category_id_null\030\354\007 \001(\010\"\317\n\n" +
      "\010Response\022)\n\005error\030\001 \001(\0132\032.dstore.engine" +
      ".error.Error\022/\n\007message\030\003 \003(\0132\036.dstore.e" +
      "ngine.message.Message\022@\n\003row\030\004 \003(\01323.dst",
      "ore.engine.fo_GetPostingCharacs_Ad.Respo" +
      "nse.Row\032\244\t\n\003Row\022\017\n\006row_id\030\220N \001(\005\022F\n\032char" +
      "acteristic_description\030\221N \001(\0132!.dstore.e" +
      "ngine.values.stringValue\022:\n\rfield_type_i" +
      "d\030\222N \001(\0132\".dstore.engine.values.integerV" +
      "alue\022F\n\031posting_characteristic_id\030\223N \001(\013" +
      "2\".dstore.engine.values.integerValue\022<\n\017" +
      "precision_value\030\224N \001(\0132\".dstore.engine.v" +
      "alues.integerValue\022B\n\025common_characteris" +
      "tic\030\225N \001(\0132\".dstore.engine.values.intege",
      "rValue\0227\n\nmax_length\030\226N \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022>\n\021predefined_va" +
      "lues\030\227N \001(\0132\".dstore.engine.values.boole" +
      "anValue\022E\n\030check_posting_visibility\030\230N \001" +
      "(\0132\".dstore.engine.values.booleanValue\0222" +
      "\n\006format\030\231N \001(\0132!.dstore.engine.values.s" +
      "tringValue\022<\n\020basic_field_type\030\232N \001(\0132!." +
      "dstore.engine.values.stringValue\022B\n\026fiel" +
      "d_type_description\030\233N \001(\0132!.dstore.engin" +
      "e.values.stringValue\022@\n\023basic_field_type",
      "_id\030\234N \001(\0132\".dstore.engine.values.intege" +
      "rValue\022J\n\035property_modification_allowed\030" +
      "\235N \001(\0132\".dstore.engine.values.integerVal" +
      "ue\022E\n\030max_number_of_properties\030\236N \001(\0132\"." +
      "dstore.engine.values.integerValue\0226\n\010for" +
      "um_id\030\303\270\002 \001(\0132\".dstore.engine.values.int" +
      "egerValue\0227\n\nforum_name\030\304\270\002 \001(\0132!.dstore" +
      ".engine.values.stringValue\022?\n\021forum_cate" +
      "gory_id\030\333\206\003 \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\022A\n\024category_description\030\336\206\003 ",
      "\001(\0132!.dstore.engine.values.stringValueB\030" +
      "\n\026io.dstore.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Parameters_descriptor,
        new java.lang.String[] { "PostingCharacteristicId", "PostingCharacteristicIdNull", "GetAssignedForumsOrCategories", "GetAssignedForumsOrCategoriesNull", "CharacsAssignedToForumId", "CharacsAssignedToForumIdNull", "CharacsAssignedToCategoryId", "CharacsAssignedToCategoryIdNull", });
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPostingCharacs_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "CharacteristicDescription", "FieldTypeId", "PostingCharacteristicId", "PrecisionValue", "CommonCharacteristic", "MaxLength", "PredefinedValues", "CheckPostingVisibility", "Format", "BasicFieldType", "FieldTypeDescription", "BasicFieldTypeId", "PropertyModificationAllowed", "MaxNumberOfProperties", "ForumId", "ForumName", "ForumCategoryId", "CategoryDescription", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
