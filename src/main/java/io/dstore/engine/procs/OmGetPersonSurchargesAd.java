// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetPersonSurcharges_Ad.proto

package io.dstore.engine.procs;

public final class OmGetPersonSurchargesAd {
  private OmGetPersonSurchargesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonSurcharges_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1001;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    boolean hasPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

    /**
     * <code>optional bool person_id_null = 1002;</code>
     */
    boolean getPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    boolean hasTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    io.dstore.engine.Values.integerValue getTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

    /**
     * <code>optional bool tree_node_id_null = 1003;</code>
     */
    boolean getTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    boolean hasOutputCharacteristicId1();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    io.dstore.engine.Values.integerValue getOutputCharacteristicId1();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId1OrBuilder();

    /**
     * <code>optional bool output_characteristic_id1_null = 1004;</code>
     */
    boolean getOutputCharacteristicId1Null();

    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    boolean hasOutputCharacteristicId2();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    io.dstore.engine.Values.integerValue getOutputCharacteristicId2();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId2OrBuilder();

    /**
     * <code>optional bool output_characteristic_id2_null = 1005;</code>
     */
    boolean getOutputCharacteristicId2Null();

    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    boolean hasOutputCharacteristicId3();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    io.dstore.engine.Values.integerValue getOutputCharacteristicId3();
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId3OrBuilder();

    /**
     * <code>optional bool output_characteristic_id3_null = 1006;</code>
     */
    boolean getOutputCharacteristicId3Null();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonSurcharges_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      personTypeIdNull_ = false;
      personIdNull_ = false;
      treeNodeIdNull_ = false;
      outputCharacteristicId1Null_ = false;
      outputCharacteristicId2Null_ = false;
      outputCharacteristicId3Null_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personId_ != null) {
                subBuilder = personId_.toBuilder();
              }
              personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personId_);
                personId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (treeNodeId_ != null) {
                subBuilder = treeNodeId_.toBuilder();
              }
              treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treeNodeId_);
                treeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (outputCharacteristicId1_ != null) {
                subBuilder = outputCharacteristicId1_.toBuilder();
              }
              outputCharacteristicId1_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputCharacteristicId1_);
                outputCharacteristicId1_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (outputCharacteristicId2_ != null) {
                subBuilder = outputCharacteristicId2_.toBuilder();
              }
              outputCharacteristicId2_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputCharacteristicId2_);
                outputCharacteristicId2_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (outputCharacteristicId3_ != null) {
                subBuilder = outputCharacteristicId3_.toBuilder();
              }
              outputCharacteristicId3_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputCharacteristicId3_);
                outputCharacteristicId3_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              personIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              treeNodeIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              outputCharacteristicId1Null_ = input.readBool();
              break;
            }
            case 8040: {

              outputCharacteristicId2Null_ = input.readBool();
              break;
            }
            case 8048: {

              outputCharacteristicId3Null_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.Builder.class);
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1001;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int PERSON_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue personId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public boolean hasPersonId() {
      return personId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonId() {
      return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
      return getPersonId();
    }

    public static final int PERSON_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personIdNull_;
    /**
     * <code>optional bool person_id_null = 1002;</code>
     */
    public boolean getPersonIdNull() {
      return personIdNull_;
    }

    public static final int TREE_NODE_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue treeNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    public boolean hasTreeNodeId() {
      return treeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getTreeNodeId() {
      return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
      return getTreeNodeId();
    }

    public static final int TREE_NODE_ID_NULL_FIELD_NUMBER = 1003;
    private boolean treeNodeIdNull_;
    /**
     * <code>optional bool tree_node_id_null = 1003;</code>
     */
    public boolean getTreeNodeIdNull() {
      return treeNodeIdNull_;
    }

    public static final int OUTPUT_CHARACTERISTIC_ID1_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue outputCharacteristicId1_;
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    public boolean hasOutputCharacteristicId1() {
      return outputCharacteristicId1_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getOutputCharacteristicId1() {
      return outputCharacteristicId1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId1_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId1OrBuilder() {
      return getOutputCharacteristicId1();
    }

    public static final int OUTPUT_CHARACTERISTIC_ID1_NULL_FIELD_NUMBER = 1004;
    private boolean outputCharacteristicId1Null_;
    /**
     * <code>optional bool output_characteristic_id1_null = 1004;</code>
     */
    public boolean getOutputCharacteristicId1Null() {
      return outputCharacteristicId1Null_;
    }

    public static final int OUTPUT_CHARACTERISTIC_ID2_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.integerValue outputCharacteristicId2_;
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    public boolean hasOutputCharacteristicId2() {
      return outputCharacteristicId2_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    public io.dstore.engine.Values.integerValue getOutputCharacteristicId2() {
      return outputCharacteristicId2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId2_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId2OrBuilder() {
      return getOutputCharacteristicId2();
    }

    public static final int OUTPUT_CHARACTERISTIC_ID2_NULL_FIELD_NUMBER = 1005;
    private boolean outputCharacteristicId2Null_;
    /**
     * <code>optional bool output_characteristic_id2_null = 1005;</code>
     */
    public boolean getOutputCharacteristicId2Null() {
      return outputCharacteristicId2Null_;
    }

    public static final int OUTPUT_CHARACTERISTIC_ID3_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue outputCharacteristicId3_;
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    public boolean hasOutputCharacteristicId3() {
      return outputCharacteristicId3_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getOutputCharacteristicId3() {
      return outputCharacteristicId3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId3_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId3OrBuilder() {
      return getOutputCharacteristicId3();
    }

    public static final int OUTPUT_CHARACTERISTIC_ID3_NULL_FIELD_NUMBER = 1006;
    private boolean outputCharacteristicId3Null_;
    /**
     * <code>optional bool output_characteristic_id3_null = 1006;</code>
     */
    public boolean getOutputCharacteristicId3Null() {
      return outputCharacteristicId3Null_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personTypeId_ != null) {
        output.writeMessage(1, getPersonTypeId());
      }
      if (personId_ != null) {
        output.writeMessage(2, getPersonId());
      }
      if (treeNodeId_ != null) {
        output.writeMessage(3, getTreeNodeId());
      }
      if (outputCharacteristicId1_ != null) {
        output.writeMessage(4, getOutputCharacteristicId1());
      }
      if (outputCharacteristicId2_ != null) {
        output.writeMessage(5, getOutputCharacteristicId2());
      }
      if (outputCharacteristicId3_ != null) {
        output.writeMessage(6, getOutputCharacteristicId3());
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1001, personTypeIdNull_);
      }
      if (personIdNull_ != false) {
        output.writeBool(1002, personIdNull_);
      }
      if (treeNodeIdNull_ != false) {
        output.writeBool(1003, treeNodeIdNull_);
      }
      if (outputCharacteristicId1Null_ != false) {
        output.writeBool(1004, outputCharacteristicId1Null_);
      }
      if (outputCharacteristicId2Null_ != false) {
        output.writeBool(1005, outputCharacteristicId2Null_);
      }
      if (outputCharacteristicId3Null_ != false) {
        output.writeBool(1006, outputCharacteristicId3Null_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonTypeId());
      }
      if (personId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonId());
      }
      if (treeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTreeNodeId());
      }
      if (outputCharacteristicId1_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOutputCharacteristicId1());
      }
      if (outputCharacteristicId2_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOutputCharacteristicId2());
      }
      if (outputCharacteristicId3_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getOutputCharacteristicId3());
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personTypeIdNull_);
      }
      if (personIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personIdNull_);
      }
      if (treeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, treeNodeIdNull_);
      }
      if (outputCharacteristicId1Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, outputCharacteristicId1Null_);
      }
      if (outputCharacteristicId2Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, outputCharacteristicId2Null_);
      }
      if (outputCharacteristicId3Null_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, outputCharacteristicId3Null_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonSurcharges_Ad.Parameters)
        io.dstore.engine.procs.OmGetPersonSurchargesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (personIdBuilder_ == null) {
          personId_ = null;
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }
        personIdNull_ = false;

        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }
        treeNodeIdNull_ = false;

        if (outputCharacteristicId1Builder_ == null) {
          outputCharacteristicId1_ = null;
        } else {
          outputCharacteristicId1_ = null;
          outputCharacteristicId1Builder_ = null;
        }
        outputCharacteristicId1Null_ = false;

        if (outputCharacteristicId2Builder_ == null) {
          outputCharacteristicId2_ = null;
        } else {
          outputCharacteristicId2_ = null;
          outputCharacteristicId2Builder_ = null;
        }
        outputCharacteristicId2Null_ = false;

        if (outputCharacteristicId3Builder_ == null) {
          outputCharacteristicId3_ = null;
        } else {
          outputCharacteristicId3_ = null;
          outputCharacteristicId3Builder_ = null;
        }
        outputCharacteristicId3Null_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters build() {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters buildPartial() {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters result = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters(this);
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (personIdBuilder_ == null) {
          result.personId_ = personId_;
        } else {
          result.personId_ = personIdBuilder_.build();
        }
        result.personIdNull_ = personIdNull_;
        if (treeNodeIdBuilder_ == null) {
          result.treeNodeId_ = treeNodeId_;
        } else {
          result.treeNodeId_ = treeNodeIdBuilder_.build();
        }
        result.treeNodeIdNull_ = treeNodeIdNull_;
        if (outputCharacteristicId1Builder_ == null) {
          result.outputCharacteristicId1_ = outputCharacteristicId1_;
        } else {
          result.outputCharacteristicId1_ = outputCharacteristicId1Builder_.build();
        }
        result.outputCharacteristicId1Null_ = outputCharacteristicId1Null_;
        if (outputCharacteristicId2Builder_ == null) {
          result.outputCharacteristicId2_ = outputCharacteristicId2_;
        } else {
          result.outputCharacteristicId2_ = outputCharacteristicId2Builder_.build();
        }
        result.outputCharacteristicId2Null_ = outputCharacteristicId2Null_;
        if (outputCharacteristicId3Builder_ == null) {
          result.outputCharacteristicId3_ = outputCharacteristicId3_;
        } else {
          result.outputCharacteristicId3_ = outputCharacteristicId3Builder_.build();
        }
        result.outputCharacteristicId3Null_ = outputCharacteristicId3Null_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters other) {
        if (other == io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasPersonId()) {
          mergePersonId(other.getPersonId());
        }
        if (other.getPersonIdNull() != false) {
          setPersonIdNull(other.getPersonIdNull());
        }
        if (other.hasTreeNodeId()) {
          mergeTreeNodeId(other.getTreeNodeId());
        }
        if (other.getTreeNodeIdNull() != false) {
          setTreeNodeIdNull(other.getTreeNodeIdNull());
        }
        if (other.hasOutputCharacteristicId1()) {
          mergeOutputCharacteristicId1(other.getOutputCharacteristicId1());
        }
        if (other.getOutputCharacteristicId1Null() != false) {
          setOutputCharacteristicId1Null(other.getOutputCharacteristicId1Null());
        }
        if (other.hasOutputCharacteristicId2()) {
          mergeOutputCharacteristicId2(other.getOutputCharacteristicId2());
        }
        if (other.getOutputCharacteristicId2Null() != false) {
          setOutputCharacteristicId2Null(other.getOutputCharacteristicId2Null());
        }
        if (other.hasOutputCharacteristicId3()) {
          mergeOutputCharacteristicId3(other.getOutputCharacteristicId3());
        }
        if (other.getOutputCharacteristicId3Null() != false) {
          setOutputCharacteristicId3Null(other.getOutputCharacteristicId3Null());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public Builder setPersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public Builder mergePersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1001;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue personId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public boolean hasPersonId() {
        return personIdBuilder_ != null || personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        if (personIdBuilder_ == null) {
          return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        } else {
          return personIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personId_ = value;
          onChanged();
        } else {
          personIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder setPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personIdBuilder_ == null) {
          personId_ = builderForValue.build();
          onChanged();
        } else {
          personIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (personId_ != null) {
            personId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
          } else {
            personId_ = value;
          }
          onChanged();
        } else {
          personIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder clearPersonId() {
        if (personIdBuilder_ == null) {
          personId_ = null;
          onChanged();
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
        
        onChanged();
        return getPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        if (personIdBuilder_ != null) {
          return personIdBuilder_.getMessageOrBuilder();
        } else {
          return personId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonIdFieldBuilder() {
        if (personIdBuilder_ == null) {
          personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonId(),
                  getParentForChildren(),
                  isClean());
          personId_ = null;
        }
        return personIdBuilder_;
      }

      private boolean personIdNull_ ;
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public boolean getPersonIdNull() {
        return personIdNull_;
      }
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public Builder setPersonIdNull(boolean value) {
        
        personIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public Builder clearPersonIdNull() {
        
        personIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue treeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeIdBuilder_ != null || treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
        } else {
          return treeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treeNodeId_ = value;
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public Builder setTreeNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (treeNodeId_ != null) {
            treeNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
          } else {
            treeNodeId_ = value;
          }
          onChanged();
        } else {
          treeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public Builder clearTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
          onChanged();
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
        
        onChanged();
        return getTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        if (treeNodeIdBuilder_ != null) {
          return treeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return treeNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getTreeNodeIdFieldBuilder() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          treeNodeId_ = null;
        }
        return treeNodeIdBuilder_;
      }

      private boolean treeNodeIdNull_ ;
      /**
       * <code>optional bool tree_node_id_null = 1003;</code>
       */
      public boolean getTreeNodeIdNull() {
        return treeNodeIdNull_;
      }
      /**
       * <code>optional bool tree_node_id_null = 1003;</code>
       */
      public Builder setTreeNodeIdNull(boolean value) {
        
        treeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tree_node_id_null = 1003;</code>
       */
      public Builder clearTreeNodeIdNull() {
        
        treeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue outputCharacteristicId1_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> outputCharacteristicId1Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public boolean hasOutputCharacteristicId1() {
        return outputCharacteristicId1Builder_ != null || outputCharacteristicId1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getOutputCharacteristicId1() {
        if (outputCharacteristicId1Builder_ == null) {
          return outputCharacteristicId1_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId1_;
        } else {
          return outputCharacteristicId1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public Builder setOutputCharacteristicId1(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputCharacteristicId1_ = value;
          onChanged();
        } else {
          outputCharacteristicId1Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public Builder setOutputCharacteristicId1(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (outputCharacteristicId1Builder_ == null) {
          outputCharacteristicId1_ = builderForValue.build();
          onChanged();
        } else {
          outputCharacteristicId1Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public Builder mergeOutputCharacteristicId1(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId1Builder_ == null) {
          if (outputCharacteristicId1_ != null) {
            outputCharacteristicId1_ =
              io.dstore.engine.Values.integerValue.newBuilder(outputCharacteristicId1_).mergeFrom(value).buildPartial();
          } else {
            outputCharacteristicId1_ = value;
          }
          onChanged();
        } else {
          outputCharacteristicId1Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public Builder clearOutputCharacteristicId1() {
        if (outputCharacteristicId1Builder_ == null) {
          outputCharacteristicId1_ = null;
          onChanged();
        } else {
          outputCharacteristicId1_ = null;
          outputCharacteristicId1Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getOutputCharacteristicId1Builder() {
        
        onChanged();
        return getOutputCharacteristicId1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId1OrBuilder() {
        if (outputCharacteristicId1Builder_ != null) {
          return outputCharacteristicId1Builder_.getMessageOrBuilder();
        } else {
          return outputCharacteristicId1_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId1_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id1 = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getOutputCharacteristicId1FieldBuilder() {
        if (outputCharacteristicId1Builder_ == null) {
          outputCharacteristicId1Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getOutputCharacteristicId1(),
                  getParentForChildren(),
                  isClean());
          outputCharacteristicId1_ = null;
        }
        return outputCharacteristicId1Builder_;
      }

      private boolean outputCharacteristicId1Null_ ;
      /**
       * <code>optional bool output_characteristic_id1_null = 1004;</code>
       */
      public boolean getOutputCharacteristicId1Null() {
        return outputCharacteristicId1Null_;
      }
      /**
       * <code>optional bool output_characteristic_id1_null = 1004;</code>
       */
      public Builder setOutputCharacteristicId1Null(boolean value) {
        
        outputCharacteristicId1Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool output_characteristic_id1_null = 1004;</code>
       */
      public Builder clearOutputCharacteristicId1Null() {
        
        outputCharacteristicId1Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue outputCharacteristicId2_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> outputCharacteristicId2Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public boolean hasOutputCharacteristicId2() {
        return outputCharacteristicId2Builder_ != null || outputCharacteristicId2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public io.dstore.engine.Values.integerValue getOutputCharacteristicId2() {
        if (outputCharacteristicId2Builder_ == null) {
          return outputCharacteristicId2_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId2_;
        } else {
          return outputCharacteristicId2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public Builder setOutputCharacteristicId2(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputCharacteristicId2_ = value;
          onChanged();
        } else {
          outputCharacteristicId2Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public Builder setOutputCharacteristicId2(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (outputCharacteristicId2Builder_ == null) {
          outputCharacteristicId2_ = builderForValue.build();
          onChanged();
        } else {
          outputCharacteristicId2Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public Builder mergeOutputCharacteristicId2(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId2Builder_ == null) {
          if (outputCharacteristicId2_ != null) {
            outputCharacteristicId2_ =
              io.dstore.engine.Values.integerValue.newBuilder(outputCharacteristicId2_).mergeFrom(value).buildPartial();
          } else {
            outputCharacteristicId2_ = value;
          }
          onChanged();
        } else {
          outputCharacteristicId2Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public Builder clearOutputCharacteristicId2() {
        if (outputCharacteristicId2Builder_ == null) {
          outputCharacteristicId2_ = null;
          onChanged();
        } else {
          outputCharacteristicId2_ = null;
          outputCharacteristicId2Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getOutputCharacteristicId2Builder() {
        
        onChanged();
        return getOutputCharacteristicId2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId2OrBuilder() {
        if (outputCharacteristicId2Builder_ != null) {
          return outputCharacteristicId2Builder_.getMessageOrBuilder();
        } else {
          return outputCharacteristicId2_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId2_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id2 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getOutputCharacteristicId2FieldBuilder() {
        if (outputCharacteristicId2Builder_ == null) {
          outputCharacteristicId2Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getOutputCharacteristicId2(),
                  getParentForChildren(),
                  isClean());
          outputCharacteristicId2_ = null;
        }
        return outputCharacteristicId2Builder_;
      }

      private boolean outputCharacteristicId2Null_ ;
      /**
       * <code>optional bool output_characteristic_id2_null = 1005;</code>
       */
      public boolean getOutputCharacteristicId2Null() {
        return outputCharacteristicId2Null_;
      }
      /**
       * <code>optional bool output_characteristic_id2_null = 1005;</code>
       */
      public Builder setOutputCharacteristicId2Null(boolean value) {
        
        outputCharacteristicId2Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool output_characteristic_id2_null = 1005;</code>
       */
      public Builder clearOutputCharacteristicId2Null() {
        
        outputCharacteristicId2Null_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue outputCharacteristicId3_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> outputCharacteristicId3Builder_;
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public boolean hasOutputCharacteristicId3() {
        return outputCharacteristicId3Builder_ != null || outputCharacteristicId3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getOutputCharacteristicId3() {
        if (outputCharacteristicId3Builder_ == null) {
          return outputCharacteristicId3_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId3_;
        } else {
          return outputCharacteristicId3Builder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public Builder setOutputCharacteristicId3(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId3Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputCharacteristicId3_ = value;
          onChanged();
        } else {
          outputCharacteristicId3Builder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public Builder setOutputCharacteristicId3(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (outputCharacteristicId3Builder_ == null) {
          outputCharacteristicId3_ = builderForValue.build();
          onChanged();
        } else {
          outputCharacteristicId3Builder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public Builder mergeOutputCharacteristicId3(io.dstore.engine.Values.integerValue value) {
        if (outputCharacteristicId3Builder_ == null) {
          if (outputCharacteristicId3_ != null) {
            outputCharacteristicId3_ =
              io.dstore.engine.Values.integerValue.newBuilder(outputCharacteristicId3_).mergeFrom(value).buildPartial();
          } else {
            outputCharacteristicId3_ = value;
          }
          onChanged();
        } else {
          outputCharacteristicId3Builder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public Builder clearOutputCharacteristicId3() {
        if (outputCharacteristicId3Builder_ == null) {
          outputCharacteristicId3_ = null;
          onChanged();
        } else {
          outputCharacteristicId3_ = null;
          outputCharacteristicId3Builder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getOutputCharacteristicId3Builder() {
        
        onChanged();
        return getOutputCharacteristicId3FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOutputCharacteristicId3OrBuilder() {
        if (outputCharacteristicId3Builder_ != null) {
          return outputCharacteristicId3Builder_.getMessageOrBuilder();
        } else {
          return outputCharacteristicId3_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : outputCharacteristicId3_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue output_characteristic_id3 = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getOutputCharacteristicId3FieldBuilder() {
        if (outputCharacteristicId3Builder_ == null) {
          outputCharacteristicId3Builder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getOutputCharacteristicId3(),
                  getParentForChildren(),
                  isClean());
          outputCharacteristicId3_ = null;
        }
        return outputCharacteristicId3Builder_;
      }

      private boolean outputCharacteristicId3Null_ ;
      /**
       * <code>optional bool output_characteristic_id3_null = 1006;</code>
       */
      public boolean getOutputCharacteristicId3Null() {
        return outputCharacteristicId3Null_;
      }
      /**
       * <code>optional bool output_characteristic_id3_null = 1006;</code>
       */
      public Builder setOutputCharacteristicId3Null(boolean value) {
        
        outputCharacteristicId3Null_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool output_characteristic_id3_null = 1006;</code>
       */
      public Builder clearOutputCharacteristicId3Null() {
        
        outputCharacteristicId3Null_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonSurcharges_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonSurcharges_Ad.Parameters)
    private static final io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters();
    }

    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetPersonSurchargesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonSurcharges_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonSurcharges_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonSurcharges_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      boolean hasValue1RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue1RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue1RestrictedByPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      boolean hasValue2RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue2RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue2RestrictedByPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      boolean hasRelative();
      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getRelative();
      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getRelativeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      boolean hasValue3();
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue3();
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      boolean hasValue1();
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue1();
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      boolean hasUnitSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getUnitSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      boolean hasValue2();
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue2();
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      boolean hasSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      boolean hasActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      boolean hasUnitId();
      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getUnitId();
      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getUnitIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      boolean hasSurchargeTypeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getSurchargeTypeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      boolean hasSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      boolean hasValue3RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue3RestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValue3RestrictedByPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      boolean hasLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonSurcharges_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value1RestrictedByPattern_ != null) {
                  subBuilder = value1RestrictedByPattern_.toBuilder();
                }
                value1RestrictedByPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1RestrictedByPattern_);
                  value1RestrictedByPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value2RestrictedByPattern_ != null) {
                  subBuilder = value2RestrictedByPattern_.toBuilder();
                }
                value2RestrictedByPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2RestrictedByPattern_);
                  value2RestrictedByPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (relative_ != null) {
                  subBuilder = relative_.toBuilder();
                }
                relative_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relative_);
                  relative_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value3_ != null) {
                  subBuilder = value3_.toBuilder();
                }
                value3_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3_);
                  value3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value1_ != null) {
                  subBuilder = value1_.toBuilder();
                }
                value1_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1_);
                  value1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (unitSymbol_ != null) {
                  subBuilder = unitSymbol_.toBuilder();
                }
                unitSymbol_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitSymbol_);
                  unitSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value2_ != null) {
                  subBuilder = value2_.toBuilder();
                }
                value2_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2_);
                  value2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (unitId_ != null) {
                  subBuilder = unitId_.toBuilder();
                }
                unitId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitId_);
                  unitId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (surchargeTypeDescription_ != null) {
                  subBuilder = surchargeTypeDescription_.toBuilder();
                }
                surchargeTypeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeDescription_);
                  surchargeTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value3RestrictedByPattern_ != null) {
                  subBuilder = value3RestrictedByPattern_.toBuilder();
                }
                value3RestrictedByPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3RestrictedByPattern_);
                  value3RestrictedByPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (levelId_ != null) {
                  subBuilder = levelId_.toBuilder();
                }
                levelId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelId_);
                  levelId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int VALUE1_RESTRICTED_BY_PATTERN_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue value1RestrictedByPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      public boolean hasValue1RestrictedByPattern() {
        return value1RestrictedByPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue1RestrictedByPattern() {
        return value1RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1RestrictedByPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue1RestrictedByPatternOrBuilder() {
        return getValue1RestrictedByPattern();
      }

      public static final int VALUE2_RESTRICTED_BY_PATTERN_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue value2RestrictedByPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      public boolean hasValue2RestrictedByPattern() {
        return value2RestrictedByPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue2RestrictedByPattern() {
        return value2RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2RestrictedByPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
       *
       * <pre>
       * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue2RestrictedByPatternOrBuilder() {
        return getValue2RestrictedByPattern();
      }

      public static final int RELATIVE_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.booleanValue relative_;
      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      public boolean hasRelative() {
        return relative_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getRelative() {
        return relative_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : relative_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
       *
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getRelativeOrBuilder() {
        return getRelative();
      }

      public static final int VALUE3_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue value3_;
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      public boolean hasValue3() {
        return value3_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue3() {
        return value3_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder() {
        return getValue3();
      }

      public static final int VALUE1_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue value1_;
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      public boolean hasValue1() {
        return value1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue1() {
        return value1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder() {
        return getValue1();
      }

      public static final int UNIT_SYMBOL_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue unitSymbol_;
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      public boolean hasUnitSymbol() {
        return unitSymbol_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getUnitSymbol() {
        return unitSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
        return getUnitSymbol();
      }

      public static final int VALUE2_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue value2_;
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      public boolean hasValue2() {
        return value2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue2() {
        return value2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
       *
       * <pre>
       * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder() {
        return getValue2();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.decimalValue surchargeValue_;
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
       *
       * <pre>
       * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.booleanValue active_;
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int UNIT_ID_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue unitId_;
      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public boolean hasUnitId() {
        return unitId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getUnitId() {
        return unitId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : unitId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
       *
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getUnitIdOrBuilder() {
        return getUnitId();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int SURCHARGE_TYPE_DESCRIPTION_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.stringValue surchargeTypeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public boolean hasSurchargeTypeDescription() {
        return surchargeTypeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getSurchargeTypeDescription() {
        return surchargeTypeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
        return getSurchargeTypeDescription();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.integerValue surchargeTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      public static final int VALUE3_RESTRICTED_BY_PATTERN_FIELD_NUMBER = 10017;
      private io.dstore.engine.Values.stringValue value3RestrictedByPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      public boolean hasValue3RestrictedByPattern() {
        return value3RestrictedByPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue3RestrictedByPattern() {
        return value3RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3RestrictedByPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
       *
       * <pre>
       * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValue3RestrictedByPatternOrBuilder() {
        return getValue3RestrictedByPattern();
      }

      public static final int LEVEL_ID_FIELD_NUMBER = 10018;
      private io.dstore.engine.Values.integerValue levelId_;
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public boolean hasLevelId() {
        return levelId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLevelId() {
        return levelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder() {
        return getLevelId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (value1RestrictedByPattern_ != null) {
          output.writeMessage(10001, getValue1RestrictedByPattern());
        }
        if (value2RestrictedByPattern_ != null) {
          output.writeMessage(10002, getValue2RestrictedByPattern());
        }
        if (relative_ != null) {
          output.writeMessage(10003, getRelative());
        }
        if (value3_ != null) {
          output.writeMessage(10004, getValue3());
        }
        if (value1_ != null) {
          output.writeMessage(10005, getValue1());
        }
        if (unitSymbol_ != null) {
          output.writeMessage(10006, getUnitSymbol());
        }
        if (value2_ != null) {
          output.writeMessage(10007, getValue2());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10008, getSurchargeValue());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10009, getNodeDescription());
        }
        if (active_ != null) {
          output.writeMessage(10010, getActive());
        }
        if (personId_ != null) {
          output.writeMessage(10011, getPersonId());
        }
        if (unitId_ != null) {
          output.writeMessage(10012, getUnitId());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10013, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10014, getNodeId());
        }
        if (surchargeTypeDescription_ != null) {
          output.writeMessage(10015, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10016, getSurchargeTypeId());
        }
        if (value3RestrictedByPattern_ != null) {
          output.writeMessage(10017, getValue3RestrictedByPattern());
        }
        if (levelId_ != null) {
          output.writeMessage(10018, getLevelId());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (value1RestrictedByPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getValue1RestrictedByPattern());
        }
        if (value2RestrictedByPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getValue2RestrictedByPattern());
        }
        if (relative_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getRelative());
        }
        if (value3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getValue3());
        }
        if (value1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValue1());
        }
        if (unitSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getUnitSymbol());
        }
        if (value2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getValue2());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSurchargeValue());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getNodeDescription());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getActive());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getPersonId());
        }
        if (unitId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getUnitId());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getNodeId());
        }
        if (surchargeTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getSurchargeTypeId());
        }
        if (value3RestrictedByPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getValue3RestrictedByPattern());
        }
        if (levelId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getLevelId());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonSurcharges_Ad.Response.Row)
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (value1RestrictedByPatternBuilder_ == null) {
            value1RestrictedByPattern_ = null;
          } else {
            value1RestrictedByPattern_ = null;
            value1RestrictedByPatternBuilder_ = null;
          }
          if (value2RestrictedByPatternBuilder_ == null) {
            value2RestrictedByPattern_ = null;
          } else {
            value2RestrictedByPattern_ = null;
            value2RestrictedByPatternBuilder_ = null;
          }
          if (relativeBuilder_ == null) {
            relative_ = null;
          } else {
            relative_ = null;
            relativeBuilder_ = null;
          }
          if (value3Builder_ == null) {
            value3_ = null;
          } else {
            value3_ = null;
            value3Builder_ = null;
          }
          if (value1Builder_ == null) {
            value1_ = null;
          } else {
            value1_ = null;
            value1Builder_ = null;
          }
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }
          if (value2Builder_ == null) {
            value2_ = null;
          } else {
            value2_ = null;
            value2Builder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (unitIdBuilder_ == null) {
            unitId_ = null;
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          if (value3RestrictedByPatternBuilder_ == null) {
            value3RestrictedByPattern_ = null;
          } else {
            value3RestrictedByPattern_ = null;
            value3RestrictedByPatternBuilder_ = null;
          }
          if (levelIdBuilder_ == null) {
            levelId_ = null;
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row build() {
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row buildPartial() {
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row result = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (value1RestrictedByPatternBuilder_ == null) {
            result.value1RestrictedByPattern_ = value1RestrictedByPattern_;
          } else {
            result.value1RestrictedByPattern_ = value1RestrictedByPatternBuilder_.build();
          }
          if (value2RestrictedByPatternBuilder_ == null) {
            result.value2RestrictedByPattern_ = value2RestrictedByPattern_;
          } else {
            result.value2RestrictedByPattern_ = value2RestrictedByPatternBuilder_.build();
          }
          if (relativeBuilder_ == null) {
            result.relative_ = relative_;
          } else {
            result.relative_ = relativeBuilder_.build();
          }
          if (value3Builder_ == null) {
            result.value3_ = value3_;
          } else {
            result.value3_ = value3Builder_.build();
          }
          if (value1Builder_ == null) {
            result.value1_ = value1_;
          } else {
            result.value1_ = value1Builder_.build();
          }
          if (unitSymbolBuilder_ == null) {
            result.unitSymbol_ = unitSymbol_;
          } else {
            result.unitSymbol_ = unitSymbolBuilder_.build();
          }
          if (value2Builder_ == null) {
            result.value2_ = value2_;
          } else {
            result.value2_ = value2Builder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (unitIdBuilder_ == null) {
            result.unitId_ = unitId_;
          } else {
            result.unitId_ = unitIdBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            result.surchargeTypeDescription_ = surchargeTypeDescription_;
          } else {
            result.surchargeTypeDescription_ = surchargeTypeDescriptionBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          if (value3RestrictedByPatternBuilder_ == null) {
            result.value3RestrictedByPattern_ = value3RestrictedByPattern_;
          } else {
            result.value3RestrictedByPattern_ = value3RestrictedByPatternBuilder_.build();
          }
          if (levelIdBuilder_ == null) {
            result.levelId_ = levelId_;
          } else {
            result.levelId_ = levelIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row other) {
          if (other == io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasValue1RestrictedByPattern()) {
            mergeValue1RestrictedByPattern(other.getValue1RestrictedByPattern());
          }
          if (other.hasValue2RestrictedByPattern()) {
            mergeValue2RestrictedByPattern(other.getValue2RestrictedByPattern());
          }
          if (other.hasRelative()) {
            mergeRelative(other.getRelative());
          }
          if (other.hasValue3()) {
            mergeValue3(other.getValue3());
          }
          if (other.hasValue1()) {
            mergeValue1(other.getValue1());
          }
          if (other.hasUnitSymbol()) {
            mergeUnitSymbol(other.getUnitSymbol());
          }
          if (other.hasValue2()) {
            mergeValue2(other.getValue2());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasUnitId()) {
            mergeUnitId(other.getUnitId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasSurchargeTypeDescription()) {
            mergeSurchargeTypeDescription(other.getSurchargeTypeDescription());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          if (other.hasValue3RestrictedByPattern()) {
            mergeValue3RestrictedByPattern(other.getValue3RestrictedByPattern());
          }
          if (other.hasLevelId()) {
            mergeLevelId(other.getLevelId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue value1RestrictedByPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value1RestrictedByPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public boolean hasValue1RestrictedByPattern() {
          return value1RestrictedByPatternBuilder_ != null || value1RestrictedByPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue1RestrictedByPattern() {
          if (value1RestrictedByPatternBuilder_ == null) {
            return value1RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1RestrictedByPattern_;
          } else {
            return value1RestrictedByPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public Builder setValue1RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value1RestrictedByPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1RestrictedByPattern_ = value;
            onChanged();
          } else {
            value1RestrictedByPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public Builder setValue1RestrictedByPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value1RestrictedByPatternBuilder_ == null) {
            value1RestrictedByPattern_ = builderForValue.build();
            onChanged();
          } else {
            value1RestrictedByPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public Builder mergeValue1RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value1RestrictedByPatternBuilder_ == null) {
            if (value1RestrictedByPattern_ != null) {
              value1RestrictedByPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(value1RestrictedByPattern_).mergeFrom(value).buildPartial();
            } else {
              value1RestrictedByPattern_ = value;
            }
            onChanged();
          } else {
            value1RestrictedByPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public Builder clearValue1RestrictedByPattern() {
          if (value1RestrictedByPatternBuilder_ == null) {
            value1RestrictedByPattern_ = null;
            onChanged();
          } else {
            value1RestrictedByPattern_ = null;
            value1RestrictedByPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue1RestrictedByPatternBuilder() {
          
          onChanged();
          return getValue1RestrictedByPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue1RestrictedByPatternOrBuilder() {
          if (value1RestrictedByPatternBuilder_ != null) {
            return value1RestrictedByPatternBuilder_.getMessageOrBuilder();
          } else {
            return value1RestrictedByPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value1RestrictedByPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue1RestrictedByPatternFieldBuilder() {
          if (value1RestrictedByPatternBuilder_ == null) {
            value1RestrictedByPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue1RestrictedByPattern(),
                    getParentForChildren(),
                    isClean());
            value1RestrictedByPattern_ = null;
          }
          return value1RestrictedByPatternBuilder_;
        }

        private io.dstore.engine.Values.stringValue value2RestrictedByPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value2RestrictedByPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public boolean hasValue2RestrictedByPattern() {
          return value2RestrictedByPatternBuilder_ != null || value2RestrictedByPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue2RestrictedByPattern() {
          if (value2RestrictedByPatternBuilder_ == null) {
            return value2RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2RestrictedByPattern_;
          } else {
            return value2RestrictedByPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public Builder setValue2RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value2RestrictedByPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2RestrictedByPattern_ = value;
            onChanged();
          } else {
            value2RestrictedByPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public Builder setValue2RestrictedByPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value2RestrictedByPatternBuilder_ == null) {
            value2RestrictedByPattern_ = builderForValue.build();
            onChanged();
          } else {
            value2RestrictedByPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public Builder mergeValue2RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value2RestrictedByPatternBuilder_ == null) {
            if (value2RestrictedByPattern_ != null) {
              value2RestrictedByPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(value2RestrictedByPattern_).mergeFrom(value).buildPartial();
            } else {
              value2RestrictedByPattern_ = value;
            }
            onChanged();
          } else {
            value2RestrictedByPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public Builder clearValue2RestrictedByPattern() {
          if (value2RestrictedByPatternBuilder_ == null) {
            value2RestrictedByPattern_ = null;
            onChanged();
          } else {
            value2RestrictedByPattern_ = null;
            value2RestrictedByPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue2RestrictedByPatternBuilder() {
          
          onChanged();
          return getValue2RestrictedByPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue2RestrictedByPatternOrBuilder() {
          if (value2RestrictedByPatternBuilder_ != null) {
            return value2RestrictedByPatternBuilder_.getMessageOrBuilder();
          } else {
            return value2RestrictedByPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value2RestrictedByPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2_restricted_by_pattern = 10002;</code>
         *
         * <pre>
         * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue2RestrictedByPatternFieldBuilder() {
          if (value2RestrictedByPatternBuilder_ == null) {
            value2RestrictedByPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue2RestrictedByPattern(),
                    getParentForChildren(),
                    isClean());
            value2RestrictedByPattern_ = null;
          }
          return value2RestrictedByPatternBuilder_;
        }

        private io.dstore.engine.Values.booleanValue relative_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> relativeBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public boolean hasRelative() {
          return relativeBuilder_ != null || relative_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getRelative() {
          if (relativeBuilder_ == null) {
            return relative_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : relative_;
          } else {
            return relativeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public Builder setRelative(io.dstore.engine.Values.booleanValue value) {
          if (relativeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relative_ = value;
            onChanged();
          } else {
            relativeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public Builder setRelative(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (relativeBuilder_ == null) {
            relative_ = builderForValue.build();
            onChanged();
          } else {
            relativeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public Builder mergeRelative(io.dstore.engine.Values.booleanValue value) {
          if (relativeBuilder_ == null) {
            if (relative_ != null) {
              relative_ =
                io.dstore.engine.Values.booleanValue.newBuilder(relative_).mergeFrom(value).buildPartial();
            } else {
              relative_ = value;
            }
            onChanged();
          } else {
            relativeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public Builder clearRelative() {
          if (relativeBuilder_ == null) {
            relative_ = null;
            onChanged();
          } else {
            relative_ = null;
            relativeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getRelativeBuilder() {
          
          onChanged();
          return getRelativeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getRelativeOrBuilder() {
          if (relativeBuilder_ != null) {
            return relativeBuilder_.getMessageOrBuilder();
          } else {
            return relative_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : relative_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue relative = 10003;</code>
         *
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getRelativeFieldBuilder() {
          if (relativeBuilder_ == null) {
            relativeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getRelative(),
                    getParentForChildren(),
                    isClean());
            relative_ = null;
          }
          return relativeBuilder_;
        }

        private io.dstore.engine.Values.stringValue value3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value3Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public boolean hasValue3() {
          return value3Builder_ != null || value3_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue3() {
          if (value3Builder_ == null) {
            return value3_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
          } else {
            return value3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public Builder setValue3(io.dstore.engine.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3_ = value;
            onChanged();
          } else {
            value3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public Builder setValue3(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value3Builder_ == null) {
            value3_ = builderForValue.build();
            onChanged();
          } else {
            value3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public Builder mergeValue3(io.dstore.engine.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value3_ != null) {
              value3_ =
                io.dstore.engine.Values.stringValue.newBuilder(value3_).mergeFrom(value).buildPartial();
            } else {
              value3_ = value;
            }
            onChanged();
          } else {
            value3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public Builder clearValue3() {
          if (value3Builder_ == null) {
            value3_ = null;
            onChanged();
          } else {
            value3_ = null;
            value3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue3Builder() {
          
          onChanged();
          return getValue3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue3OrBuilder() {
          if (value3Builder_ != null) {
            return value3Builder_.getMessageOrBuilder();
          } else {
            return value3_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value3_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3 = 10004;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue3FieldBuilder() {
          if (value3Builder_ == null) {
            value3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue3(),
                    getParentForChildren(),
                    isClean());
            value3_ = null;
          }
          return value3Builder_;
        }

        private io.dstore.engine.Values.stringValue value1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value1Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public boolean hasValue1() {
          return value1Builder_ != null || value1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue1() {
          if (value1Builder_ == null) {
            return value1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
          } else {
            return value1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public Builder setValue1(io.dstore.engine.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1_ = value;
            onChanged();
          } else {
            value1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public Builder setValue1(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value1Builder_ == null) {
            value1_ = builderForValue.build();
            onChanged();
          } else {
            value1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public Builder mergeValue1(io.dstore.engine.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value1_ != null) {
              value1_ =
                io.dstore.engine.Values.stringValue.newBuilder(value1_).mergeFrom(value).buildPartial();
            } else {
              value1_ = value;
            }
            onChanged();
          } else {
            value1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public Builder clearValue1() {
          if (value1Builder_ == null) {
            value1_ = null;
            onChanged();
          } else {
            value1_ = null;
            value1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue1Builder() {
          
          onChanged();
          return getValue1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue1OrBuilder() {
          if (value1Builder_ != null) {
            return value1Builder_.getMessageOrBuilder();
          } else {
            return value1_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue1FieldBuilder() {
          if (value1Builder_ == null) {
            value1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue1(),
                    getParentForChildren(),
                    isClean());
            value1_ = null;
          }
          return value1Builder_;
        }

        private io.dstore.engine.Values.stringValue unitSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> unitSymbolBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public boolean hasUnitSymbol() {
          return unitSymbolBuilder_ != null || unitSymbol_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            return unitSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
          } else {
            return unitSymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public Builder setUnitSymbol(io.dstore.engine.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitSymbol_ = value;
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public Builder setUnitSymbol(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = builderForValue.build();
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public Builder mergeUnitSymbol(io.dstore.engine.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (unitSymbol_ != null) {
              unitSymbol_ =
                io.dstore.engine.Values.stringValue.newBuilder(unitSymbol_).mergeFrom(value).buildPartial();
            } else {
              unitSymbol_ = value;
            }
            onChanged();
          } else {
            unitSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public Builder clearUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
            onChanged();
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getUnitSymbolBuilder() {
          
          onChanged();
          return getUnitSymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
          if (unitSymbolBuilder_ != null) {
            return unitSymbolBuilder_.getMessageOrBuilder();
          } else {
            return unitSymbol_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10006;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getUnitSymbolFieldBuilder() {
          if (unitSymbolBuilder_ == null) {
            unitSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getUnitSymbol(),
                    getParentForChildren(),
                    isClean());
            unitSymbol_ = null;
          }
          return unitSymbolBuilder_;
        }

        private io.dstore.engine.Values.stringValue value2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value2Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public boolean hasValue2() {
          return value2Builder_ != null || value2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue2() {
          if (value2Builder_ == null) {
            return value2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
          } else {
            return value2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public Builder setValue2(io.dstore.engine.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2_ = value;
            onChanged();
          } else {
            value2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public Builder setValue2(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value2Builder_ == null) {
            value2_ = builderForValue.build();
            onChanged();
          } else {
            value2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public Builder mergeValue2(io.dstore.engine.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value2_ != null) {
              value2_ =
                io.dstore.engine.Values.stringValue.newBuilder(value2_).mergeFrom(value).buildPartial();
            } else {
              value2_ = value;
            }
            onChanged();
          } else {
            value2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public Builder clearValue2() {
          if (value2Builder_ == null) {
            value2_ = null;
            onChanged();
          } else {
            value2_ = null;
            value2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue2Builder() {
          
          onChanged();
          return getValue2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue2OrBuilder() {
          if (value2Builder_ != null) {
            return value2Builder_.getMessageOrBuilder();
          } else {
            return value2_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value2 = 10007;</code>
         *
         * <pre>
         * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue2FieldBuilder() {
          if (value2Builder_ == null) {
            value2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue2(),
                    getParentForChildren(),
                    isClean());
            value2_ = null;
          }
          return value2Builder_;
        }

        private io.dstore.engine.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public Builder setSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public Builder setSurchargeValue(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public Builder mergeSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.engine.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10008;</code>
         *
         * <pre>
         * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.engine.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder mergeActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.engine.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10010;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue unitId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> unitIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public boolean hasUnitId() {
          return unitIdBuilder_ != null || unitId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getUnitId() {
          if (unitIdBuilder_ == null) {
            return unitId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : unitId_;
          } else {
            return unitIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder setUnitId(io.dstore.engine.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitId_ = value;
            onChanged();
          } else {
            unitIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder setUnitId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (unitIdBuilder_ == null) {
            unitId_ = builderForValue.build();
            onChanged();
          } else {
            unitIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder mergeUnitId(io.dstore.engine.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (unitId_ != null) {
              unitId_ =
                io.dstore.engine.Values.integerValue.newBuilder(unitId_).mergeFrom(value).buildPartial();
            } else {
              unitId_ = value;
            }
            onChanged();
          } else {
            unitIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder clearUnitId() {
          if (unitIdBuilder_ == null) {
            unitId_ = null;
            onChanged();
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getUnitIdBuilder() {
          
          onChanged();
          return getUnitIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getUnitIdOrBuilder() {
          if (unitIdBuilder_ != null) {
            return unitIdBuilder_.getMessageOrBuilder();
          } else {
            return unitId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : unitId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue unit_id = 10012;</code>
         *
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getUnitIdFieldBuilder() {
          if (unitIdBuilder_ == null) {
            unitIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getUnitId(),
                    getParentForChildren(),
                    isClean());
            unitId_ = null;
          }
          return unitIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10013;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue surchargeTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> surchargeTypeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public boolean hasSurchargeTypeDescription() {
          return surchargeTypeDescriptionBuilder_ != null || surchargeTypeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            return surchargeTypeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          } else {
            return surchargeTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder setSurchargeTypeDescription(io.dstore.engine.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeDescription_ = value;
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder setSurchargeTypeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder mergeSurchargeTypeDescription(io.dstore.engine.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (surchargeTypeDescription_ != null) {
              surchargeTypeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(surchargeTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeDescription_ = value;
            }
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder clearSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
            onChanged();
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getSurchargeTypeDescriptionBuilder() {
          
          onChanged();
          return getSurchargeTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
          if (surchargeTypeDescriptionBuilder_ != null) {
            return surchargeTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_type_description = 10015;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getSurchargeTypeDescriptionFieldBuilder() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getSurchargeTypeDescription(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeDescription_ = null;
          }
          return surchargeTypeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public Builder setSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public Builder setSurchargeTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public Builder mergeSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10016;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue value3RestrictedByPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> value3RestrictedByPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public boolean hasValue3RestrictedByPattern() {
          return value3RestrictedByPatternBuilder_ != null || value3RestrictedByPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue3RestrictedByPattern() {
          if (value3RestrictedByPatternBuilder_ == null) {
            return value3RestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value3RestrictedByPattern_;
          } else {
            return value3RestrictedByPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public Builder setValue3RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value3RestrictedByPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3RestrictedByPattern_ = value;
            onChanged();
          } else {
            value3RestrictedByPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public Builder setValue3RestrictedByPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (value3RestrictedByPatternBuilder_ == null) {
            value3RestrictedByPattern_ = builderForValue.build();
            onChanged();
          } else {
            value3RestrictedByPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public Builder mergeValue3RestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (value3RestrictedByPatternBuilder_ == null) {
            if (value3RestrictedByPattern_ != null) {
              value3RestrictedByPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(value3RestrictedByPattern_).mergeFrom(value).buildPartial();
            } else {
              value3RestrictedByPattern_ = value;
            }
            onChanged();
          } else {
            value3RestrictedByPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public Builder clearValue3RestrictedByPattern() {
          if (value3RestrictedByPatternBuilder_ == null) {
            value3RestrictedByPattern_ = null;
            onChanged();
          } else {
            value3RestrictedByPattern_ = null;
            value3RestrictedByPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValue3RestrictedByPatternBuilder() {
          
          onChanged();
          return getValue3RestrictedByPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValue3RestrictedByPatternOrBuilder() {
          if (value3RestrictedByPatternBuilder_ != null) {
            return value3RestrictedByPatternBuilder_.getMessageOrBuilder();
          } else {
            return value3RestrictedByPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value3RestrictedByPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value3_restricted_by_pattern = 10017;</code>
         *
         * <pre>
         * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValue3RestrictedByPatternFieldBuilder() {
          if (value3RestrictedByPatternBuilder_ == null) {
            value3RestrictedByPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue3RestrictedByPattern(),
                    getParentForChildren(),
                    isClean());
            value3RestrictedByPattern_ = null;
          }
          return value3RestrictedByPatternBuilder_;
        }

        private io.dstore.engine.Values.integerValue levelId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> levelIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public boolean hasLevelId() {
          return levelIdBuilder_ != null || levelId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLevelId() {
          if (levelIdBuilder_ == null) {
            return levelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
          } else {
            return levelIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelId(io.dstore.engine.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelId_ = value;
            onChanged();
          } else {
            levelIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (levelIdBuilder_ == null) {
            levelId_ = builderForValue.build();
            onChanged();
          } else {
            levelIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder mergeLevelId(io.dstore.engine.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (levelId_ != null) {
              levelId_ =
                io.dstore.engine.Values.integerValue.newBuilder(levelId_).mergeFrom(value).buildPartial();
            } else {
              levelId_ = value;
            }
            onChanged();
          } else {
            levelIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder clearLevelId() {
          if (levelIdBuilder_ == null) {
            levelId_ = null;
            onChanged();
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLevelIdBuilder() {
          
          onChanged();
          return getLevelIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder() {
          if (levelIdBuilder_ != null) {
            return levelIdBuilder_.getMessageOrBuilder();
          } else {
            return levelId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10018;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLevelIdFieldBuilder() {
          if (levelIdBuilder_ == null) {
            levelIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLevelId(),
                    getParentForChildren(),
                    isClean());
            levelId_ = null;
          }
          return levelIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonSurcharges_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonSurcharges_Ad.Response.Row)
      private static final io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row();
      }

      public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonSurcharges_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonSurcharges_Ad.Response)
        io.dstore.engine.procs.OmGetPersonSurchargesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.class, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response build() {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response buildPartial() {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Response result = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetPersonSurchargesAd.Response) {
          return mergeFrom((io.dstore.engine.procs.OmGetPersonSurchargesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response other) {
        if (other == io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetPersonSurchargesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetPersonSurchargesAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonSurcharges_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonSurchargesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonSurcharges_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonSurcharges_Ad.Response)
    private static final io.dstore.engine.procs.OmGetPersonSurchargesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonSurchargesAd.Response();
    }

    public static io.dstore.engine.procs.OmGetPersonSurchargesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetPersonSurchargesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8dstore/engine/procedures/om_GetPersonS" +
      "urcharges_Ad.proto\022\'dstore.engine.om_Get" +
      "PersonSurcharges_Ad\032\032dstore/engine/value" +
      "s.proto\032\031dstore/engine/error.proto\032\033dsto" +
      "re/engine/message.proto\"\334\004\n\nParameters\022:" +
      "\n\016person_type_id\030\001 \001(\0132\".dstore.engine.v" +
      "alues.integerValue\022\034\n\023person_type_id_nul" +
      "l\030\351\007 \001(\010\0225\n\tperson_id\030\002 \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022\027\n\016person_id_nul" +
      "l\030\352\007 \001(\010\0228\n\014tree_node_id\030\003 \001(\0132\".dstore.",
      "engine.values.integerValue\022\032\n\021tree_node_" +
      "id_null\030\353\007 \001(\010\022E\n\031output_characteristic_" +
      "id1\030\004 \001(\0132\".dstore.engine.values.integer" +
      "Value\022\'\n\036output_characteristic_id1_null\030" +
      "\354\007 \001(\010\022E\n\031output_characteristic_id2\030\005 \001(" +
      "\0132\".dstore.engine.values.integerValue\022\'\n" +
      "\036output_characteristic_id2_null\030\355\007 \001(\010\022E" +
      "\n\031output_characteristic_id3\030\006 \001(\0132\".dsto" +
      "re.engine.values.integerValue\022\'\n\036output_" +
      "characteristic_id3_null\030\356\007 \001(\010\"\374\t\n\010Respo",
      "nse\022)\n\005error\030\001 \001(\0132\032.dstore.engine.error" +
      ".Error\022/\n\007message\030\003 \003(\0132\036.dstore.engine." +
      "message.Message\022B\n\003row\030\004 \003(\01325.dstore.en" +
      "gine.om_GetPersonSurcharges_Ad.Response." +
      "Row\032\317\010\n\003Row\022\017\n\006row_id\030\220N \001(\005\022H\n\034value1_r" +
      "estricted_by_pattern\030\221N \001(\0132!.dstore.eng" +
      "ine.values.stringValue\022H\n\034value2_restric" +
      "ted_by_pattern\030\222N \001(\0132!.dstore.engine.va" +
      "lues.stringValue\0225\n\010relative\030\223N \001(\0132\".ds" +
      "tore.engine.values.booleanValue\0222\n\006value",
      "3\030\224N \001(\0132!.dstore.engine.values.stringVa" +
      "lue\0222\n\006value1\030\225N \001(\0132!.dstore.engine.val" +
      "ues.stringValue\0227\n\013unit_symbol\030\226N \001(\0132!." +
      "dstore.engine.values.stringValue\0222\n\006valu" +
      "e2\030\227N \001(\0132!.dstore.engine.values.stringV" +
      "alue\022<\n\017surcharge_value\030\230N \001(\0132\".dstore." +
      "engine.values.decimalValue\022<\n\020node_descr" +
      "iption\030\231N \001(\0132!.dstore.engine.values.str" +
      "ingValue\0223\n\006active\030\232N \001(\0132\".dstore.engin" +
      "e.values.booleanValue\0226\n\tperson_id\030\233N \001(",
      "\0132\".dstore.engine.values.integerValue\0224\n" +
      "\007unit_id\030\234N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\0229\n\014tree_node_id\030\235N \001(\0132\".dst" +
      "ore.engine.values.integerValue\0224\n\007node_i" +
      "d\030\236N \001(\0132\".dstore.engine.values.integerV" +
      "alue\022F\n\032surcharge_type_description\030\237N \001(" +
      "\0132!.dstore.engine.values.stringValue\022>\n\021" +
      "surcharge_type_id\030\240N \001(\0132\".dstore.engine" +
      ".values.integerValue\022H\n\034value3_restricte" +
      "d_by_pattern\030\241N \001(\0132!.dstore.engine.valu",
      "es.stringValue\0225\n\010level_id\030\242N \001(\0132\".dsto" +
      "re.engine.values.integerValueB\030\n\026io.dsto" +
      "re.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Parameters_descriptor,
        new java.lang.String[] { "PersonTypeId", "PersonTypeIdNull", "PersonId", "PersonIdNull", "TreeNodeId", "TreeNodeIdNull", "OutputCharacteristicId1", "OutputCharacteristicId1Null", "OutputCharacteristicId2", "OutputCharacteristicId2Null", "OutputCharacteristicId3", "OutputCharacteristicId3Null", });
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonSurcharges_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Value1RestrictedByPattern", "Value2RestrictedByPattern", "Relative", "Value3", "Value1", "UnitSymbol", "Value2", "SurchargeValue", "NodeDescription", "Active", "PersonId", "UnitId", "TreeNodeId", "NodeId", "SurchargeTypeDescription", "SurchargeTypeId", "Value3RestrictedByPattern", "LevelId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
