// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetTrolley_Pu.proto

package io.dstore.engine.procs;

public final class OmGetTrolleyPu {
  private OmGetTrolleyPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetTrolley_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    boolean hasUniqueId();
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    io.dstore.engine.Values.stringValue getUniqueId();
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder();

    /**
     * <code>optional bool unique_id_null = 1001;</code>
     */
    boolean getUniqueIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    boolean hasPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

    /**
     * <code>optional bool person_id_null = 1002;</code>
     */
    boolean getPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    boolean hasCalculatePrices();
    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    io.dstore.engine.Values.integerValue getCalculatePrices();
    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCalculatePricesOrBuilder();

    /**
     * <code>optional bool calculate_prices_null = 1003;</code>
     */
    boolean getCalculatePricesNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    boolean hasCheckAvailability();
    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    io.dstore.engine.Values.booleanValue getCheckAvailability();
    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getCheckAvailabilityOrBuilder();

    /**
     * <code>optional bool check_availability_null = 1004;</code>
     */
    boolean getCheckAvailabilityNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    boolean hasShowDescriptions();
    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    io.dstore.engine.Values.booleanValue getShowDescriptions();
    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getShowDescriptionsOrBuilder();

    /**
     * <code>optional bool show_descriptions_null = 1005;</code>
     */
    boolean getShowDescriptionsNull();

    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    boolean hasPriceNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder();

    /**
     * <code>optional bool price_node_characteristic_id_null = 1006;</code>
     */
    boolean getPriceNodeCharacteristicIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    boolean hasNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

    /**
     * <code>optional bool node_characteristic_id_null = 1007;</code>
     */
    boolean getNodeCharacteristicIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    boolean hasIncludePredecessors();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    io.dstore.engine.Values.booleanValue getIncludePredecessors();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getIncludePredecessorsOrBuilder();

    /**
     * <code>optional bool include_predecessors_null = 1008;</code>
     */
    boolean getIncludePredecessorsNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    boolean hasLookForProductDescription();
    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    io.dstore.engine.Values.booleanValue getLookForProductDescription();
    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getLookForProductDescriptionOrBuilder();

    /**
     * <code>optional bool look_for_product_description_null = 1009;</code>
     */
    boolean getLookForProductDescriptionNull();

    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    boolean hasRepairEntriesWithSameNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    io.dstore.engine.Values.integerValue getRepairEntriesWithSameNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getRepairEntriesWithSameNodeIdOrBuilder();

    /**
     * <code>optional bool repair_entries_with_same_node_id_null = 1010;</code>
     */
    boolean getRepairEntriesWithSameNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    boolean hasGetPlainTrolley();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    io.dstore.engine.Values.booleanValue getGetPlainTrolley();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetPlainTrolleyOrBuilder();

    /**
     * <code>optional bool get_plain_trolley_null = 1011;</code>
     */
    boolean getGetPlainTrolleyNull();

    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    boolean hasDeliveryPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    io.dstore.engine.Values.integerValue getDeliveryPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder();

    /**
     * <code>optional bool delivery_person_id_null = 1012;</code>
     */
    boolean getDeliveryPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    boolean hasOutputIntoTrolleySurchInterf();
    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    io.dstore.engine.Values.booleanValue getOutputIntoTrolleySurchInterf();
    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getOutputIntoTrolleySurchInterfOrBuilder();

    /**
     * <code>optional bool output_into_trolley_surch_interf_null = 1013;</code>
     */
    boolean getOutputIntoTrolleySurchInterfNull();

    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    boolean hasPaymentTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    io.dstore.engine.Values.integerValue getPaymentTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder();

    /**
     * <code>optional bool payment_type_id_null = 1014;</code>
     */
    boolean getPaymentTypeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    boolean hasShippingTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    io.dstore.engine.Values.integerValue getShippingTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

    /**
     * <code>optional bool shipping_type_id_null = 1015;</code>
     */
    boolean getShippingTypeIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetTrolley_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      uniqueIdNull_ = false;
      personIdNull_ = false;
      calculatePricesNull_ = false;
      checkAvailabilityNull_ = false;
      showDescriptionsNull_ = false;
      priceNodeCharacteristicIdNull_ = false;
      nodeCharacteristicIdNull_ = false;
      includePredecessorsNull_ = false;
      lookForProductDescriptionNull_ = false;
      repairEntriesWithSameNodeIdNull_ = false;
      getPlainTrolleyNull_ = false;
      deliveryPersonIdNull_ = false;
      outputIntoTrolleySurchInterfNull_ = false;
      paymentTypeIdNull_ = false;
      shippingTypeIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (uniqueId_ != null) {
                subBuilder = uniqueId_.toBuilder();
              }
              uniqueId_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uniqueId_);
                uniqueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personId_ != null) {
                subBuilder = personId_.toBuilder();
              }
              personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personId_);
                personId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (calculatePrices_ != null) {
                subBuilder = calculatePrices_.toBuilder();
              }
              calculatePrices_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calculatePrices_);
                calculatePrices_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (checkAvailability_ != null) {
                subBuilder = checkAvailability_.toBuilder();
              }
              checkAvailability_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(checkAvailability_);
                checkAvailability_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (showDescriptions_ != null) {
                subBuilder = showDescriptions_.toBuilder();
              }
              showDescriptions_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(showDescriptions_);
                showDescriptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (priceNodeCharacteristicId_ != null) {
                subBuilder = priceNodeCharacteristicId_.toBuilder();
              }
              priceNodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(priceNodeCharacteristicId_);
                priceNodeCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId_ != null) {
                subBuilder = nodeCharacteristicId_.toBuilder();
              }
              nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId_);
                nodeCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (includePredecessors_ != null) {
                subBuilder = includePredecessors_.toBuilder();
              }
              includePredecessors_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includePredecessors_);
                includePredecessors_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (lookForProductDescription_ != null) {
                subBuilder = lookForProductDescription_.toBuilder();
              }
              lookForProductDescription_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(lookForProductDescription_);
                lookForProductDescription_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (repairEntriesWithSameNodeId_ != null) {
                subBuilder = repairEntriesWithSameNodeId_.toBuilder();
              }
              repairEntriesWithSameNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(repairEntriesWithSameNodeId_);
                repairEntriesWithSameNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getPlainTrolley_ != null) {
                subBuilder = getPlainTrolley_.toBuilder();
              }
              getPlainTrolley_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getPlainTrolley_);
                getPlainTrolley_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (deliveryPersonId_ != null) {
                subBuilder = deliveryPersonId_.toBuilder();
              }
              deliveryPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deliveryPersonId_);
                deliveryPersonId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (outputIntoTrolleySurchInterf_ != null) {
                subBuilder = outputIntoTrolleySurchInterf_.toBuilder();
              }
              outputIntoTrolleySurchInterf_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputIntoTrolleySurchInterf_);
                outputIntoTrolleySurchInterf_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (paymentTypeId_ != null) {
                subBuilder = paymentTypeId_.toBuilder();
              }
              paymentTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(paymentTypeId_);
                paymentTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (shippingTypeId_ != null) {
                subBuilder = shippingTypeId_.toBuilder();
              }
              shippingTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shippingTypeId_);
                shippingTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              uniqueIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              personIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              calculatePricesNull_ = input.readBool();
              break;
            }
            case 8032: {

              checkAvailabilityNull_ = input.readBool();
              break;
            }
            case 8040: {

              showDescriptionsNull_ = input.readBool();
              break;
            }
            case 8048: {

              priceNodeCharacteristicIdNull_ = input.readBool();
              break;
            }
            case 8056: {

              nodeCharacteristicIdNull_ = input.readBool();
              break;
            }
            case 8064: {

              includePredecessorsNull_ = input.readBool();
              break;
            }
            case 8072: {

              lookForProductDescriptionNull_ = input.readBool();
              break;
            }
            case 8080: {

              repairEntriesWithSameNodeIdNull_ = input.readBool();
              break;
            }
            case 8088: {

              getPlainTrolleyNull_ = input.readBool();
              break;
            }
            case 8096: {

              deliveryPersonIdNull_ = input.readBool();
              break;
            }
            case 8104: {

              outputIntoTrolleySurchInterfNull_ = input.readBool();
              break;
            }
            case 8112: {

              paymentTypeIdNull_ = input.readBool();
              break;
            }
            case 8120: {

              shippingTypeIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetTrolleyPu.Parameters.class, io.dstore.engine.procs.OmGetTrolleyPu.Parameters.Builder.class);
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.stringValue uniqueId_;
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    public boolean hasUniqueId() {
      return uniqueId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    public io.dstore.engine.Values.stringValue getUniqueId() {
      return uniqueId_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
      return getUniqueId();
    }

    public static final int UNIQUE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean uniqueIdNull_;
    /**
     * <code>optional bool unique_id_null = 1001;</code>
     */
    public boolean getUniqueIdNull() {
      return uniqueIdNull_;
    }

    public static final int PERSON_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue personId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public boolean hasPersonId() {
      return personId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonId() {
      return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
      return getPersonId();
    }

    public static final int PERSON_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personIdNull_;
    /**
     * <code>optional bool person_id_null = 1002;</code>
     */
    public boolean getPersonIdNull() {
      return personIdNull_;
    }

    public static final int CALCULATE_PRICES_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue calculatePrices_;
    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    public boolean hasCalculatePrices() {
      return calculatePrices_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getCalculatePrices() {
      return calculatePrices_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : calculatePrices_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCalculatePricesOrBuilder() {
      return getCalculatePrices();
    }

    public static final int CALCULATE_PRICES_NULL_FIELD_NUMBER = 1003;
    private boolean calculatePricesNull_;
    /**
     * <code>optional bool calculate_prices_null = 1003;</code>
     */
    public boolean getCalculatePricesNull() {
      return calculatePricesNull_;
    }

    public static final int CHECK_AVAILABILITY_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.booleanValue checkAvailability_;
    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    public boolean hasCheckAvailability() {
      return checkAvailability_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    public io.dstore.engine.Values.booleanValue getCheckAvailability() {
      return checkAvailability_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkAvailability_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getCheckAvailabilityOrBuilder() {
      return getCheckAvailability();
    }

    public static final int CHECK_AVAILABILITY_NULL_FIELD_NUMBER = 1004;
    private boolean checkAvailabilityNull_;
    /**
     * <code>optional bool check_availability_null = 1004;</code>
     */
    public boolean getCheckAvailabilityNull() {
      return checkAvailabilityNull_;
    }

    public static final int SHOW_DESCRIPTIONS_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.booleanValue showDescriptions_;
    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    public boolean hasShowDescriptions() {
      return showDescriptions_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    public io.dstore.engine.Values.booleanValue getShowDescriptions() {
      return showDescriptions_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : showDescriptions_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getShowDescriptionsOrBuilder() {
      return getShowDescriptions();
    }

    public static final int SHOW_DESCRIPTIONS_NULL_FIELD_NUMBER = 1005;
    private boolean showDescriptionsNull_;
    /**
     * <code>optional bool show_descriptions_null = 1005;</code>
     */
    public boolean getShowDescriptionsNull() {
      return showDescriptionsNull_;
    }

    public static final int PRICE_NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue priceNodeCharacteristicId_;
    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    public boolean hasPriceNodeCharacteristicId() {
      return priceNodeCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId() {
      return priceNodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder() {
      return getPriceNodeCharacteristicId();
    }

    public static final int PRICE_NODE_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1006;
    private boolean priceNodeCharacteristicIdNull_;
    /**
     * <code>optional bool price_node_characteristic_id_null = 1006;</code>
     */
    public boolean getPriceNodeCharacteristicIdNull() {
      return priceNodeCharacteristicIdNull_;
    }

    public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    public boolean hasNodeCharacteristicId() {
      return nodeCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
      return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
      return getNodeCharacteristicId();
    }

    public static final int NODE_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1007;
    private boolean nodeCharacteristicIdNull_;
    /**
     * <code>optional bool node_characteristic_id_null = 1007;</code>
     */
    public boolean getNodeCharacteristicIdNull() {
      return nodeCharacteristicIdNull_;
    }

    public static final int INCLUDE_PREDECESSORS_FIELD_NUMBER = 8;
    private io.dstore.engine.Values.booleanValue includePredecessors_;
    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    public boolean hasIncludePredecessors() {
      return includePredecessors_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    public io.dstore.engine.Values.booleanValue getIncludePredecessors() {
      return includePredecessors_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePredecessors_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getIncludePredecessorsOrBuilder() {
      return getIncludePredecessors();
    }

    public static final int INCLUDE_PREDECESSORS_NULL_FIELD_NUMBER = 1008;
    private boolean includePredecessorsNull_;
    /**
     * <code>optional bool include_predecessors_null = 1008;</code>
     */
    public boolean getIncludePredecessorsNull() {
      return includePredecessorsNull_;
    }

    public static final int LOOK_FOR_PRODUCT_DESCRIPTION_FIELD_NUMBER = 9;
    private io.dstore.engine.Values.booleanValue lookForProductDescription_;
    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    public boolean hasLookForProductDescription() {
      return lookForProductDescription_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    public io.dstore.engine.Values.booleanValue getLookForProductDescription() {
      return lookForProductDescription_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : lookForProductDescription_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getLookForProductDescriptionOrBuilder() {
      return getLookForProductDescription();
    }

    public static final int LOOK_FOR_PRODUCT_DESCRIPTION_NULL_FIELD_NUMBER = 1009;
    private boolean lookForProductDescriptionNull_;
    /**
     * <code>optional bool look_for_product_description_null = 1009;</code>
     */
    public boolean getLookForProductDescriptionNull() {
      return lookForProductDescriptionNull_;
    }

    public static final int REPAIR_ENTRIES_WITH_SAME_NODE_ID_FIELD_NUMBER = 10;
    private io.dstore.engine.Values.integerValue repairEntriesWithSameNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    public boolean hasRepairEntriesWithSameNodeId() {
      return repairEntriesWithSameNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    public io.dstore.engine.Values.integerValue getRepairEntriesWithSameNodeId() {
      return repairEntriesWithSameNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : repairEntriesWithSameNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getRepairEntriesWithSameNodeIdOrBuilder() {
      return getRepairEntriesWithSameNodeId();
    }

    public static final int REPAIR_ENTRIES_WITH_SAME_NODE_ID_NULL_FIELD_NUMBER = 1010;
    private boolean repairEntriesWithSameNodeIdNull_;
    /**
     * <code>optional bool repair_entries_with_same_node_id_null = 1010;</code>
     */
    public boolean getRepairEntriesWithSameNodeIdNull() {
      return repairEntriesWithSameNodeIdNull_;
    }

    public static final int GET_PLAIN_TROLLEY_FIELD_NUMBER = 11;
    private io.dstore.engine.Values.booleanValue getPlainTrolley_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    public boolean hasGetPlainTrolley() {
      return getPlainTrolley_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetPlainTrolley() {
      return getPlainTrolley_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getPlainTrolley_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetPlainTrolleyOrBuilder() {
      return getGetPlainTrolley();
    }

    public static final int GET_PLAIN_TROLLEY_NULL_FIELD_NUMBER = 1011;
    private boolean getPlainTrolleyNull_;
    /**
     * <code>optional bool get_plain_trolley_null = 1011;</code>
     */
    public boolean getGetPlainTrolleyNull() {
      return getPlainTrolleyNull_;
    }

    public static final int DELIVERY_PERSON_ID_FIELD_NUMBER = 12;
    private io.dstore.engine.Values.integerValue deliveryPersonId_;
    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    public boolean hasDeliveryPersonId() {
      return deliveryPersonId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    public io.dstore.engine.Values.integerValue getDeliveryPersonId() {
      return deliveryPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder() {
      return getDeliveryPersonId();
    }

    public static final int DELIVERY_PERSON_ID_NULL_FIELD_NUMBER = 1012;
    private boolean deliveryPersonIdNull_;
    /**
     * <code>optional bool delivery_person_id_null = 1012;</code>
     */
    public boolean getDeliveryPersonIdNull() {
      return deliveryPersonIdNull_;
    }

    public static final int OUTPUT_INTO_TROLLEY_SURCH_INTERF_FIELD_NUMBER = 13;
    private io.dstore.engine.Values.booleanValue outputIntoTrolleySurchInterf_;
    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    public boolean hasOutputIntoTrolleySurchInterf() {
      return outputIntoTrolleySurchInterf_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    public io.dstore.engine.Values.booleanValue getOutputIntoTrolleySurchInterf() {
      return outputIntoTrolleySurchInterf_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : outputIntoTrolleySurchInterf_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getOutputIntoTrolleySurchInterfOrBuilder() {
      return getOutputIntoTrolleySurchInterf();
    }

    public static final int OUTPUT_INTO_TROLLEY_SURCH_INTERF_NULL_FIELD_NUMBER = 1013;
    private boolean outputIntoTrolleySurchInterfNull_;
    /**
     * <code>optional bool output_into_trolley_surch_interf_null = 1013;</code>
     */
    public boolean getOutputIntoTrolleySurchInterfNull() {
      return outputIntoTrolleySurchInterfNull_;
    }

    public static final int PAYMENT_TYPE_ID_FIELD_NUMBER = 14;
    private io.dstore.engine.Values.integerValue paymentTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    public boolean hasPaymentTypeId() {
      return paymentTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    public io.dstore.engine.Values.integerValue getPaymentTypeId() {
      return paymentTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder() {
      return getPaymentTypeId();
    }

    public static final int PAYMENT_TYPE_ID_NULL_FIELD_NUMBER = 1014;
    private boolean paymentTypeIdNull_;
    /**
     * <code>optional bool payment_type_id_null = 1014;</code>
     */
    public boolean getPaymentTypeIdNull() {
      return paymentTypeIdNull_;
    }

    public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 15;
    private io.dstore.engine.Values.integerValue shippingTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    public boolean hasShippingTypeId() {
      return shippingTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    public io.dstore.engine.Values.integerValue getShippingTypeId() {
      return shippingTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
      return getShippingTypeId();
    }

    public static final int SHIPPING_TYPE_ID_NULL_FIELD_NUMBER = 1015;
    private boolean shippingTypeIdNull_;
    /**
     * <code>optional bool shipping_type_id_null = 1015;</code>
     */
    public boolean getShippingTypeIdNull() {
      return shippingTypeIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (uniqueId_ != null) {
        output.writeMessage(1, getUniqueId());
      }
      if (personId_ != null) {
        output.writeMessage(2, getPersonId());
      }
      if (calculatePrices_ != null) {
        output.writeMessage(3, getCalculatePrices());
      }
      if (checkAvailability_ != null) {
        output.writeMessage(4, getCheckAvailability());
      }
      if (showDescriptions_ != null) {
        output.writeMessage(5, getShowDescriptions());
      }
      if (priceNodeCharacteristicId_ != null) {
        output.writeMessage(6, getPriceNodeCharacteristicId());
      }
      if (nodeCharacteristicId_ != null) {
        output.writeMessage(7, getNodeCharacteristicId());
      }
      if (includePredecessors_ != null) {
        output.writeMessage(8, getIncludePredecessors());
      }
      if (lookForProductDescription_ != null) {
        output.writeMessage(9, getLookForProductDescription());
      }
      if (repairEntriesWithSameNodeId_ != null) {
        output.writeMessage(10, getRepairEntriesWithSameNodeId());
      }
      if (getPlainTrolley_ != null) {
        output.writeMessage(11, getGetPlainTrolley());
      }
      if (deliveryPersonId_ != null) {
        output.writeMessage(12, getDeliveryPersonId());
      }
      if (outputIntoTrolleySurchInterf_ != null) {
        output.writeMessage(13, getOutputIntoTrolleySurchInterf());
      }
      if (paymentTypeId_ != null) {
        output.writeMessage(14, getPaymentTypeId());
      }
      if (shippingTypeId_ != null) {
        output.writeMessage(15, getShippingTypeId());
      }
      if (uniqueIdNull_ != false) {
        output.writeBool(1001, uniqueIdNull_);
      }
      if (personIdNull_ != false) {
        output.writeBool(1002, personIdNull_);
      }
      if (calculatePricesNull_ != false) {
        output.writeBool(1003, calculatePricesNull_);
      }
      if (checkAvailabilityNull_ != false) {
        output.writeBool(1004, checkAvailabilityNull_);
      }
      if (showDescriptionsNull_ != false) {
        output.writeBool(1005, showDescriptionsNull_);
      }
      if (priceNodeCharacteristicIdNull_ != false) {
        output.writeBool(1006, priceNodeCharacteristicIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        output.writeBool(1007, nodeCharacteristicIdNull_);
      }
      if (includePredecessorsNull_ != false) {
        output.writeBool(1008, includePredecessorsNull_);
      }
      if (lookForProductDescriptionNull_ != false) {
        output.writeBool(1009, lookForProductDescriptionNull_);
      }
      if (repairEntriesWithSameNodeIdNull_ != false) {
        output.writeBool(1010, repairEntriesWithSameNodeIdNull_);
      }
      if (getPlainTrolleyNull_ != false) {
        output.writeBool(1011, getPlainTrolleyNull_);
      }
      if (deliveryPersonIdNull_ != false) {
        output.writeBool(1012, deliveryPersonIdNull_);
      }
      if (outputIntoTrolleySurchInterfNull_ != false) {
        output.writeBool(1013, outputIntoTrolleySurchInterfNull_);
      }
      if (paymentTypeIdNull_ != false) {
        output.writeBool(1014, paymentTypeIdNull_);
      }
      if (shippingTypeIdNull_ != false) {
        output.writeBool(1015, shippingTypeIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (uniqueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getUniqueId());
      }
      if (personId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonId());
      }
      if (calculatePrices_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCalculatePrices());
      }
      if (checkAvailability_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCheckAvailability());
      }
      if (showDescriptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getShowDescriptions());
      }
      if (priceNodeCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPriceNodeCharacteristicId());
      }
      if (nodeCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getNodeCharacteristicId());
      }
      if (includePredecessors_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getIncludePredecessors());
      }
      if (lookForProductDescription_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getLookForProductDescription());
      }
      if (repairEntriesWithSameNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getRepairEntriesWithSameNodeId());
      }
      if (getPlainTrolley_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getGetPlainTrolley());
      }
      if (deliveryPersonId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getDeliveryPersonId());
      }
      if (outputIntoTrolleySurchInterf_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getOutputIntoTrolleySurchInterf());
      }
      if (paymentTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getPaymentTypeId());
      }
      if (shippingTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getShippingTypeId());
      }
      if (uniqueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, uniqueIdNull_);
      }
      if (personIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personIdNull_);
      }
      if (calculatePricesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, calculatePricesNull_);
      }
      if (checkAvailabilityNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, checkAvailabilityNull_);
      }
      if (showDescriptionsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, showDescriptionsNull_);
      }
      if (priceNodeCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, priceNodeCharacteristicIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, nodeCharacteristicIdNull_);
      }
      if (includePredecessorsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, includePredecessorsNull_);
      }
      if (lookForProductDescriptionNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1009, lookForProductDescriptionNull_);
      }
      if (repairEntriesWithSameNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1010, repairEntriesWithSameNodeIdNull_);
      }
      if (getPlainTrolleyNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1011, getPlainTrolleyNull_);
      }
      if (deliveryPersonIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1012, deliveryPersonIdNull_);
      }
      if (outputIntoTrolleySurchInterfNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1013, outputIntoTrolleySurchInterfNull_);
      }
      if (paymentTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1014, paymentTypeIdNull_);
      }
      if (shippingTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1015, shippingTypeIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetTrolleyPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetTrolley_Pu.Parameters)
        io.dstore.engine.procs.OmGetTrolleyPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetTrolleyPu.Parameters.class, io.dstore.engine.procs.OmGetTrolleyPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetTrolleyPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }
        uniqueIdNull_ = false;

        if (personIdBuilder_ == null) {
          personId_ = null;
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }
        personIdNull_ = false;

        if (calculatePricesBuilder_ == null) {
          calculatePrices_ = null;
        } else {
          calculatePrices_ = null;
          calculatePricesBuilder_ = null;
        }
        calculatePricesNull_ = false;

        if (checkAvailabilityBuilder_ == null) {
          checkAvailability_ = null;
        } else {
          checkAvailability_ = null;
          checkAvailabilityBuilder_ = null;
        }
        checkAvailabilityNull_ = false;

        if (showDescriptionsBuilder_ == null) {
          showDescriptions_ = null;
        } else {
          showDescriptions_ = null;
          showDescriptionsBuilder_ = null;
        }
        showDescriptionsNull_ = false;

        if (priceNodeCharacteristicIdBuilder_ == null) {
          priceNodeCharacteristicId_ = null;
        } else {
          priceNodeCharacteristicId_ = null;
          priceNodeCharacteristicIdBuilder_ = null;
        }
        priceNodeCharacteristicIdNull_ = false;

        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }
        nodeCharacteristicIdNull_ = false;

        if (includePredecessorsBuilder_ == null) {
          includePredecessors_ = null;
        } else {
          includePredecessors_ = null;
          includePredecessorsBuilder_ = null;
        }
        includePredecessorsNull_ = false;

        if (lookForProductDescriptionBuilder_ == null) {
          lookForProductDescription_ = null;
        } else {
          lookForProductDescription_ = null;
          lookForProductDescriptionBuilder_ = null;
        }
        lookForProductDescriptionNull_ = false;

        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          repairEntriesWithSameNodeId_ = null;
        } else {
          repairEntriesWithSameNodeId_ = null;
          repairEntriesWithSameNodeIdBuilder_ = null;
        }
        repairEntriesWithSameNodeIdNull_ = false;

        if (getPlainTrolleyBuilder_ == null) {
          getPlainTrolley_ = null;
        } else {
          getPlainTrolley_ = null;
          getPlainTrolleyBuilder_ = null;
        }
        getPlainTrolleyNull_ = false;

        if (deliveryPersonIdBuilder_ == null) {
          deliveryPersonId_ = null;
        } else {
          deliveryPersonId_ = null;
          deliveryPersonIdBuilder_ = null;
        }
        deliveryPersonIdNull_ = false;

        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          outputIntoTrolleySurchInterf_ = null;
        } else {
          outputIntoTrolleySurchInterf_ = null;
          outputIntoTrolleySurchInterfBuilder_ = null;
        }
        outputIntoTrolleySurchInterfNull_ = false;

        if (paymentTypeIdBuilder_ == null) {
          paymentTypeId_ = null;
        } else {
          paymentTypeId_ = null;
          paymentTypeIdBuilder_ = null;
        }
        paymentTypeIdNull_ = false;

        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }
        shippingTypeIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetTrolleyPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Parameters build() {
        io.dstore.engine.procs.OmGetTrolleyPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Parameters buildPartial() {
        io.dstore.engine.procs.OmGetTrolleyPu.Parameters result = new io.dstore.engine.procs.OmGetTrolleyPu.Parameters(this);
        if (uniqueIdBuilder_ == null) {
          result.uniqueId_ = uniqueId_;
        } else {
          result.uniqueId_ = uniqueIdBuilder_.build();
        }
        result.uniqueIdNull_ = uniqueIdNull_;
        if (personIdBuilder_ == null) {
          result.personId_ = personId_;
        } else {
          result.personId_ = personIdBuilder_.build();
        }
        result.personIdNull_ = personIdNull_;
        if (calculatePricesBuilder_ == null) {
          result.calculatePrices_ = calculatePrices_;
        } else {
          result.calculatePrices_ = calculatePricesBuilder_.build();
        }
        result.calculatePricesNull_ = calculatePricesNull_;
        if (checkAvailabilityBuilder_ == null) {
          result.checkAvailability_ = checkAvailability_;
        } else {
          result.checkAvailability_ = checkAvailabilityBuilder_.build();
        }
        result.checkAvailabilityNull_ = checkAvailabilityNull_;
        if (showDescriptionsBuilder_ == null) {
          result.showDescriptions_ = showDescriptions_;
        } else {
          result.showDescriptions_ = showDescriptionsBuilder_.build();
        }
        result.showDescriptionsNull_ = showDescriptionsNull_;
        if (priceNodeCharacteristicIdBuilder_ == null) {
          result.priceNodeCharacteristicId_ = priceNodeCharacteristicId_;
        } else {
          result.priceNodeCharacteristicId_ = priceNodeCharacteristicIdBuilder_.build();
        }
        result.priceNodeCharacteristicIdNull_ = priceNodeCharacteristicIdNull_;
        if (nodeCharacteristicIdBuilder_ == null) {
          result.nodeCharacteristicId_ = nodeCharacteristicId_;
        } else {
          result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
        }
        result.nodeCharacteristicIdNull_ = nodeCharacteristicIdNull_;
        if (includePredecessorsBuilder_ == null) {
          result.includePredecessors_ = includePredecessors_;
        } else {
          result.includePredecessors_ = includePredecessorsBuilder_.build();
        }
        result.includePredecessorsNull_ = includePredecessorsNull_;
        if (lookForProductDescriptionBuilder_ == null) {
          result.lookForProductDescription_ = lookForProductDescription_;
        } else {
          result.lookForProductDescription_ = lookForProductDescriptionBuilder_.build();
        }
        result.lookForProductDescriptionNull_ = lookForProductDescriptionNull_;
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          result.repairEntriesWithSameNodeId_ = repairEntriesWithSameNodeId_;
        } else {
          result.repairEntriesWithSameNodeId_ = repairEntriesWithSameNodeIdBuilder_.build();
        }
        result.repairEntriesWithSameNodeIdNull_ = repairEntriesWithSameNodeIdNull_;
        if (getPlainTrolleyBuilder_ == null) {
          result.getPlainTrolley_ = getPlainTrolley_;
        } else {
          result.getPlainTrolley_ = getPlainTrolleyBuilder_.build();
        }
        result.getPlainTrolleyNull_ = getPlainTrolleyNull_;
        if (deliveryPersonIdBuilder_ == null) {
          result.deliveryPersonId_ = deliveryPersonId_;
        } else {
          result.deliveryPersonId_ = deliveryPersonIdBuilder_.build();
        }
        result.deliveryPersonIdNull_ = deliveryPersonIdNull_;
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          result.outputIntoTrolleySurchInterf_ = outputIntoTrolleySurchInterf_;
        } else {
          result.outputIntoTrolleySurchInterf_ = outputIntoTrolleySurchInterfBuilder_.build();
        }
        result.outputIntoTrolleySurchInterfNull_ = outputIntoTrolleySurchInterfNull_;
        if (paymentTypeIdBuilder_ == null) {
          result.paymentTypeId_ = paymentTypeId_;
        } else {
          result.paymentTypeId_ = paymentTypeIdBuilder_.build();
        }
        result.paymentTypeIdNull_ = paymentTypeIdNull_;
        if (shippingTypeIdBuilder_ == null) {
          result.shippingTypeId_ = shippingTypeId_;
        } else {
          result.shippingTypeId_ = shippingTypeIdBuilder_.build();
        }
        result.shippingTypeIdNull_ = shippingTypeIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetTrolleyPu.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmGetTrolleyPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetTrolleyPu.Parameters other) {
        if (other == io.dstore.engine.procs.OmGetTrolleyPu.Parameters.getDefaultInstance()) return this;
        if (other.hasUniqueId()) {
          mergeUniqueId(other.getUniqueId());
        }
        if (other.getUniqueIdNull() != false) {
          setUniqueIdNull(other.getUniqueIdNull());
        }
        if (other.hasPersonId()) {
          mergePersonId(other.getPersonId());
        }
        if (other.getPersonIdNull() != false) {
          setPersonIdNull(other.getPersonIdNull());
        }
        if (other.hasCalculatePrices()) {
          mergeCalculatePrices(other.getCalculatePrices());
        }
        if (other.getCalculatePricesNull() != false) {
          setCalculatePricesNull(other.getCalculatePricesNull());
        }
        if (other.hasCheckAvailability()) {
          mergeCheckAvailability(other.getCheckAvailability());
        }
        if (other.getCheckAvailabilityNull() != false) {
          setCheckAvailabilityNull(other.getCheckAvailabilityNull());
        }
        if (other.hasShowDescriptions()) {
          mergeShowDescriptions(other.getShowDescriptions());
        }
        if (other.getShowDescriptionsNull() != false) {
          setShowDescriptionsNull(other.getShowDescriptionsNull());
        }
        if (other.hasPriceNodeCharacteristicId()) {
          mergePriceNodeCharacteristicId(other.getPriceNodeCharacteristicId());
        }
        if (other.getPriceNodeCharacteristicIdNull() != false) {
          setPriceNodeCharacteristicIdNull(other.getPriceNodeCharacteristicIdNull());
        }
        if (other.hasNodeCharacteristicId()) {
          mergeNodeCharacteristicId(other.getNodeCharacteristicId());
        }
        if (other.getNodeCharacteristicIdNull() != false) {
          setNodeCharacteristicIdNull(other.getNodeCharacteristicIdNull());
        }
        if (other.hasIncludePredecessors()) {
          mergeIncludePredecessors(other.getIncludePredecessors());
        }
        if (other.getIncludePredecessorsNull() != false) {
          setIncludePredecessorsNull(other.getIncludePredecessorsNull());
        }
        if (other.hasLookForProductDescription()) {
          mergeLookForProductDescription(other.getLookForProductDescription());
        }
        if (other.getLookForProductDescriptionNull() != false) {
          setLookForProductDescriptionNull(other.getLookForProductDescriptionNull());
        }
        if (other.hasRepairEntriesWithSameNodeId()) {
          mergeRepairEntriesWithSameNodeId(other.getRepairEntriesWithSameNodeId());
        }
        if (other.getRepairEntriesWithSameNodeIdNull() != false) {
          setRepairEntriesWithSameNodeIdNull(other.getRepairEntriesWithSameNodeIdNull());
        }
        if (other.hasGetPlainTrolley()) {
          mergeGetPlainTrolley(other.getGetPlainTrolley());
        }
        if (other.getGetPlainTrolleyNull() != false) {
          setGetPlainTrolleyNull(other.getGetPlainTrolleyNull());
        }
        if (other.hasDeliveryPersonId()) {
          mergeDeliveryPersonId(other.getDeliveryPersonId());
        }
        if (other.getDeliveryPersonIdNull() != false) {
          setDeliveryPersonIdNull(other.getDeliveryPersonIdNull());
        }
        if (other.hasOutputIntoTrolleySurchInterf()) {
          mergeOutputIntoTrolleySurchInterf(other.getOutputIntoTrolleySurchInterf());
        }
        if (other.getOutputIntoTrolleySurchInterfNull() != false) {
          setOutputIntoTrolleySurchInterfNull(other.getOutputIntoTrolleySurchInterfNull());
        }
        if (other.hasPaymentTypeId()) {
          mergePaymentTypeId(other.getPaymentTypeId());
        }
        if (other.getPaymentTypeIdNull() != false) {
          setPaymentTypeIdNull(other.getPaymentTypeIdNull());
        }
        if (other.hasShippingTypeId()) {
          mergeShippingTypeId(other.getShippingTypeId());
        }
        if (other.getShippingTypeIdNull() != false) {
          setShippingTypeIdNull(other.getShippingTypeIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetTrolleyPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetTrolleyPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.stringValue uniqueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> uniqueIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public boolean hasUniqueId() {
        return uniqueIdBuilder_ != null || uniqueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public io.dstore.engine.Values.stringValue getUniqueId() {
        if (uniqueIdBuilder_ == null) {
          return uniqueId_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
        } else {
          return uniqueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public Builder setUniqueId(io.dstore.engine.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uniqueId_ = value;
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public Builder setUniqueId(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = builderForValue.build();
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public Builder mergeUniqueId(io.dstore.engine.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (uniqueId_ != null) {
            uniqueId_ =
              io.dstore.engine.Values.stringValue.newBuilder(uniqueId_).mergeFrom(value).buildPartial();
          } else {
            uniqueId_ = value;
          }
          onChanged();
        } else {
          uniqueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public Builder clearUniqueId() {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
          onChanged();
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getUniqueIdBuilder() {
        
        onChanged();
        return getUniqueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
        if (uniqueIdBuilder_ != null) {
          return uniqueIdBuilder_.getMessageOrBuilder();
        } else {
          return uniqueId_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : uniqueId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unique_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getUniqueIdFieldBuilder() {
        if (uniqueIdBuilder_ == null) {
          uniqueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getUniqueId(),
                  getParentForChildren(),
                  isClean());
          uniqueId_ = null;
        }
        return uniqueIdBuilder_;
      }

      private boolean uniqueIdNull_ ;
      /**
       * <code>optional bool unique_id_null = 1001;</code>
       */
      public boolean getUniqueIdNull() {
        return uniqueIdNull_;
      }
      /**
       * <code>optional bool unique_id_null = 1001;</code>
       */
      public Builder setUniqueIdNull(boolean value) {
        
        uniqueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unique_id_null = 1001;</code>
       */
      public Builder clearUniqueIdNull() {
        
        uniqueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue personId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public boolean hasPersonId() {
        return personIdBuilder_ != null || personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        if (personIdBuilder_ == null) {
          return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        } else {
          return personIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personId_ = value;
          onChanged();
        } else {
          personIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder setPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personIdBuilder_ == null) {
          personId_ = builderForValue.build();
          onChanged();
        } else {
          personIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (personId_ != null) {
            personId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
          } else {
            personId_ = value;
          }
          onChanged();
        } else {
          personIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public Builder clearPersonId() {
        if (personIdBuilder_ == null) {
          personId_ = null;
          onChanged();
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
        
        onChanged();
        return getPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        if (personIdBuilder_ != null) {
          return personIdBuilder_.getMessageOrBuilder();
        } else {
          return personId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonIdFieldBuilder() {
        if (personIdBuilder_ == null) {
          personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonId(),
                  getParentForChildren(),
                  isClean());
          personId_ = null;
        }
        return personIdBuilder_;
      }

      private boolean personIdNull_ ;
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public boolean getPersonIdNull() {
        return personIdNull_;
      }
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public Builder setPersonIdNull(boolean value) {
        
        personIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_id_null = 1002;</code>
       */
      public Builder clearPersonIdNull() {
        
        personIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue calculatePrices_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> calculatePricesBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public boolean hasCalculatePrices() {
        return calculatePricesBuilder_ != null || calculatePrices_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getCalculatePrices() {
        if (calculatePricesBuilder_ == null) {
          return calculatePrices_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : calculatePrices_;
        } else {
          return calculatePricesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public Builder setCalculatePrices(io.dstore.engine.Values.integerValue value) {
        if (calculatePricesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calculatePrices_ = value;
          onChanged();
        } else {
          calculatePricesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public Builder setCalculatePrices(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (calculatePricesBuilder_ == null) {
          calculatePrices_ = builderForValue.build();
          onChanged();
        } else {
          calculatePricesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public Builder mergeCalculatePrices(io.dstore.engine.Values.integerValue value) {
        if (calculatePricesBuilder_ == null) {
          if (calculatePrices_ != null) {
            calculatePrices_ =
              io.dstore.engine.Values.integerValue.newBuilder(calculatePrices_).mergeFrom(value).buildPartial();
          } else {
            calculatePrices_ = value;
          }
          onChanged();
        } else {
          calculatePricesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public Builder clearCalculatePrices() {
        if (calculatePricesBuilder_ == null) {
          calculatePrices_ = null;
          onChanged();
        } else {
          calculatePrices_ = null;
          calculatePricesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCalculatePricesBuilder() {
        
        onChanged();
        return getCalculatePricesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCalculatePricesOrBuilder() {
        if (calculatePricesBuilder_ != null) {
          return calculatePricesBuilder_.getMessageOrBuilder();
        } else {
          return calculatePrices_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : calculatePrices_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue calculate_prices = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCalculatePricesFieldBuilder() {
        if (calculatePricesBuilder_ == null) {
          calculatePricesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCalculatePrices(),
                  getParentForChildren(),
                  isClean());
          calculatePrices_ = null;
        }
        return calculatePricesBuilder_;
      }

      private boolean calculatePricesNull_ ;
      /**
       * <code>optional bool calculate_prices_null = 1003;</code>
       */
      public boolean getCalculatePricesNull() {
        return calculatePricesNull_;
      }
      /**
       * <code>optional bool calculate_prices_null = 1003;</code>
       */
      public Builder setCalculatePricesNull(boolean value) {
        
        calculatePricesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool calculate_prices_null = 1003;</code>
       */
      public Builder clearCalculatePricesNull() {
        
        calculatePricesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue checkAvailability_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> checkAvailabilityBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public boolean hasCheckAvailability() {
        return checkAvailabilityBuilder_ != null || checkAvailability_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public io.dstore.engine.Values.booleanValue getCheckAvailability() {
        if (checkAvailabilityBuilder_ == null) {
          return checkAvailability_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkAvailability_;
        } else {
          return checkAvailabilityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public Builder setCheckAvailability(io.dstore.engine.Values.booleanValue value) {
        if (checkAvailabilityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkAvailability_ = value;
          onChanged();
        } else {
          checkAvailabilityBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public Builder setCheckAvailability(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (checkAvailabilityBuilder_ == null) {
          checkAvailability_ = builderForValue.build();
          onChanged();
        } else {
          checkAvailabilityBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public Builder mergeCheckAvailability(io.dstore.engine.Values.booleanValue value) {
        if (checkAvailabilityBuilder_ == null) {
          if (checkAvailability_ != null) {
            checkAvailability_ =
              io.dstore.engine.Values.booleanValue.newBuilder(checkAvailability_).mergeFrom(value).buildPartial();
          } else {
            checkAvailability_ = value;
          }
          onChanged();
        } else {
          checkAvailabilityBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public Builder clearCheckAvailability() {
        if (checkAvailabilityBuilder_ == null) {
          checkAvailability_ = null;
          onChanged();
        } else {
          checkAvailability_ = null;
          checkAvailabilityBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getCheckAvailabilityBuilder() {
        
        onChanged();
        return getCheckAvailabilityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCheckAvailabilityOrBuilder() {
        if (checkAvailabilityBuilder_ != null) {
          return checkAvailabilityBuilder_.getMessageOrBuilder();
        } else {
          return checkAvailability_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkAvailability_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_availability = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getCheckAvailabilityFieldBuilder() {
        if (checkAvailabilityBuilder_ == null) {
          checkAvailabilityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getCheckAvailability(),
                  getParentForChildren(),
                  isClean());
          checkAvailability_ = null;
        }
        return checkAvailabilityBuilder_;
      }

      private boolean checkAvailabilityNull_ ;
      /**
       * <code>optional bool check_availability_null = 1004;</code>
       */
      public boolean getCheckAvailabilityNull() {
        return checkAvailabilityNull_;
      }
      /**
       * <code>optional bool check_availability_null = 1004;</code>
       */
      public Builder setCheckAvailabilityNull(boolean value) {
        
        checkAvailabilityNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool check_availability_null = 1004;</code>
       */
      public Builder clearCheckAvailabilityNull() {
        
        checkAvailabilityNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue showDescriptions_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> showDescriptionsBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public boolean hasShowDescriptions() {
        return showDescriptionsBuilder_ != null || showDescriptions_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public io.dstore.engine.Values.booleanValue getShowDescriptions() {
        if (showDescriptionsBuilder_ == null) {
          return showDescriptions_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : showDescriptions_;
        } else {
          return showDescriptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public Builder setShowDescriptions(io.dstore.engine.Values.booleanValue value) {
        if (showDescriptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          showDescriptions_ = value;
          onChanged();
        } else {
          showDescriptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public Builder setShowDescriptions(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (showDescriptionsBuilder_ == null) {
          showDescriptions_ = builderForValue.build();
          onChanged();
        } else {
          showDescriptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public Builder mergeShowDescriptions(io.dstore.engine.Values.booleanValue value) {
        if (showDescriptionsBuilder_ == null) {
          if (showDescriptions_ != null) {
            showDescriptions_ =
              io.dstore.engine.Values.booleanValue.newBuilder(showDescriptions_).mergeFrom(value).buildPartial();
          } else {
            showDescriptions_ = value;
          }
          onChanged();
        } else {
          showDescriptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public Builder clearShowDescriptions() {
        if (showDescriptionsBuilder_ == null) {
          showDescriptions_ = null;
          onChanged();
        } else {
          showDescriptions_ = null;
          showDescriptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getShowDescriptionsBuilder() {
        
        onChanged();
        return getShowDescriptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getShowDescriptionsOrBuilder() {
        if (showDescriptionsBuilder_ != null) {
          return showDescriptionsBuilder_.getMessageOrBuilder();
        } else {
          return showDescriptions_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : showDescriptions_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue show_descriptions = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getShowDescriptionsFieldBuilder() {
        if (showDescriptionsBuilder_ == null) {
          showDescriptionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getShowDescriptions(),
                  getParentForChildren(),
                  isClean());
          showDescriptions_ = null;
        }
        return showDescriptionsBuilder_;
      }

      private boolean showDescriptionsNull_ ;
      /**
       * <code>optional bool show_descriptions_null = 1005;</code>
       */
      public boolean getShowDescriptionsNull() {
        return showDescriptionsNull_;
      }
      /**
       * <code>optional bool show_descriptions_null = 1005;</code>
       */
      public Builder setShowDescriptionsNull(boolean value) {
        
        showDescriptionsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_descriptions_null = 1005;</code>
       */
      public Builder clearShowDescriptionsNull() {
        
        showDescriptionsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue priceNodeCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> priceNodeCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public boolean hasPriceNodeCharacteristicId() {
        return priceNodeCharacteristicIdBuilder_ != null || priceNodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId() {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          return priceNodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
        } else {
          return priceNodeCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public Builder setPriceNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          priceNodeCharacteristicId_ = value;
          onChanged();
        } else {
          priceNodeCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public Builder setPriceNodeCharacteristicId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          priceNodeCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          priceNodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public Builder mergePriceNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          if (priceNodeCharacteristicId_ != null) {
            priceNodeCharacteristicId_ =
              io.dstore.engine.Values.integerValue.newBuilder(priceNodeCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            priceNodeCharacteristicId_ = value;
          }
          onChanged();
        } else {
          priceNodeCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public Builder clearPriceNodeCharacteristicId() {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          priceNodeCharacteristicId_ = null;
          onChanged();
        } else {
          priceNodeCharacteristicId_ = null;
          priceNodeCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPriceNodeCharacteristicIdBuilder() {
        
        onChanged();
        return getPriceNodeCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder() {
        if (priceNodeCharacteristicIdBuilder_ != null) {
          return priceNodeCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return priceNodeCharacteristicId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPriceNodeCharacteristicIdFieldBuilder() {
        if (priceNodeCharacteristicIdBuilder_ == null) {
          priceNodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPriceNodeCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          priceNodeCharacteristicId_ = null;
        }
        return priceNodeCharacteristicIdBuilder_;
      }

      private boolean priceNodeCharacteristicIdNull_ ;
      /**
       * <code>optional bool price_node_characteristic_id_null = 1006;</code>
       */
      public boolean getPriceNodeCharacteristicIdNull() {
        return priceNodeCharacteristicIdNull_;
      }
      /**
       * <code>optional bool price_node_characteristic_id_null = 1006;</code>
       */
      public Builder setPriceNodeCharacteristicIdNull(boolean value) {
        
        priceNodeCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool price_node_characteristic_id_null = 1006;</code>
       */
      public Builder clearPriceNodeCharacteristicIdNull() {
        
        priceNodeCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        } else {
          return nodeCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId_ = value;
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public Builder setNodeCharacteristicId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (nodeCharacteristicId_ != null) {
            nodeCharacteristicId_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public Builder clearNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
          onChanged();
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
        
        onChanged();
        return getNodeCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        if (nodeCharacteristicIdBuilder_ != null) {
          return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicIdFieldBuilder() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId_ = null;
        }
        return nodeCharacteristicIdBuilder_;
      }

      private boolean nodeCharacteristicIdNull_ ;
      /**
       * <code>optional bool node_characteristic_id_null = 1007;</code>
       */
      public boolean getNodeCharacteristicIdNull() {
        return nodeCharacteristicIdNull_;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1007;</code>
       */
      public Builder setNodeCharacteristicIdNull(boolean value) {
        
        nodeCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1007;</code>
       */
      public Builder clearNodeCharacteristicIdNull() {
        
        nodeCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue includePredecessors_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> includePredecessorsBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public boolean hasIncludePredecessors() {
        return includePredecessorsBuilder_ != null || includePredecessors_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public io.dstore.engine.Values.booleanValue getIncludePredecessors() {
        if (includePredecessorsBuilder_ == null) {
          return includePredecessors_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePredecessors_;
        } else {
          return includePredecessorsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public Builder setIncludePredecessors(io.dstore.engine.Values.booleanValue value) {
        if (includePredecessorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includePredecessors_ = value;
          onChanged();
        } else {
          includePredecessorsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public Builder setIncludePredecessors(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (includePredecessorsBuilder_ == null) {
          includePredecessors_ = builderForValue.build();
          onChanged();
        } else {
          includePredecessorsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public Builder mergeIncludePredecessors(io.dstore.engine.Values.booleanValue value) {
        if (includePredecessorsBuilder_ == null) {
          if (includePredecessors_ != null) {
            includePredecessors_ =
              io.dstore.engine.Values.booleanValue.newBuilder(includePredecessors_).mergeFrom(value).buildPartial();
          } else {
            includePredecessors_ = value;
          }
          onChanged();
        } else {
          includePredecessorsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public Builder clearIncludePredecessors() {
        if (includePredecessorsBuilder_ == null) {
          includePredecessors_ = null;
          onChanged();
        } else {
          includePredecessors_ = null;
          includePredecessorsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getIncludePredecessorsBuilder() {
        
        onChanged();
        return getIncludePredecessorsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getIncludePredecessorsOrBuilder() {
        if (includePredecessorsBuilder_ != null) {
          return includePredecessorsBuilder_.getMessageOrBuilder();
        } else {
          return includePredecessors_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePredecessors_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_predecessors = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getIncludePredecessorsFieldBuilder() {
        if (includePredecessorsBuilder_ == null) {
          includePredecessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getIncludePredecessors(),
                  getParentForChildren(),
                  isClean());
          includePredecessors_ = null;
        }
        return includePredecessorsBuilder_;
      }

      private boolean includePredecessorsNull_ ;
      /**
       * <code>optional bool include_predecessors_null = 1008;</code>
       */
      public boolean getIncludePredecessorsNull() {
        return includePredecessorsNull_;
      }
      /**
       * <code>optional bool include_predecessors_null = 1008;</code>
       */
      public Builder setIncludePredecessorsNull(boolean value) {
        
        includePredecessorsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_predecessors_null = 1008;</code>
       */
      public Builder clearIncludePredecessorsNull() {
        
        includePredecessorsNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue lookForProductDescription_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> lookForProductDescriptionBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public boolean hasLookForProductDescription() {
        return lookForProductDescriptionBuilder_ != null || lookForProductDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public io.dstore.engine.Values.booleanValue getLookForProductDescription() {
        if (lookForProductDescriptionBuilder_ == null) {
          return lookForProductDescription_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : lookForProductDescription_;
        } else {
          return lookForProductDescriptionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public Builder setLookForProductDescription(io.dstore.engine.Values.booleanValue value) {
        if (lookForProductDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lookForProductDescription_ = value;
          onChanged();
        } else {
          lookForProductDescriptionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public Builder setLookForProductDescription(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (lookForProductDescriptionBuilder_ == null) {
          lookForProductDescription_ = builderForValue.build();
          onChanged();
        } else {
          lookForProductDescriptionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public Builder mergeLookForProductDescription(io.dstore.engine.Values.booleanValue value) {
        if (lookForProductDescriptionBuilder_ == null) {
          if (lookForProductDescription_ != null) {
            lookForProductDescription_ =
              io.dstore.engine.Values.booleanValue.newBuilder(lookForProductDescription_).mergeFrom(value).buildPartial();
          } else {
            lookForProductDescription_ = value;
          }
          onChanged();
        } else {
          lookForProductDescriptionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public Builder clearLookForProductDescription() {
        if (lookForProductDescriptionBuilder_ == null) {
          lookForProductDescription_ = null;
          onChanged();
        } else {
          lookForProductDescription_ = null;
          lookForProductDescriptionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getLookForProductDescriptionBuilder() {
        
        onChanged();
        return getLookForProductDescriptionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getLookForProductDescriptionOrBuilder() {
        if (lookForProductDescriptionBuilder_ != null) {
          return lookForProductDescriptionBuilder_.getMessageOrBuilder();
        } else {
          return lookForProductDescription_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : lookForProductDescription_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue look_for_product_description = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getLookForProductDescriptionFieldBuilder() {
        if (lookForProductDescriptionBuilder_ == null) {
          lookForProductDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getLookForProductDescription(),
                  getParentForChildren(),
                  isClean());
          lookForProductDescription_ = null;
        }
        return lookForProductDescriptionBuilder_;
      }

      private boolean lookForProductDescriptionNull_ ;
      /**
       * <code>optional bool look_for_product_description_null = 1009;</code>
       */
      public boolean getLookForProductDescriptionNull() {
        return lookForProductDescriptionNull_;
      }
      /**
       * <code>optional bool look_for_product_description_null = 1009;</code>
       */
      public Builder setLookForProductDescriptionNull(boolean value) {
        
        lookForProductDescriptionNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool look_for_product_description_null = 1009;</code>
       */
      public Builder clearLookForProductDescriptionNull() {
        
        lookForProductDescriptionNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue repairEntriesWithSameNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> repairEntriesWithSameNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public boolean hasRepairEntriesWithSameNodeId() {
        return repairEntriesWithSameNodeIdBuilder_ != null || repairEntriesWithSameNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValue getRepairEntriesWithSameNodeId() {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          return repairEntriesWithSameNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : repairEntriesWithSameNodeId_;
        } else {
          return repairEntriesWithSameNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public Builder setRepairEntriesWithSameNodeId(io.dstore.engine.Values.integerValue value) {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          repairEntriesWithSameNodeId_ = value;
          onChanged();
        } else {
          repairEntriesWithSameNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public Builder setRepairEntriesWithSameNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          repairEntriesWithSameNodeId_ = builderForValue.build();
          onChanged();
        } else {
          repairEntriesWithSameNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public Builder mergeRepairEntriesWithSameNodeId(io.dstore.engine.Values.integerValue value) {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          if (repairEntriesWithSameNodeId_ != null) {
            repairEntriesWithSameNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(repairEntriesWithSameNodeId_).mergeFrom(value).buildPartial();
          } else {
            repairEntriesWithSameNodeId_ = value;
          }
          onChanged();
        } else {
          repairEntriesWithSameNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public Builder clearRepairEntriesWithSameNodeId() {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          repairEntriesWithSameNodeId_ = null;
          onChanged();
        } else {
          repairEntriesWithSameNodeId_ = null;
          repairEntriesWithSameNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getRepairEntriesWithSameNodeIdBuilder() {
        
        onChanged();
        return getRepairEntriesWithSameNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRepairEntriesWithSameNodeIdOrBuilder() {
        if (repairEntriesWithSameNodeIdBuilder_ != null) {
          return repairEntriesWithSameNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return repairEntriesWithSameNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : repairEntriesWithSameNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue repair_entries_with_same_node_id = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getRepairEntriesWithSameNodeIdFieldBuilder() {
        if (repairEntriesWithSameNodeIdBuilder_ == null) {
          repairEntriesWithSameNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getRepairEntriesWithSameNodeId(),
                  getParentForChildren(),
                  isClean());
          repairEntriesWithSameNodeId_ = null;
        }
        return repairEntriesWithSameNodeIdBuilder_;
      }

      private boolean repairEntriesWithSameNodeIdNull_ ;
      /**
       * <code>optional bool repair_entries_with_same_node_id_null = 1010;</code>
       */
      public boolean getRepairEntriesWithSameNodeIdNull() {
        return repairEntriesWithSameNodeIdNull_;
      }
      /**
       * <code>optional bool repair_entries_with_same_node_id_null = 1010;</code>
       */
      public Builder setRepairEntriesWithSameNodeIdNull(boolean value) {
        
        repairEntriesWithSameNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool repair_entries_with_same_node_id_null = 1010;</code>
       */
      public Builder clearRepairEntriesWithSameNodeIdNull() {
        
        repairEntriesWithSameNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getPlainTrolley_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getPlainTrolleyBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public boolean hasGetPlainTrolley() {
        return getPlainTrolleyBuilder_ != null || getPlainTrolley_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetPlainTrolley() {
        if (getPlainTrolleyBuilder_ == null) {
          return getPlainTrolley_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getPlainTrolley_;
        } else {
          return getPlainTrolleyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public Builder setGetPlainTrolley(io.dstore.engine.Values.booleanValue value) {
        if (getPlainTrolleyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getPlainTrolley_ = value;
          onChanged();
        } else {
          getPlainTrolleyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public Builder setGetPlainTrolley(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getPlainTrolleyBuilder_ == null) {
          getPlainTrolley_ = builderForValue.build();
          onChanged();
        } else {
          getPlainTrolleyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public Builder mergeGetPlainTrolley(io.dstore.engine.Values.booleanValue value) {
        if (getPlainTrolleyBuilder_ == null) {
          if (getPlainTrolley_ != null) {
            getPlainTrolley_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getPlainTrolley_).mergeFrom(value).buildPartial();
          } else {
            getPlainTrolley_ = value;
          }
          onChanged();
        } else {
          getPlainTrolleyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public Builder clearGetPlainTrolley() {
        if (getPlainTrolleyBuilder_ == null) {
          getPlainTrolley_ = null;
          onChanged();
        } else {
          getPlainTrolley_ = null;
          getPlainTrolleyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetPlainTrolleyBuilder() {
        
        onChanged();
        return getGetPlainTrolleyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetPlainTrolleyOrBuilder() {
        if (getPlainTrolleyBuilder_ != null) {
          return getPlainTrolleyBuilder_.getMessageOrBuilder();
        } else {
          return getPlainTrolley_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getPlainTrolley_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_plain_trolley = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetPlainTrolleyFieldBuilder() {
        if (getPlainTrolleyBuilder_ == null) {
          getPlainTrolleyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetPlainTrolley(),
                  getParentForChildren(),
                  isClean());
          getPlainTrolley_ = null;
        }
        return getPlainTrolleyBuilder_;
      }

      private boolean getPlainTrolleyNull_ ;
      /**
       * <code>optional bool get_plain_trolley_null = 1011;</code>
       */
      public boolean getGetPlainTrolleyNull() {
        return getPlainTrolleyNull_;
      }
      /**
       * <code>optional bool get_plain_trolley_null = 1011;</code>
       */
      public Builder setGetPlainTrolleyNull(boolean value) {
        
        getPlainTrolleyNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_plain_trolley_null = 1011;</code>
       */
      public Builder clearGetPlainTrolleyNull() {
        
        getPlainTrolleyNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue deliveryPersonId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> deliveryPersonIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public boolean hasDeliveryPersonId() {
        return deliveryPersonIdBuilder_ != null || deliveryPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValue getDeliveryPersonId() {
        if (deliveryPersonIdBuilder_ == null) {
          return deliveryPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
        } else {
          return deliveryPersonIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public Builder setDeliveryPersonId(io.dstore.engine.Values.integerValue value) {
        if (deliveryPersonIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deliveryPersonId_ = value;
          onChanged();
        } else {
          deliveryPersonIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public Builder setDeliveryPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (deliveryPersonIdBuilder_ == null) {
          deliveryPersonId_ = builderForValue.build();
          onChanged();
        } else {
          deliveryPersonIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public Builder mergeDeliveryPersonId(io.dstore.engine.Values.integerValue value) {
        if (deliveryPersonIdBuilder_ == null) {
          if (deliveryPersonId_ != null) {
            deliveryPersonId_ =
              io.dstore.engine.Values.integerValue.newBuilder(deliveryPersonId_).mergeFrom(value).buildPartial();
          } else {
            deliveryPersonId_ = value;
          }
          onChanged();
        } else {
          deliveryPersonIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public Builder clearDeliveryPersonId() {
        if (deliveryPersonIdBuilder_ == null) {
          deliveryPersonId_ = null;
          onChanged();
        } else {
          deliveryPersonId_ = null;
          deliveryPersonIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getDeliveryPersonIdBuilder() {
        
        onChanged();
        return getDeliveryPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getDeliveryPersonIdOrBuilder() {
        if (deliveryPersonIdBuilder_ != null) {
          return deliveryPersonIdBuilder_.getMessageOrBuilder();
        } else {
          return deliveryPersonId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : deliveryPersonId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue delivery_person_id = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getDeliveryPersonIdFieldBuilder() {
        if (deliveryPersonIdBuilder_ == null) {
          deliveryPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getDeliveryPersonId(),
                  getParentForChildren(),
                  isClean());
          deliveryPersonId_ = null;
        }
        return deliveryPersonIdBuilder_;
      }

      private boolean deliveryPersonIdNull_ ;
      /**
       * <code>optional bool delivery_person_id_null = 1012;</code>
       */
      public boolean getDeliveryPersonIdNull() {
        return deliveryPersonIdNull_;
      }
      /**
       * <code>optional bool delivery_person_id_null = 1012;</code>
       */
      public Builder setDeliveryPersonIdNull(boolean value) {
        
        deliveryPersonIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool delivery_person_id_null = 1012;</code>
       */
      public Builder clearDeliveryPersonIdNull() {
        
        deliveryPersonIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue outputIntoTrolleySurchInterf_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> outputIntoTrolleySurchInterfBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public boolean hasOutputIntoTrolleySurchInterf() {
        return outputIntoTrolleySurchInterfBuilder_ != null || outputIntoTrolleySurchInterf_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public io.dstore.engine.Values.booleanValue getOutputIntoTrolleySurchInterf() {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          return outputIntoTrolleySurchInterf_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : outputIntoTrolleySurchInterf_;
        } else {
          return outputIntoTrolleySurchInterfBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public Builder setOutputIntoTrolleySurchInterf(io.dstore.engine.Values.booleanValue value) {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputIntoTrolleySurchInterf_ = value;
          onChanged();
        } else {
          outputIntoTrolleySurchInterfBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public Builder setOutputIntoTrolleySurchInterf(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          outputIntoTrolleySurchInterf_ = builderForValue.build();
          onChanged();
        } else {
          outputIntoTrolleySurchInterfBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public Builder mergeOutputIntoTrolleySurchInterf(io.dstore.engine.Values.booleanValue value) {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          if (outputIntoTrolleySurchInterf_ != null) {
            outputIntoTrolleySurchInterf_ =
              io.dstore.engine.Values.booleanValue.newBuilder(outputIntoTrolleySurchInterf_).mergeFrom(value).buildPartial();
          } else {
            outputIntoTrolleySurchInterf_ = value;
          }
          onChanged();
        } else {
          outputIntoTrolleySurchInterfBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public Builder clearOutputIntoTrolleySurchInterf() {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          outputIntoTrolleySurchInterf_ = null;
          onChanged();
        } else {
          outputIntoTrolleySurchInterf_ = null;
          outputIntoTrolleySurchInterfBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getOutputIntoTrolleySurchInterfBuilder() {
        
        onChanged();
        return getOutputIntoTrolleySurchInterfFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getOutputIntoTrolleySurchInterfOrBuilder() {
        if (outputIntoTrolleySurchInterfBuilder_ != null) {
          return outputIntoTrolleySurchInterfBuilder_.getMessageOrBuilder();
        } else {
          return outputIntoTrolleySurchInterf_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : outputIntoTrolleySurchInterf_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue output_into_trolley_surch_interf = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getOutputIntoTrolleySurchInterfFieldBuilder() {
        if (outputIntoTrolleySurchInterfBuilder_ == null) {
          outputIntoTrolleySurchInterfBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getOutputIntoTrolleySurchInterf(),
                  getParentForChildren(),
                  isClean());
          outputIntoTrolleySurchInterf_ = null;
        }
        return outputIntoTrolleySurchInterfBuilder_;
      }

      private boolean outputIntoTrolleySurchInterfNull_ ;
      /**
       * <code>optional bool output_into_trolley_surch_interf_null = 1013;</code>
       */
      public boolean getOutputIntoTrolleySurchInterfNull() {
        return outputIntoTrolleySurchInterfNull_;
      }
      /**
       * <code>optional bool output_into_trolley_surch_interf_null = 1013;</code>
       */
      public Builder setOutputIntoTrolleySurchInterfNull(boolean value) {
        
        outputIntoTrolleySurchInterfNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool output_into_trolley_surch_interf_null = 1013;</code>
       */
      public Builder clearOutputIntoTrolleySurchInterfNull() {
        
        outputIntoTrolleySurchInterfNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue paymentTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> paymentTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public boolean hasPaymentTypeId() {
        return paymentTypeIdBuilder_ != null || paymentTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public io.dstore.engine.Values.integerValue getPaymentTypeId() {
        if (paymentTypeIdBuilder_ == null) {
          return paymentTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
        } else {
          return paymentTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public Builder setPaymentTypeId(io.dstore.engine.Values.integerValue value) {
        if (paymentTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paymentTypeId_ = value;
          onChanged();
        } else {
          paymentTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public Builder setPaymentTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (paymentTypeIdBuilder_ == null) {
          paymentTypeId_ = builderForValue.build();
          onChanged();
        } else {
          paymentTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public Builder mergePaymentTypeId(io.dstore.engine.Values.integerValue value) {
        if (paymentTypeIdBuilder_ == null) {
          if (paymentTypeId_ != null) {
            paymentTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(paymentTypeId_).mergeFrom(value).buildPartial();
          } else {
            paymentTypeId_ = value;
          }
          onChanged();
        } else {
          paymentTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public Builder clearPaymentTypeId() {
        if (paymentTypeIdBuilder_ == null) {
          paymentTypeId_ = null;
          onChanged();
        } else {
          paymentTypeId_ = null;
          paymentTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPaymentTypeIdBuilder() {
        
        onChanged();
        return getPaymentTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPaymentTypeIdOrBuilder() {
        if (paymentTypeIdBuilder_ != null) {
          return paymentTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return paymentTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : paymentTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue payment_type_id = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPaymentTypeIdFieldBuilder() {
        if (paymentTypeIdBuilder_ == null) {
          paymentTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPaymentTypeId(),
                  getParentForChildren(),
                  isClean());
          paymentTypeId_ = null;
        }
        return paymentTypeIdBuilder_;
      }

      private boolean paymentTypeIdNull_ ;
      /**
       * <code>optional bool payment_type_id_null = 1014;</code>
       */
      public boolean getPaymentTypeIdNull() {
        return paymentTypeIdNull_;
      }
      /**
       * <code>optional bool payment_type_id_null = 1014;</code>
       */
      public Builder setPaymentTypeIdNull(boolean value) {
        
        paymentTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool payment_type_id_null = 1014;</code>
       */
      public Builder clearPaymentTypeIdNull() {
        
        paymentTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue shippingTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public io.dstore.engine.Values.integerValue getShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          return shippingTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        } else {
          return shippingTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public Builder setShippingTypeId(io.dstore.engine.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shippingTypeId_ = value;
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public Builder setShippingTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = builderForValue.build();
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public Builder mergeShippingTypeId(io.dstore.engine.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (shippingTypeId_ != null) {
            shippingTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
          } else {
            shippingTypeId_ = value;
          }
          onChanged();
        } else {
          shippingTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public Builder clearShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
          onChanged();
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getShippingTypeIdBuilder() {
        
        onChanged();
        return getShippingTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        if (shippingTypeIdBuilder_ != null) {
          return shippingTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return shippingTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue shipping_type_id = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getShippingTypeIdFieldBuilder() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getShippingTypeId(),
                  getParentForChildren(),
                  isClean());
          shippingTypeId_ = null;
        }
        return shippingTypeIdBuilder_;
      }

      private boolean shippingTypeIdNull_ ;
      /**
       * <code>optional bool shipping_type_id_null = 1015;</code>
       */
      public boolean getShippingTypeIdNull() {
        return shippingTypeIdNull_;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1015;</code>
       */
      public Builder setShippingTypeIdNull(boolean value) {
        
        shippingTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1015;</code>
       */
      public Builder clearShippingTypeIdNull() {
        
        shippingTypeIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetTrolley_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetTrolley_Pu.Parameters)
    private static final io.dstore.engine.procs.OmGetTrolleyPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetTrolleyPu.Parameters();
    }

    public static io.dstore.engine.procs.OmGetTrolleyPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetTrolleyPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetTrolley_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetTrolley_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetTrolleyPu.Response.class, io.dstore.engine.procs.OmGetTrolleyPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetTrolley_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      boolean hasPreciseAbsUnitGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseAbsUnitGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitGrossSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      boolean hasPriceNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      boolean hasUnitGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getUnitGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getUnitGrossPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      boolean hasAbsoluteTotalNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getAbsoluteTotalNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalNetSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      boolean hasAbsoluteTotalGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getAbsoluteTotalGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalGrossSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      boolean hasRemoved();
      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      io.dstore.engine.Values.integerValue getRemoved();
      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getRemovedOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      boolean hasCurrencySymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCurrencySymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCurrencySymbolOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      boolean hasPreciseUnitGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseUnitGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitGrossPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      boolean hasUnitNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getUnitNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getUnitNetPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      boolean hasPreciseAbsUnitNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseAbsUnitNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitNetSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      boolean hasSurchargeReason();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getSurchargeReason();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getSurchargeReasonOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      boolean hasAssociatedOrChosenTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getAssociatedOrChosenTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getAssociatedOrChosenTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      boolean hasDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      boolean hasBonusItemForItemSetId();
      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBonusItemForItemSetId();
      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBonusItemForItemSetIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      boolean hasRelativeSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getRelativeSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getRelativeSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      boolean hasSurchargeGeneratedByCampIds();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      io.dstore.engine.Values.stringValue getSurchargeGeneratedByCampIds();
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getSurchargeGeneratedByCampIdsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      boolean hasPreciseTotalGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseTotalGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalGrossPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      boolean hasInputDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getInputDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      boolean hasTaxesMultiplier();
      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTaxesMultiplier();
      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTaxesMultiplierOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      boolean hasPreciseAbsTotalGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseAbsTotalGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalGrossSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      boolean hasItemProperty();
      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getItemProperty();
      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getItemPropertyOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      boolean hasPreciseAbsTotalNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseAbsTotalNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalNetSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      boolean hasTotalNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalNetPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      boolean hasQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      io.dstore.engine.Values.integerValue getQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      boolean hasUnitSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getUnitSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      boolean hasQuantityPerBundleItemSetIdList();
      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getQuantityPerBundleItemSetIdList();
      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getQuantityPerBundleItemSetIdListOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      boolean hasSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getSurchargeValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      boolean hasCurrencyId();
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCurrencyId();
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      boolean hasActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      boolean hasAbsoluteUnitNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getAbsoluteUnitNetSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitNetSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      boolean hasHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      boolean hasAbsoluteUnitGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getAbsoluteUnitGrossSurcharge();
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitGrossSurchargeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      boolean hasPreciseTotalNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseTotalNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalNetPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      boolean hasSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSurchargeTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      boolean hasPreciseUnitNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPreciseUnitNetPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitNetPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      boolean hasTotalGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalGrossPrice();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalGrossPriceOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      boolean hasPrePredecessorsLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrePredecessorsLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsLevelNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      boolean hasPrePredecessorsTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrePredecessorsTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      boolean hasPredecessorsTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPredecessorsTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPredecessorsTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      boolean hasPredecessorsDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPredecessorsDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPredecessorsDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      boolean hasPredecessorsLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPredecessorsLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPredecessorsLevelNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      boolean hasPrePredecessorsDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.stringValue getPrePredecessorsDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorsDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      boolean hasInputDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getInputDateAndTimeChar();
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetTrolley_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseAbsUnitGrossSurcharge_ != null) {
                  subBuilder = preciseAbsUnitGrossSurcharge_.toBuilder();
                }
                preciseAbsUnitGrossSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseAbsUnitGrossSurcharge_);
                  preciseAbsUnitGrossSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (priceNodeCharacteristicId_ != null) {
                  subBuilder = priceNodeCharacteristicId_.toBuilder();
                }
                priceNodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(priceNodeCharacteristicId_);
                  priceNodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (unitGrossPrice_ != null) {
                  subBuilder = unitGrossPrice_.toBuilder();
                }
                unitGrossPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitGrossPrice_);
                  unitGrossPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (absoluteTotalNetSurcharge_ != null) {
                  subBuilder = absoluteTotalNetSurcharge_.toBuilder();
                }
                absoluteTotalNetSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(absoluteTotalNetSurcharge_);
                  absoluteTotalNetSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (absoluteTotalGrossSurcharge_ != null) {
                  subBuilder = absoluteTotalGrossSurcharge_.toBuilder();
                }
                absoluteTotalGrossSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(absoluteTotalGrossSurcharge_);
                  absoluteTotalGrossSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (removed_ != null) {
                  subBuilder = removed_.toBuilder();
                }
                removed_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(removed_);
                  removed_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (currencySymbol_ != null) {
                  subBuilder = currencySymbol_.toBuilder();
                }
                currencySymbol_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currencySymbol_);
                  currencySymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseUnitGrossPrice_ != null) {
                  subBuilder = preciseUnitGrossPrice_.toBuilder();
                }
                preciseUnitGrossPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseUnitGrossPrice_);
                  preciseUnitGrossPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (unitNetPrice_ != null) {
                  subBuilder = unitNetPrice_.toBuilder();
                }
                unitNetPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitNetPrice_);
                  unitNetPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseAbsUnitNetSurcharge_ != null) {
                  subBuilder = preciseAbsUnitNetSurcharge_.toBuilder();
                }
                preciseAbsUnitNetSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseAbsUnitNetSurcharge_);
                  preciseAbsUnitNetSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (surchargeReason_ != null) {
                  subBuilder = surchargeReason_.toBuilder();
                }
                surchargeReason_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeReason_);
                  surchargeReason_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (associatedOrChosenTreeNodeId_ != null) {
                  subBuilder = associatedOrChosenTreeNodeId_.toBuilder();
                }
                associatedOrChosenTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(associatedOrChosenTreeNodeId_);
                  associatedOrChosenTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (deleted_ != null) {
                  subBuilder = deleted_.toBuilder();
                }
                deleted_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deleted_);
                  deleted_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (bonusItemForItemSetId_ != null) {
                  subBuilder = bonusItemForItemSetId_.toBuilder();
                }
                bonusItemForItemSetId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bonusItemForItemSetId_);
                  bonusItemForItemSetId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (relativeSurcharge_ != null) {
                  subBuilder = relativeSurcharge_.toBuilder();
                }
                relativeSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relativeSurcharge_);
                  relativeSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (surchargeGeneratedByCampIds_ != null) {
                  subBuilder = surchargeGeneratedByCampIds_.toBuilder();
                }
                surchargeGeneratedByCampIds_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeGeneratedByCampIds_);
                  surchargeGeneratedByCampIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80154: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseTotalGrossPrice_ != null) {
                  subBuilder = preciseTotalGrossPrice_.toBuilder();
                }
                preciseTotalGrossPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseTotalGrossPrice_);
                  preciseTotalGrossPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80162: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (inputDateAndTime_ != null) {
                  subBuilder = inputDateAndTime_.toBuilder();
                }
                inputDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTime_);
                  inputDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80170: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (taxesMultiplier_ != null) {
                  subBuilder = taxesMultiplier_.toBuilder();
                }
                taxesMultiplier_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(taxesMultiplier_);
                  taxesMultiplier_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80178: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseAbsTotalGrossSurcharge_ != null) {
                  subBuilder = preciseAbsTotalGrossSurcharge_.toBuilder();
                }
                preciseAbsTotalGrossSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseAbsTotalGrossSurcharge_);
                  preciseAbsTotalGrossSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80186: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (itemProperty_ != null) {
                  subBuilder = itemProperty_.toBuilder();
                }
                itemProperty_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemProperty_);
                  itemProperty_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80194: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseAbsTotalNetSurcharge_ != null) {
                  subBuilder = preciseAbsTotalNetSurcharge_.toBuilder();
                }
                preciseAbsTotalNetSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseAbsTotalNetSurcharge_);
                  preciseAbsTotalNetSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80202: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalNetPrice_ != null) {
                  subBuilder = totalNetPrice_.toBuilder();
                }
                totalNetPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalNetPrice_);
                  totalNetPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80210: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (quantity_ != null) {
                  subBuilder = quantity_.toBuilder();
                }
                quantity_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quantity_);
                  quantity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80218: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (unitSymbol_ != null) {
                  subBuilder = unitSymbol_.toBuilder();
                }
                unitSymbol_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitSymbol_);
                  unitSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80226: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (quantityPerBundleItemSetIdList_ != null) {
                  subBuilder = quantityPerBundleItemSetIdList_.toBuilder();
                }
                quantityPerBundleItemSetIdList_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(quantityPerBundleItemSetIdList_);
                  quantityPerBundleItemSetIdList_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80234: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80242: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (currencyId_ != null) {
                  subBuilder = currencyId_.toBuilder();
                }
                currencyId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currencyId_);
                  currencyId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80250: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80258: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (absoluteUnitNetSurcharge_ != null) {
                  subBuilder = absoluteUnitNetSurcharge_.toBuilder();
                }
                absoluteUnitNetSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(absoluteUnitNetSurcharge_);
                  absoluteUnitNetSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80266: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (hTreeNodeId_ != null) {
                  subBuilder = hTreeNodeId_.toBuilder();
                }
                hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hTreeNodeId_);
                  hTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80274: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (absoluteUnitGrossSurcharge_ != null) {
                  subBuilder = absoluteUnitGrossSurcharge_.toBuilder();
                }
                absoluteUnitGrossSurcharge_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(absoluteUnitGrossSurcharge_);
                  absoluteUnitGrossSurcharge_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80282: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseTotalNetPrice_ != null) {
                  subBuilder = preciseTotalNetPrice_.toBuilder();
                }
                preciseTotalNetPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseTotalNetPrice_);
                  preciseTotalNetPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80290: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80298: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (preciseUnitNetPrice_ != null) {
                  subBuilder = preciseUnitNetPrice_.toBuilder();
                }
                preciseUnitNetPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(preciseUnitNetPrice_);
                  preciseUnitNetPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80306: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalGrossPrice_ != null) {
                  subBuilder = totalGrossPrice_.toBuilder();
                }
                totalGrossPrice_ = input.readMessage(io.dstore.engine.Values.decimalValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalGrossPrice_);
                  totalGrossPrice_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (prePredecessorsLevelNo_ != null) {
                  subBuilder = prePredecessorsLevelNo_.toBuilder();
                }
                prePredecessorsLevelNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(prePredecessorsLevelNo_);
                  prePredecessorsLevelNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160082: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (prePredecessorsTreeNodeId_ != null) {
                  subBuilder = prePredecessorsTreeNodeId_.toBuilder();
                }
                prePredecessorsTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(prePredecessorsTreeNodeId_);
                  prePredecessorsTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160186: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (predecessorsTreeNodeId_ != null) {
                  subBuilder = predecessorsTreeNodeId_.toBuilder();
                }
                predecessorsTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessorsTreeNodeId_);
                  predecessorsTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160194: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (predecessorsDescription_ != null) {
                  subBuilder = predecessorsDescription_.toBuilder();
                }
                predecessorsDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessorsDescription_);
                  predecessorsDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160218: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (predecessorsLevelNo_ != null) {
                  subBuilder = predecessorsLevelNo_.toBuilder();
                }
                predecessorsLevelNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessorsLevelNo_);
                  predecessorsLevelNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160266: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160274: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (prePredecessorsDescription_ != null) {
                  subBuilder = prePredecessorsDescription_.toBuilder();
                }
                prePredecessorsDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(prePredecessorsDescription_);
                  prePredecessorsDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (inputDateAndTimeChar_ != null) {
                  subBuilder = inputDateAndTimeChar_.toBuilder();
                }
                inputDateAndTimeChar_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inputDateAndTimeChar_);
                  inputDateAndTimeChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.class, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PRECISE_ABS_UNIT_GROSS_SURCHARGE_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.decimalValue preciseAbsUnitGrossSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public boolean hasPreciseAbsUnitGrossSurcharge() {
        return preciseAbsUnitGrossSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseAbsUnitGrossSurcharge() {
        return preciseAbsUnitGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitGrossSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitGrossSurchargeOrBuilder() {
        return getPreciseAbsUnitGrossSurcharge();
      }

      public static final int PRICE_NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue priceNodeCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      public boolean hasPriceNodeCharacteristicId() {
        return priceNodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId() {
        return priceNodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
       *
       * <pre>
       * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder() {
        return getPriceNodeCharacteristicId();
      }

      public static final int UNIT_GROSS_PRICE_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.decimalValue unitGrossPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public boolean hasUnitGrossPrice() {
        return unitGrossPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getUnitGrossPrice() {
        return unitGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitGrossPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getUnitGrossPriceOrBuilder() {
        return getUnitGrossPrice();
      }

      public static final int ABSOLUTE_TOTAL_NET_SURCHARGE_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.decimalValue absoluteTotalNetSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public boolean hasAbsoluteTotalNetSurcharge() {
        return absoluteTotalNetSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getAbsoluteTotalNetSurcharge() {
        return absoluteTotalNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalNetSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalNetSurchargeOrBuilder() {
        return getAbsoluteTotalNetSurcharge();
      }

      public static final int ABSOLUTE_TOTAL_GROSS_SURCHARGE_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.decimalValue absoluteTotalGrossSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public boolean hasAbsoluteTotalGrossSurcharge() {
        return absoluteTotalGrossSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getAbsoluteTotalGrossSurcharge() {
        return absoluteTotalGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalGrossSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalGrossSurchargeOrBuilder() {
        return getAbsoluteTotalGrossSurcharge();
      }

      public static final int REMOVED_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue removed_;
      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      public boolean hasRemoved() {
        return removed_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getRemoved() {
        return removed_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : removed_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
       *
       * <pre>
       * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRemovedOrBuilder() {
        return getRemoved();
      }

      public static final int CURRENCY_SYMBOL_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue currencySymbol_;
      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      public boolean hasCurrencySymbol() {
        return currencySymbol_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCurrencySymbol() {
        return currencySymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : currencySymbol_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
       *
       * <pre>
       * Symbol der Währung "CurrencyID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCurrencySymbolOrBuilder() {
        return getCurrencySymbol();
      }

      public static final int PRECISE_UNIT_GROSS_PRICE_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.decimalValue preciseUnitGrossPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      public boolean hasPreciseUnitGrossPrice() {
        return preciseUnitGrossPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseUnitGrossPrice() {
        return preciseUnitGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitGrossPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitGrossPriceOrBuilder() {
        return getPreciseUnitGrossPrice();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int UNIT_NET_PRICE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.decimalValue unitNetPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public boolean hasUnitNetPrice() {
        return unitNetPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getUnitNetPrice() {
        return unitNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitNetPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getUnitNetPriceOrBuilder() {
        return getUnitNetPrice();
      }

      public static final int PRECISE_ABS_UNIT_NET_SURCHARGE_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.decimalValue preciseAbsUnitNetSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      public boolean hasPreciseAbsUnitNetSurcharge() {
        return preciseAbsUnitNetSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseAbsUnitNetSurcharge() {
        return preciseAbsUnitNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitNetSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitNetSurchargeOrBuilder() {
        return getPreciseAbsUnitNetSurcharge();
      }

      public static final int SURCHARGE_REASON_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.stringValue surchargeReason_;
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      public boolean hasSurchargeReason() {
        return surchargeReason_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getSurchargeReason() {
        return surchargeReason_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeReason_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
       *
       * <pre>
       * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSurchargeReasonOrBuilder() {
        return getSurchargeReason();
      }

      public static final int ASSOCIATED_OR_CHOSEN_TREE_NODE_ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue associatedOrChosenTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public boolean hasAssociatedOrChosenTreeNodeId() {
        return associatedOrChosenTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getAssociatedOrChosenTreeNodeId() {
        return associatedOrChosenTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : associatedOrChosenTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
       *
       * <pre>
       * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getAssociatedOrChosenTreeNodeIdOrBuilder() {
        return getAssociatedOrChosenTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
       *
       * <pre>
       * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int DELETED_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.booleanValue deleted_;
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public boolean hasDeleted() {
        return deleted_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getDeleted() {
        return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
       *
       * <pre>
       * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
        return getDeleted();
      }

      public static final int BONUS_ITEM_FOR_ITEM_SET_ID_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.integerValue bonusItemForItemSetId_;
      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      public boolean hasBonusItemForItemSetId() {
        return bonusItemForItemSetId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBonusItemForItemSetId() {
        return bonusItemForItemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : bonusItemForItemSetId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
       *
       * <pre>
       * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBonusItemForItemSetIdOrBuilder() {
        return getBonusItemForItemSetId();
      }

      public static final int RELATIVE_SURCHARGE_FIELD_NUMBER = 10017;
      private io.dstore.engine.Values.decimalValue relativeSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      public boolean hasRelativeSurcharge() {
        return relativeSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getRelativeSurcharge() {
        return relativeSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
       *
       * <pre>
       * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getRelativeSurchargeOrBuilder() {
        return getRelativeSurcharge();
      }

      public static final int SURCHARGE_GENERATED_BY_CAMP_IDS_FIELD_NUMBER = 10018;
      private io.dstore.engine.Values.stringValue surchargeGeneratedByCampIds_;
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      public boolean hasSurchargeGeneratedByCampIds() {
        return surchargeGeneratedByCampIds_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getSurchargeGeneratedByCampIds() {
        return surchargeGeneratedByCampIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeGeneratedByCampIds_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
       *
       * <pre>
       * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSurchargeGeneratedByCampIdsOrBuilder() {
        return getSurchargeGeneratedByCampIds();
      }

      public static final int PRECISE_TOTAL_GROSS_PRICE_FIELD_NUMBER = 10019;
      private io.dstore.engine.Values.decimalValue preciseTotalGrossPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      public boolean hasPreciseTotalGrossPrice() {
        return preciseTotalGrossPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseTotalGrossPrice() {
        return preciseTotalGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalGrossPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalGrossPriceOrBuilder() {
        return getPreciseTotalGrossPrice();
      }

      public static final int INPUT_DATE_AND_TIME_FIELD_NUMBER = 10020;
      private io.dstore.engine.Values.timestampValue inputDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      public boolean hasInputDateAndTime() {
        return inputDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getInputDateAndTime() {
        return inputDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
       *
       * <pre>
       * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder() {
        return getInputDateAndTime();
      }

      public static final int TAXES_MULTIPLIER_FIELD_NUMBER = 10021;
      private io.dstore.engine.Values.decimalValue taxesMultiplier_;
      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      public boolean hasTaxesMultiplier() {
        return taxesMultiplier_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTaxesMultiplier() {
        return taxesMultiplier_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : taxesMultiplier_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
       *
       * <pre>
       * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTaxesMultiplierOrBuilder() {
        return getTaxesMultiplier();
      }

      public static final int PRECISE_ABS_TOTAL_GROSS_SURCHARGE_FIELD_NUMBER = 10022;
      private io.dstore.engine.Values.decimalValue preciseAbsTotalGrossSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      public boolean hasPreciseAbsTotalGrossSurcharge() {
        return preciseAbsTotalGrossSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseAbsTotalGrossSurcharge() {
        return preciseAbsTotalGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalGrossSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalGrossSurchargeOrBuilder() {
        return getPreciseAbsTotalGrossSurcharge();
      }

      public static final int ITEM_PROPERTY_FIELD_NUMBER = 10023;
      private io.dstore.engine.Values.stringValue itemProperty_;
      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      public boolean hasItemProperty() {
        return itemProperty_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getItemProperty() {
        return itemProperty_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemProperty_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
       *
       * <pre>
       * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getItemPropertyOrBuilder() {
        return getItemProperty();
      }

      public static final int PRECISE_ABS_TOTAL_NET_SURCHARGE_FIELD_NUMBER = 10024;
      private io.dstore.engine.Values.decimalValue preciseAbsTotalNetSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      public boolean hasPreciseAbsTotalNetSurcharge() {
        return preciseAbsTotalNetSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseAbsTotalNetSurcharge() {
        return preciseAbsTotalNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalNetSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalNetSurchargeOrBuilder() {
        return getPreciseAbsTotalNetSurcharge();
      }

      public static final int TOTAL_NET_PRICE_FIELD_NUMBER = 10025;
      private io.dstore.engine.Values.decimalValue totalNetPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public boolean hasTotalNetPrice() {
        return totalNetPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalNetPrice() {
        return totalNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalNetPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
       *
       * <pre>
       * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalNetPriceOrBuilder() {
        return getTotalNetPrice();
      }

      public static final int QUANTITY_FIELD_NUMBER = 10026;
      private io.dstore.engine.Values.integerValue quantity_;
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      public boolean hasQuantity() {
        return quantity_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getQuantity() {
        return quantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
       *
       * <pre>
       * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder() {
        return getQuantity();
      }

      public static final int UNIT_SYMBOL_FIELD_NUMBER = 10027;
      private io.dstore.engine.Values.stringValue unitSymbol_;
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      public boolean hasUnitSymbol() {
        return unitSymbol_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getUnitSymbol() {
        return unitSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
        return getUnitSymbol();
      }

      public static final int QUANTITY_PER_BUNDLE_ITEM_SET_ID_LIST_FIELD_NUMBER = 10028;
      private io.dstore.engine.Values.stringValue quantityPerBundleItemSetIdList_;
      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      public boolean hasQuantityPerBundleItemSetIdList() {
        return quantityPerBundleItemSetIdList_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getQuantityPerBundleItemSetIdList() {
        return quantityPerBundleItemSetIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : quantityPerBundleItemSetIdList_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
       *
       * <pre>
       * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getQuantityPerBundleItemSetIdListOrBuilder() {
        return getQuantityPerBundleItemSetIdList();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10029;
      private io.dstore.engine.Values.decimalValue surchargeValue_;
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
       *
       * <pre>
       * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int CURRENCY_ID_FIELD_NUMBER = 10030;
      private io.dstore.engine.Values.integerValue currencyId_;
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      public boolean hasCurrencyId() {
        return currencyId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCurrencyId() {
        return currencyId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
       *
       * <pre>
       * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
        return getCurrencyId();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10031;
      private io.dstore.engine.Values.booleanValue active_;
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
       *
       * <pre>
       * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int ABSOLUTE_UNIT_NET_SURCHARGE_FIELD_NUMBER = 10032;
      private io.dstore.engine.Values.decimalValue absoluteUnitNetSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public boolean hasAbsoluteUnitNetSurcharge() {
        return absoluteUnitNetSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getAbsoluteUnitNetSurcharge() {
        return absoluteUnitNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitNetSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitNetSurchargeOrBuilder() {
        return getAbsoluteUnitNetSurcharge();
      }

      public static final int H_TREE_NODE_ID_FIELD_NUMBER = 10033;
      private io.dstore.engine.Values.integerValue hTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
       *
       * <pre>
       * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        return getHTreeNodeId();
      }

      public static final int ABSOLUTE_UNIT_GROSS_SURCHARGE_FIELD_NUMBER = 10034;
      private io.dstore.engine.Values.decimalValue absoluteUnitGrossSurcharge_;
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public boolean hasAbsoluteUnitGrossSurcharge() {
        return absoluteUnitGrossSurcharge_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getAbsoluteUnitGrossSurcharge() {
        return absoluteUnitGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitGrossSurcharge_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
       *
       * <pre>
       * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitGrossSurchargeOrBuilder() {
        return getAbsoluteUnitGrossSurcharge();
      }

      public static final int PRECISE_TOTAL_NET_PRICE_FIELD_NUMBER = 10035;
      private io.dstore.engine.Values.decimalValue preciseTotalNetPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      public boolean hasPreciseTotalNetPrice() {
        return preciseTotalNetPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseTotalNetPrice() {
        return preciseTotalNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalNetPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalNetPriceOrBuilder() {
        return getPreciseTotalNetPrice();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10036;
      private io.dstore.engine.Values.integerValue surchargeTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      public static final int PRECISE_UNIT_NET_PRICE_FIELD_NUMBER = 10037;
      private io.dstore.engine.Values.decimalValue preciseUnitNetPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      public boolean hasPreciseUnitNetPrice() {
        return preciseUnitNetPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPreciseUnitNetPrice() {
        return preciseUnitNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitNetPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
       *
       * <pre>
       * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitNetPriceOrBuilder() {
        return getPreciseUnitNetPrice();
      }

      public static final int TOTAL_GROSS_PRICE_FIELD_NUMBER = 10038;
      private io.dstore.engine.Values.decimalValue totalGrossPrice_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public boolean hasTotalGrossPrice() {
        return totalGrossPrice_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalGrossPrice() {
        return totalGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalGrossPrice_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
       *
       * <pre>
       * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalGrossPriceOrBuilder() {
        return getTotalGrossPrice();
      }

      public static final int PRE_PREDECESSORS_LEVEL_NO_FIELD_NUMBER = 20008;
      private io.dstore.engine.Values.integerValue prePredecessorsLevelNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      public boolean hasPrePredecessorsLevelNo() {
        return prePredecessorsLevelNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrePredecessorsLevelNo() {
        return prePredecessorsLevelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsLevelNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
       *
       * <pre>
       * Hierarchie des Vor-Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsLevelNoOrBuilder() {
        return getPrePredecessorsLevelNo();
      }

      public static final int PRE_PREDECESSORS_TREE_NODE_ID_FIELD_NUMBER = 20010;
      private io.dstore.engine.Values.integerValue prePredecessorsTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public boolean hasPrePredecessorsTreeNodeId() {
        return prePredecessorsTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrePredecessorsTreeNodeId() {
        return prePredecessorsTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
       *
       * <pre>
       * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsTreeNodeIdOrBuilder() {
        return getPrePredecessorsTreeNodeId();
      }

      public static final int PREDECESSORS_TREE_NODE_ID_FIELD_NUMBER = 20023;
      private io.dstore.engine.Values.integerValue predecessorsTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public boolean hasPredecessorsTreeNodeId() {
        return predecessorsTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPredecessorsTreeNodeId() {
        return predecessorsTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
       *
       * <pre>
       * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPredecessorsTreeNodeIdOrBuilder() {
        return getPredecessorsTreeNodeId();
      }

      public static final int PREDECESSORS_DESCRIPTION_FIELD_NUMBER = 20024;
      private io.dstore.engine.Values.stringValue predecessorsDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      public boolean hasPredecessorsDescription() {
        return predecessorsDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPredecessorsDescription() {
        return predecessorsDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorsDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
       *
       * <pre>
       * Bezeichnung des Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPredecessorsDescriptionOrBuilder() {
        return getPredecessorsDescription();
      }

      public static final int PREDECESSORS_LEVEL_NO_FIELD_NUMBER = 20027;
      private io.dstore.engine.Values.integerValue predecessorsLevelNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      public boolean hasPredecessorsLevelNo() {
        return predecessorsLevelNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPredecessorsLevelNo() {
        return predecessorsLevelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsLevelNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
       *
       * <pre>
       * Hierarchie des Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPredecessorsLevelNoOrBuilder() {
        return getPredecessorsLevelNo();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 20033;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
       *
       * <pre>
       * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int PRE_PREDECESSORS_DESCRIPTION_FIELD_NUMBER = 20034;
      private io.dstore.engine.Values.stringValue prePredecessorsDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      public boolean hasPrePredecessorsDescription() {
        return prePredecessorsDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getPrePredecessorsDescription() {
        return prePredecessorsDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorsDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
       *
       * <pre>
       * Bezeichnung des Vor-Vorgängers
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorsDescriptionOrBuilder() {
        return getPrePredecessorsDescription();
      }

      public static final int INPUT_DATE_AND_TIME_CHAR_FIELD_NUMBER = 30007;
      private io.dstore.engine.Values.stringValue inputDateAndTimeChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      public boolean hasInputDateAndTimeChar() {
        return inputDateAndTimeChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getInputDateAndTimeChar() {
        return inputDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
       *
       * <pre>
       * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
        return getInputDateAndTimeChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (preciseAbsUnitGrossSurcharge_ != null) {
          output.writeMessage(10001, getPreciseAbsUnitGrossSurcharge());
        }
        if (priceNodeCharacteristicId_ != null) {
          output.writeMessage(10002, getPriceNodeCharacteristicId());
        }
        if (unitGrossPrice_ != null) {
          output.writeMessage(10003, getUnitGrossPrice());
        }
        if (absoluteTotalNetSurcharge_ != null) {
          output.writeMessage(10004, getAbsoluteTotalNetSurcharge());
        }
        if (absoluteTotalGrossSurcharge_ != null) {
          output.writeMessage(10005, getAbsoluteTotalGrossSurcharge());
        }
        if (removed_ != null) {
          output.writeMessage(10006, getRemoved());
        }
        if (currencySymbol_ != null) {
          output.writeMessage(10007, getCurrencySymbol());
        }
        if (preciseUnitGrossPrice_ != null) {
          output.writeMessage(10008, getPreciseUnitGrossPrice());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10009, getNodeDescription());
        }
        if (unitNetPrice_ != null) {
          output.writeMessage(10010, getUnitNetPrice());
        }
        if (preciseAbsUnitNetSurcharge_ != null) {
          output.writeMessage(10011, getPreciseAbsUnitNetSurcharge());
        }
        if (surchargeReason_ != null) {
          output.writeMessage(10012, getSurchargeReason());
        }
        if (associatedOrChosenTreeNodeId_ != null) {
          output.writeMessage(10013, getAssociatedOrChosenTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10014, getNodeId());
        }
        if (deleted_ != null) {
          output.writeMessage(10015, getDeleted());
        }
        if (bonusItemForItemSetId_ != null) {
          output.writeMessage(10016, getBonusItemForItemSetId());
        }
        if (relativeSurcharge_ != null) {
          output.writeMessage(10017, getRelativeSurcharge());
        }
        if (surchargeGeneratedByCampIds_ != null) {
          output.writeMessage(10018, getSurchargeGeneratedByCampIds());
        }
        if (preciseTotalGrossPrice_ != null) {
          output.writeMessage(10019, getPreciseTotalGrossPrice());
        }
        if (inputDateAndTime_ != null) {
          output.writeMessage(10020, getInputDateAndTime());
        }
        if (taxesMultiplier_ != null) {
          output.writeMessage(10021, getTaxesMultiplier());
        }
        if (preciseAbsTotalGrossSurcharge_ != null) {
          output.writeMessage(10022, getPreciseAbsTotalGrossSurcharge());
        }
        if (itemProperty_ != null) {
          output.writeMessage(10023, getItemProperty());
        }
        if (preciseAbsTotalNetSurcharge_ != null) {
          output.writeMessage(10024, getPreciseAbsTotalNetSurcharge());
        }
        if (totalNetPrice_ != null) {
          output.writeMessage(10025, getTotalNetPrice());
        }
        if (quantity_ != null) {
          output.writeMessage(10026, getQuantity());
        }
        if (unitSymbol_ != null) {
          output.writeMessage(10027, getUnitSymbol());
        }
        if (quantityPerBundleItemSetIdList_ != null) {
          output.writeMessage(10028, getQuantityPerBundleItemSetIdList());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10029, getSurchargeValue());
        }
        if (currencyId_ != null) {
          output.writeMessage(10030, getCurrencyId());
        }
        if (active_ != null) {
          output.writeMessage(10031, getActive());
        }
        if (absoluteUnitNetSurcharge_ != null) {
          output.writeMessage(10032, getAbsoluteUnitNetSurcharge());
        }
        if (hTreeNodeId_ != null) {
          output.writeMessage(10033, getHTreeNodeId());
        }
        if (absoluteUnitGrossSurcharge_ != null) {
          output.writeMessage(10034, getAbsoluteUnitGrossSurcharge());
        }
        if (preciseTotalNetPrice_ != null) {
          output.writeMessage(10035, getPreciseTotalNetPrice());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10036, getSurchargeTypeId());
        }
        if (preciseUnitNetPrice_ != null) {
          output.writeMessage(10037, getPreciseUnitNetPrice());
        }
        if (totalGrossPrice_ != null) {
          output.writeMessage(10038, getTotalGrossPrice());
        }
        if (prePredecessorsLevelNo_ != null) {
          output.writeMessage(20008, getPrePredecessorsLevelNo());
        }
        if (prePredecessorsTreeNodeId_ != null) {
          output.writeMessage(20010, getPrePredecessorsTreeNodeId());
        }
        if (predecessorsTreeNodeId_ != null) {
          output.writeMessage(20023, getPredecessorsTreeNodeId());
        }
        if (predecessorsDescription_ != null) {
          output.writeMessage(20024, getPredecessorsDescription());
        }
        if (predecessorsLevelNo_ != null) {
          output.writeMessage(20027, getPredecessorsLevelNo());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(20033, getTreeNodeId());
        }
        if (prePredecessorsDescription_ != null) {
          output.writeMessage(20034, getPrePredecessorsDescription());
        }
        if (inputDateAndTimeChar_ != null) {
          output.writeMessage(30007, getInputDateAndTimeChar());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (preciseAbsUnitGrossSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getPreciseAbsUnitGrossSurcharge());
        }
        if (priceNodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPriceNodeCharacteristicId());
        }
        if (unitGrossPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getUnitGrossPrice());
        }
        if (absoluteTotalNetSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getAbsoluteTotalNetSurcharge());
        }
        if (absoluteTotalGrossSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getAbsoluteTotalGrossSurcharge());
        }
        if (removed_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getRemoved());
        }
        if (currencySymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getCurrencySymbol());
        }
        if (preciseUnitGrossPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getPreciseUnitGrossPrice());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getNodeDescription());
        }
        if (unitNetPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getUnitNetPrice());
        }
        if (preciseAbsUnitNetSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getPreciseAbsUnitNetSurcharge());
        }
        if (surchargeReason_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getSurchargeReason());
        }
        if (associatedOrChosenTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getAssociatedOrChosenTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getNodeId());
        }
        if (deleted_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getDeleted());
        }
        if (bonusItemForItemSetId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getBonusItemForItemSetId());
        }
        if (relativeSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getRelativeSurcharge());
        }
        if (surchargeGeneratedByCampIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getSurchargeGeneratedByCampIds());
        }
        if (preciseTotalGrossPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10019, getPreciseTotalGrossPrice());
        }
        if (inputDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10020, getInputDateAndTime());
        }
        if (taxesMultiplier_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10021, getTaxesMultiplier());
        }
        if (preciseAbsTotalGrossSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10022, getPreciseAbsTotalGrossSurcharge());
        }
        if (itemProperty_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10023, getItemProperty());
        }
        if (preciseAbsTotalNetSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10024, getPreciseAbsTotalNetSurcharge());
        }
        if (totalNetPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10025, getTotalNetPrice());
        }
        if (quantity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10026, getQuantity());
        }
        if (unitSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10027, getUnitSymbol());
        }
        if (quantityPerBundleItemSetIdList_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10028, getQuantityPerBundleItemSetIdList());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10029, getSurchargeValue());
        }
        if (currencyId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10030, getCurrencyId());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10031, getActive());
        }
        if (absoluteUnitNetSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10032, getAbsoluteUnitNetSurcharge());
        }
        if (hTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10033, getHTreeNodeId());
        }
        if (absoluteUnitGrossSurcharge_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10034, getAbsoluteUnitGrossSurcharge());
        }
        if (preciseTotalNetPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10035, getPreciseTotalNetPrice());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10036, getSurchargeTypeId());
        }
        if (preciseUnitNetPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10037, getPreciseUnitNetPrice());
        }
        if (totalGrossPrice_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10038, getTotalGrossPrice());
        }
        if (prePredecessorsLevelNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20008, getPrePredecessorsLevelNo());
        }
        if (prePredecessorsTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20010, getPrePredecessorsTreeNodeId());
        }
        if (predecessorsTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20023, getPredecessorsTreeNodeId());
        }
        if (predecessorsDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20024, getPredecessorsDescription());
        }
        if (predecessorsLevelNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20027, getPredecessorsLevelNo());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20033, getTreeNodeId());
        }
        if (prePredecessorsDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20034, getPrePredecessorsDescription());
        }
        if (inputDateAndTimeChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30007, getInputDateAndTimeChar());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmGetTrolleyPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetTrolley_Pu.Response.Row)
          io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.class, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            preciseAbsUnitGrossSurcharge_ = null;
          } else {
            preciseAbsUnitGrossSurcharge_ = null;
            preciseAbsUnitGrossSurchargeBuilder_ = null;
          }
          if (priceNodeCharacteristicIdBuilder_ == null) {
            priceNodeCharacteristicId_ = null;
          } else {
            priceNodeCharacteristicId_ = null;
            priceNodeCharacteristicIdBuilder_ = null;
          }
          if (unitGrossPriceBuilder_ == null) {
            unitGrossPrice_ = null;
          } else {
            unitGrossPrice_ = null;
            unitGrossPriceBuilder_ = null;
          }
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            absoluteTotalNetSurcharge_ = null;
          } else {
            absoluteTotalNetSurcharge_ = null;
            absoluteTotalNetSurchargeBuilder_ = null;
          }
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            absoluteTotalGrossSurcharge_ = null;
          } else {
            absoluteTotalGrossSurcharge_ = null;
            absoluteTotalGrossSurchargeBuilder_ = null;
          }
          if (removedBuilder_ == null) {
            removed_ = null;
          } else {
            removed_ = null;
            removedBuilder_ = null;
          }
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = null;
          } else {
            currencySymbol_ = null;
            currencySymbolBuilder_ = null;
          }
          if (preciseUnitGrossPriceBuilder_ == null) {
            preciseUnitGrossPrice_ = null;
          } else {
            preciseUnitGrossPrice_ = null;
            preciseUnitGrossPriceBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (unitNetPriceBuilder_ == null) {
            unitNetPrice_ = null;
          } else {
            unitNetPrice_ = null;
            unitNetPriceBuilder_ = null;
          }
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            preciseAbsUnitNetSurcharge_ = null;
          } else {
            preciseAbsUnitNetSurcharge_ = null;
            preciseAbsUnitNetSurchargeBuilder_ = null;
          }
          if (surchargeReasonBuilder_ == null) {
            surchargeReason_ = null;
          } else {
            surchargeReason_ = null;
            surchargeReasonBuilder_ = null;
          }
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            associatedOrChosenTreeNodeId_ = null;
          } else {
            associatedOrChosenTreeNodeId_ = null;
            associatedOrChosenTreeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (deletedBuilder_ == null) {
            deleted_ = null;
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }
          if (bonusItemForItemSetIdBuilder_ == null) {
            bonusItemForItemSetId_ = null;
          } else {
            bonusItemForItemSetId_ = null;
            bonusItemForItemSetIdBuilder_ = null;
          }
          if (relativeSurchargeBuilder_ == null) {
            relativeSurcharge_ = null;
          } else {
            relativeSurcharge_ = null;
            relativeSurchargeBuilder_ = null;
          }
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            surchargeGeneratedByCampIds_ = null;
          } else {
            surchargeGeneratedByCampIds_ = null;
            surchargeGeneratedByCampIdsBuilder_ = null;
          }
          if (preciseTotalGrossPriceBuilder_ == null) {
            preciseTotalGrossPrice_ = null;
          } else {
            preciseTotalGrossPrice_ = null;
            preciseTotalGrossPriceBuilder_ = null;
          }
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }
          if (taxesMultiplierBuilder_ == null) {
            taxesMultiplier_ = null;
          } else {
            taxesMultiplier_ = null;
            taxesMultiplierBuilder_ = null;
          }
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            preciseAbsTotalGrossSurcharge_ = null;
          } else {
            preciseAbsTotalGrossSurcharge_ = null;
            preciseAbsTotalGrossSurchargeBuilder_ = null;
          }
          if (itemPropertyBuilder_ == null) {
            itemProperty_ = null;
          } else {
            itemProperty_ = null;
            itemPropertyBuilder_ = null;
          }
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            preciseAbsTotalNetSurcharge_ = null;
          } else {
            preciseAbsTotalNetSurcharge_ = null;
            preciseAbsTotalNetSurchargeBuilder_ = null;
          }
          if (totalNetPriceBuilder_ == null) {
            totalNetPrice_ = null;
          } else {
            totalNetPrice_ = null;
            totalNetPriceBuilder_ = null;
          }
          if (quantityBuilder_ == null) {
            quantity_ = null;
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            quantityPerBundleItemSetIdList_ = null;
          } else {
            quantityPerBundleItemSetIdList_ = null;
            quantityPerBundleItemSetIdListBuilder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            absoluteUnitNetSurcharge_ = null;
          } else {
            absoluteUnitNetSurcharge_ = null;
            absoluteUnitNetSurchargeBuilder_ = null;
          }
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            absoluteUnitGrossSurcharge_ = null;
          } else {
            absoluteUnitGrossSurcharge_ = null;
            absoluteUnitGrossSurchargeBuilder_ = null;
          }
          if (preciseTotalNetPriceBuilder_ == null) {
            preciseTotalNetPrice_ = null;
          } else {
            preciseTotalNetPrice_ = null;
            preciseTotalNetPriceBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          if (preciseUnitNetPriceBuilder_ == null) {
            preciseUnitNetPrice_ = null;
          } else {
            preciseUnitNetPrice_ = null;
            preciseUnitNetPriceBuilder_ = null;
          }
          if (totalGrossPriceBuilder_ == null) {
            totalGrossPrice_ = null;
          } else {
            totalGrossPrice_ = null;
            totalGrossPriceBuilder_ = null;
          }
          if (prePredecessorsLevelNoBuilder_ == null) {
            prePredecessorsLevelNo_ = null;
          } else {
            prePredecessorsLevelNo_ = null;
            prePredecessorsLevelNoBuilder_ = null;
          }
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            prePredecessorsTreeNodeId_ = null;
          } else {
            prePredecessorsTreeNodeId_ = null;
            prePredecessorsTreeNodeIdBuilder_ = null;
          }
          if (predecessorsTreeNodeIdBuilder_ == null) {
            predecessorsTreeNodeId_ = null;
          } else {
            predecessorsTreeNodeId_ = null;
            predecessorsTreeNodeIdBuilder_ = null;
          }
          if (predecessorsDescriptionBuilder_ == null) {
            predecessorsDescription_ = null;
          } else {
            predecessorsDescription_ = null;
            predecessorsDescriptionBuilder_ = null;
          }
          if (predecessorsLevelNoBuilder_ == null) {
            predecessorsLevelNo_ = null;
          } else {
            predecessorsLevelNo_ = null;
            predecessorsLevelNoBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (prePredecessorsDescriptionBuilder_ == null) {
            prePredecessorsDescription_ = null;
          } else {
            prePredecessorsDescription_ = null;
            prePredecessorsDescriptionBuilder_ = null;
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row build() {
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row buildPartial() {
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row result = new io.dstore.engine.procs.OmGetTrolleyPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            result.preciseAbsUnitGrossSurcharge_ = preciseAbsUnitGrossSurcharge_;
          } else {
            result.preciseAbsUnitGrossSurcharge_ = preciseAbsUnitGrossSurchargeBuilder_.build();
          }
          if (priceNodeCharacteristicIdBuilder_ == null) {
            result.priceNodeCharacteristicId_ = priceNodeCharacteristicId_;
          } else {
            result.priceNodeCharacteristicId_ = priceNodeCharacteristicIdBuilder_.build();
          }
          if (unitGrossPriceBuilder_ == null) {
            result.unitGrossPrice_ = unitGrossPrice_;
          } else {
            result.unitGrossPrice_ = unitGrossPriceBuilder_.build();
          }
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            result.absoluteTotalNetSurcharge_ = absoluteTotalNetSurcharge_;
          } else {
            result.absoluteTotalNetSurcharge_ = absoluteTotalNetSurchargeBuilder_.build();
          }
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            result.absoluteTotalGrossSurcharge_ = absoluteTotalGrossSurcharge_;
          } else {
            result.absoluteTotalGrossSurcharge_ = absoluteTotalGrossSurchargeBuilder_.build();
          }
          if (removedBuilder_ == null) {
            result.removed_ = removed_;
          } else {
            result.removed_ = removedBuilder_.build();
          }
          if (currencySymbolBuilder_ == null) {
            result.currencySymbol_ = currencySymbol_;
          } else {
            result.currencySymbol_ = currencySymbolBuilder_.build();
          }
          if (preciseUnitGrossPriceBuilder_ == null) {
            result.preciseUnitGrossPrice_ = preciseUnitGrossPrice_;
          } else {
            result.preciseUnitGrossPrice_ = preciseUnitGrossPriceBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (unitNetPriceBuilder_ == null) {
            result.unitNetPrice_ = unitNetPrice_;
          } else {
            result.unitNetPrice_ = unitNetPriceBuilder_.build();
          }
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            result.preciseAbsUnitNetSurcharge_ = preciseAbsUnitNetSurcharge_;
          } else {
            result.preciseAbsUnitNetSurcharge_ = preciseAbsUnitNetSurchargeBuilder_.build();
          }
          if (surchargeReasonBuilder_ == null) {
            result.surchargeReason_ = surchargeReason_;
          } else {
            result.surchargeReason_ = surchargeReasonBuilder_.build();
          }
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            result.associatedOrChosenTreeNodeId_ = associatedOrChosenTreeNodeId_;
          } else {
            result.associatedOrChosenTreeNodeId_ = associatedOrChosenTreeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (deletedBuilder_ == null) {
            result.deleted_ = deleted_;
          } else {
            result.deleted_ = deletedBuilder_.build();
          }
          if (bonusItemForItemSetIdBuilder_ == null) {
            result.bonusItemForItemSetId_ = bonusItemForItemSetId_;
          } else {
            result.bonusItemForItemSetId_ = bonusItemForItemSetIdBuilder_.build();
          }
          if (relativeSurchargeBuilder_ == null) {
            result.relativeSurcharge_ = relativeSurcharge_;
          } else {
            result.relativeSurcharge_ = relativeSurchargeBuilder_.build();
          }
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            result.surchargeGeneratedByCampIds_ = surchargeGeneratedByCampIds_;
          } else {
            result.surchargeGeneratedByCampIds_ = surchargeGeneratedByCampIdsBuilder_.build();
          }
          if (preciseTotalGrossPriceBuilder_ == null) {
            result.preciseTotalGrossPrice_ = preciseTotalGrossPrice_;
          } else {
            result.preciseTotalGrossPrice_ = preciseTotalGrossPriceBuilder_.build();
          }
          if (inputDateAndTimeBuilder_ == null) {
            result.inputDateAndTime_ = inputDateAndTime_;
          } else {
            result.inputDateAndTime_ = inputDateAndTimeBuilder_.build();
          }
          if (taxesMultiplierBuilder_ == null) {
            result.taxesMultiplier_ = taxesMultiplier_;
          } else {
            result.taxesMultiplier_ = taxesMultiplierBuilder_.build();
          }
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            result.preciseAbsTotalGrossSurcharge_ = preciseAbsTotalGrossSurcharge_;
          } else {
            result.preciseAbsTotalGrossSurcharge_ = preciseAbsTotalGrossSurchargeBuilder_.build();
          }
          if (itemPropertyBuilder_ == null) {
            result.itemProperty_ = itemProperty_;
          } else {
            result.itemProperty_ = itemPropertyBuilder_.build();
          }
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            result.preciseAbsTotalNetSurcharge_ = preciseAbsTotalNetSurcharge_;
          } else {
            result.preciseAbsTotalNetSurcharge_ = preciseAbsTotalNetSurchargeBuilder_.build();
          }
          if (totalNetPriceBuilder_ == null) {
            result.totalNetPrice_ = totalNetPrice_;
          } else {
            result.totalNetPrice_ = totalNetPriceBuilder_.build();
          }
          if (quantityBuilder_ == null) {
            result.quantity_ = quantity_;
          } else {
            result.quantity_ = quantityBuilder_.build();
          }
          if (unitSymbolBuilder_ == null) {
            result.unitSymbol_ = unitSymbol_;
          } else {
            result.unitSymbol_ = unitSymbolBuilder_.build();
          }
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            result.quantityPerBundleItemSetIdList_ = quantityPerBundleItemSetIdList_;
          } else {
            result.quantityPerBundleItemSetIdList_ = quantityPerBundleItemSetIdListBuilder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (currencyIdBuilder_ == null) {
            result.currencyId_ = currencyId_;
          } else {
            result.currencyId_ = currencyIdBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            result.absoluteUnitNetSurcharge_ = absoluteUnitNetSurcharge_;
          } else {
            result.absoluteUnitNetSurcharge_ = absoluteUnitNetSurchargeBuilder_.build();
          }
          if (hTreeNodeIdBuilder_ == null) {
            result.hTreeNodeId_ = hTreeNodeId_;
          } else {
            result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
          }
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            result.absoluteUnitGrossSurcharge_ = absoluteUnitGrossSurcharge_;
          } else {
            result.absoluteUnitGrossSurcharge_ = absoluteUnitGrossSurchargeBuilder_.build();
          }
          if (preciseTotalNetPriceBuilder_ == null) {
            result.preciseTotalNetPrice_ = preciseTotalNetPrice_;
          } else {
            result.preciseTotalNetPrice_ = preciseTotalNetPriceBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          if (preciseUnitNetPriceBuilder_ == null) {
            result.preciseUnitNetPrice_ = preciseUnitNetPrice_;
          } else {
            result.preciseUnitNetPrice_ = preciseUnitNetPriceBuilder_.build();
          }
          if (totalGrossPriceBuilder_ == null) {
            result.totalGrossPrice_ = totalGrossPrice_;
          } else {
            result.totalGrossPrice_ = totalGrossPriceBuilder_.build();
          }
          if (prePredecessorsLevelNoBuilder_ == null) {
            result.prePredecessorsLevelNo_ = prePredecessorsLevelNo_;
          } else {
            result.prePredecessorsLevelNo_ = prePredecessorsLevelNoBuilder_.build();
          }
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            result.prePredecessorsTreeNodeId_ = prePredecessorsTreeNodeId_;
          } else {
            result.prePredecessorsTreeNodeId_ = prePredecessorsTreeNodeIdBuilder_.build();
          }
          if (predecessorsTreeNodeIdBuilder_ == null) {
            result.predecessorsTreeNodeId_ = predecessorsTreeNodeId_;
          } else {
            result.predecessorsTreeNodeId_ = predecessorsTreeNodeIdBuilder_.build();
          }
          if (predecessorsDescriptionBuilder_ == null) {
            result.predecessorsDescription_ = predecessorsDescription_;
          } else {
            result.predecessorsDescription_ = predecessorsDescriptionBuilder_.build();
          }
          if (predecessorsLevelNoBuilder_ == null) {
            result.predecessorsLevelNo_ = predecessorsLevelNo_;
          } else {
            result.predecessorsLevelNo_ = predecessorsLevelNoBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (prePredecessorsDescriptionBuilder_ == null) {
            result.prePredecessorsDescription_ = prePredecessorsDescription_;
          } else {
            result.prePredecessorsDescription_ = prePredecessorsDescriptionBuilder_.build();
          }
          if (inputDateAndTimeCharBuilder_ == null) {
            result.inputDateAndTimeChar_ = inputDateAndTimeChar_;
          } else {
            result.inputDateAndTimeChar_ = inputDateAndTimeCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmGetTrolleyPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmGetTrolleyPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmGetTrolleyPu.Response.Row other) {
          if (other == io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasPreciseAbsUnitGrossSurcharge()) {
            mergePreciseAbsUnitGrossSurcharge(other.getPreciseAbsUnitGrossSurcharge());
          }
          if (other.hasPriceNodeCharacteristicId()) {
            mergePriceNodeCharacteristicId(other.getPriceNodeCharacteristicId());
          }
          if (other.hasUnitGrossPrice()) {
            mergeUnitGrossPrice(other.getUnitGrossPrice());
          }
          if (other.hasAbsoluteTotalNetSurcharge()) {
            mergeAbsoluteTotalNetSurcharge(other.getAbsoluteTotalNetSurcharge());
          }
          if (other.hasAbsoluteTotalGrossSurcharge()) {
            mergeAbsoluteTotalGrossSurcharge(other.getAbsoluteTotalGrossSurcharge());
          }
          if (other.hasRemoved()) {
            mergeRemoved(other.getRemoved());
          }
          if (other.hasCurrencySymbol()) {
            mergeCurrencySymbol(other.getCurrencySymbol());
          }
          if (other.hasPreciseUnitGrossPrice()) {
            mergePreciseUnitGrossPrice(other.getPreciseUnitGrossPrice());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasUnitNetPrice()) {
            mergeUnitNetPrice(other.getUnitNetPrice());
          }
          if (other.hasPreciseAbsUnitNetSurcharge()) {
            mergePreciseAbsUnitNetSurcharge(other.getPreciseAbsUnitNetSurcharge());
          }
          if (other.hasSurchargeReason()) {
            mergeSurchargeReason(other.getSurchargeReason());
          }
          if (other.hasAssociatedOrChosenTreeNodeId()) {
            mergeAssociatedOrChosenTreeNodeId(other.getAssociatedOrChosenTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasDeleted()) {
            mergeDeleted(other.getDeleted());
          }
          if (other.hasBonusItemForItemSetId()) {
            mergeBonusItemForItemSetId(other.getBonusItemForItemSetId());
          }
          if (other.hasRelativeSurcharge()) {
            mergeRelativeSurcharge(other.getRelativeSurcharge());
          }
          if (other.hasSurchargeGeneratedByCampIds()) {
            mergeSurchargeGeneratedByCampIds(other.getSurchargeGeneratedByCampIds());
          }
          if (other.hasPreciseTotalGrossPrice()) {
            mergePreciseTotalGrossPrice(other.getPreciseTotalGrossPrice());
          }
          if (other.hasInputDateAndTime()) {
            mergeInputDateAndTime(other.getInputDateAndTime());
          }
          if (other.hasTaxesMultiplier()) {
            mergeTaxesMultiplier(other.getTaxesMultiplier());
          }
          if (other.hasPreciseAbsTotalGrossSurcharge()) {
            mergePreciseAbsTotalGrossSurcharge(other.getPreciseAbsTotalGrossSurcharge());
          }
          if (other.hasItemProperty()) {
            mergeItemProperty(other.getItemProperty());
          }
          if (other.hasPreciseAbsTotalNetSurcharge()) {
            mergePreciseAbsTotalNetSurcharge(other.getPreciseAbsTotalNetSurcharge());
          }
          if (other.hasTotalNetPrice()) {
            mergeTotalNetPrice(other.getTotalNetPrice());
          }
          if (other.hasQuantity()) {
            mergeQuantity(other.getQuantity());
          }
          if (other.hasUnitSymbol()) {
            mergeUnitSymbol(other.getUnitSymbol());
          }
          if (other.hasQuantityPerBundleItemSetIdList()) {
            mergeQuantityPerBundleItemSetIdList(other.getQuantityPerBundleItemSetIdList());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasCurrencyId()) {
            mergeCurrencyId(other.getCurrencyId());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasAbsoluteUnitNetSurcharge()) {
            mergeAbsoluteUnitNetSurcharge(other.getAbsoluteUnitNetSurcharge());
          }
          if (other.hasHTreeNodeId()) {
            mergeHTreeNodeId(other.getHTreeNodeId());
          }
          if (other.hasAbsoluteUnitGrossSurcharge()) {
            mergeAbsoluteUnitGrossSurcharge(other.getAbsoluteUnitGrossSurcharge());
          }
          if (other.hasPreciseTotalNetPrice()) {
            mergePreciseTotalNetPrice(other.getPreciseTotalNetPrice());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          if (other.hasPreciseUnitNetPrice()) {
            mergePreciseUnitNetPrice(other.getPreciseUnitNetPrice());
          }
          if (other.hasTotalGrossPrice()) {
            mergeTotalGrossPrice(other.getTotalGrossPrice());
          }
          if (other.hasPrePredecessorsLevelNo()) {
            mergePrePredecessorsLevelNo(other.getPrePredecessorsLevelNo());
          }
          if (other.hasPrePredecessorsTreeNodeId()) {
            mergePrePredecessorsTreeNodeId(other.getPrePredecessorsTreeNodeId());
          }
          if (other.hasPredecessorsTreeNodeId()) {
            mergePredecessorsTreeNodeId(other.getPredecessorsTreeNodeId());
          }
          if (other.hasPredecessorsDescription()) {
            mergePredecessorsDescription(other.getPredecessorsDescription());
          }
          if (other.hasPredecessorsLevelNo()) {
            mergePredecessorsLevelNo(other.getPredecessorsLevelNo());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasPrePredecessorsDescription()) {
            mergePrePredecessorsDescription(other.getPrePredecessorsDescription());
          }
          if (other.hasInputDateAndTimeChar()) {
            mergeInputDateAndTimeChar(other.getInputDateAndTimeChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmGetTrolleyPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.decimalValue preciseAbsUnitGrossSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseAbsUnitGrossSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public boolean hasPreciseAbsUnitGrossSurcharge() {
          return preciseAbsUnitGrossSurchargeBuilder_ != null || preciseAbsUnitGrossSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseAbsUnitGrossSurcharge() {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            return preciseAbsUnitGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitGrossSurcharge_;
          } else {
            return preciseAbsUnitGrossSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsUnitGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseAbsUnitGrossSurcharge_ = value;
            onChanged();
          } else {
            preciseAbsUnitGrossSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsUnitGrossSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            preciseAbsUnitGrossSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            preciseAbsUnitGrossSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder mergePreciseAbsUnitGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            if (preciseAbsUnitGrossSurcharge_ != null) {
              preciseAbsUnitGrossSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseAbsUnitGrossSurcharge_).mergeFrom(value).buildPartial();
            } else {
              preciseAbsUnitGrossSurcharge_ = value;
            }
            onChanged();
          } else {
            preciseAbsUnitGrossSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder clearPreciseAbsUnitGrossSurcharge() {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            preciseAbsUnitGrossSurcharge_ = null;
            onChanged();
          } else {
            preciseAbsUnitGrossSurcharge_ = null;
            preciseAbsUnitGrossSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseAbsUnitGrossSurchargeBuilder() {
          
          onChanged();
          return getPreciseAbsUnitGrossSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitGrossSurchargeOrBuilder() {
          if (preciseAbsUnitGrossSurchargeBuilder_ != null) {
            return preciseAbsUnitGrossSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return preciseAbsUnitGrossSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitGrossSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_gross_surcharge = 10001;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseAbsUnitGrossSurchargeFieldBuilder() {
          if (preciseAbsUnitGrossSurchargeBuilder_ == null) {
            preciseAbsUnitGrossSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseAbsUnitGrossSurcharge(),
                    getParentForChildren(),
                    isClean());
            preciseAbsUnitGrossSurcharge_ = null;
          }
          return preciseAbsUnitGrossSurchargeBuilder_;
        }

        private io.dstore.engine.Values.integerValue priceNodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> priceNodeCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public boolean hasPriceNodeCharacteristicId() {
          return priceNodeCharacteristicIdBuilder_ != null || priceNodeCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPriceNodeCharacteristicId() {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            return priceNodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
          } else {
            return priceNodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public Builder setPriceNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            priceNodeCharacteristicId_ = value;
            onChanged();
          } else {
            priceNodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public Builder setPriceNodeCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            priceNodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            priceNodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public Builder mergePriceNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            if (priceNodeCharacteristicId_ != null) {
              priceNodeCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(priceNodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              priceNodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            priceNodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public Builder clearPriceNodeCharacteristicId() {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            priceNodeCharacteristicId_ = null;
            onChanged();
          } else {
            priceNodeCharacteristicId_ = null;
            priceNodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPriceNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getPriceNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPriceNodeCharacteristicIdOrBuilder() {
          if (priceNodeCharacteristicIdBuilder_ != null) {
            return priceNodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return priceNodeCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : priceNodeCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue price_node_characteristic_id = 10002;</code>
         *
         * <pre>
         * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "AssociatedTreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPriceNodeCharacteristicIdFieldBuilder() {
          if (priceNodeCharacteristicIdBuilder_ == null) {
            priceNodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPriceNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            priceNodeCharacteristicId_ = null;
          }
          return priceNodeCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue unitGrossPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> unitGrossPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public boolean hasUnitGrossPrice() {
          return unitGrossPriceBuilder_ != null || unitGrossPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getUnitGrossPrice() {
          if (unitGrossPriceBuilder_ == null) {
            return unitGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitGrossPrice_;
          } else {
            return unitGrossPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder setUnitGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (unitGrossPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitGrossPrice_ = value;
            onChanged();
          } else {
            unitGrossPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder setUnitGrossPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (unitGrossPriceBuilder_ == null) {
            unitGrossPrice_ = builderForValue.build();
            onChanged();
          } else {
            unitGrossPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder mergeUnitGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (unitGrossPriceBuilder_ == null) {
            if (unitGrossPrice_ != null) {
              unitGrossPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(unitGrossPrice_).mergeFrom(value).buildPartial();
            } else {
              unitGrossPrice_ = value;
            }
            onChanged();
          } else {
            unitGrossPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder clearUnitGrossPrice() {
          if (unitGrossPriceBuilder_ == null) {
            unitGrossPrice_ = null;
            onChanged();
          } else {
            unitGrossPrice_ = null;
            unitGrossPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getUnitGrossPriceBuilder() {
          
          onChanged();
          return getUnitGrossPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getUnitGrossPriceOrBuilder() {
          if (unitGrossPriceBuilder_ != null) {
            return unitGrossPriceBuilder_.getMessageOrBuilder();
          } else {
            return unitGrossPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitGrossPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_gross_price = 10003;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getUnitGrossPriceFieldBuilder() {
          if (unitGrossPriceBuilder_ == null) {
            unitGrossPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getUnitGrossPrice(),
                    getParentForChildren(),
                    isClean());
            unitGrossPrice_ = null;
          }
          return unitGrossPriceBuilder_;
        }

        private io.dstore.engine.Values.decimalValue absoluteTotalNetSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> absoluteTotalNetSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public boolean hasAbsoluteTotalNetSurcharge() {
          return absoluteTotalNetSurchargeBuilder_ != null || absoluteTotalNetSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getAbsoluteTotalNetSurcharge() {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            return absoluteTotalNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalNetSurcharge_;
          } else {
            return absoluteTotalNetSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteTotalNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            absoluteTotalNetSurcharge_ = value;
            onChanged();
          } else {
            absoluteTotalNetSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteTotalNetSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            absoluteTotalNetSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            absoluteTotalNetSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder mergeAbsoluteTotalNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            if (absoluteTotalNetSurcharge_ != null) {
              absoluteTotalNetSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(absoluteTotalNetSurcharge_).mergeFrom(value).buildPartial();
            } else {
              absoluteTotalNetSurcharge_ = value;
            }
            onChanged();
          } else {
            absoluteTotalNetSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder clearAbsoluteTotalNetSurcharge() {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            absoluteTotalNetSurcharge_ = null;
            onChanged();
          } else {
            absoluteTotalNetSurcharge_ = null;
            absoluteTotalNetSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getAbsoluteTotalNetSurchargeBuilder() {
          
          onChanged();
          return getAbsoluteTotalNetSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalNetSurchargeOrBuilder() {
          if (absoluteTotalNetSurchargeBuilder_ != null) {
            return absoluteTotalNetSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return absoluteTotalNetSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalNetSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_net_surcharge = 10004;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getAbsoluteTotalNetSurchargeFieldBuilder() {
          if (absoluteTotalNetSurchargeBuilder_ == null) {
            absoluteTotalNetSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getAbsoluteTotalNetSurcharge(),
                    getParentForChildren(),
                    isClean());
            absoluteTotalNetSurcharge_ = null;
          }
          return absoluteTotalNetSurchargeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue absoluteTotalGrossSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> absoluteTotalGrossSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public boolean hasAbsoluteTotalGrossSurcharge() {
          return absoluteTotalGrossSurchargeBuilder_ != null || absoluteTotalGrossSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getAbsoluteTotalGrossSurcharge() {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            return absoluteTotalGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalGrossSurcharge_;
          } else {
            return absoluteTotalGrossSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteTotalGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            absoluteTotalGrossSurcharge_ = value;
            onChanged();
          } else {
            absoluteTotalGrossSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteTotalGrossSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            absoluteTotalGrossSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            absoluteTotalGrossSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder mergeAbsoluteTotalGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            if (absoluteTotalGrossSurcharge_ != null) {
              absoluteTotalGrossSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(absoluteTotalGrossSurcharge_).mergeFrom(value).buildPartial();
            } else {
              absoluteTotalGrossSurcharge_ = value;
            }
            onChanged();
          } else {
            absoluteTotalGrossSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder clearAbsoluteTotalGrossSurcharge() {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            absoluteTotalGrossSurcharge_ = null;
            onChanged();
          } else {
            absoluteTotalGrossSurcharge_ = null;
            absoluteTotalGrossSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getAbsoluteTotalGrossSurchargeBuilder() {
          
          onChanged();
          return getAbsoluteTotalGrossSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteTotalGrossSurchargeOrBuilder() {
          if (absoluteTotalGrossSurchargeBuilder_ != null) {
            return absoluteTotalGrossSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return absoluteTotalGrossSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteTotalGrossSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_total_gross_surcharge = 10005;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getAbsoluteTotalGrossSurchargeFieldBuilder() {
          if (absoluteTotalGrossSurchargeBuilder_ == null) {
            absoluteTotalGrossSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getAbsoluteTotalGrossSurcharge(),
                    getParentForChildren(),
                    isClean());
            absoluteTotalGrossSurcharge_ = null;
          }
          return absoluteTotalGrossSurchargeBuilder_;
        }

        private io.dstore.engine.Values.integerValue removed_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> removedBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public boolean hasRemoved() {
          return removedBuilder_ != null || removed_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getRemoved() {
          if (removedBuilder_ == null) {
            return removed_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : removed_;
          } else {
            return removedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public Builder setRemoved(io.dstore.engine.Values.integerValue value) {
          if (removedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            removed_ = value;
            onChanged();
          } else {
            removedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public Builder setRemoved(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (removedBuilder_ == null) {
            removed_ = builderForValue.build();
            onChanged();
          } else {
            removedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public Builder mergeRemoved(io.dstore.engine.Values.integerValue value) {
          if (removedBuilder_ == null) {
            if (removed_ != null) {
              removed_ =
                io.dstore.engine.Values.integerValue.newBuilder(removed_).mergeFrom(value).buildPartial();
            } else {
              removed_ = value;
            }
            onChanged();
          } else {
            removedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public Builder clearRemoved() {
          if (removedBuilder_ == null) {
            removed_ = null;
            onChanged();
          } else {
            removed_ = null;
            removedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getRemovedBuilder() {
          
          onChanged();
          return getRemovedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getRemovedOrBuilder() {
          if (removedBuilder_ != null) {
            return removedBuilder_.getMessageOrBuilder();
          } else {
            return removed_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : removed_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue removed = 10006;</code>
         *
         * <pre>
         * "&lt;&gt; 0", wenn "&#64;HTreeNodeID" entfernt wurde:* 1: Allg. Grund* 2: Keine aktive "Campaign" zur "BonusItemForItemSetID"* 3: Bonus Art. erfüllt keine der Bedingungen* 4: Zu viele Bonus Art. aus einem Set* 5: Komb. von Bon-Art. unters. Sets nicht möglich
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getRemovedFieldBuilder() {
          if (removedBuilder_ == null) {
            removedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getRemoved(),
                    getParentForChildren(),
                    isClean());
            removed_ = null;
          }
          return removedBuilder_;
        }

        private io.dstore.engine.Values.stringValue currencySymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> currencySymbolBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public boolean hasCurrencySymbol() {
          return currencySymbolBuilder_ != null || currencySymbol_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCurrencySymbol() {
          if (currencySymbolBuilder_ == null) {
            return currencySymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : currencySymbol_;
          } else {
            return currencySymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public Builder setCurrencySymbol(io.dstore.engine.Values.stringValue value) {
          if (currencySymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currencySymbol_ = value;
            onChanged();
          } else {
            currencySymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public Builder setCurrencySymbol(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = builderForValue.build();
            onChanged();
          } else {
            currencySymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public Builder mergeCurrencySymbol(io.dstore.engine.Values.stringValue value) {
          if (currencySymbolBuilder_ == null) {
            if (currencySymbol_ != null) {
              currencySymbol_ =
                io.dstore.engine.Values.stringValue.newBuilder(currencySymbol_).mergeFrom(value).buildPartial();
            } else {
              currencySymbol_ = value;
            }
            onChanged();
          } else {
            currencySymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public Builder clearCurrencySymbol() {
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = null;
            onChanged();
          } else {
            currencySymbol_ = null;
            currencySymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCurrencySymbolBuilder() {
          
          onChanged();
          return getCurrencySymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCurrencySymbolOrBuilder() {
          if (currencySymbolBuilder_ != null) {
            return currencySymbolBuilder_.getMessageOrBuilder();
          } else {
            return currencySymbol_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : currencySymbol_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue currency_symbol = 10007;</code>
         *
         * <pre>
         * Symbol der Währung "CurrencyID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCurrencySymbolFieldBuilder() {
          if (currencySymbolBuilder_ == null) {
            currencySymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCurrencySymbol(),
                    getParentForChildren(),
                    isClean());
            currencySymbol_ = null;
          }
          return currencySymbolBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseUnitGrossPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseUnitGrossPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public boolean hasPreciseUnitGrossPrice() {
          return preciseUnitGrossPriceBuilder_ != null || preciseUnitGrossPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseUnitGrossPrice() {
          if (preciseUnitGrossPriceBuilder_ == null) {
            return preciseUnitGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitGrossPrice_;
          } else {
            return preciseUnitGrossPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public Builder setPreciseUnitGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseUnitGrossPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseUnitGrossPrice_ = value;
            onChanged();
          } else {
            preciseUnitGrossPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public Builder setPreciseUnitGrossPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseUnitGrossPriceBuilder_ == null) {
            preciseUnitGrossPrice_ = builderForValue.build();
            onChanged();
          } else {
            preciseUnitGrossPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public Builder mergePreciseUnitGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseUnitGrossPriceBuilder_ == null) {
            if (preciseUnitGrossPrice_ != null) {
              preciseUnitGrossPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseUnitGrossPrice_).mergeFrom(value).buildPartial();
            } else {
              preciseUnitGrossPrice_ = value;
            }
            onChanged();
          } else {
            preciseUnitGrossPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public Builder clearPreciseUnitGrossPrice() {
          if (preciseUnitGrossPriceBuilder_ == null) {
            preciseUnitGrossPrice_ = null;
            onChanged();
          } else {
            preciseUnitGrossPrice_ = null;
            preciseUnitGrossPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseUnitGrossPriceBuilder() {
          
          onChanged();
          return getPreciseUnitGrossPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitGrossPriceOrBuilder() {
          if (preciseUnitGrossPriceBuilder_ != null) {
            return preciseUnitGrossPriceBuilder_.getMessageOrBuilder();
          } else {
            return preciseUnitGrossPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitGrossPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_gross_price = 10008;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseUnitGrossPriceFieldBuilder() {
          if (preciseUnitGrossPriceBuilder_ == null) {
            preciseUnitGrossPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseUnitGrossPrice(),
                    getParentForChildren(),
                    isClean());
            preciseUnitGrossPrice_ = null;
          }
          return preciseUnitGrossPriceBuilder_;
        }

        private io.dstore.engine.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10009;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID" - falls "&#64;LookForProductDescriptions = 1" übergeben wurde, hier auch evtl. die Eigenschaft zum Merkmal "Produktbezeichnung". Immer '', wenn "&#64;ShowDescriptions = 0" !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.decimalValue unitNetPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> unitNetPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public boolean hasUnitNetPrice() {
          return unitNetPriceBuilder_ != null || unitNetPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getUnitNetPrice() {
          if (unitNetPriceBuilder_ == null) {
            return unitNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitNetPrice_;
          } else {
            return unitNetPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder setUnitNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (unitNetPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitNetPrice_ = value;
            onChanged();
          } else {
            unitNetPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder setUnitNetPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (unitNetPriceBuilder_ == null) {
            unitNetPrice_ = builderForValue.build();
            onChanged();
          } else {
            unitNetPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder mergeUnitNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (unitNetPriceBuilder_ == null) {
            if (unitNetPrice_ != null) {
              unitNetPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(unitNetPrice_).mergeFrom(value).buildPartial();
            } else {
              unitNetPrice_ = value;
            }
            onChanged();
          } else {
            unitNetPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public Builder clearUnitNetPrice() {
          if (unitNetPriceBuilder_ == null) {
            unitNetPrice_ = null;
            onChanged();
          } else {
            unitNetPrice_ = null;
            unitNetPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getUnitNetPriceBuilder() {
          
          onChanged();
          return getUnitNetPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getUnitNetPriceOrBuilder() {
          if (unitNetPriceBuilder_ != null) {
            return unitNetPriceBuilder_.getMessageOrBuilder();
          } else {
            return unitNetPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : unitNetPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue unit_net_price = 10010;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getUnitNetPriceFieldBuilder() {
          if (unitNetPriceBuilder_ == null) {
            unitNetPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getUnitNetPrice(),
                    getParentForChildren(),
                    isClean());
            unitNetPrice_ = null;
          }
          return unitNetPriceBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseAbsUnitNetSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseAbsUnitNetSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public boolean hasPreciseAbsUnitNetSurcharge() {
          return preciseAbsUnitNetSurchargeBuilder_ != null || preciseAbsUnitNetSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseAbsUnitNetSurcharge() {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            return preciseAbsUnitNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitNetSurcharge_;
          } else {
            return preciseAbsUnitNetSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsUnitNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseAbsUnitNetSurcharge_ = value;
            onChanged();
          } else {
            preciseAbsUnitNetSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsUnitNetSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            preciseAbsUnitNetSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            preciseAbsUnitNetSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public Builder mergePreciseAbsUnitNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            if (preciseAbsUnitNetSurcharge_ != null) {
              preciseAbsUnitNetSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseAbsUnitNetSurcharge_).mergeFrom(value).buildPartial();
            } else {
              preciseAbsUnitNetSurcharge_ = value;
            }
            onChanged();
          } else {
            preciseAbsUnitNetSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public Builder clearPreciseAbsUnitNetSurcharge() {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            preciseAbsUnitNetSurcharge_ = null;
            onChanged();
          } else {
            preciseAbsUnitNetSurcharge_ = null;
            preciseAbsUnitNetSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseAbsUnitNetSurchargeBuilder() {
          
          onChanged();
          return getPreciseAbsUnitNetSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsUnitNetSurchargeOrBuilder() {
          if (preciseAbsUnitNetSurchargeBuilder_ != null) {
            return preciseAbsUnitNetSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return preciseAbsUnitNetSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsUnitNetSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_unit_net_surcharge = 10011;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseAbsUnitNetSurchargeFieldBuilder() {
          if (preciseAbsUnitNetSurchargeBuilder_ == null) {
            preciseAbsUnitNetSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseAbsUnitNetSurcharge(),
                    getParentForChildren(),
                    isClean());
            preciseAbsUnitNetSurcharge_ = null;
          }
          return preciseAbsUnitNetSurchargeBuilder_;
        }

        private io.dstore.engine.Values.stringValue surchargeReason_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> surchargeReasonBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public boolean hasSurchargeReason() {
          return surchargeReasonBuilder_ != null || surchargeReason_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getSurchargeReason() {
          if (surchargeReasonBuilder_ == null) {
            return surchargeReason_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeReason_;
          } else {
            return surchargeReasonBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public Builder setSurchargeReason(io.dstore.engine.Values.stringValue value) {
          if (surchargeReasonBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeReason_ = value;
            onChanged();
          } else {
            surchargeReasonBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public Builder setSurchargeReason(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (surchargeReasonBuilder_ == null) {
            surchargeReason_ = builderForValue.build();
            onChanged();
          } else {
            surchargeReasonBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public Builder mergeSurchargeReason(io.dstore.engine.Values.stringValue value) {
          if (surchargeReasonBuilder_ == null) {
            if (surchargeReason_ != null) {
              surchargeReason_ =
                io.dstore.engine.Values.stringValue.newBuilder(surchargeReason_).mergeFrom(value).buildPartial();
            } else {
              surchargeReason_ = value;
            }
            onChanged();
          } else {
            surchargeReasonBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public Builder clearSurchargeReason() {
          if (surchargeReasonBuilder_ == null) {
            surchargeReason_ = null;
            onChanged();
          } else {
            surchargeReason_ = null;
            surchargeReasonBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getSurchargeReasonBuilder() {
          
          onChanged();
          return getSurchargeReasonFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getSurchargeReasonOrBuilder() {
          if (surchargeReasonBuilder_ != null) {
            return surchargeReasonBuilder_.getMessageOrBuilder();
          } else {
            return surchargeReason_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeReason_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_reason = 10012;</code>
         *
         * <pre>
         * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;CalculatePrices &lt; 2" ist !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getSurchargeReasonFieldBuilder() {
          if (surchargeReasonBuilder_ == null) {
            surchargeReasonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getSurchargeReason(),
                    getParentForChildren(),
                    isClean());
            surchargeReason_ = null;
          }
          return surchargeReasonBuilder_;
        }

        private io.dstore.engine.Values.integerValue associatedOrChosenTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> associatedOrChosenTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public boolean hasAssociatedOrChosenTreeNodeId() {
          return associatedOrChosenTreeNodeIdBuilder_ != null || associatedOrChosenTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getAssociatedOrChosenTreeNodeId() {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            return associatedOrChosenTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : associatedOrChosenTreeNodeId_;
          } else {
            return associatedOrChosenTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setAssociatedOrChosenTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            associatedOrChosenTreeNodeId_ = value;
            onChanged();
          } else {
            associatedOrChosenTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setAssociatedOrChosenTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            associatedOrChosenTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            associatedOrChosenTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder mergeAssociatedOrChosenTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            if (associatedOrChosenTreeNodeId_ != null) {
              associatedOrChosenTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(associatedOrChosenTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              associatedOrChosenTreeNodeId_ = value;
            }
            onChanged();
          } else {
            associatedOrChosenTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder clearAssociatedOrChosenTreeNodeId() {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            associatedOrChosenTreeNodeId_ = null;
            onChanged();
          } else {
            associatedOrChosenTreeNodeId_ = null;
            associatedOrChosenTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getAssociatedOrChosenTreeNodeIdBuilder() {
          
          onChanged();
          return getAssociatedOrChosenTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getAssociatedOrChosenTreeNodeIdOrBuilder() {
          if (associatedOrChosenTreeNodeIdBuilder_ != null) {
            return associatedOrChosenTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return associatedOrChosenTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : associatedOrChosenTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue associated_or_chosen_tree_node_id = 10013;</code>
         *
         * <pre>
         * Enthält entweder die zur "HTreeNodeID" korrespondierende ("associated") ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (willkürlich) gewähltes ("chosen") Element (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getAssociatedOrChosenTreeNodeIdFieldBuilder() {
          if (associatedOrChosenTreeNodeIdBuilder_ == null) {
            associatedOrChosenTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getAssociatedOrChosenTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            associatedOrChosenTreeNodeId_ = null;
          }
          return associatedOrChosenTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10014;</code>
         *
         * <pre>
         * Zur "HTreeNodeID" zugehörige ID des Artikel-Elementes (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue deleted_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> deletedBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public boolean hasDeleted() {
          return deletedBuilder_ != null || deleted_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getDeleted() {
          if (deletedBuilder_ == null) {
            return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          } else {
            return deletedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder setDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deleted_ = value;
            onChanged();
          } else {
            deletedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder setDeleted(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (deletedBuilder_ == null) {
            deleted_ = builderForValue.build();
            onChanged();
          } else {
            deletedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder mergeDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (deleted_ != null) {
              deleted_ =
                io.dstore.engine.Values.booleanValue.newBuilder(deleted_).mergeFrom(value).buildPartial();
            } else {
              deleted_ = value;
            }
            onChanged();
          } else {
            deletedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder clearDeleted() {
          if (deletedBuilder_ == null) {
            deleted_ = null;
            onChanged();
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getDeletedBuilder() {
          
          onChanged();
          return getDeletedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
          if (deletedBuilder_ != null) {
            return deletedBuilder_.getMessageOrBuilder();
          } else {
            return deleted_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10015;</code>
         *
         * <pre>
         * "Deleted"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getDeletedFieldBuilder() {
          if (deletedBuilder_ == null) {
            deletedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getDeleted(),
                    getParentForChildren(),
                    isClean());
            deleted_ = null;
          }
          return deletedBuilder_;
        }

        private io.dstore.engine.Values.integerValue bonusItemForItemSetId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> bonusItemForItemSetIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public boolean hasBonusItemForItemSetId() {
          return bonusItemForItemSetIdBuilder_ != null || bonusItemForItemSetId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBonusItemForItemSetId() {
          if (bonusItemForItemSetIdBuilder_ == null) {
            return bonusItemForItemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : bonusItemForItemSetId_;
          } else {
            return bonusItemForItemSetIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public Builder setBonusItemForItemSetId(io.dstore.engine.Values.integerValue value) {
          if (bonusItemForItemSetIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bonusItemForItemSetId_ = value;
            onChanged();
          } else {
            bonusItemForItemSetIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public Builder setBonusItemForItemSetId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (bonusItemForItemSetIdBuilder_ == null) {
            bonusItemForItemSetId_ = builderForValue.build();
            onChanged();
          } else {
            bonusItemForItemSetIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public Builder mergeBonusItemForItemSetId(io.dstore.engine.Values.integerValue value) {
          if (bonusItemForItemSetIdBuilder_ == null) {
            if (bonusItemForItemSetId_ != null) {
              bonusItemForItemSetId_ =
                io.dstore.engine.Values.integerValue.newBuilder(bonusItemForItemSetId_).mergeFrom(value).buildPartial();
            } else {
              bonusItemForItemSetId_ = value;
            }
            onChanged();
          } else {
            bonusItemForItemSetIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public Builder clearBonusItemForItemSetId() {
          if (bonusItemForItemSetIdBuilder_ == null) {
            bonusItemForItemSetId_ = null;
            onChanged();
          } else {
            bonusItemForItemSetId_ = null;
            bonusItemForItemSetIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBonusItemForItemSetIdBuilder() {
          
          onChanged();
          return getBonusItemForItemSetIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBonusItemForItemSetIdOrBuilder() {
          if (bonusItemForItemSetIdBuilder_ != null) {
            return bonusItemForItemSetIdBuilder_.getMessageOrBuilder();
          } else {
            return bonusItemForItemSetId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : bonusItemForItemSetId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue bonus_item_for_item_set_id = 10016;</code>
         *
         * <pre>
         * Die ID des "ItemSets" aus welchem der Artikel stammt, falls es sich bei "HTreeNodeID" um einen Bonus-Artikel handelt, sonst "NULL"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBonusItemForItemSetIdFieldBuilder() {
          if (bonusItemForItemSetIdBuilder_ == null) {
            bonusItemForItemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBonusItemForItemSetId(),
                    getParentForChildren(),
                    isClean());
            bonusItemForItemSetId_ = null;
          }
          return bonusItemForItemSetIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue relativeSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> relativeSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public boolean hasRelativeSurcharge() {
          return relativeSurchargeBuilder_ != null || relativeSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getRelativeSurcharge() {
          if (relativeSurchargeBuilder_ == null) {
            return relativeSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeSurcharge_;
          } else {
            return relativeSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public Builder setRelativeSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (relativeSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relativeSurcharge_ = value;
            onChanged();
          } else {
            relativeSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public Builder setRelativeSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (relativeSurchargeBuilder_ == null) {
            relativeSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            relativeSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public Builder mergeRelativeSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (relativeSurchargeBuilder_ == null) {
            if (relativeSurcharge_ != null) {
              relativeSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(relativeSurcharge_).mergeFrom(value).buildPartial();
            } else {
              relativeSurcharge_ = value;
            }
            onChanged();
          } else {
            relativeSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public Builder clearRelativeSurcharge() {
          if (relativeSurchargeBuilder_ == null) {
            relativeSurcharge_ = null;
            onChanged();
          } else {
            relativeSurcharge_ = null;
            relativeSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getRelativeSurchargeBuilder() {
          
          onChanged();
          return getRelativeSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getRelativeSurchargeOrBuilder() {
          if (relativeSurchargeBuilder_ != null) {
            return relativeSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return relativeSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : relativeSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue relative_surcharge = 10017;</code>
         *
         * <pre>
         * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "0" !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getRelativeSurchargeFieldBuilder() {
          if (relativeSurchargeBuilder_ == null) {
            relativeSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getRelativeSurcharge(),
                    getParentForChildren(),
                    isClean());
            relativeSurcharge_ = null;
          }
          return relativeSurchargeBuilder_;
        }

        private io.dstore.engine.Values.stringValue surchargeGeneratedByCampIds_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> surchargeGeneratedByCampIdsBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public boolean hasSurchargeGeneratedByCampIds() {
          return surchargeGeneratedByCampIdsBuilder_ != null || surchargeGeneratedByCampIds_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getSurchargeGeneratedByCampIds() {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            return surchargeGeneratedByCampIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeGeneratedByCampIds_;
          } else {
            return surchargeGeneratedByCampIdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public Builder setSurchargeGeneratedByCampIds(io.dstore.engine.Values.stringValue value) {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeGeneratedByCampIds_ = value;
            onChanged();
          } else {
            surchargeGeneratedByCampIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public Builder setSurchargeGeneratedByCampIds(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            surchargeGeneratedByCampIds_ = builderForValue.build();
            onChanged();
          } else {
            surchargeGeneratedByCampIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public Builder mergeSurchargeGeneratedByCampIds(io.dstore.engine.Values.stringValue value) {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            if (surchargeGeneratedByCampIds_ != null) {
              surchargeGeneratedByCampIds_ =
                io.dstore.engine.Values.stringValue.newBuilder(surchargeGeneratedByCampIds_).mergeFrom(value).buildPartial();
            } else {
              surchargeGeneratedByCampIds_ = value;
            }
            onChanged();
          } else {
            surchargeGeneratedByCampIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public Builder clearSurchargeGeneratedByCampIds() {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            surchargeGeneratedByCampIds_ = null;
            onChanged();
          } else {
            surchargeGeneratedByCampIds_ = null;
            surchargeGeneratedByCampIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getSurchargeGeneratedByCampIdsBuilder() {
          
          onChanged();
          return getSurchargeGeneratedByCampIdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getSurchargeGeneratedByCampIdsOrBuilder() {
          if (surchargeGeneratedByCampIdsBuilder_ != null) {
            return surchargeGeneratedByCampIdsBuilder_.getMessageOrBuilder();
          } else {
            return surchargeGeneratedByCampIds_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : surchargeGeneratedByCampIds_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue surcharge_generated_by_camp_ids = 10018;</code>
         *
         * <pre>
         * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getSurchargeGeneratedByCampIdsFieldBuilder() {
          if (surchargeGeneratedByCampIdsBuilder_ == null) {
            surchargeGeneratedByCampIdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getSurchargeGeneratedByCampIds(),
                    getParentForChildren(),
                    isClean());
            surchargeGeneratedByCampIds_ = null;
          }
          return surchargeGeneratedByCampIdsBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseTotalGrossPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseTotalGrossPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public boolean hasPreciseTotalGrossPrice() {
          return preciseTotalGrossPriceBuilder_ != null || preciseTotalGrossPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseTotalGrossPrice() {
          if (preciseTotalGrossPriceBuilder_ == null) {
            return preciseTotalGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalGrossPrice_;
          } else {
            return preciseTotalGrossPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public Builder setPreciseTotalGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseTotalGrossPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseTotalGrossPrice_ = value;
            onChanged();
          } else {
            preciseTotalGrossPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public Builder setPreciseTotalGrossPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseTotalGrossPriceBuilder_ == null) {
            preciseTotalGrossPrice_ = builderForValue.build();
            onChanged();
          } else {
            preciseTotalGrossPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public Builder mergePreciseTotalGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseTotalGrossPriceBuilder_ == null) {
            if (preciseTotalGrossPrice_ != null) {
              preciseTotalGrossPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseTotalGrossPrice_).mergeFrom(value).buildPartial();
            } else {
              preciseTotalGrossPrice_ = value;
            }
            onChanged();
          } else {
            preciseTotalGrossPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public Builder clearPreciseTotalGrossPrice() {
          if (preciseTotalGrossPriceBuilder_ == null) {
            preciseTotalGrossPrice_ = null;
            onChanged();
          } else {
            preciseTotalGrossPrice_ = null;
            preciseTotalGrossPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseTotalGrossPriceBuilder() {
          
          onChanged();
          return getPreciseTotalGrossPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalGrossPriceOrBuilder() {
          if (preciseTotalGrossPriceBuilder_ != null) {
            return preciseTotalGrossPriceBuilder_.getMessageOrBuilder();
          } else {
            return preciseTotalGrossPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalGrossPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_gross_price = 10019;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseTotalGrossPriceFieldBuilder() {
          if (preciseTotalGrossPriceBuilder_ == null) {
            preciseTotalGrossPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseTotalGrossPrice(),
                    getParentForChildren(),
                    isClean());
            preciseTotalGrossPrice_ = null;
          }
          return preciseTotalGrossPriceBuilder_;
        }

        private io.dstore.engine.Values.timestampValue inputDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> inputDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public boolean hasInputDateAndTime() {
          return inputDateAndTimeBuilder_ != null || inputDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            return inputDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
          } else {
            return inputDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public Builder setInputDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTime_ = value;
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public Builder setInputDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public Builder mergeInputDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (inputDateAndTimeBuilder_ == null) {
            if (inputDateAndTime_ != null) {
              inputDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(inputDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTime_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public Builder clearInputDateAndTime() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTime_ = null;
            onChanged();
          } else {
            inputDateAndTime_ = null;
            inputDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getInputDateAndTimeBuilder() {
          
          onChanged();
          return getInputDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getInputDateAndTimeOrBuilder() {
          if (inputDateAndTimeBuilder_ != null) {
            return inputDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : inputDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue input_date_and_time = 10020;</code>
         *
         * <pre>
         * Zeitpunkt, zu dem der Besucher "&#64;UniqueID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getInputDateAndTimeFieldBuilder() {
          if (inputDateAndTimeBuilder_ == null) {
            inputDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getInputDateAndTime(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTime_ = null;
          }
          return inputDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue taxesMultiplier_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> taxesMultiplierBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public boolean hasTaxesMultiplier() {
          return taxesMultiplierBuilder_ != null || taxesMultiplier_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTaxesMultiplier() {
          if (taxesMultiplierBuilder_ == null) {
            return taxesMultiplier_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : taxesMultiplier_;
          } else {
            return taxesMultiplierBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public Builder setTaxesMultiplier(io.dstore.engine.Values.decimalValue value) {
          if (taxesMultiplierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            taxesMultiplier_ = value;
            onChanged();
          } else {
            taxesMultiplierBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public Builder setTaxesMultiplier(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (taxesMultiplierBuilder_ == null) {
            taxesMultiplier_ = builderForValue.build();
            onChanged();
          } else {
            taxesMultiplierBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public Builder mergeTaxesMultiplier(io.dstore.engine.Values.decimalValue value) {
          if (taxesMultiplierBuilder_ == null) {
            if (taxesMultiplier_ != null) {
              taxesMultiplier_ =
                io.dstore.engine.Values.decimalValue.newBuilder(taxesMultiplier_).mergeFrom(value).buildPartial();
            } else {
              taxesMultiplier_ = value;
            }
            onChanged();
          } else {
            taxesMultiplierBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public Builder clearTaxesMultiplier() {
          if (taxesMultiplierBuilder_ == null) {
            taxesMultiplier_ = null;
            onChanged();
          } else {
            taxesMultiplier_ = null;
            taxesMultiplierBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTaxesMultiplierBuilder() {
          
          onChanged();
          return getTaxesMultiplierFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTaxesMultiplierOrBuilder() {
          if (taxesMultiplierBuilder_ != null) {
            return taxesMultiplierBuilder_.getMessageOrBuilder();
          } else {
            return taxesMultiplier_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : taxesMultiplier_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue taxes_multiplier = 10021;</code>
         *
         * <pre>
         * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTaxesMultiplierFieldBuilder() {
          if (taxesMultiplierBuilder_ == null) {
            taxesMultiplierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTaxesMultiplier(),
                    getParentForChildren(),
                    isClean());
            taxesMultiplier_ = null;
          }
          return taxesMultiplierBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseAbsTotalGrossSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseAbsTotalGrossSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public boolean hasPreciseAbsTotalGrossSurcharge() {
          return preciseAbsTotalGrossSurchargeBuilder_ != null || preciseAbsTotalGrossSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseAbsTotalGrossSurcharge() {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            return preciseAbsTotalGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalGrossSurcharge_;
          } else {
            return preciseAbsTotalGrossSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsTotalGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseAbsTotalGrossSurcharge_ = value;
            onChanged();
          } else {
            preciseAbsTotalGrossSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsTotalGrossSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            preciseAbsTotalGrossSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            preciseAbsTotalGrossSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public Builder mergePreciseAbsTotalGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            if (preciseAbsTotalGrossSurcharge_ != null) {
              preciseAbsTotalGrossSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseAbsTotalGrossSurcharge_).mergeFrom(value).buildPartial();
            } else {
              preciseAbsTotalGrossSurcharge_ = value;
            }
            onChanged();
          } else {
            preciseAbsTotalGrossSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public Builder clearPreciseAbsTotalGrossSurcharge() {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            preciseAbsTotalGrossSurcharge_ = null;
            onChanged();
          } else {
            preciseAbsTotalGrossSurcharge_ = null;
            preciseAbsTotalGrossSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseAbsTotalGrossSurchargeBuilder() {
          
          onChanged();
          return getPreciseAbsTotalGrossSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalGrossSurchargeOrBuilder() {
          if (preciseAbsTotalGrossSurchargeBuilder_ != null) {
            return preciseAbsTotalGrossSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return preciseAbsTotalGrossSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalGrossSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_gross_surcharge = 10022;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseAbsTotalGrossSurchargeFieldBuilder() {
          if (preciseAbsTotalGrossSurchargeBuilder_ == null) {
            preciseAbsTotalGrossSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseAbsTotalGrossSurcharge(),
                    getParentForChildren(),
                    isClean());
            preciseAbsTotalGrossSurcharge_ = null;
          }
          return preciseAbsTotalGrossSurchargeBuilder_;
        }

        private io.dstore.engine.Values.stringValue itemProperty_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> itemPropertyBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public boolean hasItemProperty() {
          return itemPropertyBuilder_ != null || itemProperty_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getItemProperty() {
          if (itemPropertyBuilder_ == null) {
            return itemProperty_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemProperty_;
          } else {
            return itemPropertyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public Builder setItemProperty(io.dstore.engine.Values.stringValue value) {
          if (itemPropertyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemProperty_ = value;
            onChanged();
          } else {
            itemPropertyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public Builder setItemProperty(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (itemPropertyBuilder_ == null) {
            itemProperty_ = builderForValue.build();
            onChanged();
          } else {
            itemPropertyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public Builder mergeItemProperty(io.dstore.engine.Values.stringValue value) {
          if (itemPropertyBuilder_ == null) {
            if (itemProperty_ != null) {
              itemProperty_ =
                io.dstore.engine.Values.stringValue.newBuilder(itemProperty_).mergeFrom(value).buildPartial();
            } else {
              itemProperty_ = value;
            }
            onChanged();
          } else {
            itemPropertyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public Builder clearItemProperty() {
          if (itemPropertyBuilder_ == null) {
            itemProperty_ = null;
            onChanged();
          } else {
            itemProperty_ = null;
            itemPropertyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getItemPropertyBuilder() {
          
          onChanged();
          return getItemPropertyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getItemPropertyOrBuilder() {
          if (itemPropertyBuilder_ != null) {
            return itemPropertyBuilder_.getMessageOrBuilder();
          } else {
            return itemProperty_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : itemProperty_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_property = 10023;</code>
         *
         * <pre>
         * Eigenschaft des Artikel-Elementes "AssociatedOrChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getItemPropertyFieldBuilder() {
          if (itemPropertyBuilder_ == null) {
            itemPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getItemProperty(),
                    getParentForChildren(),
                    isClean());
            itemProperty_ = null;
          }
          return itemPropertyBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseAbsTotalNetSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseAbsTotalNetSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public boolean hasPreciseAbsTotalNetSurcharge() {
          return preciseAbsTotalNetSurchargeBuilder_ != null || preciseAbsTotalNetSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseAbsTotalNetSurcharge() {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            return preciseAbsTotalNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalNetSurcharge_;
          } else {
            return preciseAbsTotalNetSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsTotalNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseAbsTotalNetSurcharge_ = value;
            onChanged();
          } else {
            preciseAbsTotalNetSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public Builder setPreciseAbsTotalNetSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            preciseAbsTotalNetSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            preciseAbsTotalNetSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public Builder mergePreciseAbsTotalNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            if (preciseAbsTotalNetSurcharge_ != null) {
              preciseAbsTotalNetSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseAbsTotalNetSurcharge_).mergeFrom(value).buildPartial();
            } else {
              preciseAbsTotalNetSurcharge_ = value;
            }
            onChanged();
          } else {
            preciseAbsTotalNetSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public Builder clearPreciseAbsTotalNetSurcharge() {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            preciseAbsTotalNetSurcharge_ = null;
            onChanged();
          } else {
            preciseAbsTotalNetSurcharge_ = null;
            preciseAbsTotalNetSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseAbsTotalNetSurchargeBuilder() {
          
          onChanged();
          return getPreciseAbsTotalNetSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseAbsTotalNetSurchargeOrBuilder() {
          if (preciseAbsTotalNetSurchargeBuilder_ != null) {
            return preciseAbsTotalNetSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return preciseAbsTotalNetSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseAbsTotalNetSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_abs_total_net_surcharge = 10024;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseAbsTotalNetSurchargeFieldBuilder() {
          if (preciseAbsTotalNetSurchargeBuilder_ == null) {
            preciseAbsTotalNetSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseAbsTotalNetSurcharge(),
                    getParentForChildren(),
                    isClean());
            preciseAbsTotalNetSurcharge_ = null;
          }
          return preciseAbsTotalNetSurchargeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalNetPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalNetPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public boolean hasTotalNetPrice() {
          return totalNetPriceBuilder_ != null || totalNetPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalNetPrice() {
          if (totalNetPriceBuilder_ == null) {
            return totalNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalNetPrice_;
          } else {
            return totalNetPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder setTotalNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (totalNetPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalNetPrice_ = value;
            onChanged();
          } else {
            totalNetPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder setTotalNetPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalNetPriceBuilder_ == null) {
            totalNetPrice_ = builderForValue.build();
            onChanged();
          } else {
            totalNetPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder mergeTotalNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (totalNetPriceBuilder_ == null) {
            if (totalNetPrice_ != null) {
              totalNetPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalNetPrice_).mergeFrom(value).buildPartial();
            } else {
              totalNetPrice_ = value;
            }
            onChanged();
          } else {
            totalNetPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder clearTotalNetPrice() {
          if (totalNetPriceBuilder_ == null) {
            totalNetPrice_ = null;
            onChanged();
          } else {
            totalNetPrice_ = null;
            totalNetPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalNetPriceBuilder() {
          
          onChanged();
          return getTotalNetPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalNetPriceOrBuilder() {
          if (totalNetPriceBuilder_ != null) {
            return totalNetPriceBuilder_.getMessageOrBuilder();
          } else {
            return totalNetPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalNetPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_net_price = 10025;</code>
         *
         * <pre>
         * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalNetPriceFieldBuilder() {
          if (totalNetPriceBuilder_ == null) {
            totalNetPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalNetPrice(),
                    getParentForChildren(),
                    isClean());
            totalNetPrice_ = null;
          }
          return totalNetPriceBuilder_;
        }

        private io.dstore.engine.Values.integerValue quantity_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> quantityBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public boolean hasQuantity() {
          return quantityBuilder_ != null || quantity_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getQuantity() {
          if (quantityBuilder_ == null) {
            return quantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
          } else {
            return quantityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public Builder setQuantity(io.dstore.engine.Values.integerValue value) {
          if (quantityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quantity_ = value;
            onChanged();
          } else {
            quantityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public Builder setQuantity(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (quantityBuilder_ == null) {
            quantity_ = builderForValue.build();
            onChanged();
          } else {
            quantityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public Builder mergeQuantity(io.dstore.engine.Values.integerValue value) {
          if (quantityBuilder_ == null) {
            if (quantity_ != null) {
              quantity_ =
                io.dstore.engine.Values.integerValue.newBuilder(quantity_).mergeFrom(value).buildPartial();
            } else {
              quantity_ = value;
            }
            onChanged();
          } else {
            quantityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public Builder clearQuantity() {
          if (quantityBuilder_ == null) {
            quantity_ = null;
            onChanged();
          } else {
            quantity_ = null;
            quantityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getQuantityBuilder() {
          
          onChanged();
          return getQuantityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getQuantityOrBuilder() {
          if (quantityBuilder_ != null) {
            return quantityBuilder_.getMessageOrBuilder();
          } else {
            return quantity_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : quantity_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue quantity = 10026;</code>
         *
         * <pre>
         * Anzahl des Artikels "NodeID" (bzw. der "HTreeNodeID"), die der Besucher "&#64;UniqueID" in seinen "Warenkorb gelegt" hat
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getQuantityFieldBuilder() {
          if (quantityBuilder_ == null) {
            quantityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getQuantity(),
                    getParentForChildren(),
                    isClean());
            quantity_ = null;
          }
          return quantityBuilder_;
        }

        private io.dstore.engine.Values.stringValue unitSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> unitSymbolBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public boolean hasUnitSymbol() {
          return unitSymbolBuilder_ != null || unitSymbol_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            return unitSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
          } else {
            return unitSymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public Builder setUnitSymbol(io.dstore.engine.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitSymbol_ = value;
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public Builder setUnitSymbol(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = builderForValue.build();
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public Builder mergeUnitSymbol(io.dstore.engine.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (unitSymbol_ != null) {
              unitSymbol_ =
                io.dstore.engine.Values.stringValue.newBuilder(unitSymbol_).mergeFrom(value).buildPartial();
            } else {
              unitSymbol_ = value;
            }
            onChanged();
          } else {
            unitSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public Builder clearUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
            onChanged();
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getUnitSymbolBuilder() {
          
          onChanged();
          return getUnitSymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
          if (unitSymbolBuilder_ != null) {
            return unitSymbolBuilder_.getMessageOrBuilder();
          } else {
            return unitSymbol_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : unitSymbol_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue unit_symbol = 10027;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "CurrencySymbol")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getUnitSymbolFieldBuilder() {
          if (unitSymbolBuilder_ == null) {
            unitSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getUnitSymbol(),
                    getParentForChildren(),
                    isClean());
            unitSymbol_ = null;
          }
          return unitSymbolBuilder_;
        }

        private io.dstore.engine.Values.stringValue quantityPerBundleItemSetIdList_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> quantityPerBundleItemSetIdListBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public boolean hasQuantityPerBundleItemSetIdList() {
          return quantityPerBundleItemSetIdListBuilder_ != null || quantityPerBundleItemSetIdList_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getQuantityPerBundleItemSetIdList() {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            return quantityPerBundleItemSetIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : quantityPerBundleItemSetIdList_;
          } else {
            return quantityPerBundleItemSetIdListBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public Builder setQuantityPerBundleItemSetIdList(io.dstore.engine.Values.stringValue value) {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            quantityPerBundleItemSetIdList_ = value;
            onChanged();
          } else {
            quantityPerBundleItemSetIdListBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public Builder setQuantityPerBundleItemSetIdList(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            quantityPerBundleItemSetIdList_ = builderForValue.build();
            onChanged();
          } else {
            quantityPerBundleItemSetIdListBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public Builder mergeQuantityPerBundleItemSetIdList(io.dstore.engine.Values.stringValue value) {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            if (quantityPerBundleItemSetIdList_ != null) {
              quantityPerBundleItemSetIdList_ =
                io.dstore.engine.Values.stringValue.newBuilder(quantityPerBundleItemSetIdList_).mergeFrom(value).buildPartial();
            } else {
              quantityPerBundleItemSetIdList_ = value;
            }
            onChanged();
          } else {
            quantityPerBundleItemSetIdListBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public Builder clearQuantityPerBundleItemSetIdList() {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            quantityPerBundleItemSetIdList_ = null;
            onChanged();
          } else {
            quantityPerBundleItemSetIdList_ = null;
            quantityPerBundleItemSetIdListBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getQuantityPerBundleItemSetIdListBuilder() {
          
          onChanged();
          return getQuantityPerBundleItemSetIdListFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getQuantityPerBundleItemSetIdListOrBuilder() {
          if (quantityPerBundleItemSetIdListBuilder_ != null) {
            return quantityPerBundleItemSetIdListBuilder_.getMessageOrBuilder();
          } else {
            return quantityPerBundleItemSetIdList_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : quantityPerBundleItemSetIdList_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue quantity_per_bundle_item_set_id_list = 10028;</code>
         *
         * <pre>
         * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "HTreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getQuantityPerBundleItemSetIdListFieldBuilder() {
          if (quantityPerBundleItemSetIdListBuilder_ == null) {
            quantityPerBundleItemSetIdListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getQuantityPerBundleItemSetIdList(),
                    getParentForChildren(),
                    isClean());
            quantityPerBundleItemSetIdList_ = null;
          }
          return quantityPerBundleItemSetIdListBuilder_;
        }

        private io.dstore.engine.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder setSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder setSurchargeValue(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder mergeSurchargeValue(io.dstore.engine.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.engine.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue surcharge_value = 10029;</code>
         *
         * <pre>
         * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.engine.Values.integerValue currencyId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> currencyIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public boolean hasCurrencyId() {
          return currencyIdBuilder_ != null || currencyId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCurrencyId() {
          if (currencyIdBuilder_ == null) {
            return currencyId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
          } else {
            return currencyIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public Builder setCurrencyId(io.dstore.engine.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currencyId_ = value;
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public Builder setCurrencyId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (currencyIdBuilder_ == null) {
            currencyId_ = builderForValue.build();
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public Builder mergeCurrencyId(io.dstore.engine.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (currencyId_ != null) {
              currencyId_ =
                io.dstore.engine.Values.integerValue.newBuilder(currencyId_).mergeFrom(value).buildPartial();
            } else {
              currencyId_ = value;
            }
            onChanged();
          } else {
            currencyIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public Builder clearCurrencyId() {
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
            onChanged();
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCurrencyIdBuilder() {
          
          onChanged();
          return getCurrencyIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
          if (currencyIdBuilder_ != null) {
            return currencyIdBuilder_.getMessageOrBuilder();
          } else {
            return currencyId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : currencyId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue currency_id = 10030;</code>
         *
         * <pre>
         * ID der Währung, in der die Preisangaben sind (es handelt sich i.d.R. um die zum durch "&#64;UniqueID" angegebenen Besucher hinterlegte Währung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCurrencyIdFieldBuilder() {
          if (currencyIdBuilder_ == null) {
            currencyIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCurrencyId(),
                    getParentForChildren(),
                    isClean());
            currencyId_ = null;
          }
          return currencyIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder setActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder setActive(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder mergeActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.engine.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10031;</code>
         *
         * <pre>
         * "Active"-Status des Elementes "AssociatedOrChosenTreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue absoluteUnitNetSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> absoluteUnitNetSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public boolean hasAbsoluteUnitNetSurcharge() {
          return absoluteUnitNetSurchargeBuilder_ != null || absoluteUnitNetSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getAbsoluteUnitNetSurcharge() {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            return absoluteUnitNetSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitNetSurcharge_;
          } else {
            return absoluteUnitNetSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteUnitNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            absoluteUnitNetSurcharge_ = value;
            onChanged();
          } else {
            absoluteUnitNetSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteUnitNetSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            absoluteUnitNetSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            absoluteUnitNetSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder mergeAbsoluteUnitNetSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            if (absoluteUnitNetSurcharge_ != null) {
              absoluteUnitNetSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(absoluteUnitNetSurcharge_).mergeFrom(value).buildPartial();
            } else {
              absoluteUnitNetSurcharge_ = value;
            }
            onChanged();
          } else {
            absoluteUnitNetSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder clearAbsoluteUnitNetSurcharge() {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            absoluteUnitNetSurcharge_ = null;
            onChanged();
          } else {
            absoluteUnitNetSurcharge_ = null;
            absoluteUnitNetSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getAbsoluteUnitNetSurchargeBuilder() {
          
          onChanged();
          return getAbsoluteUnitNetSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitNetSurchargeOrBuilder() {
          if (absoluteUnitNetSurchargeBuilder_ != null) {
            return absoluteUnitNetSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return absoluteUnitNetSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitNetSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_net_surcharge = 10032;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getAbsoluteUnitNetSurchargeFieldBuilder() {
          if (absoluteUnitNetSurchargeBuilder_ == null) {
            absoluteUnitNetSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getAbsoluteUnitNetSurcharge(),
                    getParentForChildren(),
                    isClean());
            absoluteUnitNetSurcharge_ = null;
          }
          return absoluteUnitNetSurchargeBuilder_;
        }

        private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public boolean hasHTreeNodeId() {
          return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          } else {
            return hTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hTreeNodeId_ = value;
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder setHTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            hTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (hTreeNodeIdBuilder_ == null) {
            if (hTreeNodeId_ != null) {
              hTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              hTreeNodeId_ = value;
            }
            onChanged();
          } else {
            hTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public Builder clearHTreeNodeId() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeId_ = null;
            onChanged();
          } else {
            hTreeNodeId_ = null;
            hTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
          
          onChanged();
          return getHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
          if (hTreeNodeIdBuilder_ != null) {
            return hTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return hTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 10033;</code>
         *
         * <pre>
         * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "&#64;UniqueID" in seinen Warenkorb gelegt hat (siehe Anmerkung in der Beschreibung !)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getHTreeNodeIdFieldBuilder() {
          if (hTreeNodeIdBuilder_ == null) {
            hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            hTreeNodeId_ = null;
          }
          return hTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue absoluteUnitGrossSurcharge_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> absoluteUnitGrossSurchargeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public boolean hasAbsoluteUnitGrossSurcharge() {
          return absoluteUnitGrossSurchargeBuilder_ != null || absoluteUnitGrossSurcharge_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getAbsoluteUnitGrossSurcharge() {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            return absoluteUnitGrossSurcharge_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitGrossSurcharge_;
          } else {
            return absoluteUnitGrossSurchargeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteUnitGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            absoluteUnitGrossSurcharge_ = value;
            onChanged();
          } else {
            absoluteUnitGrossSurchargeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder setAbsoluteUnitGrossSurcharge(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            absoluteUnitGrossSurcharge_ = builderForValue.build();
            onChanged();
          } else {
            absoluteUnitGrossSurchargeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder mergeAbsoluteUnitGrossSurcharge(io.dstore.engine.Values.decimalValue value) {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            if (absoluteUnitGrossSurcharge_ != null) {
              absoluteUnitGrossSurcharge_ =
                io.dstore.engine.Values.decimalValue.newBuilder(absoluteUnitGrossSurcharge_).mergeFrom(value).buildPartial();
            } else {
              absoluteUnitGrossSurcharge_ = value;
            }
            onChanged();
          } else {
            absoluteUnitGrossSurchargeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public Builder clearAbsoluteUnitGrossSurcharge() {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            absoluteUnitGrossSurcharge_ = null;
            onChanged();
          } else {
            absoluteUnitGrossSurcharge_ = null;
            absoluteUnitGrossSurchargeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getAbsoluteUnitGrossSurchargeBuilder() {
          
          onChanged();
          return getAbsoluteUnitGrossSurchargeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getAbsoluteUnitGrossSurchargeOrBuilder() {
          if (absoluteUnitGrossSurchargeBuilder_ != null) {
            return absoluteUnitGrossSurchargeBuilder_.getMessageOrBuilder();
          } else {
            return absoluteUnitGrossSurcharge_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : absoluteUnitGrossSurcharge_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue absolute_unit_gross_surcharge = 10034;</code>
         *
         * <pre>
         * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getAbsoluteUnitGrossSurchargeFieldBuilder() {
          if (absoluteUnitGrossSurchargeBuilder_ == null) {
            absoluteUnitGrossSurchargeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getAbsoluteUnitGrossSurcharge(),
                    getParentForChildren(),
                    isClean());
            absoluteUnitGrossSurcharge_ = null;
          }
          return absoluteUnitGrossSurchargeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseTotalNetPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseTotalNetPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public boolean hasPreciseTotalNetPrice() {
          return preciseTotalNetPriceBuilder_ != null || preciseTotalNetPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseTotalNetPrice() {
          if (preciseTotalNetPriceBuilder_ == null) {
            return preciseTotalNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalNetPrice_;
          } else {
            return preciseTotalNetPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public Builder setPreciseTotalNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseTotalNetPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseTotalNetPrice_ = value;
            onChanged();
          } else {
            preciseTotalNetPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public Builder setPreciseTotalNetPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseTotalNetPriceBuilder_ == null) {
            preciseTotalNetPrice_ = builderForValue.build();
            onChanged();
          } else {
            preciseTotalNetPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public Builder mergePreciseTotalNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseTotalNetPriceBuilder_ == null) {
            if (preciseTotalNetPrice_ != null) {
              preciseTotalNetPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseTotalNetPrice_).mergeFrom(value).buildPartial();
            } else {
              preciseTotalNetPrice_ = value;
            }
            onChanged();
          } else {
            preciseTotalNetPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public Builder clearPreciseTotalNetPrice() {
          if (preciseTotalNetPriceBuilder_ == null) {
            preciseTotalNetPrice_ = null;
            onChanged();
          } else {
            preciseTotalNetPrice_ = null;
            preciseTotalNetPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseTotalNetPriceBuilder() {
          
          onChanged();
          return getPreciseTotalNetPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseTotalNetPriceOrBuilder() {
          if (preciseTotalNetPriceBuilder_ != null) {
            return preciseTotalNetPriceBuilder_.getMessageOrBuilder();
          } else {
            return preciseTotalNetPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseTotalNetPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_total_net_price = 10035;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseTotalNetPriceFieldBuilder() {
          if (preciseTotalNetPriceBuilder_ == null) {
            preciseTotalNetPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseTotalNetPrice(),
                    getParentForChildren(),
                    isClean());
            preciseTotalNetPrice_ = null;
          }
          return preciseTotalNetPriceBuilder_;
        }

        private io.dstore.engine.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public Builder setSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public Builder setSurchargeTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public Builder mergeSurchargeTypeId(io.dstore.engine.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue surcharge_type_id = 10036;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde. Falls KEINE "&#64;PersonID" angegeben wurde, steht hier immer "NULL" !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue preciseUnitNetPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> preciseUnitNetPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public boolean hasPreciseUnitNetPrice() {
          return preciseUnitNetPriceBuilder_ != null || preciseUnitNetPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPreciseUnitNetPrice() {
          if (preciseUnitNetPriceBuilder_ == null) {
            return preciseUnitNetPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitNetPrice_;
          } else {
            return preciseUnitNetPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public Builder setPreciseUnitNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseUnitNetPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            preciseUnitNetPrice_ = value;
            onChanged();
          } else {
            preciseUnitNetPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public Builder setPreciseUnitNetPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (preciseUnitNetPriceBuilder_ == null) {
            preciseUnitNetPrice_ = builderForValue.build();
            onChanged();
          } else {
            preciseUnitNetPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public Builder mergePreciseUnitNetPrice(io.dstore.engine.Values.decimalValue value) {
          if (preciseUnitNetPriceBuilder_ == null) {
            if (preciseUnitNetPrice_ != null) {
              preciseUnitNetPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(preciseUnitNetPrice_).mergeFrom(value).buildPartial();
            } else {
              preciseUnitNetPrice_ = value;
            }
            onChanged();
          } else {
            preciseUnitNetPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public Builder clearPreciseUnitNetPrice() {
          if (preciseUnitNetPriceBuilder_ == null) {
            preciseUnitNetPrice_ = null;
            onChanged();
          } else {
            preciseUnitNetPrice_ = null;
            preciseUnitNetPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPreciseUnitNetPriceBuilder() {
          
          onChanged();
          return getPreciseUnitNetPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPreciseUnitNetPriceOrBuilder() {
          if (preciseUnitNetPriceBuilder_ != null) {
            return preciseUnitNetPriceBuilder_.getMessageOrBuilder();
          } else {
            return preciseUnitNetPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : preciseUnitNetPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue precise_unit_net_price = 10037;</code>
         *
         * <pre>
         * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPreciseUnitNetPriceFieldBuilder() {
          if (preciseUnitNetPriceBuilder_ == null) {
            preciseUnitNetPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPreciseUnitNetPrice(),
                    getParentForChildren(),
                    isClean());
            preciseUnitNetPrice_ = null;
          }
          return preciseUnitNetPriceBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalGrossPrice_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalGrossPriceBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public boolean hasTotalGrossPrice() {
          return totalGrossPriceBuilder_ != null || totalGrossPrice_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalGrossPrice() {
          if (totalGrossPriceBuilder_ == null) {
            return totalGrossPrice_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalGrossPrice_;
          } else {
            return totalGrossPriceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder setTotalGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (totalGrossPriceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalGrossPrice_ = value;
            onChanged();
          } else {
            totalGrossPriceBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder setTotalGrossPrice(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalGrossPriceBuilder_ == null) {
            totalGrossPrice_ = builderForValue.build();
            onChanged();
          } else {
            totalGrossPriceBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder mergeTotalGrossPrice(io.dstore.engine.Values.decimalValue value) {
          if (totalGrossPriceBuilder_ == null) {
            if (totalGrossPrice_ != null) {
              totalGrossPrice_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalGrossPrice_).mergeFrom(value).buildPartial();
            } else {
              totalGrossPrice_ = value;
            }
            onChanged();
          } else {
            totalGrossPriceBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public Builder clearTotalGrossPrice() {
          if (totalGrossPriceBuilder_ == null) {
            totalGrossPrice_ = null;
            onChanged();
          } else {
            totalGrossPrice_ = null;
            totalGrossPriceBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalGrossPriceBuilder() {
          
          onChanged();
          return getTotalGrossPriceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalGrossPriceOrBuilder() {
          if (totalGrossPriceBuilder_ != null) {
            return totalGrossPriceBuilder_.getMessageOrBuilder();
          } else {
            return totalGrossPrice_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalGrossPrice_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_gross_price = 10038;</code>
         *
         * <pre>
         * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalGrossPriceFieldBuilder() {
          if (totalGrossPriceBuilder_ == null) {
            totalGrossPriceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalGrossPrice(),
                    getParentForChildren(),
                    isClean());
            totalGrossPrice_ = null;
          }
          return totalGrossPriceBuilder_;
        }

        private io.dstore.engine.Values.integerValue prePredecessorsLevelNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> prePredecessorsLevelNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public boolean hasPrePredecessorsLevelNo() {
          return prePredecessorsLevelNoBuilder_ != null || prePredecessorsLevelNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrePredecessorsLevelNo() {
          if (prePredecessorsLevelNoBuilder_ == null) {
            return prePredecessorsLevelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsLevelNo_;
          } else {
            return prePredecessorsLevelNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public Builder setPrePredecessorsLevelNo(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorsLevelNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            prePredecessorsLevelNo_ = value;
            onChanged();
          } else {
            prePredecessorsLevelNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public Builder setPrePredecessorsLevelNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (prePredecessorsLevelNoBuilder_ == null) {
            prePredecessorsLevelNo_ = builderForValue.build();
            onChanged();
          } else {
            prePredecessorsLevelNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public Builder mergePrePredecessorsLevelNo(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorsLevelNoBuilder_ == null) {
            if (prePredecessorsLevelNo_ != null) {
              prePredecessorsLevelNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(prePredecessorsLevelNo_).mergeFrom(value).buildPartial();
            } else {
              prePredecessorsLevelNo_ = value;
            }
            onChanged();
          } else {
            prePredecessorsLevelNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public Builder clearPrePredecessorsLevelNo() {
          if (prePredecessorsLevelNoBuilder_ == null) {
            prePredecessorsLevelNo_ = null;
            onChanged();
          } else {
            prePredecessorsLevelNo_ = null;
            prePredecessorsLevelNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrePredecessorsLevelNoBuilder() {
          
          onChanged();
          return getPrePredecessorsLevelNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsLevelNoOrBuilder() {
          if (prePredecessorsLevelNoBuilder_ != null) {
            return prePredecessorsLevelNoBuilder_.getMessageOrBuilder();
          } else {
            return prePredecessorsLevelNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsLevelNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_level_no = 20008;</code>
         *
         * <pre>
         * Hierarchie des Vor-Vorgängers
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrePredecessorsLevelNoFieldBuilder() {
          if (prePredecessorsLevelNoBuilder_ == null) {
            prePredecessorsLevelNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrePredecessorsLevelNo(),
                    getParentForChildren(),
                    isClean());
            prePredecessorsLevelNo_ = null;
          }
          return prePredecessorsLevelNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue prePredecessorsTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> prePredecessorsTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public boolean hasPrePredecessorsTreeNodeId() {
          return prePredecessorsTreeNodeIdBuilder_ != null || prePredecessorsTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrePredecessorsTreeNodeId() {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            return prePredecessorsTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsTreeNodeId_;
          } else {
            return prePredecessorsTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder setPrePredecessorsTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            prePredecessorsTreeNodeId_ = value;
            onChanged();
          } else {
            prePredecessorsTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder setPrePredecessorsTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            prePredecessorsTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            prePredecessorsTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder mergePrePredecessorsTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            if (prePredecessorsTreeNodeId_ != null) {
              prePredecessorsTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(prePredecessorsTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              prePredecessorsTreeNodeId_ = value;
            }
            onChanged();
          } else {
            prePredecessorsTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder clearPrePredecessorsTreeNodeId() {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            prePredecessorsTreeNodeId_ = null;
            onChanged();
          } else {
            prePredecessorsTreeNodeId_ = null;
            prePredecessorsTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrePredecessorsTreeNodeIdBuilder() {
          
          onChanged();
          return getPrePredecessorsTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrePredecessorsTreeNodeIdOrBuilder() {
          if (prePredecessorsTreeNodeIdBuilder_ != null) {
            return prePredecessorsTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return prePredecessorsTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : prePredecessorsTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue pre_predecessors_tree_node_id = 20010;</code>
         *
         * <pre>
         * ID des Vor-Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrePredecessorsTreeNodeIdFieldBuilder() {
          if (prePredecessorsTreeNodeIdBuilder_ == null) {
            prePredecessorsTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrePredecessorsTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            prePredecessorsTreeNodeId_ = null;
          }
          return prePredecessorsTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue predecessorsTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> predecessorsTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public boolean hasPredecessorsTreeNodeId() {
          return predecessorsTreeNodeIdBuilder_ != null || predecessorsTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPredecessorsTreeNodeId() {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            return predecessorsTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsTreeNodeId_;
          } else {
            return predecessorsTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder setPredecessorsTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessorsTreeNodeId_ = value;
            onChanged();
          } else {
            predecessorsTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder setPredecessorsTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            predecessorsTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            predecessorsTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder mergePredecessorsTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            if (predecessorsTreeNodeId_ != null) {
              predecessorsTreeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(predecessorsTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              predecessorsTreeNodeId_ = value;
            }
            onChanged();
          } else {
            predecessorsTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public Builder clearPredecessorsTreeNodeId() {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            predecessorsTreeNodeId_ = null;
            onChanged();
          } else {
            predecessorsTreeNodeId_ = null;
            predecessorsTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPredecessorsTreeNodeIdBuilder() {
          
          onChanged();
          return getPredecessorsTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPredecessorsTreeNodeIdOrBuilder() {
          if (predecessorsTreeNodeIdBuilder_ != null) {
            return predecessorsTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return predecessorsTreeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_tree_node_id = 20023;</code>
         *
         * <pre>
         * ID des Vorgänger-Elementes im Artikelbaum von "TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPredecessorsTreeNodeIdFieldBuilder() {
          if (predecessorsTreeNodeIdBuilder_ == null) {
            predecessorsTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPredecessorsTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            predecessorsTreeNodeId_ = null;
          }
          return predecessorsTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue predecessorsDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> predecessorsDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public boolean hasPredecessorsDescription() {
          return predecessorsDescriptionBuilder_ != null || predecessorsDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPredecessorsDescription() {
          if (predecessorsDescriptionBuilder_ == null) {
            return predecessorsDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorsDescription_;
          } else {
            return predecessorsDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public Builder setPredecessorsDescription(io.dstore.engine.Values.stringValue value) {
          if (predecessorsDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessorsDescription_ = value;
            onChanged();
          } else {
            predecessorsDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public Builder setPredecessorsDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (predecessorsDescriptionBuilder_ == null) {
            predecessorsDescription_ = builderForValue.build();
            onChanged();
          } else {
            predecessorsDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public Builder mergePredecessorsDescription(io.dstore.engine.Values.stringValue value) {
          if (predecessorsDescriptionBuilder_ == null) {
            if (predecessorsDescription_ != null) {
              predecessorsDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(predecessorsDescription_).mergeFrom(value).buildPartial();
            } else {
              predecessorsDescription_ = value;
            }
            onChanged();
          } else {
            predecessorsDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public Builder clearPredecessorsDescription() {
          if (predecessorsDescriptionBuilder_ == null) {
            predecessorsDescription_ = null;
            onChanged();
          } else {
            predecessorsDescription_ = null;
            predecessorsDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPredecessorsDescriptionBuilder() {
          
          onChanged();
          return getPredecessorsDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPredecessorsDescriptionOrBuilder() {
          if (predecessorsDescriptionBuilder_ != null) {
            return predecessorsDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return predecessorsDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : predecessorsDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue predecessors_description = 20024;</code>
         *
         * <pre>
         * Bezeichnung des Vorgängers
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPredecessorsDescriptionFieldBuilder() {
          if (predecessorsDescriptionBuilder_ == null) {
            predecessorsDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPredecessorsDescription(),
                    getParentForChildren(),
                    isClean());
            predecessorsDescription_ = null;
          }
          return predecessorsDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue predecessorsLevelNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> predecessorsLevelNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public boolean hasPredecessorsLevelNo() {
          return predecessorsLevelNoBuilder_ != null || predecessorsLevelNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPredecessorsLevelNo() {
          if (predecessorsLevelNoBuilder_ == null) {
            return predecessorsLevelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsLevelNo_;
          } else {
            return predecessorsLevelNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public Builder setPredecessorsLevelNo(io.dstore.engine.Values.integerValue value) {
          if (predecessorsLevelNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessorsLevelNo_ = value;
            onChanged();
          } else {
            predecessorsLevelNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public Builder setPredecessorsLevelNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (predecessorsLevelNoBuilder_ == null) {
            predecessorsLevelNo_ = builderForValue.build();
            onChanged();
          } else {
            predecessorsLevelNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public Builder mergePredecessorsLevelNo(io.dstore.engine.Values.integerValue value) {
          if (predecessorsLevelNoBuilder_ == null) {
            if (predecessorsLevelNo_ != null) {
              predecessorsLevelNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(predecessorsLevelNo_).mergeFrom(value).buildPartial();
            } else {
              predecessorsLevelNo_ = value;
            }
            onChanged();
          } else {
            predecessorsLevelNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public Builder clearPredecessorsLevelNo() {
          if (predecessorsLevelNoBuilder_ == null) {
            predecessorsLevelNo_ = null;
            onChanged();
          } else {
            predecessorsLevelNo_ = null;
            predecessorsLevelNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPredecessorsLevelNoBuilder() {
          
          onChanged();
          return getPredecessorsLevelNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPredecessorsLevelNoOrBuilder() {
          if (predecessorsLevelNoBuilder_ != null) {
            return predecessorsLevelNoBuilder_.getMessageOrBuilder();
          } else {
            return predecessorsLevelNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessorsLevelNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessors_level_no = 20027;</code>
         *
         * <pre>
         * Hierarchie des Vorgängers
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPredecessorsLevelNoFieldBuilder() {
          if (predecessorsLevelNoBuilder_ == null) {
            predecessorsLevelNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPredecessorsLevelNo(),
                    getParentForChildren(),
                    isClean());
            predecessorsLevelNo_ = null;
          }
          return predecessorsLevelNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 20033;</code>
         *
         * <pre>
         * NICHT MEHR VERWENDEN ! (Alternative : "AssociatedOrChosenTreeNodeID")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue prePredecessorsDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> prePredecessorsDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public boolean hasPrePredecessorsDescription() {
          return prePredecessorsDescriptionBuilder_ != null || prePredecessorsDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getPrePredecessorsDescription() {
          if (prePredecessorsDescriptionBuilder_ == null) {
            return prePredecessorsDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorsDescription_;
          } else {
            return prePredecessorsDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public Builder setPrePredecessorsDescription(io.dstore.engine.Values.stringValue value) {
          if (prePredecessorsDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            prePredecessorsDescription_ = value;
            onChanged();
          } else {
            prePredecessorsDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public Builder setPrePredecessorsDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (prePredecessorsDescriptionBuilder_ == null) {
            prePredecessorsDescription_ = builderForValue.build();
            onChanged();
          } else {
            prePredecessorsDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public Builder mergePrePredecessorsDescription(io.dstore.engine.Values.stringValue value) {
          if (prePredecessorsDescriptionBuilder_ == null) {
            if (prePredecessorsDescription_ != null) {
              prePredecessorsDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(prePredecessorsDescription_).mergeFrom(value).buildPartial();
            } else {
              prePredecessorsDescription_ = value;
            }
            onChanged();
          } else {
            prePredecessorsDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public Builder clearPrePredecessorsDescription() {
          if (prePredecessorsDescriptionBuilder_ == null) {
            prePredecessorsDescription_ = null;
            onChanged();
          } else {
            prePredecessorsDescription_ = null;
            prePredecessorsDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getPrePredecessorsDescriptionBuilder() {
          
          onChanged();
          return getPrePredecessorsDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getPrePredecessorsDescriptionOrBuilder() {
          if (prePredecessorsDescriptionBuilder_ != null) {
            return prePredecessorsDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return prePredecessorsDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : prePredecessorsDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue pre_predecessors_description = 20034;</code>
         *
         * <pre>
         * Bezeichnung des Vor-Vorgängers
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getPrePredecessorsDescriptionFieldBuilder() {
          if (prePredecessorsDescriptionBuilder_ == null) {
            prePredecessorsDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getPrePredecessorsDescription(),
                    getParentForChildren(),
                    isClean());
            prePredecessorsDescription_ = null;
          }
          return prePredecessorsDescriptionBuilder_;
        }

        private io.dstore.engine.Values.stringValue inputDateAndTimeChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> inputDateAndTimeCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public boolean hasInputDateAndTimeChar() {
          return inputDateAndTimeCharBuilder_ != null || inputDateAndTimeChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            return inputDateAndTimeChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
          } else {
            return inputDateAndTimeCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public Builder setInputDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inputDateAndTimeChar_ = value;
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public Builder setInputDateAndTimeChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = builderForValue.build();
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public Builder mergeInputDateAndTimeChar(io.dstore.engine.Values.stringValue value) {
          if (inputDateAndTimeCharBuilder_ == null) {
            if (inputDateAndTimeChar_ != null) {
              inputDateAndTimeChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(inputDateAndTimeChar_).mergeFrom(value).buildPartial();
            } else {
              inputDateAndTimeChar_ = value;
            }
            onChanged();
          } else {
            inputDateAndTimeCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public Builder clearInputDateAndTimeChar() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeChar_ = null;
            onChanged();
          } else {
            inputDateAndTimeChar_ = null;
            inputDateAndTimeCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getInputDateAndTimeCharBuilder() {
          
          onChanged();
          return getInputDateAndTimeCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getInputDateAndTimeCharOrBuilder() {
          if (inputDateAndTimeCharBuilder_ != null) {
            return inputDateAndTimeCharBuilder_.getMessageOrBuilder();
          } else {
            return inputDateAndTimeChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : inputDateAndTimeChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue input_date_and_time_char = 30007;</code>
         *
         * <pre>
         * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55:120"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getInputDateAndTimeCharFieldBuilder() {
          if (inputDateAndTimeCharBuilder_ == null) {
            inputDateAndTimeCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getInputDateAndTimeChar(),
                    getParentForChildren(),
                    isClean());
            inputDateAndTimeChar_ = null;
          }
          return inputDateAndTimeCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetTrolley_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetTrolley_Pu.Response.Row)
      private static final io.dstore.engine.procs.OmGetTrolleyPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetTrolleyPu.Response.Row();
      }

      public static io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetTrolleyPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetTrolleyPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetTrolley_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetTrolley_Pu.Response)
        io.dstore.engine.procs.OmGetTrolleyPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetTrolleyPu.Response.class, io.dstore.engine.procs.OmGetTrolleyPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetTrolleyPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetTrolleyPu.internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor;
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetTrolleyPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Response build() {
        io.dstore.engine.procs.OmGetTrolleyPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetTrolleyPu.Response buildPartial() {
        io.dstore.engine.procs.OmGetTrolleyPu.Response result = new io.dstore.engine.procs.OmGetTrolleyPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetTrolleyPu.Response) {
          return mergeFrom((io.dstore.engine.procs.OmGetTrolleyPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetTrolleyPu.Response other) {
        if (other == io.dstore.engine.procs.OmGetTrolleyPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetTrolleyPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetTrolleyPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder, io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.OmGetTrolleyPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmGetTrolleyPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetTrolley_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetTrolleyPu.Response.Row, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder, io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmGetTrolleyPu.Response.Row, io.dstore.engine.procs.OmGetTrolleyPu.Response.Row.Builder, io.dstore.engine.procs.OmGetTrolleyPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetTrolley_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetTrolley_Pu.Response)
    private static final io.dstore.engine.procs.OmGetTrolleyPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetTrolleyPu.Response();
    }

    public static io.dstore.engine.procs.OmGetTrolleyPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetTrolleyPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetTrolley_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/dstore/engine/procedures/om_GetTrolley" +
      "_Pu.proto\022\036dstore.engine.om_GetTrolley_P" +
      "u\032\032dstore/engine/values.proto\032\031dstore/en" +
      "gine/error.proto\032\033dstore/engine/message." +
      "proto\"\377\013\n\nParameters\0224\n\tunique_id\030\001 \001(\0132" +
      "!.dstore.engine.values.stringValue\022\027\n\016un" +
      "ique_id_null\030\351\007 \001(\010\0225\n\tperson_id\030\002 \001(\0132\"" +
      ".dstore.engine.values.integerValue\022\027\n\016pe" +
      "rson_id_null\030\352\007 \001(\010\022<\n\020calculate_prices\030" +
      "\003 \001(\0132\".dstore.engine.values.integerValu",
      "e\022\036\n\025calculate_prices_null\030\353\007 \001(\010\022>\n\022che" +
      "ck_availability\030\004 \001(\0132\".dstore.engine.va" +
      "lues.booleanValue\022 \n\027check_availability_" +
      "null\030\354\007 \001(\010\022=\n\021show_descriptions\030\005 \001(\0132\"" +
      ".dstore.engine.values.booleanValue\022\037\n\026sh" +
      "ow_descriptions_null\030\355\007 \001(\010\022H\n\034price_nod" +
      "e_characteristic_id\030\006 \001(\0132\".dstore.engin" +
      "e.values.integerValue\022*\n!price_node_char" +
      "acteristic_id_null\030\356\007 \001(\010\022B\n\026node_charac" +
      "teristic_id\030\007 \001(\0132\".dstore.engine.values",
      ".integerValue\022$\n\033node_characteristic_id_" +
      "null\030\357\007 \001(\010\022@\n\024include_predecessors\030\010 \001(" +
      "\0132\".dstore.engine.values.booleanValue\022\"\n" +
      "\031include_predecessors_null\030\360\007 \001(\010\022H\n\034loo" +
      "k_for_product_description\030\t \001(\0132\".dstore" +
      ".engine.values.booleanValue\022*\n!look_for_" +
      "product_description_null\030\361\007 \001(\010\022L\n repai" +
      "r_entries_with_same_node_id\030\n \001(\0132\".dsto" +
      "re.engine.values.integerValue\022.\n%repair_" +
      "entries_with_same_node_id_null\030\362\007 \001(\010\022=\n",
      "\021get_plain_trolley\030\013 \001(\0132\".dstore.engine" +
      ".values.booleanValue\022\037\n\026get_plain_trolle" +
      "y_null\030\363\007 \001(\010\022>\n\022delivery_person_id\030\014 \001(" +
      "\0132\".dstore.engine.values.integerValue\022 \n" +
      "\027delivery_person_id_null\030\364\007 \001(\010\022L\n outpu" +
      "t_into_trolley_surch_interf\030\r \001(\0132\".dsto" +
      "re.engine.values.booleanValue\022.\n%output_" +
      "into_trolley_surch_interf_null\030\365\007 \001(\010\022;\n" +
      "\017payment_type_id\030\016 \001(\0132\".dstore.engine.v" +
      "alues.integerValue\022\035\n\024payment_type_id_nu",
      "ll\030\366\007 \001(\010\022<\n\020shipping_type_id\030\017 \001(\0132\".ds" +
      "tore.engine.values.integerValue\022\036\n\025shipp" +
      "ing_type_id_null\030\367\007 \001(\010\"\346\031\n\010Response\022)\n\005" +
      "error\030\001 \001(\0132\032.dstore.engine.error.Error\022" +
      "/\n\007message\030\003 \003(\0132\036.dstore.engine.message" +
      ".Message\0229\n\003row\030\004 \003(\0132,.dstore.engine.om" +
      "_GetTrolley_Pu.Response.Row\032\302\030\n\003Row\022\017\n\006r" +
      "ow_id\030\220N \001(\005\022M\n precise_abs_unit_gross_s" +
      "urcharge\030\221N \001(\0132\".dstore.engine.values.d" +
      "ecimalValue\022I\n\034price_node_characteristic",
      "_id\030\222N \001(\0132\".dstore.engine.values.intege" +
      "rValue\022=\n\020unit_gross_price\030\223N \001(\0132\".dsto" +
      "re.engine.values.decimalValue\022I\n\034absolut" +
      "e_total_net_surcharge\030\224N \001(\0132\".dstore.en" +
      "gine.values.decimalValue\022K\n\036absolute_tot" +
      "al_gross_surcharge\030\225N \001(\0132\".dstore.engin" +
      "e.values.decimalValue\0224\n\007removed\030\226N \001(\0132" +
      "\".dstore.engine.values.integerValue\022;\n\017c" +
      "urrency_symbol\030\227N \001(\0132!.dstore.engine.va" +
      "lues.stringValue\022E\n\030precise_unit_gross_p",
      "rice\030\230N \001(\0132\".dstore.engine.values.decim" +
      "alValue\022<\n\020node_description\030\231N \001(\0132!.dst" +
      "ore.engine.values.stringValue\022;\n\016unit_ne" +
      "t_price\030\232N \001(\0132\".dstore.engine.values.de" +
      "cimalValue\022K\n\036precise_abs_unit_net_surch" +
      "arge\030\233N \001(\0132\".dstore.engine.values.decim" +
      "alValue\022<\n\020surcharge_reason\030\234N \001(\0132!.dst" +
      "ore.engine.values.stringValue\022N\n!associa" +
      "ted_or_chosen_tree_node_id\030\235N \001(\0132\".dsto" +
      "re.engine.values.integerValue\0224\n\007node_id",
      "\030\236N \001(\0132\".dstore.engine.values.integerVa" +
      "lue\0224\n\007deleted\030\237N \001(\0132\".dstore.engine.va" +
      "lues.booleanValue\022G\n\032bonus_item_for_item" +
      "_set_id\030\240N \001(\0132\".dstore.engine.values.in" +
      "tegerValue\022?\n\022relative_surcharge\030\241N \001(\0132" +
      "\".dstore.engine.values.decimalValue\022K\n\037s" +
      "urcharge_generated_by_camp_ids\030\242N \001(\0132!." +
      "dstore.engine.values.stringValue\022F\n\031prec" +
      "ise_total_gross_price\030\243N \001(\0132\".dstore.en" +
      "gine.values.decimalValue\022B\n\023input_date_a",
      "nd_time\030\244N \001(\0132$.dstore.engine.values.ti" +
      "mestampValue\022=\n\020taxes_multiplier\030\245N \001(\0132" +
      "\".dstore.engine.values.decimalValue\022N\n!p" +
      "recise_abs_total_gross_surcharge\030\246N \001(\0132" +
      "\".dstore.engine.values.decimalValue\0229\n\ri" +
      "tem_property\030\247N \001(\0132!.dstore.engine.valu" +
      "es.stringValue\022L\n\037precise_abs_total_net_" +
      "surcharge\030\250N \001(\0132\".dstore.engine.values." +
      "decimalValue\022<\n\017total_net_price\030\251N \001(\0132\"" +
      ".dstore.engine.values.decimalValue\0225\n\010qu",
      "antity\030\252N \001(\0132\".dstore.engine.values.int" +
      "egerValue\0227\n\013unit_symbol\030\253N \001(\0132!.dstore" +
      ".engine.values.stringValue\022P\n$quantity_p" +
      "er_bundle_item_set_id_list\030\254N \001(\0132!.dsto" +
      "re.engine.values.stringValue\022<\n\017surcharg" +
      "e_value\030\255N \001(\0132\".dstore.engine.values.de" +
      "cimalValue\0228\n\013currency_id\030\256N \001(\0132\".dstor" +
      "e.engine.values.integerValue\0223\n\006active\030\257" +
      "N \001(\0132\".dstore.engine.values.booleanValu" +
      "e\022H\n\033absolute_unit_net_surcharge\030\260N \001(\0132",
      "\".dstore.engine.values.decimalValue\022;\n\016h" +
      "_tree_node_id\030\261N \001(\0132\".dstore.engine.val" +
      "ues.integerValue\022J\n\035absolute_unit_gross_" +
      "surcharge\030\262N \001(\0132\".dstore.engine.values." +
      "decimalValue\022D\n\027precise_total_net_price\030" +
      "\263N \001(\0132\".dstore.engine.values.decimalVal" +
      "ue\022>\n\021surcharge_type_id\030\264N \001(\0132\".dstore." +
      "engine.values.integerValue\022C\n\026precise_un" +
      "it_net_price\030\265N \001(\0132\".dstore.engine.valu" +
      "es.decimalValue\022>\n\021total_gross_price\030\266N ",
      "\001(\0132\".dstore.engine.values.decimalValue\022" +
      "G\n\031pre_predecessors_level_no\030\250\234\001 \001(\0132\".d" +
      "store.engine.values.integerValue\022K\n\035pre_" +
      "predecessors_tree_node_id\030\252\234\001 \001(\0132\".dsto" +
      "re.engine.values.integerValue\022G\n\031predece" +
      "ssors_tree_node_id\030\267\234\001 \001(\0132\".dstore.engi" +
      "ne.values.integerValue\022E\n\030predecessors_d" +
      "escription\030\270\234\001 \001(\0132!.dstore.engine.value" +
      "s.stringValue\022C\n\025predecessors_level_no\030\273" +
      "\234\001 \001(\0132\".dstore.engine.values.integerVal",
      "ue\022:\n\014tree_node_id\030\301\234\001 \001(\0132\".dstore.engi" +
      "ne.values.integerValue\022I\n\034pre_predecesso" +
      "rs_description\030\302\234\001 \001(\0132!.dstore.engine.v" +
      "alues.stringValue\022E\n\030input_date_and_time" +
      "_char\030\267\352\001 \001(\0132!.dstore.engine.values.str" +
      "ingValueB\030\n\026io.dstore.engine.procsb\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetTrolley_Pu_Parameters_descriptor,
        new java.lang.String[] { "UniqueId", "UniqueIdNull", "PersonId", "PersonIdNull", "CalculatePrices", "CalculatePricesNull", "CheckAvailability", "CheckAvailabilityNull", "ShowDescriptions", "ShowDescriptionsNull", "PriceNodeCharacteristicId", "PriceNodeCharacteristicIdNull", "NodeCharacteristicId", "NodeCharacteristicIdNull", "IncludePredecessors", "IncludePredecessorsNull", "LookForProductDescription", "LookForProductDescriptionNull", "RepairEntriesWithSameNodeId", "RepairEntriesWithSameNodeIdNull", "GetPlainTrolley", "GetPlainTrolleyNull", "DeliveryPersonId", "DeliveryPersonIdNull", "OutputIntoTrolleySurchInterf", "OutputIntoTrolleySurchInterfNull", "PaymentTypeId", "PaymentTypeIdNull", "ShippingTypeId", "ShippingTypeIdNull", });
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetTrolley_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetTrolley_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "PreciseAbsUnitGrossSurcharge", "PriceNodeCharacteristicId", "UnitGrossPrice", "AbsoluteTotalNetSurcharge", "AbsoluteTotalGrossSurcharge", "Removed", "CurrencySymbol", "PreciseUnitGrossPrice", "NodeDescription", "UnitNetPrice", "PreciseAbsUnitNetSurcharge", "SurchargeReason", "AssociatedOrChosenTreeNodeId", "NodeId", "Deleted", "BonusItemForItemSetId", "RelativeSurcharge", "SurchargeGeneratedByCampIds", "PreciseTotalGrossPrice", "InputDateAndTime", "TaxesMultiplier", "PreciseAbsTotalGrossSurcharge", "ItemProperty", "PreciseAbsTotalNetSurcharge", "TotalNetPrice", "Quantity", "UnitSymbol", "QuantityPerBundleItemSetIdList", "SurchargeValue", "CurrencyId", "Active", "AbsoluteUnitNetSurcharge", "HTreeNodeId", "AbsoluteUnitGrossSurcharge", "PreciseTotalNetPrice", "SurchargeTypeId", "PreciseUnitNetPrice", "TotalGrossPrice", "PrePredecessorsLevelNo", "PrePredecessorsTreeNodeId", "PredecessorsTreeNodeId", "PredecessorsDescription", "PredecessorsLevelNo", "TreeNodeId", "PrePredecessorsDescription", "InputDateAndTimeChar", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
