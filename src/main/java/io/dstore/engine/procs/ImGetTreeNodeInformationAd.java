// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetTreeNodeInformation_Ad.proto

package io.dstore.engine.procs;

public final class ImGetTreeNodeInformationAd {
  private ImGetTreeNodeInformationAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetTreeNodeInformation_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    boolean hasTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

    /**
     * <code>optional bool tree_node_id_null = 1001;</code>
     */
    boolean getTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    boolean hasGetAdditionalInformation();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    io.dstore.engine.Values.booleanValue getGetAdditionalInformation();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetAdditionalInformationOrBuilder();

    /**
     * <code>optional bool get_additional_information_null = 1003;</code>
     */
    boolean getGetAdditionalInformationNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      treeNodeIdNull_ = false;
      languageIdNull_ = false;
      getAdditionalInformationNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (treeNodeId_ != null) {
                subBuilder = treeNodeId_.toBuilder();
              }
              treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treeNodeId_);
                treeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getAdditionalInformation_ != null) {
                subBuilder = getAdditionalInformation_.toBuilder();
              }
              getAdditionalInformation_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAdditionalInformation_);
                getAdditionalInformation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              treeNodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              getAdditionalInformationNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.Builder.class);
    }

    public static final int TREE_NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue treeNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    public boolean hasTreeNodeId() {
      return treeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getTreeNodeId() {
      return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
      return getTreeNodeId();
    }

    public static final int TREE_NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean treeNodeIdNull_;
    /**
     * <code>optional bool tree_node_id_null = 1001;</code>
     */
    public boolean getTreeNodeIdNull() {
      return treeNodeIdNull_;
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int GET_ADDITIONAL_INFORMATION_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.booleanValue getAdditionalInformation_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    public boolean hasGetAdditionalInformation() {
      return getAdditionalInformation_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetAdditionalInformation() {
      return getAdditionalInformation_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAdditionalInformation_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetAdditionalInformationOrBuilder() {
      return getGetAdditionalInformation();
    }

    public static final int GET_ADDITIONAL_INFORMATION_NULL_FIELD_NUMBER = 1003;
    private boolean getAdditionalInformationNull_;
    /**
     * <code>optional bool get_additional_information_null = 1003;</code>
     */
    public boolean getGetAdditionalInformationNull() {
      return getAdditionalInformationNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (treeNodeId_ != null) {
        output.writeMessage(1, getTreeNodeId());
      }
      if (languageId_ != null) {
        output.writeMessage(2, getLanguageId());
      }
      if (getAdditionalInformation_ != null) {
        output.writeMessage(3, getGetAdditionalInformation());
      }
      if (treeNodeIdNull_ != false) {
        output.writeBool(1001, treeNodeIdNull_);
      }
      if (languageIdNull_ != false) {
        output.writeBool(1002, languageIdNull_);
      }
      if (getAdditionalInformationNull_ != false) {
        output.writeBool(1003, getAdditionalInformationNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (treeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTreeNodeId());
      }
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLanguageId());
      }
      if (getAdditionalInformation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGetAdditionalInformation());
      }
      if (treeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, treeNodeIdNull_);
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, languageIdNull_);
      }
      if (getAdditionalInformationNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, getAdditionalInformationNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Parameters)
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }
        treeNodeIdNull_ = false;

        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (getAdditionalInformationBuilder_ == null) {
          getAdditionalInformation_ = null;
        } else {
          getAdditionalInformation_ = null;
          getAdditionalInformationBuilder_ = null;
        }
        getAdditionalInformationNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters build() {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters buildPartial() {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters result = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters(this);
        if (treeNodeIdBuilder_ == null) {
          result.treeNodeId_ = treeNodeId_;
        } else {
          result.treeNodeId_ = treeNodeIdBuilder_.build();
        }
        result.treeNodeIdNull_ = treeNodeIdNull_;
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (getAdditionalInformationBuilder_ == null) {
          result.getAdditionalInformation_ = getAdditionalInformation_;
        } else {
          result.getAdditionalInformation_ = getAdditionalInformationBuilder_.build();
        }
        result.getAdditionalInformationNull_ = getAdditionalInformationNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters other) {
        if (other == io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters.getDefaultInstance()) return this;
        if (other.hasTreeNodeId()) {
          mergeTreeNodeId(other.getTreeNodeId());
        }
        if (other.getTreeNodeIdNull() != false) {
          setTreeNodeIdNull(other.getTreeNodeIdNull());
        }
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasGetAdditionalInformation()) {
          mergeGetAdditionalInformation(other.getGetAdditionalInformation());
        }
        if (other.getGetAdditionalInformationNull() != false) {
          setGetAdditionalInformationNull(other.getGetAdditionalInformationNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue treeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeIdBuilder_ != null || treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
        } else {
          return treeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treeNodeId_ = value;
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public Builder setTreeNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (treeNodeId_ != null) {
            treeNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
          } else {
            treeNodeId_ = value;
          }
          onChanged();
        } else {
          treeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public Builder clearTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
          onChanged();
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
        
        onChanged();
        return getTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        if (treeNodeIdBuilder_ != null) {
          return treeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return treeNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getTreeNodeIdFieldBuilder() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          treeNodeId_ = null;
        }
        return treeNodeIdBuilder_;
      }

      private boolean treeNodeIdNull_ ;
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public boolean getTreeNodeIdNull() {
        return treeNodeIdNull_;
      }
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public Builder setTreeNodeIdNull(boolean value) {
        
        treeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public Builder clearTreeNodeIdNull() {
        
        treeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getAdditionalInformation_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getAdditionalInformationBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public boolean hasGetAdditionalInformation() {
        return getAdditionalInformationBuilder_ != null || getAdditionalInformation_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetAdditionalInformation() {
        if (getAdditionalInformationBuilder_ == null) {
          return getAdditionalInformation_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAdditionalInformation_;
        } else {
          return getAdditionalInformationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public Builder setGetAdditionalInformation(io.dstore.engine.Values.booleanValue value) {
        if (getAdditionalInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAdditionalInformation_ = value;
          onChanged();
        } else {
          getAdditionalInformationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public Builder setGetAdditionalInformation(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getAdditionalInformationBuilder_ == null) {
          getAdditionalInformation_ = builderForValue.build();
          onChanged();
        } else {
          getAdditionalInformationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public Builder mergeGetAdditionalInformation(io.dstore.engine.Values.booleanValue value) {
        if (getAdditionalInformationBuilder_ == null) {
          if (getAdditionalInformation_ != null) {
            getAdditionalInformation_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getAdditionalInformation_).mergeFrom(value).buildPartial();
          } else {
            getAdditionalInformation_ = value;
          }
          onChanged();
        } else {
          getAdditionalInformationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public Builder clearGetAdditionalInformation() {
        if (getAdditionalInformationBuilder_ == null) {
          getAdditionalInformation_ = null;
          onChanged();
        } else {
          getAdditionalInformation_ = null;
          getAdditionalInformationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetAdditionalInformationBuilder() {
        
        onChanged();
        return getGetAdditionalInformationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetAdditionalInformationOrBuilder() {
        if (getAdditionalInformationBuilder_ != null) {
          return getAdditionalInformationBuilder_.getMessageOrBuilder();
        } else {
          return getAdditionalInformation_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getAdditionalInformation_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_additional_information = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetAdditionalInformationFieldBuilder() {
        if (getAdditionalInformationBuilder_ == null) {
          getAdditionalInformationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetAdditionalInformation(),
                  getParentForChildren(),
                  isClean());
          getAdditionalInformation_ = null;
        }
        return getAdditionalInformationBuilder_;
      }

      private boolean getAdditionalInformationNull_ ;
      /**
       * <code>optional bool get_additional_information_null = 1003;</code>
       */
      public boolean getGetAdditionalInformationNull() {
        return getAdditionalInformationNull_;
      }
      /**
       * <code>optional bool get_additional_information_null = 1003;</code>
       */
      public Builder setGetAdditionalInformationNull(boolean value) {
        
        getAdditionalInformationNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_additional_information_null = 1003;</code>
       */
      public Builder clearGetAdditionalInformationNull() {
        
        getAdditionalInformationNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Parameters)
    private static final io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters();
    }

    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetTreeNodeInformation_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      boolean hasPredecessor();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPredecessor();
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      boolean hasLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLevelNo();
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      boolean hasCountActiveSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCountActiveSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCountActiveSuccessorsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      boolean hasCountDeletedSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCountDeletedSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCountDeletedSuccessorsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      boolean hasActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getActive();
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      boolean hasCountSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCountSuccessors();
      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCountSuccessorsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      boolean hasDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getDeleted();
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      boolean hasInheritsFrom();
      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getInheritsFrom();
      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getInheritsFromOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      boolean hasLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      boolean hasSymbolId();
      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSymbolId();
      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSymbolIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (predecessor_ != null) {
                  subBuilder = predecessor_.toBuilder();
                }
                predecessor_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessor_);
                  predecessor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (levelNo_ != null) {
                  subBuilder = levelNo_.toBuilder();
                }
                levelNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelNo_);
                  levelNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (countActiveSuccessors_ != null) {
                  subBuilder = countActiveSuccessors_.toBuilder();
                }
                countActiveSuccessors_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countActiveSuccessors_);
                  countActiveSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (countDeletedSuccessors_ != null) {
                  subBuilder = countDeletedSuccessors_.toBuilder();
                }
                countDeletedSuccessors_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countDeletedSuccessors_);
                  countDeletedSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (countSuccessors_ != null) {
                  subBuilder = countSuccessors_.toBuilder();
                }
                countSuccessors_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countSuccessors_);
                  countSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (deleted_ != null) {
                  subBuilder = deleted_.toBuilder();
                }
                deleted_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deleted_);
                  deleted_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (inheritsFrom_ != null) {
                  subBuilder = inheritsFrom_.toBuilder();
                }
                inheritsFrom_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inheritsFrom_);
                  inheritsFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (levelId_ != null) {
                  subBuilder = levelId_.toBuilder();
                }
                levelId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelId_);
                  levelId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (symbolId_ != null) {
                  subBuilder = symbolId_.toBuilder();
                }
                symbolId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(symbolId_);
                  symbolId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PREDECESSOR_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue predecessor_;
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      public boolean hasPredecessor() {
        return predecessor_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPredecessor() {
        return predecessor_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
       *
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder() {
        return getPredecessor();
      }

      public static final int LEVEL_NO_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue levelNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public boolean hasLevelNo() {
        return levelNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLevelNo() {
        return levelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
       *
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder() {
        return getLevelNo();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int COUNT_ACTIVE_SUCCESSORS_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue countActiveSuccessors_;
      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public boolean hasCountActiveSuccessors() {
        return countActiveSuccessors_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCountActiveSuccessors() {
        return countActiveSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countActiveSuccessors_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
       *
       * <pre>
       * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCountActiveSuccessorsOrBuilder() {
        return getCountActiveSuccessors();
      }

      public static final int COUNT_DELETED_SUCCESSORS_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue countDeletedSuccessors_;
      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public boolean hasCountDeletedSuccessors() {
        return countDeletedSuccessors_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCountDeletedSuccessors() {
        return countDeletedSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countDeletedSuccessors_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
       *
       * <pre>
       * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCountDeletedSuccessorsOrBuilder() {
        return getCountDeletedSuccessors();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.booleanValue active_;
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
       *
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
       *
       * <pre>
       * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
       *
       * <pre>
       * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int COUNT_SUCCESSORS_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.integerValue countSuccessors_;
      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      public boolean hasCountSuccessors() {
        return countSuccessors_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCountSuccessors() {
        return countSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countSuccessors_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
       *
       * <pre>
       * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCountSuccessorsOrBuilder() {
        return getCountSuccessors();
      }

      public static final int DELETED_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.booleanValue deleted_;
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public boolean hasDeleted() {
        return deleted_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getDeleted() {
        return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
       *
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
        return getDeleted();
      }

      public static final int INHERITS_FROM_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue inheritsFrom_;
      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      public boolean hasInheritsFrom() {
        return inheritsFrom_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getInheritsFrom() {
        return inheritsFrom_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritsFrom_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
       *
       * <pre>
       * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getInheritsFromOrBuilder() {
        return getInheritsFrom();
      }

      public static final int LEVEL_ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue levelId_;
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public boolean hasLevelId() {
        return levelId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLevelId() {
        return levelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
       *
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder() {
        return getLevelId();
      }

      public static final int SYMBOL_ID_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue symbolId_;
      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      public boolean hasSymbolId() {
        return symbolId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSymbolId() {
        return symbolId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : symbolId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
       *
       * <pre>
       * ID eines Symbols, das der "NodeID" zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSymbolIdOrBuilder() {
        return getSymbolId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (predecessor_ != null) {
          output.writeMessage(10001, getPredecessor());
        }
        if (levelNo_ != null) {
          output.writeMessage(10002, getLevelNo());
        }
        if (sortNo_ != null) {
          output.writeMessage(10003, getSortNo());
        }
        if (countActiveSuccessors_ != null) {
          output.writeMessage(10004, getCountActiveSuccessors());
        }
        if (countDeletedSuccessors_ != null) {
          output.writeMessage(10005, getCountDeletedSuccessors());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10006, getNodeDescription());
        }
        if (active_ != null) {
          output.writeMessage(10007, getActive());
        }
        if (nodeId_ != null) {
          output.writeMessage(10008, getNodeId());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10009, getTreeNodeId());
        }
        if (countSuccessors_ != null) {
          output.writeMessage(10010, getCountSuccessors());
        }
        if (deleted_ != null) {
          output.writeMessage(10011, getDeleted());
        }
        if (inheritsFrom_ != null) {
          output.writeMessage(10012, getInheritsFrom());
        }
        if (levelId_ != null) {
          output.writeMessage(10013, getLevelId());
        }
        if (symbolId_ != null) {
          output.writeMessage(10014, getSymbolId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (predecessor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getPredecessor());
        }
        if (levelNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getLevelNo());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getSortNo());
        }
        if (countActiveSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getCountActiveSuccessors());
        }
        if (countDeletedSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getCountDeletedSuccessors());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getNodeDescription());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getActive());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getNodeId());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getTreeNodeId());
        }
        if (countSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getCountSuccessors());
        }
        if (deleted_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getDeleted());
        }
        if (inheritsFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getInheritsFrom());
        }
        if (levelId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getLevelId());
        }
        if (symbolId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getSymbolId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row)
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (predecessorBuilder_ == null) {
            predecessor_ = null;
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (countActiveSuccessorsBuilder_ == null) {
            countActiveSuccessors_ = null;
          } else {
            countActiveSuccessors_ = null;
            countActiveSuccessorsBuilder_ = null;
          }
          if (countDeletedSuccessorsBuilder_ == null) {
            countDeletedSuccessors_ = null;
          } else {
            countDeletedSuccessors_ = null;
            countDeletedSuccessorsBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (countSuccessorsBuilder_ == null) {
            countSuccessors_ = null;
          } else {
            countSuccessors_ = null;
            countSuccessorsBuilder_ = null;
          }
          if (deletedBuilder_ == null) {
            deleted_ = null;
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }
          if (inheritsFromBuilder_ == null) {
            inheritsFrom_ = null;
          } else {
            inheritsFrom_ = null;
            inheritsFromBuilder_ = null;
          }
          if (levelIdBuilder_ == null) {
            levelId_ = null;
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }
          if (symbolIdBuilder_ == null) {
            symbolId_ = null;
          } else {
            symbolId_ = null;
            symbolIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row build() {
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row buildPartial() {
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row result = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (predecessorBuilder_ == null) {
            result.predecessor_ = predecessor_;
          } else {
            result.predecessor_ = predecessorBuilder_.build();
          }
          if (levelNoBuilder_ == null) {
            result.levelNo_ = levelNo_;
          } else {
            result.levelNo_ = levelNoBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (countActiveSuccessorsBuilder_ == null) {
            result.countActiveSuccessors_ = countActiveSuccessors_;
          } else {
            result.countActiveSuccessors_ = countActiveSuccessorsBuilder_.build();
          }
          if (countDeletedSuccessorsBuilder_ == null) {
            result.countDeletedSuccessors_ = countDeletedSuccessors_;
          } else {
            result.countDeletedSuccessors_ = countDeletedSuccessorsBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (countSuccessorsBuilder_ == null) {
            result.countSuccessors_ = countSuccessors_;
          } else {
            result.countSuccessors_ = countSuccessorsBuilder_.build();
          }
          if (deletedBuilder_ == null) {
            result.deleted_ = deleted_;
          } else {
            result.deleted_ = deletedBuilder_.build();
          }
          if (inheritsFromBuilder_ == null) {
            result.inheritsFrom_ = inheritsFrom_;
          } else {
            result.inheritsFrom_ = inheritsFromBuilder_.build();
          }
          if (levelIdBuilder_ == null) {
            result.levelId_ = levelId_;
          } else {
            result.levelId_ = levelIdBuilder_.build();
          }
          if (symbolIdBuilder_ == null) {
            result.symbolId_ = symbolId_;
          } else {
            result.symbolId_ = symbolIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row other) {
          if (other == io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasPredecessor()) {
            mergePredecessor(other.getPredecessor());
          }
          if (other.hasLevelNo()) {
            mergeLevelNo(other.getLevelNo());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasCountActiveSuccessors()) {
            mergeCountActiveSuccessors(other.getCountActiveSuccessors());
          }
          if (other.hasCountDeletedSuccessors()) {
            mergeCountDeletedSuccessors(other.getCountDeletedSuccessors());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasCountSuccessors()) {
            mergeCountSuccessors(other.getCountSuccessors());
          }
          if (other.hasDeleted()) {
            mergeDeleted(other.getDeleted());
          }
          if (other.hasInheritsFrom()) {
            mergeInheritsFrom(other.getInheritsFrom());
          }
          if (other.hasLevelId()) {
            mergeLevelId(other.getLevelId());
          }
          if (other.hasSymbolId()) {
            mergeSymbolId(other.getSymbolId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue predecessor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> predecessorBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public boolean hasPredecessor() {
          return predecessorBuilder_ != null || predecessor_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPredecessor() {
          if (predecessorBuilder_ == null) {
            return predecessor_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
          } else {
            return predecessorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public Builder setPredecessor(io.dstore.engine.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessor_ = value;
            onChanged();
          } else {
            predecessorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public Builder setPredecessor(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (predecessorBuilder_ == null) {
            predecessor_ = builderForValue.build();
            onChanged();
          } else {
            predecessorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public Builder mergePredecessor(io.dstore.engine.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (predecessor_ != null) {
              predecessor_ =
                io.dstore.engine.Values.integerValue.newBuilder(predecessor_).mergeFrom(value).buildPartial();
            } else {
              predecessor_ = value;
            }
            onChanged();
          } else {
            predecessorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public Builder clearPredecessor() {
          if (predecessorBuilder_ == null) {
            predecessor_ = null;
            onChanged();
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPredecessorBuilder() {
          
          onChanged();
          return getPredecessorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPredecessorOrBuilder() {
          if (predecessorBuilder_ != null) {
            return predecessorBuilder_.getMessageOrBuilder();
          } else {
            return predecessor_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : predecessor_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue predecessor = 10001;</code>
         *
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPredecessorFieldBuilder() {
          if (predecessorBuilder_ == null) {
            predecessorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPredecessor(),
                    getParentForChildren(),
                    isClean());
            predecessor_ = null;
          }
          return predecessorBuilder_;
        }

        private io.dstore.engine.Values.integerValue levelNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> levelNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public boolean hasLevelNo() {
          return levelNoBuilder_ != null || levelNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLevelNo() {
          if (levelNoBuilder_ == null) {
            return levelNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
          } else {
            return levelNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelNo(io.dstore.engine.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelNo_ = value;
            onChanged();
          } else {
            levelNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (levelNoBuilder_ == null) {
            levelNo_ = builderForValue.build();
            onChanged();
          } else {
            levelNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder mergeLevelNo(io.dstore.engine.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (levelNo_ != null) {
              levelNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(levelNo_).mergeFrom(value).buildPartial();
            } else {
              levelNo_ = value;
            }
            onChanged();
          } else {
            levelNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder clearLevelNo() {
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
            onChanged();
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLevelNoBuilder() {
          
          onChanged();
          return getLevelNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLevelNoOrBuilder() {
          if (levelNoBuilder_ != null) {
            return levelNoBuilder_.getMessageOrBuilder();
          } else {
            return levelNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : levelNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_no = 10002;</code>
         *
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLevelNoFieldBuilder() {
          if (levelNoBuilder_ == null) {
            levelNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLevelNo(),
                    getParentForChildren(),
                    isClean());
            levelNo_ = null;
          }
          return levelNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10003;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "TreeNodeID" innerhalb aller "Nachbar"-Elemente von "&#64;TreeNodeID" ("Nachbar"-Elemente haben den gleichen Vorgänger)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue countActiveSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> countActiveSuccessorsBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public boolean hasCountActiveSuccessors() {
          return countActiveSuccessorsBuilder_ != null || countActiveSuccessors_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCountActiveSuccessors() {
          if (countActiveSuccessorsBuilder_ == null) {
            return countActiveSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countActiveSuccessors_;
          } else {
            return countActiveSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder setCountActiveSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countActiveSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countActiveSuccessors_ = value;
            onChanged();
          } else {
            countActiveSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder setCountActiveSuccessors(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (countActiveSuccessorsBuilder_ == null) {
            countActiveSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            countActiveSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder mergeCountActiveSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countActiveSuccessorsBuilder_ == null) {
            if (countActiveSuccessors_ != null) {
              countActiveSuccessors_ =
                io.dstore.engine.Values.integerValue.newBuilder(countActiveSuccessors_).mergeFrom(value).buildPartial();
            } else {
              countActiveSuccessors_ = value;
            }
            onChanged();
          } else {
            countActiveSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder clearCountActiveSuccessors() {
          if (countActiveSuccessorsBuilder_ == null) {
            countActiveSuccessors_ = null;
            onChanged();
          } else {
            countActiveSuccessors_ = null;
            countActiveSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCountActiveSuccessorsBuilder() {
          
          onChanged();
          return getCountActiveSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCountActiveSuccessorsOrBuilder() {
          if (countActiveSuccessorsBuilder_ != null) {
            return countActiveSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return countActiveSuccessors_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : countActiveSuccessors_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_active_successors = 10004;</code>
         *
         * <pre>
         * Anzahl aktiver ("Active = 1") und nicht gelöschter ("Deleted = 0") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCountActiveSuccessorsFieldBuilder() {
          if (countActiveSuccessorsBuilder_ == null) {
            countActiveSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCountActiveSuccessors(),
                    getParentForChildren(),
                    isClean());
            countActiveSuccessors_ = null;
          }
          return countActiveSuccessorsBuilder_;
        }

        private io.dstore.engine.Values.integerValue countDeletedSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> countDeletedSuccessorsBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public boolean hasCountDeletedSuccessors() {
          return countDeletedSuccessorsBuilder_ != null || countDeletedSuccessors_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCountDeletedSuccessors() {
          if (countDeletedSuccessorsBuilder_ == null) {
            return countDeletedSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countDeletedSuccessors_;
          } else {
            return countDeletedSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder setCountDeletedSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countDeletedSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countDeletedSuccessors_ = value;
            onChanged();
          } else {
            countDeletedSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder setCountDeletedSuccessors(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (countDeletedSuccessorsBuilder_ == null) {
            countDeletedSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            countDeletedSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder mergeCountDeletedSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countDeletedSuccessorsBuilder_ == null) {
            if (countDeletedSuccessors_ != null) {
              countDeletedSuccessors_ =
                io.dstore.engine.Values.integerValue.newBuilder(countDeletedSuccessors_).mergeFrom(value).buildPartial();
            } else {
              countDeletedSuccessors_ = value;
            }
            onChanged();
          } else {
            countDeletedSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public Builder clearCountDeletedSuccessors() {
          if (countDeletedSuccessorsBuilder_ == null) {
            countDeletedSuccessors_ = null;
            onChanged();
          } else {
            countDeletedSuccessors_ = null;
            countDeletedSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCountDeletedSuccessorsBuilder() {
          
          onChanged();
          return getCountDeletedSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCountDeletedSuccessorsOrBuilder() {
          if (countDeletedSuccessorsBuilder_ != null) {
            return countDeletedSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return countDeletedSuccessors_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : countDeletedSuccessors_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_deleted_successors = 10005;</code>
         *
         * <pre>
         * Anzahl gelöschter ("Deleted = 1") Nachfolge-Elemente von "&#64;TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCountDeletedSuccessorsFieldBuilder() {
          if (countDeletedSuccessorsBuilder_ == null) {
            countDeletedSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCountDeletedSuccessors(),
                    getParentForChildren(),
                    isClean());
            countDeletedSuccessors_ = null;
          }
          return countDeletedSuccessorsBuilder_;
        }

        private io.dstore.engine.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.engine.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue node_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.engine.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setActive(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder mergeActive(io.dstore.engine.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.engine.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue active = 10007;</code>
         *
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10008;</code>
         *
         * <pre>
         * ID des zur "&#64;TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.engine.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue tree_node_id = 10009;</code>
         *
         * <pre>
         * Nochmal die übergebene "&#64;TreeNodeID" (Richtig, diese Spalte ist eigentlich überflüssig)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue countSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> countSuccessorsBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public boolean hasCountSuccessors() {
          return countSuccessorsBuilder_ != null || countSuccessors_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCountSuccessors() {
          if (countSuccessorsBuilder_ == null) {
            return countSuccessors_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countSuccessors_;
          } else {
            return countSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public Builder setCountSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countSuccessors_ = value;
            onChanged();
          } else {
            countSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public Builder setCountSuccessors(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (countSuccessorsBuilder_ == null) {
            countSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            countSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public Builder mergeCountSuccessors(io.dstore.engine.Values.integerValue value) {
          if (countSuccessorsBuilder_ == null) {
            if (countSuccessors_ != null) {
              countSuccessors_ =
                io.dstore.engine.Values.integerValue.newBuilder(countSuccessors_).mergeFrom(value).buildPartial();
            } else {
              countSuccessors_ = value;
            }
            onChanged();
          } else {
            countSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public Builder clearCountSuccessors() {
          if (countSuccessorsBuilder_ == null) {
            countSuccessors_ = null;
            onChanged();
          } else {
            countSuccessors_ = null;
            countSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCountSuccessorsBuilder() {
          
          onChanged();
          return getCountSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCountSuccessorsOrBuilder() {
          if (countSuccessorsBuilder_ != null) {
            return countSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return countSuccessors_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : countSuccessors_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue count_successors = 10010;</code>
         *
         * <pre>
         * Wieviele Nachfolger (egal ob aktiv oder nicht, egal ob gelöscht oder nicht) hat "TreeNodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCountSuccessorsFieldBuilder() {
          if (countSuccessorsBuilder_ == null) {
            countSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCountSuccessors(),
                    getParentForChildren(),
                    isClean());
            countSuccessors_ = null;
          }
          return countSuccessorsBuilder_;
        }

        private io.dstore.engine.Values.booleanValue deleted_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> deletedBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public boolean hasDeleted() {
          return deletedBuilder_ != null || deleted_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getDeleted() {
          if (deletedBuilder_ == null) {
            return deleted_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          } else {
            return deletedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deleted_ = value;
            onChanged();
          } else {
            deletedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder setDeleted(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (deletedBuilder_ == null) {
            deleted_ = builderForValue.build();
            onChanged();
          } else {
            deletedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder mergeDeleted(io.dstore.engine.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (deleted_ != null) {
              deleted_ =
                io.dstore.engine.Values.booleanValue.newBuilder(deleted_).mergeFrom(value).buildPartial();
            } else {
              deleted_ = value;
            }
            onChanged();
          } else {
            deletedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public Builder clearDeleted() {
          if (deletedBuilder_ == null) {
            deleted_ = null;
            onChanged();
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getDeletedBuilder() {
          
          onChanged();
          return getDeletedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getDeletedOrBuilder() {
          if (deletedBuilder_ != null) {
            return deletedBuilder_.getMessageOrBuilder();
          } else {
            return deleted_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : deleted_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue deleted = 10011;</code>
         *
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getDeletedFieldBuilder() {
          if (deletedBuilder_ == null) {
            deletedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getDeleted(),
                    getParentForChildren(),
                    isClean());
            deleted_ = null;
          }
          return deletedBuilder_;
        }

        private io.dstore.engine.Values.integerValue inheritsFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> inheritsFromBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public boolean hasInheritsFrom() {
          return inheritsFromBuilder_ != null || inheritsFrom_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getInheritsFrom() {
          if (inheritsFromBuilder_ == null) {
            return inheritsFrom_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritsFrom_;
          } else {
            return inheritsFromBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public Builder setInheritsFrom(io.dstore.engine.Values.integerValue value) {
          if (inheritsFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inheritsFrom_ = value;
            onChanged();
          } else {
            inheritsFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public Builder setInheritsFrom(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (inheritsFromBuilder_ == null) {
            inheritsFrom_ = builderForValue.build();
            onChanged();
          } else {
            inheritsFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public Builder mergeInheritsFrom(io.dstore.engine.Values.integerValue value) {
          if (inheritsFromBuilder_ == null) {
            if (inheritsFrom_ != null) {
              inheritsFrom_ =
                io.dstore.engine.Values.integerValue.newBuilder(inheritsFrom_).mergeFrom(value).buildPartial();
            } else {
              inheritsFrom_ = value;
            }
            onChanged();
          } else {
            inheritsFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public Builder clearInheritsFrom() {
          if (inheritsFromBuilder_ == null) {
            inheritsFrom_ = null;
            onChanged();
          } else {
            inheritsFrom_ = null;
            inheritsFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getInheritsFromBuilder() {
          
          onChanged();
          return getInheritsFromFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getInheritsFromOrBuilder() {
          if (inheritsFromBuilder_ != null) {
            return inheritsFromBuilder_.getMessageOrBuilder();
          } else {
            return inheritsFrom_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritsFrom_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherits_from = 10012;</code>
         *
         * <pre>
         * ID eines Elementes im Artikelbaum, VON dem "TreeNodeID" Eigenschaften erbt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getInheritsFromFieldBuilder() {
          if (inheritsFromBuilder_ == null) {
            inheritsFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getInheritsFrom(),
                    getParentForChildren(),
                    isClean());
            inheritsFrom_ = null;
          }
          return inheritsFromBuilder_;
        }

        private io.dstore.engine.Values.integerValue levelId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> levelIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public boolean hasLevelId() {
          return levelIdBuilder_ != null || levelId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLevelId() {
          if (levelIdBuilder_ == null) {
            return levelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
          } else {
            return levelIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelId(io.dstore.engine.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelId_ = value;
            onChanged();
          } else {
            levelIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder setLevelId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (levelIdBuilder_ == null) {
            levelId_ = builderForValue.build();
            onChanged();
          } else {
            levelIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder mergeLevelId(io.dstore.engine.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (levelId_ != null) {
              levelId_ =
                io.dstore.engine.Values.integerValue.newBuilder(levelId_).mergeFrom(value).buildPartial();
            } else {
              levelId_ = value;
            }
            onChanged();
          } else {
            levelIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public Builder clearLevelId() {
          if (levelIdBuilder_ == null) {
            levelId_ = null;
            onChanged();
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLevelIdBuilder() {
          
          onChanged();
          return getLevelIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLevelIdOrBuilder() {
          if (levelIdBuilder_ != null) {
            return levelIdBuilder_.getMessageOrBuilder();
          } else {
            return levelId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : levelId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue level_id = 10013;</code>
         *
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLevelIdFieldBuilder() {
          if (levelIdBuilder_ == null) {
            levelIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLevelId(),
                    getParentForChildren(),
                    isClean());
            levelId_ = null;
          }
          return levelIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue symbolId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> symbolIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public boolean hasSymbolId() {
          return symbolIdBuilder_ != null || symbolId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSymbolId() {
          if (symbolIdBuilder_ == null) {
            return symbolId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : symbolId_;
          } else {
            return symbolIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public Builder setSymbolId(io.dstore.engine.Values.integerValue value) {
          if (symbolIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            symbolId_ = value;
            onChanged();
          } else {
            symbolIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public Builder setSymbolId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (symbolIdBuilder_ == null) {
            symbolId_ = builderForValue.build();
            onChanged();
          } else {
            symbolIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public Builder mergeSymbolId(io.dstore.engine.Values.integerValue value) {
          if (symbolIdBuilder_ == null) {
            if (symbolId_ != null) {
              symbolId_ =
                io.dstore.engine.Values.integerValue.newBuilder(symbolId_).mergeFrom(value).buildPartial();
            } else {
              symbolId_ = value;
            }
            onChanged();
          } else {
            symbolIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public Builder clearSymbolId() {
          if (symbolIdBuilder_ == null) {
            symbolId_ = null;
            onChanged();
          } else {
            symbolId_ = null;
            symbolIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSymbolIdBuilder() {
          
          onChanged();
          return getSymbolIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSymbolIdOrBuilder() {
          if (symbolIdBuilder_ != null) {
            return symbolIdBuilder_.getMessageOrBuilder();
          } else {
            return symbolId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : symbolId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue symbol_id = 10014;</code>
         *
         * <pre>
         * ID eines Symbols, das der "NodeID" zugeordnet ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSymbolIdFieldBuilder() {
          if (symbolIdBuilder_ == null) {
            symbolIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSymbolId(),
                    getParentForChildren(),
                    isClean());
            symbolId_ = null;
          }
          return symbolIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row)
      private static final io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row();
      }

      public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetTreeNodeInformation_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetTreeNodeInformation_Ad.Response)
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.class, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response build() {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response buildPartial() {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response result = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response) {
          return mergeFrom((io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response other) {
        if (other == io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetTreeNodeInformation_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.Row.Builder, io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetTreeNodeInformation_Ad.Response)
    private static final io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response();
    }

    public static io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.ImGetTreeNodeInformationAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/im_GetTreeNod" +
      "eInformation_Ad.proto\022*dstore.engine.im_" +
      "GetTreeNodeInformation_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\032#dstore/en" +
      "gine/metainformation.proto\"\250\002\n\nParameter" +
      "s\0228\n\014tree_node_id\030\001 \001(\0132\".dstore.engine." +
      "values.integerValue\022\032\n\021tree_node_id_null" +
      "\030\351\007 \001(\010\0227\n\013language_id\030\002 \001(\0132\".dstore.en" +
      "gine.values.integerValue\022\031\n\020language_id_",
      "null\030\352\007 \001(\010\022F\n\032get_additional_informatio" +
      "n\030\003 \001(\0132\".dstore.engine.values.booleanVa" +
      "lue\022(\n\037get_additional_information_null\030\353" +
      "\007 \001(\010\"\310\010\n\010Response\022)\n\005error\030\001 \001(\0132\032.dsto" +
      "re.engine.error.Error\022H\n\020meta_informatio" +
      "n\030\002 \003(\0132..dstore.engine.metainformation." +
      "MetaInformation\022/\n\007message\030\003 \003(\0132\036.dstor" +
      "e.engine.message.Message\022E\n\003row\030\004 \003(\01328." +
      "dstore.engine.im_GetTreeNodeInformation_" +
      "Ad.Response.Row\032\316\006\n\003Row\022\017\n\006row_id\030\220N \001(\005",
      "\0228\n\013predecessor\030\221N \001(\0132\".dstore.engine.v" +
      "alues.integerValue\0225\n\010level_no\030\222N \001(\0132\"." +
      "dstore.engine.values.integerValue\0224\n\007sor" +
      "t_no\030\223N \001(\0132\".dstore.engine.values.integ" +
      "erValue\022D\n\027count_active_successors\030\224N \001(" +
      "\0132\".dstore.engine.values.integerValue\022E\n" +
      "\030count_deleted_successors\030\225N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022<\n\020node_des" +
      "cription\030\226N \001(\0132!.dstore.engine.values.s" +
      "tringValue\0223\n\006active\030\227N \001(\0132\".dstore.eng",
      "ine.values.booleanValue\0224\n\007node_id\030\230N \001(" +
      "\0132\".dstore.engine.values.integerValue\0229\n" +
      "\014tree_node_id\030\231N \001(\0132\".dstore.engine.val" +
      "ues.integerValue\022=\n\020count_successors\030\232N " +
      "\001(\0132\".dstore.engine.values.integerValue\022" +
      "4\n\007deleted\030\233N \001(\0132\".dstore.engine.values" +
      ".booleanValue\022:\n\rinherits_from\030\234N \001(\0132\"." +
      "dstore.engine.values.integerValue\0225\n\010lev" +
      "el_id\030\235N \001(\0132\".dstore.engine.values.inte" +
      "gerValue\0226\n\tsymbol_id\030\236N \001(\0132\".dstore.en",
      "gine.values.integerValueB\030\n\026io.dstore.en" +
      "gine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Parameters_descriptor,
        new java.lang.String[] { "TreeNodeId", "TreeNodeIdNull", "LanguageId", "LanguageIdNull", "GetAdditionalInformation", "GetAdditionalInformationNull", });
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetTreeNodeInformation_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Predecessor", "LevelNo", "SortNo", "CountActiveSuccessors", "CountDeletedSuccessors", "NodeDescription", "Active", "NodeId", "TreeNodeId", "CountSuccessors", "Deleted", "InheritsFrom", "LevelId", "SymbolId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
