// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/st_GetHTreeNodeStatistics_Ad.proto

package io.dstore.engine.procs;

public final class StGetHTreeNodeStatisticsAd {
  private StGetHTreeNodeStatisticsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    boolean hasHTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getHTreeNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder();

    /**
     * <code>optional bool h_tree_node_id_null = 1001;</code>
     */
    boolean getHTreeNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    boolean hasFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValue getFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

    /**
     * <code>optional bool from_date_null = 1002;</code>
     */
    boolean getFromDateNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    boolean hasToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValue getToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

    /**
     * <code>optional bool to_date_null = 1003;</code>
     */
    boolean getToDateNull();

    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    boolean hasSourceTable();
    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    io.dstore.engine.Values.integerValue getSourceTable();
    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getSourceTableOrBuilder();

    /**
     * <code>optional bool source_table_null = 1004;</code>
     */
    boolean getSourceTableNull();

    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    boolean hasBasicCharacteristicNumbers();
    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    io.dstore.engine.Values.stringValue getBasicCharacteristicNumbers();
    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicNumbersOrBuilder();

    /**
     * <code>optional bool basic_characteristic_numbers_null = 1005;</code>
     */
    boolean getBasicCharacteristicNumbersNull();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    boolean hasNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

    /**
     * <code>optional bool node_characteristic_id_null = 1006;</code>
     */
    boolean getNodeCharacteristicIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      hTreeNodeIdNull_ = false;
      fromDateNull_ = false;
      toDateNull_ = false;
      sourceTableNull_ = false;
      basicCharacteristicNumbersNull_ = false;
      nodeCharacteristicIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (hTreeNodeId_ != null) {
                subBuilder = hTreeNodeId_.toBuilder();
              }
              hTreeNodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hTreeNodeId_);
                hTreeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (fromDate_ != null) {
                subBuilder = fromDate_.toBuilder();
              }
              fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromDate_);
                fromDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (toDate_ != null) {
                subBuilder = toDate_.toBuilder();
              }
              toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toDate_);
                toDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (sourceTable_ != null) {
                subBuilder = sourceTable_.toBuilder();
              }
              sourceTable_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceTable_);
                sourceTable_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (basicCharacteristicNumbers_ != null) {
                subBuilder = basicCharacteristicNumbers_.toBuilder();
              }
              basicCharacteristicNumbers_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicCharacteristicNumbers_);
                basicCharacteristicNumbers_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId_ != null) {
                subBuilder = nodeCharacteristicId_.toBuilder();
              }
              nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId_);
                nodeCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              hTreeNodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              fromDateNull_ = input.readBool();
              break;
            }
            case 8024: {

              toDateNull_ = input.readBool();
              break;
            }
            case 8032: {

              sourceTableNull_ = input.readBool();
              break;
            }
            case 8040: {

              basicCharacteristicNumbersNull_ = input.readBool();
              break;
            }
            case 8048: {

              nodeCharacteristicIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.Builder.class);
    }

    public static final int H_TREE_NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue hTreeNodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public boolean hasHTreeNodeId() {
      return hTreeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getHTreeNodeId() {
      return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
      return getHTreeNodeId();
    }

    public static final int H_TREE_NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean hTreeNodeIdNull_;
    /**
     * <code>optional bool h_tree_node_id_null = 1001;</code>
     */
    public boolean getHTreeNodeIdNull() {
      return hTreeNodeIdNull_;
    }

    public static final int FROM_DATE_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.timestampValue fromDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public boolean hasFromDate() {
      return fromDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValue getFromDate() {
      return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
      return getFromDate();
    }

    public static final int FROM_DATE_NULL_FIELD_NUMBER = 1002;
    private boolean fromDateNull_;
    /**
     * <code>optional bool from_date_null = 1002;</code>
     */
    public boolean getFromDateNull() {
      return fromDateNull_;
    }

    public static final int TO_DATE_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.timestampValue toDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public boolean hasToDate() {
      return toDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValue getToDate() {
      return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
      return getToDate();
    }

    public static final int TO_DATE_NULL_FIELD_NUMBER = 1003;
    private boolean toDateNull_;
    /**
     * <code>optional bool to_date_null = 1003;</code>
     */
    public boolean getToDateNull() {
      return toDateNull_;
    }

    public static final int SOURCE_TABLE_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue sourceTable_;
    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    public boolean hasSourceTable() {
      return sourceTable_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getSourceTable() {
      return sourceTable_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTable_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getSourceTableOrBuilder() {
      return getSourceTable();
    }

    public static final int SOURCE_TABLE_NULL_FIELD_NUMBER = 1004;
    private boolean sourceTableNull_;
    /**
     * <code>optional bool source_table_null = 1004;</code>
     */
    public boolean getSourceTableNull() {
      return sourceTableNull_;
    }

    public static final int BASIC_CHARACTERISTIC_NUMBERS_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.stringValue basicCharacteristicNumbers_;
    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    public boolean hasBasicCharacteristicNumbers() {
      return basicCharacteristicNumbers_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    public io.dstore.engine.Values.stringValue getBasicCharacteristicNumbers() {
      return basicCharacteristicNumbers_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristicNumbers_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicNumbersOrBuilder() {
      return getBasicCharacteristicNumbers();
    }

    public static final int BASIC_CHARACTERISTIC_NUMBERS_NULL_FIELD_NUMBER = 1005;
    private boolean basicCharacteristicNumbersNull_;
    /**
     * <code>optional bool basic_characteristic_numbers_null = 1005;</code>
     */
    public boolean getBasicCharacteristicNumbersNull() {
      return basicCharacteristicNumbersNull_;
    }

    public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    public boolean hasNodeCharacteristicId() {
      return nodeCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
      return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
      return getNodeCharacteristicId();
    }

    public static final int NODE_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1006;
    private boolean nodeCharacteristicIdNull_;
    /**
     * <code>optional bool node_characteristic_id_null = 1006;</code>
     */
    public boolean getNodeCharacteristicIdNull() {
      return nodeCharacteristicIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hTreeNodeId_ != null) {
        output.writeMessage(1, getHTreeNodeId());
      }
      if (fromDate_ != null) {
        output.writeMessage(2, getFromDate());
      }
      if (toDate_ != null) {
        output.writeMessage(3, getToDate());
      }
      if (sourceTable_ != null) {
        output.writeMessage(4, getSourceTable());
      }
      if (basicCharacteristicNumbers_ != null) {
        output.writeMessage(5, getBasicCharacteristicNumbers());
      }
      if (nodeCharacteristicId_ != null) {
        output.writeMessage(6, getNodeCharacteristicId());
      }
      if (hTreeNodeIdNull_ != false) {
        output.writeBool(1001, hTreeNodeIdNull_);
      }
      if (fromDateNull_ != false) {
        output.writeBool(1002, fromDateNull_);
      }
      if (toDateNull_ != false) {
        output.writeBool(1003, toDateNull_);
      }
      if (sourceTableNull_ != false) {
        output.writeBool(1004, sourceTableNull_);
      }
      if (basicCharacteristicNumbersNull_ != false) {
        output.writeBool(1005, basicCharacteristicNumbersNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        output.writeBool(1006, nodeCharacteristicIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hTreeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHTreeNodeId());
      }
      if (fromDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFromDate());
      }
      if (toDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getToDate());
      }
      if (sourceTable_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSourceTable());
      }
      if (basicCharacteristicNumbers_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBasicCharacteristicNumbers());
      }
      if (nodeCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getNodeCharacteristicId());
      }
      if (hTreeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, hTreeNodeIdNull_);
      }
      if (fromDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, fromDateNull_);
      }
      if (toDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, toDateNull_);
      }
      if (sourceTableNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, sourceTableNull_);
      }
      if (basicCharacteristicNumbersNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, basicCharacteristicNumbersNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, nodeCharacteristicIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters)
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = null;
        } else {
          hTreeNodeId_ = null;
          hTreeNodeIdBuilder_ = null;
        }
        hTreeNodeIdNull_ = false;

        if (fromDateBuilder_ == null) {
          fromDate_ = null;
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }
        fromDateNull_ = false;

        if (toDateBuilder_ == null) {
          toDate_ = null;
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }
        toDateNull_ = false;

        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
        } else {
          sourceTable_ = null;
          sourceTableBuilder_ = null;
        }
        sourceTableNull_ = false;

        if (basicCharacteristicNumbersBuilder_ == null) {
          basicCharacteristicNumbers_ = null;
        } else {
          basicCharacteristicNumbers_ = null;
          basicCharacteristicNumbersBuilder_ = null;
        }
        basicCharacteristicNumbersNull_ = false;

        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }
        nodeCharacteristicIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters build() {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters buildPartial() {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters result = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters(this);
        if (hTreeNodeIdBuilder_ == null) {
          result.hTreeNodeId_ = hTreeNodeId_;
        } else {
          result.hTreeNodeId_ = hTreeNodeIdBuilder_.build();
        }
        result.hTreeNodeIdNull_ = hTreeNodeIdNull_;
        if (fromDateBuilder_ == null) {
          result.fromDate_ = fromDate_;
        } else {
          result.fromDate_ = fromDateBuilder_.build();
        }
        result.fromDateNull_ = fromDateNull_;
        if (toDateBuilder_ == null) {
          result.toDate_ = toDate_;
        } else {
          result.toDate_ = toDateBuilder_.build();
        }
        result.toDateNull_ = toDateNull_;
        if (sourceTableBuilder_ == null) {
          result.sourceTable_ = sourceTable_;
        } else {
          result.sourceTable_ = sourceTableBuilder_.build();
        }
        result.sourceTableNull_ = sourceTableNull_;
        if (basicCharacteristicNumbersBuilder_ == null) {
          result.basicCharacteristicNumbers_ = basicCharacteristicNumbers_;
        } else {
          result.basicCharacteristicNumbers_ = basicCharacteristicNumbersBuilder_.build();
        }
        result.basicCharacteristicNumbersNull_ = basicCharacteristicNumbersNull_;
        if (nodeCharacteristicIdBuilder_ == null) {
          result.nodeCharacteristicId_ = nodeCharacteristicId_;
        } else {
          result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
        }
        result.nodeCharacteristicIdNull_ = nodeCharacteristicIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters other) {
        if (other == io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasHTreeNodeId()) {
          mergeHTreeNodeId(other.getHTreeNodeId());
        }
        if (other.getHTreeNodeIdNull() != false) {
          setHTreeNodeIdNull(other.getHTreeNodeIdNull());
        }
        if (other.hasFromDate()) {
          mergeFromDate(other.getFromDate());
        }
        if (other.getFromDateNull() != false) {
          setFromDateNull(other.getFromDateNull());
        }
        if (other.hasToDate()) {
          mergeToDate(other.getToDate());
        }
        if (other.getToDateNull() != false) {
          setToDateNull(other.getToDateNull());
        }
        if (other.hasSourceTable()) {
          mergeSourceTable(other.getSourceTable());
        }
        if (other.getSourceTableNull() != false) {
          setSourceTableNull(other.getSourceTableNull());
        }
        if (other.hasBasicCharacteristicNumbers()) {
          mergeBasicCharacteristicNumbers(other.getBasicCharacteristicNumbers());
        }
        if (other.getBasicCharacteristicNumbersNull() != false) {
          setBasicCharacteristicNumbersNull(other.getBasicCharacteristicNumbersNull());
        }
        if (other.hasNodeCharacteristicId()) {
          mergeNodeCharacteristicId(other.getNodeCharacteristicId());
        }
        if (other.getNodeCharacteristicIdNull() != false) {
          setNodeCharacteristicIdNull(other.getNodeCharacteristicIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue hTreeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> hTreeNodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public boolean hasHTreeNodeId() {
        return hTreeNodeIdBuilder_ != null || hTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getHTreeNodeId() {
        if (hTreeNodeIdBuilder_ == null) {
          return hTreeNodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
        } else {
          return hTreeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder setHTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (hTreeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hTreeNodeId_ = value;
          onChanged();
        } else {
          hTreeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder setHTreeNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          hTreeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder mergeHTreeNodeId(io.dstore.engine.Values.integerValue value) {
        if (hTreeNodeIdBuilder_ == null) {
          if (hTreeNodeId_ != null) {
            hTreeNodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(hTreeNodeId_).mergeFrom(value).buildPartial();
          } else {
            hTreeNodeId_ = value;
          }
          onChanged();
        } else {
          hTreeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public Builder clearHTreeNodeId() {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeId_ = null;
          onChanged();
        } else {
          hTreeNodeId_ = null;
          hTreeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getHTreeNodeIdBuilder() {
        
        onChanged();
        return getHTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getHTreeNodeIdOrBuilder() {
        if (hTreeNodeIdBuilder_ != null) {
          return hTreeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return hTreeNodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : hTreeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue h_tree_node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getHTreeNodeIdFieldBuilder() {
        if (hTreeNodeIdBuilder_ == null) {
          hTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getHTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          hTreeNodeId_ = null;
        }
        return hTreeNodeIdBuilder_;
      }

      private boolean hTreeNodeIdNull_ ;
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public boolean getHTreeNodeIdNull() {
        return hTreeNodeIdNull_;
      }
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public Builder setHTreeNodeIdNull(boolean value) {
        
        hTreeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool h_tree_node_id_null = 1001;</code>
       */
      public Builder clearHTreeNodeIdNull() {
        
        hTreeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue fromDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public boolean hasFromDate() {
        return fromDateBuilder_ != null || fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        if (fromDateBuilder_ == null) {
          return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        } else {
          return fromDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromDate_ = value;
          onChanged();
        } else {
          fromDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder setFromDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (fromDateBuilder_ == null) {
          fromDate_ = builderForValue.build();
          onChanged();
        } else {
          fromDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (fromDate_ != null) {
            fromDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
          } else {
            fromDate_ = value;
          }
          onChanged();
        } else {
          fromDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public Builder clearFromDate() {
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
          onChanged();
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
        
        onChanged();
        return getFromDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        if (fromDateBuilder_ != null) {
          return fromDateBuilder_.getMessageOrBuilder();
        } else {
          return fromDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getFromDateFieldBuilder() {
        if (fromDateBuilder_ == null) {
          fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getFromDate(),
                  getParentForChildren(),
                  isClean());
          fromDate_ = null;
        }
        return fromDateBuilder_;
      }

      private boolean fromDateNull_ ;
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public boolean getFromDateNull() {
        return fromDateNull_;
      }
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public Builder setFromDateNull(boolean value) {
        
        fromDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_date_null = 1002;</code>
       */
      public Builder clearFromDateNull() {
        
        fromDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue toDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public boolean hasToDate() {
        return toDateBuilder_ != null || toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        if (toDateBuilder_ == null) {
          return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        } else {
          return toDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toDate_ = value;
          onChanged();
        } else {
          toDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder setToDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (toDateBuilder_ == null) {
          toDate_ = builderForValue.build();
          onChanged();
        } else {
          toDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (toDate_ != null) {
            toDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
          } else {
            toDate_ = value;
          }
          onChanged();
        } else {
          toDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public Builder clearToDate() {
        if (toDateBuilder_ == null) {
          toDate_ = null;
          onChanged();
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
        
        onChanged();
        return getToDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        if (toDateBuilder_ != null) {
          return toDateBuilder_.getMessageOrBuilder();
        } else {
          return toDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getToDateFieldBuilder() {
        if (toDateBuilder_ == null) {
          toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getToDate(),
                  getParentForChildren(),
                  isClean());
          toDate_ = null;
        }
        return toDateBuilder_;
      }

      private boolean toDateNull_ ;
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public boolean getToDateNull() {
        return toDateNull_;
      }
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public Builder setToDateNull(boolean value) {
        
        toDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool to_date_null = 1003;</code>
       */
      public Builder clearToDateNull() {
        
        toDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue sourceTable_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sourceTableBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public boolean hasSourceTable() {
        return sourceTableBuilder_ != null || sourceTable_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getSourceTable() {
        if (sourceTableBuilder_ == null) {
          return sourceTable_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTable_;
        } else {
          return sourceTableBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public Builder setSourceTable(io.dstore.engine.Values.integerValue value) {
        if (sourceTableBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceTable_ = value;
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public Builder setSourceTable(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = builderForValue.build();
          onChanged();
        } else {
          sourceTableBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public Builder mergeSourceTable(io.dstore.engine.Values.integerValue value) {
        if (sourceTableBuilder_ == null) {
          if (sourceTable_ != null) {
            sourceTable_ =
              io.dstore.engine.Values.integerValue.newBuilder(sourceTable_).mergeFrom(value).buildPartial();
          } else {
            sourceTable_ = value;
          }
          onChanged();
        } else {
          sourceTableBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public Builder clearSourceTable() {
        if (sourceTableBuilder_ == null) {
          sourceTable_ = null;
          onChanged();
        } else {
          sourceTable_ = null;
          sourceTableBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getSourceTableBuilder() {
        
        onChanged();
        return getSourceTableFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSourceTableOrBuilder() {
        if (sourceTableBuilder_ != null) {
          return sourceTableBuilder_.getMessageOrBuilder();
        } else {
          return sourceTable_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : sourceTable_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue source_table = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getSourceTableFieldBuilder() {
        if (sourceTableBuilder_ == null) {
          sourceTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getSourceTable(),
                  getParentForChildren(),
                  isClean());
          sourceTable_ = null;
        }
        return sourceTableBuilder_;
      }

      private boolean sourceTableNull_ ;
      /**
       * <code>optional bool source_table_null = 1004;</code>
       */
      public boolean getSourceTableNull() {
        return sourceTableNull_;
      }
      /**
       * <code>optional bool source_table_null = 1004;</code>
       */
      public Builder setSourceTableNull(boolean value) {
        
        sourceTableNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool source_table_null = 1004;</code>
       */
      public Builder clearSourceTableNull() {
        
        sourceTableNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue basicCharacteristicNumbers_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> basicCharacteristicNumbersBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public boolean hasBasicCharacteristicNumbers() {
        return basicCharacteristicNumbersBuilder_ != null || basicCharacteristicNumbers_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public io.dstore.engine.Values.stringValue getBasicCharacteristicNumbers() {
        if (basicCharacteristicNumbersBuilder_ == null) {
          return basicCharacteristicNumbers_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristicNumbers_;
        } else {
          return basicCharacteristicNumbersBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public Builder setBasicCharacteristicNumbers(io.dstore.engine.Values.stringValue value) {
        if (basicCharacteristicNumbersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicCharacteristicNumbers_ = value;
          onChanged();
        } else {
          basicCharacteristicNumbersBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public Builder setBasicCharacteristicNumbers(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (basicCharacteristicNumbersBuilder_ == null) {
          basicCharacteristicNumbers_ = builderForValue.build();
          onChanged();
        } else {
          basicCharacteristicNumbersBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public Builder mergeBasicCharacteristicNumbers(io.dstore.engine.Values.stringValue value) {
        if (basicCharacteristicNumbersBuilder_ == null) {
          if (basicCharacteristicNumbers_ != null) {
            basicCharacteristicNumbers_ =
              io.dstore.engine.Values.stringValue.newBuilder(basicCharacteristicNumbers_).mergeFrom(value).buildPartial();
          } else {
            basicCharacteristicNumbers_ = value;
          }
          onChanged();
        } else {
          basicCharacteristicNumbersBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public Builder clearBasicCharacteristicNumbers() {
        if (basicCharacteristicNumbersBuilder_ == null) {
          basicCharacteristicNumbers_ = null;
          onChanged();
        } else {
          basicCharacteristicNumbers_ = null;
          basicCharacteristicNumbersBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getBasicCharacteristicNumbersBuilder() {
        
        onChanged();
        return getBasicCharacteristicNumbersFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicNumbersOrBuilder() {
        if (basicCharacteristicNumbersBuilder_ != null) {
          return basicCharacteristicNumbersBuilder_.getMessageOrBuilder();
        } else {
          return basicCharacteristicNumbers_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristicNumbers_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic_numbers = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getBasicCharacteristicNumbersFieldBuilder() {
        if (basicCharacteristicNumbersBuilder_ == null) {
          basicCharacteristicNumbersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getBasicCharacteristicNumbers(),
                  getParentForChildren(),
                  isClean());
          basicCharacteristicNumbers_ = null;
        }
        return basicCharacteristicNumbersBuilder_;
      }

      private boolean basicCharacteristicNumbersNull_ ;
      /**
       * <code>optional bool basic_characteristic_numbers_null = 1005;</code>
       */
      public boolean getBasicCharacteristicNumbersNull() {
        return basicCharacteristicNumbersNull_;
      }
      /**
       * <code>optional bool basic_characteristic_numbers_null = 1005;</code>
       */
      public Builder setBasicCharacteristicNumbersNull(boolean value) {
        
        basicCharacteristicNumbersNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool basic_characteristic_numbers_null = 1005;</code>
       */
      public Builder clearBasicCharacteristicNumbersNull() {
        
        basicCharacteristicNumbersNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        } else {
          return nodeCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId_ = value;
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public Builder setNodeCharacteristicId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (nodeCharacteristicId_ != null) {
            nodeCharacteristicId_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public Builder clearNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
          onChanged();
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
        
        onChanged();
        return getNodeCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        if (nodeCharacteristicIdBuilder_ != null) {
          return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicIdFieldBuilder() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId_ = null;
        }
        return nodeCharacteristicIdBuilder_;
      }

      private boolean nodeCharacteristicIdNull_ ;
      /**
       * <code>optional bool node_characteristic_id_null = 1006;</code>
       */
      public boolean getNodeCharacteristicIdNull() {
        return nodeCharacteristicIdNull_;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1006;</code>
       */
      public Builder setNodeCharacteristicIdNull(boolean value) {
        
        nodeCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1006;</code>
       */
      public Builder clearNodeCharacteristicIdNull() {
        
        nodeCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Parameters)
    private static final io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters();
    }

    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      boolean hasPercentageOfAllItems();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPercentageOfAllItems();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfAllItemsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      boolean hasBasicCharacteristic();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getBasicCharacteristic();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      boolean hasPercentageOfItemTree();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPercentageOfItemTree();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfItemTreeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      boolean hasTotalValueHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueHTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      boolean hasDirectValueSimilarNodes();
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getDirectValueSimilarNodes();
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getDirectValueSimilarNodesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      boolean hasTotalValueSimilarNodes();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTotalValueSimilarNodes();
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTotalValueSimilarNodesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      boolean hasBasicCharacteristicNumber();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBasicCharacteristicNumber();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNumberOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      boolean hasPercentageOfPredecessor();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getPercentageOfPredecessor();
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfPredecessorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      boolean hasDirectValueHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getDirectValueHTreeNodeId();
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getDirectValueHTreeNodeIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (percentageOfAllItems_ != null) {
                  subBuilder = percentageOfAllItems_.toBuilder();
                }
                percentageOfAllItems_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(percentageOfAllItems_);
                  percentageOfAllItems_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (basicCharacteristic_ != null) {
                  subBuilder = basicCharacteristic_.toBuilder();
                }
                basicCharacteristic_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicCharacteristic_);
                  basicCharacteristic_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (percentageOfItemTree_ != null) {
                  subBuilder = percentageOfItemTree_.toBuilder();
                }
                percentageOfItemTree_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(percentageOfItemTree_);
                  percentageOfItemTree_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueHTreeNodeId_ != null) {
                  subBuilder = totalValueHTreeNodeId_.toBuilder();
                }
                totalValueHTreeNodeId_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueHTreeNodeId_);
                  totalValueHTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (directValueSimilarNodes_ != null) {
                  subBuilder = directValueSimilarNodes_.toBuilder();
                }
                directValueSimilarNodes_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(directValueSimilarNodes_);
                  directValueSimilarNodes_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (totalValueSimilarNodes_ != null) {
                  subBuilder = totalValueSimilarNodes_.toBuilder();
                }
                totalValueSimilarNodes_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(totalValueSimilarNodes_);
                  totalValueSimilarNodes_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (basicCharacteristicNumber_ != null) {
                  subBuilder = basicCharacteristicNumber_.toBuilder();
                }
                basicCharacteristicNumber_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicCharacteristicNumber_);
                  basicCharacteristicNumber_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (percentageOfPredecessor_ != null) {
                  subBuilder = percentageOfPredecessor_.toBuilder();
                }
                percentageOfPredecessor_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(percentageOfPredecessor_);
                  percentageOfPredecessor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (directValueHTreeNodeId_ != null) {
                  subBuilder = directValueHTreeNodeId_.toBuilder();
                }
                directValueHTreeNodeId_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(directValueHTreeNodeId_);
                  directValueHTreeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PERCENTAGE_OF_ALL_ITEMS_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.decimalValue percentageOfAllItems_;
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      public boolean hasPercentageOfAllItems() {
        return percentageOfAllItems_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPercentageOfAllItems() {
        return percentageOfAllItems_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfAllItems_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfAllItemsOrBuilder() {
        return getPercentageOfAllItems();
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue description_;
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int BASIC_CHARACTERISTIC_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue basicCharacteristic_;
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public boolean hasBasicCharacteristic() {
        return basicCharacteristic_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getBasicCharacteristic() {
        return basicCharacteristic_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristic_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
       *
       * <pre>
       * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicOrBuilder() {
        return getBasicCharacteristic();
      }

      public static final int PERCENTAGE_OF_ITEM_TREE_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.decimalValue percentageOfItemTree_;
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      public boolean hasPercentageOfItemTree() {
        return percentageOfItemTree_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPercentageOfItemTree() {
        return percentageOfItemTree_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfItemTree_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfItemTreeOrBuilder() {
        return getPercentageOfItemTree();
      }

      public static final int TOTAL_VALUE__H_TREE_NODE_ID_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.decimalValue totalValueHTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public boolean hasTotalValueHTreeNodeId() {
        return totalValueHTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueHTreeNodeId() {
        return totalValueHTreeNodeId_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueHTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueHTreeNodeIdOrBuilder() {
        return getTotalValueHTreeNodeId();
      }

      public static final int DIRECT_VALUE__SIMILAR_NODES_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.decimalValue directValueSimilarNodes_;
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public boolean hasDirectValueSimilarNodes() {
        return directValueSimilarNodes_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getDirectValueSimilarNodes() {
        return directValueSimilarNodes_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueSimilarNodes_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getDirectValueSimilarNodesOrBuilder() {
        return getDirectValueSimilarNodes();
      }

      public static final int TOTAL_VALUE__SIMILAR_NODES_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.decimalValue totalValueSimilarNodes_;
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public boolean hasTotalValueSimilarNodes() {
        return totalValueSimilarNodes_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTotalValueSimilarNodes() {
        return totalValueSimilarNodes_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueSimilarNodes_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
       *
       * <pre>
       * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueSimilarNodesOrBuilder() {
        return getTotalValueSimilarNodes();
      }

      public static final int BASIC_CHARACTERISTIC_NUMBER_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue basicCharacteristicNumber_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      public boolean hasBasicCharacteristicNumber() {
        return basicCharacteristicNumber_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBasicCharacteristicNumber() {
        return basicCharacteristicNumber_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNumber_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
       *
       * <pre>
       * Nummer einer Basis-Kennzahl
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNumberOrBuilder() {
        return getBasicCharacteristicNumber();
      }

      public static final int PERCENTAGE_OF_PREDECESSOR_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.decimalValue percentageOfPredecessor_;
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      public boolean hasPercentageOfPredecessor() {
        return percentageOfPredecessor_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getPercentageOfPredecessor() {
        return percentageOfPredecessor_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfPredecessor_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
       *
       * <pre>
       * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfPredecessorOrBuilder() {
        return getPercentageOfPredecessor();
      }

      public static final int DIRECT_VALUE__H_TREE_NODE_ID_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.decimalValue directValueHTreeNodeId_;
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public boolean hasDirectValueHTreeNodeId() {
        return directValueHTreeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getDirectValueHTreeNodeId() {
        return directValueHTreeNodeId_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueHTreeNodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
       *
       * <pre>
       * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getDirectValueHTreeNodeIdOrBuilder() {
        return getDirectValueHTreeNodeId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (percentageOfAllItems_ != null) {
          output.writeMessage(10001, getPercentageOfAllItems());
        }
        if (description_ != null) {
          output.writeMessage(10002, getDescription());
        }
        if (basicCharacteristic_ != null) {
          output.writeMessage(10003, getBasicCharacteristic());
        }
        if (percentageOfItemTree_ != null) {
          output.writeMessage(10004, getPercentageOfItemTree());
        }
        if (totalValueHTreeNodeId_ != null) {
          output.writeMessage(10005, getTotalValueHTreeNodeId());
        }
        if (directValueSimilarNodes_ != null) {
          output.writeMessage(10006, getDirectValueSimilarNodes());
        }
        if (totalValueSimilarNodes_ != null) {
          output.writeMessage(10007, getTotalValueSimilarNodes());
        }
        if (basicCharacteristicNumber_ != null) {
          output.writeMessage(10008, getBasicCharacteristicNumber());
        }
        if (percentageOfPredecessor_ != null) {
          output.writeMessage(10009, getPercentageOfPredecessor());
        }
        if (directValueHTreeNodeId_ != null) {
          output.writeMessage(10010, getDirectValueHTreeNodeId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (percentageOfAllItems_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getPercentageOfAllItems());
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getDescription());
        }
        if (basicCharacteristic_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getBasicCharacteristic());
        }
        if (percentageOfItemTree_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getPercentageOfItemTree());
        }
        if (totalValueHTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getTotalValueHTreeNodeId());
        }
        if (directValueSimilarNodes_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getDirectValueSimilarNodes());
        }
        if (totalValueSimilarNodes_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getTotalValueSimilarNodes());
        }
        if (basicCharacteristicNumber_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getBasicCharacteristicNumber());
        }
        if (percentageOfPredecessor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getPercentageOfPredecessor());
        }
        if (directValueHTreeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getDirectValueHTreeNodeId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row)
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (percentageOfAllItemsBuilder_ == null) {
            percentageOfAllItems_ = null;
          } else {
            percentageOfAllItems_ = null;
            percentageOfAllItemsBuilder_ = null;
          }
          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (basicCharacteristicBuilder_ == null) {
            basicCharacteristic_ = null;
          } else {
            basicCharacteristic_ = null;
            basicCharacteristicBuilder_ = null;
          }
          if (percentageOfItemTreeBuilder_ == null) {
            percentageOfItemTree_ = null;
          } else {
            percentageOfItemTree_ = null;
            percentageOfItemTreeBuilder_ = null;
          }
          if (totalValueHTreeNodeIdBuilder_ == null) {
            totalValueHTreeNodeId_ = null;
          } else {
            totalValueHTreeNodeId_ = null;
            totalValueHTreeNodeIdBuilder_ = null;
          }
          if (directValueSimilarNodesBuilder_ == null) {
            directValueSimilarNodes_ = null;
          } else {
            directValueSimilarNodes_ = null;
            directValueSimilarNodesBuilder_ = null;
          }
          if (totalValueSimilarNodesBuilder_ == null) {
            totalValueSimilarNodes_ = null;
          } else {
            totalValueSimilarNodes_ = null;
            totalValueSimilarNodesBuilder_ = null;
          }
          if (basicCharacteristicNumberBuilder_ == null) {
            basicCharacteristicNumber_ = null;
          } else {
            basicCharacteristicNumber_ = null;
            basicCharacteristicNumberBuilder_ = null;
          }
          if (percentageOfPredecessorBuilder_ == null) {
            percentageOfPredecessor_ = null;
          } else {
            percentageOfPredecessor_ = null;
            percentageOfPredecessorBuilder_ = null;
          }
          if (directValueHTreeNodeIdBuilder_ == null) {
            directValueHTreeNodeId_ = null;
          } else {
            directValueHTreeNodeId_ = null;
            directValueHTreeNodeIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row build() {
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row result = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (percentageOfAllItemsBuilder_ == null) {
            result.percentageOfAllItems_ = percentageOfAllItems_;
          } else {
            result.percentageOfAllItems_ = percentageOfAllItemsBuilder_.build();
          }
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (basicCharacteristicBuilder_ == null) {
            result.basicCharacteristic_ = basicCharacteristic_;
          } else {
            result.basicCharacteristic_ = basicCharacteristicBuilder_.build();
          }
          if (percentageOfItemTreeBuilder_ == null) {
            result.percentageOfItemTree_ = percentageOfItemTree_;
          } else {
            result.percentageOfItemTree_ = percentageOfItemTreeBuilder_.build();
          }
          if (totalValueHTreeNodeIdBuilder_ == null) {
            result.totalValueHTreeNodeId_ = totalValueHTreeNodeId_;
          } else {
            result.totalValueHTreeNodeId_ = totalValueHTreeNodeIdBuilder_.build();
          }
          if (directValueSimilarNodesBuilder_ == null) {
            result.directValueSimilarNodes_ = directValueSimilarNodes_;
          } else {
            result.directValueSimilarNodes_ = directValueSimilarNodesBuilder_.build();
          }
          if (totalValueSimilarNodesBuilder_ == null) {
            result.totalValueSimilarNodes_ = totalValueSimilarNodes_;
          } else {
            result.totalValueSimilarNodes_ = totalValueSimilarNodesBuilder_.build();
          }
          if (basicCharacteristicNumberBuilder_ == null) {
            result.basicCharacteristicNumber_ = basicCharacteristicNumber_;
          } else {
            result.basicCharacteristicNumber_ = basicCharacteristicNumberBuilder_.build();
          }
          if (percentageOfPredecessorBuilder_ == null) {
            result.percentageOfPredecessor_ = percentageOfPredecessor_;
          } else {
            result.percentageOfPredecessor_ = percentageOfPredecessorBuilder_.build();
          }
          if (directValueHTreeNodeIdBuilder_ == null) {
            result.directValueHTreeNodeId_ = directValueHTreeNodeId_;
          } else {
            result.directValueHTreeNodeId_ = directValueHTreeNodeIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasPercentageOfAllItems()) {
            mergePercentageOfAllItems(other.getPercentageOfAllItems());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasBasicCharacteristic()) {
            mergeBasicCharacteristic(other.getBasicCharacteristic());
          }
          if (other.hasPercentageOfItemTree()) {
            mergePercentageOfItemTree(other.getPercentageOfItemTree());
          }
          if (other.hasTotalValueHTreeNodeId()) {
            mergeTotalValueHTreeNodeId(other.getTotalValueHTreeNodeId());
          }
          if (other.hasDirectValueSimilarNodes()) {
            mergeDirectValueSimilarNodes(other.getDirectValueSimilarNodes());
          }
          if (other.hasTotalValueSimilarNodes()) {
            mergeTotalValueSimilarNodes(other.getTotalValueSimilarNodes());
          }
          if (other.hasBasicCharacteristicNumber()) {
            mergeBasicCharacteristicNumber(other.getBasicCharacteristicNumber());
          }
          if (other.hasPercentageOfPredecessor()) {
            mergePercentageOfPredecessor(other.getPercentageOfPredecessor());
          }
          if (other.hasDirectValueHTreeNodeId()) {
            mergeDirectValueHTreeNodeId(other.getDirectValueHTreeNodeId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.decimalValue percentageOfAllItems_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> percentageOfAllItemsBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public boolean hasPercentageOfAllItems() {
          return percentageOfAllItemsBuilder_ != null || percentageOfAllItems_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPercentageOfAllItems() {
          if (percentageOfAllItemsBuilder_ == null) {
            return percentageOfAllItems_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfAllItems_;
          } else {
            return percentageOfAllItemsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public Builder setPercentageOfAllItems(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfAllItemsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            percentageOfAllItems_ = value;
            onChanged();
          } else {
            percentageOfAllItemsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public Builder setPercentageOfAllItems(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (percentageOfAllItemsBuilder_ == null) {
            percentageOfAllItems_ = builderForValue.build();
            onChanged();
          } else {
            percentageOfAllItemsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public Builder mergePercentageOfAllItems(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfAllItemsBuilder_ == null) {
            if (percentageOfAllItems_ != null) {
              percentageOfAllItems_ =
                io.dstore.engine.Values.decimalValue.newBuilder(percentageOfAllItems_).mergeFrom(value).buildPartial();
            } else {
              percentageOfAllItems_ = value;
            }
            onChanged();
          } else {
            percentageOfAllItemsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public Builder clearPercentageOfAllItems() {
          if (percentageOfAllItemsBuilder_ == null) {
            percentageOfAllItems_ = null;
            onChanged();
          } else {
            percentageOfAllItems_ = null;
            percentageOfAllItemsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPercentageOfAllItemsBuilder() {
          
          onChanged();
          return getPercentageOfAllItemsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfAllItemsOrBuilder() {
          if (percentageOfAllItemsBuilder_ != null) {
            return percentageOfAllItemsBuilder_.getMessageOrBuilder();
          } else {
            return percentageOfAllItems_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfAllItems_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_all_items = 10001;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPercentageOfAllItemsFieldBuilder() {
          if (percentageOfAllItemsBuilder_ == null) {
            percentageOfAllItemsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPercentageOfAllItems(),
                    getParentForChildren(),
                    isClean());
            percentageOfAllItems_ = null;
          }
          return percentageOfAllItemsBuilder_;
        }

        private io.dstore.engine.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder mergeDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.engine.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.engine.Values.stringValue basicCharacteristic_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> basicCharacteristicBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public boolean hasBasicCharacteristic() {
          return basicCharacteristicBuilder_ != null || basicCharacteristic_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getBasicCharacteristic() {
          if (basicCharacteristicBuilder_ == null) {
            return basicCharacteristic_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristic_;
          } else {
            return basicCharacteristicBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setBasicCharacteristic(io.dstore.engine.Values.stringValue value) {
          if (basicCharacteristicBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicCharacteristic_ = value;
            onChanged();
          } else {
            basicCharacteristicBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setBasicCharacteristic(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (basicCharacteristicBuilder_ == null) {
            basicCharacteristic_ = builderForValue.build();
            onChanged();
          } else {
            basicCharacteristicBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder mergeBasicCharacteristic(io.dstore.engine.Values.stringValue value) {
          if (basicCharacteristicBuilder_ == null) {
            if (basicCharacteristic_ != null) {
              basicCharacteristic_ =
                io.dstore.engine.Values.stringValue.newBuilder(basicCharacteristic_).mergeFrom(value).buildPartial();
            } else {
              basicCharacteristic_ = value;
            }
            onChanged();
          } else {
            basicCharacteristicBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder clearBasicCharacteristic() {
          if (basicCharacteristicBuilder_ == null) {
            basicCharacteristic_ = null;
            onChanged();
          } else {
            basicCharacteristic_ = null;
            basicCharacteristicBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getBasicCharacteristicBuilder() {
          
          onChanged();
          return getBasicCharacteristicFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getBasicCharacteristicOrBuilder() {
          if (basicCharacteristicBuilder_ != null) {
            return basicCharacteristicBuilder_.getMessageOrBuilder();
          } else {
            return basicCharacteristic_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : basicCharacteristic_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_characteristic = 10003;</code>
         *
         * <pre>
         * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getBasicCharacteristicFieldBuilder() {
          if (basicCharacteristicBuilder_ == null) {
            basicCharacteristicBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getBasicCharacteristic(),
                    getParentForChildren(),
                    isClean());
            basicCharacteristic_ = null;
          }
          return basicCharacteristicBuilder_;
        }

        private io.dstore.engine.Values.decimalValue percentageOfItemTree_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> percentageOfItemTreeBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public boolean hasPercentageOfItemTree() {
          return percentageOfItemTreeBuilder_ != null || percentageOfItemTree_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPercentageOfItemTree() {
          if (percentageOfItemTreeBuilder_ == null) {
            return percentageOfItemTree_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfItemTree_;
          } else {
            return percentageOfItemTreeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public Builder setPercentageOfItemTree(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfItemTreeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            percentageOfItemTree_ = value;
            onChanged();
          } else {
            percentageOfItemTreeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public Builder setPercentageOfItemTree(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (percentageOfItemTreeBuilder_ == null) {
            percentageOfItemTree_ = builderForValue.build();
            onChanged();
          } else {
            percentageOfItemTreeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public Builder mergePercentageOfItemTree(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfItemTreeBuilder_ == null) {
            if (percentageOfItemTree_ != null) {
              percentageOfItemTree_ =
                io.dstore.engine.Values.decimalValue.newBuilder(percentageOfItemTree_).mergeFrom(value).buildPartial();
            } else {
              percentageOfItemTree_ = value;
            }
            onChanged();
          } else {
            percentageOfItemTreeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public Builder clearPercentageOfItemTree() {
          if (percentageOfItemTreeBuilder_ == null) {
            percentageOfItemTree_ = null;
            onChanged();
          } else {
            percentageOfItemTree_ = null;
            percentageOfItemTreeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPercentageOfItemTreeBuilder() {
          
          onChanged();
          return getPercentageOfItemTreeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfItemTreeOrBuilder() {
          if (percentageOfItemTreeBuilder_ != null) {
            return percentageOfItemTreeBuilder_.getMessageOrBuilder();
          } else {
            return percentageOfItemTree_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfItemTree_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_item_tree = 10004;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPercentageOfItemTreeFieldBuilder() {
          if (percentageOfItemTreeBuilder_ == null) {
            percentageOfItemTreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPercentageOfItemTree(),
                    getParentForChildren(),
                    isClean());
            percentageOfItemTree_ = null;
          }
          return percentageOfItemTreeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueHTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueHTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public boolean hasTotalValueHTreeNodeId() {
          return totalValueHTreeNodeIdBuilder_ != null || totalValueHTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueHTreeNodeId() {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            return totalValueHTreeNodeId_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueHTreeNodeId_;
          } else {
            return totalValueHTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setTotalValueHTreeNodeId(io.dstore.engine.Values.decimalValue value) {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueHTreeNodeId_ = value;
            onChanged();
          } else {
            totalValueHTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setTotalValueHTreeNodeId(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            totalValueHTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            totalValueHTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder mergeTotalValueHTreeNodeId(io.dstore.engine.Values.decimalValue value) {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            if (totalValueHTreeNodeId_ != null) {
              totalValueHTreeNodeId_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueHTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              totalValueHTreeNodeId_ = value;
            }
            onChanged();
          } else {
            totalValueHTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder clearTotalValueHTreeNodeId() {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            totalValueHTreeNodeId_ = null;
            onChanged();
          } else {
            totalValueHTreeNodeId_ = null;
            totalValueHTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueHTreeNodeIdBuilder() {
          
          onChanged();
          return getTotalValueHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueHTreeNodeIdOrBuilder() {
          if (totalValueHTreeNodeIdBuilder_ != null) {
            return totalValueHTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return totalValueHTreeNodeId_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueHTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__h_tree_node_id = 10005;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueHTreeNodeIdFieldBuilder() {
          if (totalValueHTreeNodeIdBuilder_ == null) {
            totalValueHTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            totalValueHTreeNodeId_ = null;
          }
          return totalValueHTreeNodeIdBuilder_;
        }

        private io.dstore.engine.Values.decimalValue directValueSimilarNodes_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> directValueSimilarNodesBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public boolean hasDirectValueSimilarNodes() {
          return directValueSimilarNodesBuilder_ != null || directValueSimilarNodes_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getDirectValueSimilarNodes() {
          if (directValueSimilarNodesBuilder_ == null) {
            return directValueSimilarNodes_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueSimilarNodes_;
          } else {
            return directValueSimilarNodesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder setDirectValueSimilarNodes(io.dstore.engine.Values.decimalValue value) {
          if (directValueSimilarNodesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            directValueSimilarNodes_ = value;
            onChanged();
          } else {
            directValueSimilarNodesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder setDirectValueSimilarNodes(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (directValueSimilarNodesBuilder_ == null) {
            directValueSimilarNodes_ = builderForValue.build();
            onChanged();
          } else {
            directValueSimilarNodesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder mergeDirectValueSimilarNodes(io.dstore.engine.Values.decimalValue value) {
          if (directValueSimilarNodesBuilder_ == null) {
            if (directValueSimilarNodes_ != null) {
              directValueSimilarNodes_ =
                io.dstore.engine.Values.decimalValue.newBuilder(directValueSimilarNodes_).mergeFrom(value).buildPartial();
            } else {
              directValueSimilarNodes_ = value;
            }
            onChanged();
          } else {
            directValueSimilarNodesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder clearDirectValueSimilarNodes() {
          if (directValueSimilarNodesBuilder_ == null) {
            directValueSimilarNodes_ = null;
            onChanged();
          } else {
            directValueSimilarNodes_ = null;
            directValueSimilarNodesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getDirectValueSimilarNodesBuilder() {
          
          onChanged();
          return getDirectValueSimilarNodesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getDirectValueSimilarNodesOrBuilder() {
          if (directValueSimilarNodesBuilder_ != null) {
            return directValueSimilarNodesBuilder_.getMessageOrBuilder();
          } else {
            return directValueSimilarNodes_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueSimilarNodes_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__similar_nodes = 10006;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getDirectValueSimilarNodesFieldBuilder() {
          if (directValueSimilarNodesBuilder_ == null) {
            directValueSimilarNodesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getDirectValueSimilarNodes(),
                    getParentForChildren(),
                    isClean());
            directValueSimilarNodes_ = null;
          }
          return directValueSimilarNodesBuilder_;
        }

        private io.dstore.engine.Values.decimalValue totalValueSimilarNodes_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> totalValueSimilarNodesBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public boolean hasTotalValueSimilarNodes() {
          return totalValueSimilarNodesBuilder_ != null || totalValueSimilarNodes_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTotalValueSimilarNodes() {
          if (totalValueSimilarNodesBuilder_ == null) {
            return totalValueSimilarNodes_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueSimilarNodes_;
          } else {
            return totalValueSimilarNodesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder setTotalValueSimilarNodes(io.dstore.engine.Values.decimalValue value) {
          if (totalValueSimilarNodesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            totalValueSimilarNodes_ = value;
            onChanged();
          } else {
            totalValueSimilarNodesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder setTotalValueSimilarNodes(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (totalValueSimilarNodesBuilder_ == null) {
            totalValueSimilarNodes_ = builderForValue.build();
            onChanged();
          } else {
            totalValueSimilarNodesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder mergeTotalValueSimilarNodes(io.dstore.engine.Values.decimalValue value) {
          if (totalValueSimilarNodesBuilder_ == null) {
            if (totalValueSimilarNodes_ != null) {
              totalValueSimilarNodes_ =
                io.dstore.engine.Values.decimalValue.newBuilder(totalValueSimilarNodes_).mergeFrom(value).buildPartial();
            } else {
              totalValueSimilarNodes_ = value;
            }
            onChanged();
          } else {
            totalValueSimilarNodesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public Builder clearTotalValueSimilarNodes() {
          if (totalValueSimilarNodesBuilder_ == null) {
            totalValueSimilarNodes_ = null;
            onChanged();
          } else {
            totalValueSimilarNodes_ = null;
            totalValueSimilarNodesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTotalValueSimilarNodesBuilder() {
          
          onChanged();
          return getTotalValueSimilarNodesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTotalValueSimilarNodesOrBuilder() {
          if (totalValueSimilarNodesBuilder_ != null) {
            return totalValueSimilarNodesBuilder_.getMessageOrBuilder();
          } else {
            return totalValueSimilarNodes_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : totalValueSimilarNodes_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue total_value__similar_nodes = 10007;</code>
         *
         * <pre>
         * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTotalValueSimilarNodesFieldBuilder() {
          if (totalValueSimilarNodesBuilder_ == null) {
            totalValueSimilarNodesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTotalValueSimilarNodes(),
                    getParentForChildren(),
                    isClean());
            totalValueSimilarNodes_ = null;
          }
          return totalValueSimilarNodesBuilder_;
        }

        private io.dstore.engine.Values.integerValue basicCharacteristicNumber_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicCharacteristicNumberBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public boolean hasBasicCharacteristicNumber() {
          return basicCharacteristicNumberBuilder_ != null || basicCharacteristicNumber_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBasicCharacteristicNumber() {
          if (basicCharacteristicNumberBuilder_ == null) {
            return basicCharacteristicNumber_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNumber_;
          } else {
            return basicCharacteristicNumberBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public Builder setBasicCharacteristicNumber(io.dstore.engine.Values.integerValue value) {
          if (basicCharacteristicNumberBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicCharacteristicNumber_ = value;
            onChanged();
          } else {
            basicCharacteristicNumberBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public Builder setBasicCharacteristicNumber(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (basicCharacteristicNumberBuilder_ == null) {
            basicCharacteristicNumber_ = builderForValue.build();
            onChanged();
          } else {
            basicCharacteristicNumberBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public Builder mergeBasicCharacteristicNumber(io.dstore.engine.Values.integerValue value) {
          if (basicCharacteristicNumberBuilder_ == null) {
            if (basicCharacteristicNumber_ != null) {
              basicCharacteristicNumber_ =
                io.dstore.engine.Values.integerValue.newBuilder(basicCharacteristicNumber_).mergeFrom(value).buildPartial();
            } else {
              basicCharacteristicNumber_ = value;
            }
            onChanged();
          } else {
            basicCharacteristicNumberBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public Builder clearBasicCharacteristicNumber() {
          if (basicCharacteristicNumberBuilder_ == null) {
            basicCharacteristicNumber_ = null;
            onChanged();
          } else {
            basicCharacteristicNumber_ = null;
            basicCharacteristicNumberBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBasicCharacteristicNumberBuilder() {
          
          onChanged();
          return getBasicCharacteristicNumberFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBasicCharacteristicNumberOrBuilder() {
          if (basicCharacteristicNumberBuilder_ != null) {
            return basicCharacteristicNumberBuilder_.getMessageOrBuilder();
          } else {
            return basicCharacteristicNumber_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : basicCharacteristicNumber_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_characteristic_number = 10008;</code>
         *
         * <pre>
         * Nummer einer Basis-Kennzahl
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBasicCharacteristicNumberFieldBuilder() {
          if (basicCharacteristicNumberBuilder_ == null) {
            basicCharacteristicNumberBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBasicCharacteristicNumber(),
                    getParentForChildren(),
                    isClean());
            basicCharacteristicNumber_ = null;
          }
          return basicCharacteristicNumberBuilder_;
        }

        private io.dstore.engine.Values.decimalValue percentageOfPredecessor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> percentageOfPredecessorBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public boolean hasPercentageOfPredecessor() {
          return percentageOfPredecessorBuilder_ != null || percentageOfPredecessor_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getPercentageOfPredecessor() {
          if (percentageOfPredecessorBuilder_ == null) {
            return percentageOfPredecessor_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfPredecessor_;
          } else {
            return percentageOfPredecessorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public Builder setPercentageOfPredecessor(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfPredecessorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            percentageOfPredecessor_ = value;
            onChanged();
          } else {
            percentageOfPredecessorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public Builder setPercentageOfPredecessor(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (percentageOfPredecessorBuilder_ == null) {
            percentageOfPredecessor_ = builderForValue.build();
            onChanged();
          } else {
            percentageOfPredecessorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public Builder mergePercentageOfPredecessor(io.dstore.engine.Values.decimalValue value) {
          if (percentageOfPredecessorBuilder_ == null) {
            if (percentageOfPredecessor_ != null) {
              percentageOfPredecessor_ =
                io.dstore.engine.Values.decimalValue.newBuilder(percentageOfPredecessor_).mergeFrom(value).buildPartial();
            } else {
              percentageOfPredecessor_ = value;
            }
            onChanged();
          } else {
            percentageOfPredecessorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public Builder clearPercentageOfPredecessor() {
          if (percentageOfPredecessorBuilder_ == null) {
            percentageOfPredecessor_ = null;
            onChanged();
          } else {
            percentageOfPredecessor_ = null;
            percentageOfPredecessorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getPercentageOfPredecessorBuilder() {
          
          onChanged();
          return getPercentageOfPredecessorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getPercentageOfPredecessorOrBuilder() {
          if (percentageOfPredecessorBuilder_ != null) {
            return percentageOfPredecessorBuilder_.getMessageOrBuilder();
          } else {
            return percentageOfPredecessor_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : percentageOfPredecessor_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue percentage_of_predecessor = 10009;</code>
         *
         * <pre>
         * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getPercentageOfPredecessorFieldBuilder() {
          if (percentageOfPredecessorBuilder_ == null) {
            percentageOfPredecessorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getPercentageOfPredecessor(),
                    getParentForChildren(),
                    isClean());
            percentageOfPredecessor_ = null;
          }
          return percentageOfPredecessorBuilder_;
        }

        private io.dstore.engine.Values.decimalValue directValueHTreeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> directValueHTreeNodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public boolean hasDirectValueHTreeNodeId() {
          return directValueHTreeNodeIdBuilder_ != null || directValueHTreeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getDirectValueHTreeNodeId() {
          if (directValueHTreeNodeIdBuilder_ == null) {
            return directValueHTreeNodeId_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueHTreeNodeId_;
          } else {
            return directValueHTreeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setDirectValueHTreeNodeId(io.dstore.engine.Values.decimalValue value) {
          if (directValueHTreeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            directValueHTreeNodeId_ = value;
            onChanged();
          } else {
            directValueHTreeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder setDirectValueHTreeNodeId(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (directValueHTreeNodeIdBuilder_ == null) {
            directValueHTreeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            directValueHTreeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder mergeDirectValueHTreeNodeId(io.dstore.engine.Values.decimalValue value) {
          if (directValueHTreeNodeIdBuilder_ == null) {
            if (directValueHTreeNodeId_ != null) {
              directValueHTreeNodeId_ =
                io.dstore.engine.Values.decimalValue.newBuilder(directValueHTreeNodeId_).mergeFrom(value).buildPartial();
            } else {
              directValueHTreeNodeId_ = value;
            }
            onChanged();
          } else {
            directValueHTreeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public Builder clearDirectValueHTreeNodeId() {
          if (directValueHTreeNodeIdBuilder_ == null) {
            directValueHTreeNodeId_ = null;
            onChanged();
          } else {
            directValueHTreeNodeId_ = null;
            directValueHTreeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getDirectValueHTreeNodeIdBuilder() {
          
          onChanged();
          return getDirectValueHTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getDirectValueHTreeNodeIdOrBuilder() {
          if (directValueHTreeNodeIdBuilder_ != null) {
            return directValueHTreeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return directValueHTreeNodeId_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : directValueHTreeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue direct_value__h_tree_node_id = 10010;</code>
         *
         * <pre>
         * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getDirectValueHTreeNodeIdFieldBuilder() {
          if (directValueHTreeNodeIdBuilder_ == null) {
            directValueHTreeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getDirectValueHTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            directValueHTreeNodeId_ = null;
          }
          return directValueHTreeNodeIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row)
      private static final io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row();
      }

      public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.st_GetHTreeNodeStatistics_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response)
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.class, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response build() {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response buildPartial() {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response result = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response other) {
        if (other == io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.Row.Builder, io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.st_GetHTreeNodeStatistics_Ad.Response)
    private static final io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response();
    }

    public static io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.StGetHTreeNodeStatisticsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/st_GetHTreeNo" +
      "deStatistics_Ad.proto\022*dstore.engine.st_" +
      "GetHTreeNodeStatistics_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"\273\004\n\nParame" +
      "ters\022:\n\016h_tree_node_id\030\001 \001(\0132\".dstore.en" +
      "gine.values.integerValue\022\034\n\023h_tree_node_" +
      "id_null\030\351\007 \001(\010\0227\n\tfrom_date\030\002 \001(\0132$.dsto" +
      "re.engine.values.timestampValue\022\027\n\016from_" +
      "date_null\030\352\007 \001(\010\0225\n\007to_date\030\003 \001(\0132$.dsto",
      "re.engine.values.timestampValue\022\025\n\014to_da" +
      "te_null\030\353\007 \001(\010\0228\n\014source_table\030\004 \001(\0132\".d" +
      "store.engine.values.integerValue\022\032\n\021sour" +
      "ce_table_null\030\354\007 \001(\010\022G\n\034basic_characteri" +
      "stic_numbers\030\005 \001(\0132!.dstore.engine.value" +
      "s.stringValue\022*\n!basic_characteristic_nu" +
      "mbers_null\030\355\007 \001(\010\022B\n\026node_characteristic" +
      "_id\030\006 \001(\0132\".dstore.engine.values.integer" +
      "Value\022$\n\033node_characteristic_id_null\030\356\007 " +
      "\001(\010\"\207\007\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstore",
      ".engine.error.Error\022/\n\007message\030\003 \003(\0132\036.d" +
      "store.engine.message.Message\022E\n\003row\030\004 \003(" +
      "\01328.dstore.engine.st_GetHTreeNodeStatist" +
      "ics_Ad.Response.Row\032\327\005\n\003Row\022\017\n\006row_id\030\220N" +
      " \001(\005\022D\n\027percentage_of_all_items\030\221N \001(\0132\"" +
      ".dstore.engine.values.decimalValue\0227\n\013de" +
      "scription\030\222N \001(\0132!.dstore.engine.values." +
      "stringValue\022@\n\024basic_characteristic\030\223N \001" +
      "(\0132!.dstore.engine.values.stringValue\022D\n" +
      "\027percentage_of_item_tree\030\224N \001(\0132\".dstore",
      ".engine.values.decimalValue\022H\n\033total_val" +
      "ue__h_tree_node_id\030\225N \001(\0132\".dstore.engin" +
      "e.values.decimalValue\022H\n\033direct_value__s" +
      "imilar_nodes\030\226N \001(\0132\".dstore.engine.valu" +
      "es.decimalValue\022G\n\032total_value__similar_" +
      "nodes\030\227N \001(\0132\".dstore.engine.values.deci" +
      "malValue\022H\n\033basic_characteristic_number\030" +
      "\230N \001(\0132\".dstore.engine.values.integerVal" +
      "ue\022F\n\031percentage_of_predecessor\030\231N \001(\0132\"" +
      ".dstore.engine.values.decimalValue\022I\n\034di",
      "rect_value__h_tree_node_id\030\232N \001(\0132\".dsto" +
      "re.engine.values.decimalValueB\030\n\026io.dsto" +
      "re.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Parameters_descriptor,
        new java.lang.String[] { "HTreeNodeId", "HTreeNodeIdNull", "FromDate", "FromDateNull", "ToDate", "ToDateNull", "SourceTable", "SourceTableNull", "BasicCharacteristicNumbers", "BasicCharacteristicNumbersNull", "NodeCharacteristicId", "NodeCharacteristicIdNull", });
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_st_GetHTreeNodeStatistics_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "PercentageOfAllItems", "Description", "BasicCharacteristic", "PercentageOfItemTree", "TotalValueHTreeNodeId", "DirectValueSimilarNodes", "TotalValueSimilarNodes", "BasicCharacteristicNumber", "PercentageOfPredecessor", "DirectValueHTreeNodeId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
