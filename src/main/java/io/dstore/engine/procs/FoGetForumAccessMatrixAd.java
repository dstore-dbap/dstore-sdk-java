// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/fo_GetForumAccessMatrix_Ad.proto

package io.dstore.engine.procs;

public final class FoGetForumAccessMatrixAd {
  private FoGetForumAccessMatrixAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    boolean hasForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getForumId();
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder();

    /**
     * <code>optional bool forum_id_null = 1001;</code>
     */
    boolean getForumIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    boolean hasCheckPersonAccess();
    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    io.dstore.engine.Values.booleanValue getCheckPersonAccess();
    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getCheckPersonAccessOrBuilder();

    /**
     * <code>optional bool check_person_access_null = 1002;</code>
     */
    boolean getCheckPersonAccessNull();

    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    boolean hasGroupOrPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    io.dstore.engine.Values.integerValue getGroupOrPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getGroupOrPersonIdOrBuilder();

    /**
     * <code>optional bool group_or_person_id_null = 1003;</code>
     */
    boolean getGroupOrPersonIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      forumIdNull_ = false;
      checkPersonAccessNull_ = false;
      groupOrPersonIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (forumId_ != null) {
                subBuilder = forumId_.toBuilder();
              }
              forumId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(forumId_);
                forumId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (checkPersonAccess_ != null) {
                subBuilder = checkPersonAccess_.toBuilder();
              }
              checkPersonAccess_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(checkPersonAccess_);
                checkPersonAccess_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (groupOrPersonId_ != null) {
                subBuilder = groupOrPersonId_.toBuilder();
              }
              groupOrPersonId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupOrPersonId_);
                groupOrPersonId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              forumIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              checkPersonAccessNull_ = input.readBool();
              break;
            }
            case 8024: {

              groupOrPersonIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.Builder.class);
    }

    public static final int FORUM_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue forumId_;
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    public boolean hasForumId() {
      return forumId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getForumId() {
      return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
      return getForumId();
    }

    public static final int FORUM_ID_NULL_FIELD_NUMBER = 1001;
    private boolean forumIdNull_;
    /**
     * <code>optional bool forum_id_null = 1001;</code>
     */
    public boolean getForumIdNull() {
      return forumIdNull_;
    }

    public static final int CHECK_PERSON_ACCESS_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.booleanValue checkPersonAccess_;
    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    public boolean hasCheckPersonAccess() {
      return checkPersonAccess_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    public io.dstore.engine.Values.booleanValue getCheckPersonAccess() {
      return checkPersonAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPersonAccess_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getCheckPersonAccessOrBuilder() {
      return getCheckPersonAccess();
    }

    public static final int CHECK_PERSON_ACCESS_NULL_FIELD_NUMBER = 1002;
    private boolean checkPersonAccessNull_;
    /**
     * <code>optional bool check_person_access_null = 1002;</code>
     */
    public boolean getCheckPersonAccessNull() {
      return checkPersonAccessNull_;
    }

    public static final int GROUP_OR_PERSON_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue groupOrPersonId_;
    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    public boolean hasGroupOrPersonId() {
      return groupOrPersonId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getGroupOrPersonId() {
      return groupOrPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : groupOrPersonId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getGroupOrPersonIdOrBuilder() {
      return getGroupOrPersonId();
    }

    public static final int GROUP_OR_PERSON_ID_NULL_FIELD_NUMBER = 1003;
    private boolean groupOrPersonIdNull_;
    /**
     * <code>optional bool group_or_person_id_null = 1003;</code>
     */
    public boolean getGroupOrPersonIdNull() {
      return groupOrPersonIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (forumId_ != null) {
        output.writeMessage(1, getForumId());
      }
      if (checkPersonAccess_ != null) {
        output.writeMessage(2, getCheckPersonAccess());
      }
      if (groupOrPersonId_ != null) {
        output.writeMessage(3, getGroupOrPersonId());
      }
      if (forumIdNull_ != false) {
        output.writeBool(1001, forumIdNull_);
      }
      if (checkPersonAccessNull_ != false) {
        output.writeBool(1002, checkPersonAccessNull_);
      }
      if (groupOrPersonIdNull_ != false) {
        output.writeBool(1003, groupOrPersonIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (forumId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getForumId());
      }
      if (checkPersonAccess_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCheckPersonAccess());
      }
      if (groupOrPersonId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGroupOrPersonId());
      }
      if (forumIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, forumIdNull_);
      }
      if (checkPersonAccessNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, checkPersonAccessNull_);
      }
      if (groupOrPersonIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, groupOrPersonIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters)
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (forumIdBuilder_ == null) {
          forumId_ = null;
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }
        forumIdNull_ = false;

        if (checkPersonAccessBuilder_ == null) {
          checkPersonAccess_ = null;
        } else {
          checkPersonAccess_ = null;
          checkPersonAccessBuilder_ = null;
        }
        checkPersonAccessNull_ = false;

        if (groupOrPersonIdBuilder_ == null) {
          groupOrPersonId_ = null;
        } else {
          groupOrPersonId_ = null;
          groupOrPersonIdBuilder_ = null;
        }
        groupOrPersonIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters build() {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters buildPartial() {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters result = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters(this);
        if (forumIdBuilder_ == null) {
          result.forumId_ = forumId_;
        } else {
          result.forumId_ = forumIdBuilder_.build();
        }
        result.forumIdNull_ = forumIdNull_;
        if (checkPersonAccessBuilder_ == null) {
          result.checkPersonAccess_ = checkPersonAccess_;
        } else {
          result.checkPersonAccess_ = checkPersonAccessBuilder_.build();
        }
        result.checkPersonAccessNull_ = checkPersonAccessNull_;
        if (groupOrPersonIdBuilder_ == null) {
          result.groupOrPersonId_ = groupOrPersonId_;
        } else {
          result.groupOrPersonId_ = groupOrPersonIdBuilder_.build();
        }
        result.groupOrPersonIdNull_ = groupOrPersonIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters other) {
        if (other == io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters.getDefaultInstance()) return this;
        if (other.hasForumId()) {
          mergeForumId(other.getForumId());
        }
        if (other.getForumIdNull() != false) {
          setForumIdNull(other.getForumIdNull());
        }
        if (other.hasCheckPersonAccess()) {
          mergeCheckPersonAccess(other.getCheckPersonAccess());
        }
        if (other.getCheckPersonAccessNull() != false) {
          setCheckPersonAccessNull(other.getCheckPersonAccessNull());
        }
        if (other.hasGroupOrPersonId()) {
          mergeGroupOrPersonId(other.getGroupOrPersonId());
        }
        if (other.getGroupOrPersonIdNull() != false) {
          setGroupOrPersonIdNull(other.getGroupOrPersonIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue forumId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> forumIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public boolean hasForumId() {
        return forumIdBuilder_ != null || forumId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getForumId() {
        if (forumIdBuilder_ == null) {
          return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
        } else {
          return forumIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public Builder setForumId(io.dstore.engine.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          forumId_ = value;
          onChanged();
        } else {
          forumIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public Builder setForumId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (forumIdBuilder_ == null) {
          forumId_ = builderForValue.build();
          onChanged();
        } else {
          forumIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public Builder mergeForumId(io.dstore.engine.Values.integerValue value) {
        if (forumIdBuilder_ == null) {
          if (forumId_ != null) {
            forumId_ =
              io.dstore.engine.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
          } else {
            forumId_ = value;
          }
          onChanged();
        } else {
          forumIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public Builder clearForumId() {
        if (forumIdBuilder_ == null) {
          forumId_ = null;
          onChanged();
        } else {
          forumId_ = null;
          forumIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getForumIdBuilder() {
        
        onChanged();
        return getForumIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
        if (forumIdBuilder_ != null) {
          return forumIdBuilder_.getMessageOrBuilder();
        } else {
          return forumId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getForumIdFieldBuilder() {
        if (forumIdBuilder_ == null) {
          forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getForumId(),
                  getParentForChildren(),
                  isClean());
          forumId_ = null;
        }
        return forumIdBuilder_;
      }

      private boolean forumIdNull_ ;
      /**
       * <code>optional bool forum_id_null = 1001;</code>
       */
      public boolean getForumIdNull() {
        return forumIdNull_;
      }
      /**
       * <code>optional bool forum_id_null = 1001;</code>
       */
      public Builder setForumIdNull(boolean value) {
        
        forumIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool forum_id_null = 1001;</code>
       */
      public Builder clearForumIdNull() {
        
        forumIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue checkPersonAccess_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> checkPersonAccessBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public boolean hasCheckPersonAccess() {
        return checkPersonAccessBuilder_ != null || checkPersonAccess_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue getCheckPersonAccess() {
        if (checkPersonAccessBuilder_ == null) {
          return checkPersonAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPersonAccess_;
        } else {
          return checkPersonAccessBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public Builder setCheckPersonAccess(io.dstore.engine.Values.booleanValue value) {
        if (checkPersonAccessBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkPersonAccess_ = value;
          onChanged();
        } else {
          checkPersonAccessBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public Builder setCheckPersonAccess(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (checkPersonAccessBuilder_ == null) {
          checkPersonAccess_ = builderForValue.build();
          onChanged();
        } else {
          checkPersonAccessBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public Builder mergeCheckPersonAccess(io.dstore.engine.Values.booleanValue value) {
        if (checkPersonAccessBuilder_ == null) {
          if (checkPersonAccess_ != null) {
            checkPersonAccess_ =
              io.dstore.engine.Values.booleanValue.newBuilder(checkPersonAccess_).mergeFrom(value).buildPartial();
          } else {
            checkPersonAccess_ = value;
          }
          onChanged();
        } else {
          checkPersonAccessBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public Builder clearCheckPersonAccess() {
        if (checkPersonAccessBuilder_ == null) {
          checkPersonAccess_ = null;
          onChanged();
        } else {
          checkPersonAccess_ = null;
          checkPersonAccessBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getCheckPersonAccessBuilder() {
        
        onChanged();
        return getCheckPersonAccessFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCheckPersonAccessOrBuilder() {
        if (checkPersonAccessBuilder_ != null) {
          return checkPersonAccessBuilder_.getMessageOrBuilder();
        } else {
          return checkPersonAccess_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : checkPersonAccess_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue check_person_access = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getCheckPersonAccessFieldBuilder() {
        if (checkPersonAccessBuilder_ == null) {
          checkPersonAccessBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getCheckPersonAccess(),
                  getParentForChildren(),
                  isClean());
          checkPersonAccess_ = null;
        }
        return checkPersonAccessBuilder_;
      }

      private boolean checkPersonAccessNull_ ;
      /**
       * <code>optional bool check_person_access_null = 1002;</code>
       */
      public boolean getCheckPersonAccessNull() {
        return checkPersonAccessNull_;
      }
      /**
       * <code>optional bool check_person_access_null = 1002;</code>
       */
      public Builder setCheckPersonAccessNull(boolean value) {
        
        checkPersonAccessNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool check_person_access_null = 1002;</code>
       */
      public Builder clearCheckPersonAccessNull() {
        
        checkPersonAccessNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue groupOrPersonId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> groupOrPersonIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public boolean hasGroupOrPersonId() {
        return groupOrPersonIdBuilder_ != null || groupOrPersonId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getGroupOrPersonId() {
        if (groupOrPersonIdBuilder_ == null) {
          return groupOrPersonId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : groupOrPersonId_;
        } else {
          return groupOrPersonIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public Builder setGroupOrPersonId(io.dstore.engine.Values.integerValue value) {
        if (groupOrPersonIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupOrPersonId_ = value;
          onChanged();
        } else {
          groupOrPersonIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public Builder setGroupOrPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (groupOrPersonIdBuilder_ == null) {
          groupOrPersonId_ = builderForValue.build();
          onChanged();
        } else {
          groupOrPersonIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public Builder mergeGroupOrPersonId(io.dstore.engine.Values.integerValue value) {
        if (groupOrPersonIdBuilder_ == null) {
          if (groupOrPersonId_ != null) {
            groupOrPersonId_ =
              io.dstore.engine.Values.integerValue.newBuilder(groupOrPersonId_).mergeFrom(value).buildPartial();
          } else {
            groupOrPersonId_ = value;
          }
          onChanged();
        } else {
          groupOrPersonIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public Builder clearGroupOrPersonId() {
        if (groupOrPersonIdBuilder_ == null) {
          groupOrPersonId_ = null;
          onChanged();
        } else {
          groupOrPersonId_ = null;
          groupOrPersonIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getGroupOrPersonIdBuilder() {
        
        onChanged();
        return getGroupOrPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getGroupOrPersonIdOrBuilder() {
        if (groupOrPersonIdBuilder_ != null) {
          return groupOrPersonIdBuilder_.getMessageOrBuilder();
        } else {
          return groupOrPersonId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : groupOrPersonId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_or_person_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getGroupOrPersonIdFieldBuilder() {
        if (groupOrPersonIdBuilder_ == null) {
          groupOrPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getGroupOrPersonId(),
                  getParentForChildren(),
                  isClean());
          groupOrPersonId_ = null;
        }
        return groupOrPersonIdBuilder_;
      }

      private boolean groupOrPersonIdNull_ ;
      /**
       * <code>optional bool group_or_person_id_null = 1003;</code>
       */
      public boolean getGroupOrPersonIdNull() {
        return groupOrPersonIdNull_;
      }
      /**
       * <code>optional bool group_or_person_id_null = 1003;</code>
       */
      public Builder setGroupOrPersonIdNull(boolean value) {
        
        groupOrPersonIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool group_or_person_id_null = 1003;</code>
       */
      public Builder clearGroupOrPersonIdNull() {
        
        groupOrPersonIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Parameters)
    private static final io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters();
    }

    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetForumAccessMatrix_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      boolean hasGroupDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getGroupDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getGroupDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      boolean hasAccessLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getAccessLevelId();
      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getAccessLevelIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      boolean hasForumId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getForumId();
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      boolean hasAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getAccessOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      boolean hasGroupId();
      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      io.dstore.engine.Values.integerValue getGroupId();
      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getGroupIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      boolean hasAnonymousAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getAnonymousAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getAnonymousAccessOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      boolean hasGroupAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getGroupAccess();
      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getGroupAccessOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      boolean hasAccessType();
      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      io.dstore.engine.Values.integerValue getAccessType();
      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getAccessTypeOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (groupDescription_ != null) {
                  subBuilder = groupDescription_.toBuilder();
                }
                groupDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupDescription_);
                  groupDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (accessLevelId_ != null) {
                  subBuilder = accessLevelId_.toBuilder();
                }
                accessLevelId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(accessLevelId_);
                  accessLevelId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (forumId_ != null) {
                  subBuilder = forumId_.toBuilder();
                }
                forumId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forumId_);
                  forumId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (access_ != null) {
                  subBuilder = access_.toBuilder();
                }
                access_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(access_);
                  access_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (groupId_ != null) {
                  subBuilder = groupId_.toBuilder();
                }
                groupId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupId_);
                  groupId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160034: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (anonymousAccess_ != null) {
                  subBuilder = anonymousAccess_.toBuilder();
                }
                anonymousAccess_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(anonymousAccess_);
                  anonymousAccess_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160058: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (groupAccess_ != null) {
                  subBuilder = groupAccess_.toBuilder();
                }
                groupAccess_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupAccess_);
                  groupAccess_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (accessType_ != null) {
                  subBuilder = accessType_.toBuilder();
                }
                accessType_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(accessType_);
                  accessType_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int GROUP_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue groupDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      public boolean hasGroupDescription() {
        return groupDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getGroupDescription() {
        return groupDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : groupDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getGroupDescriptionOrBuilder() {
        return getGroupDescription();
      }

      public static final int ACCESS_LEVEL_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue accessLevelId_;
      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      public boolean hasAccessLevelId() {
        return accessLevelId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getAccessLevelId() {
        return accessLevelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevelId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
       *
       * <pre>
       * ID eines Zugriffsrechtes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getAccessLevelIdOrBuilder() {
        return getAccessLevelId();
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue description_;
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
       *
       * <pre>
       * Beschreibung des Zugriffsrechtes "AccessLevelID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int FORUM_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue forumId_;
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      public boolean hasForumId() {
        return forumId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getForumId() {
        return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
       *
       * <pre>
       * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
        return getForumId();
      }

      public static final int ACCESS_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.booleanValue access_;
      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      public boolean hasAccess() {
        return access_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getAccess() {
        return access_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : access_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
       *
       * <pre>
       * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getAccessOrBuilder() {
        return getAccess();
      }

      public static final int GROUP_ID_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue groupId_;
      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      public boolean hasGroupId() {
        return groupId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getGroupId() {
        return groupId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : groupId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
       *
       * <pre>
       * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getGroupIdOrBuilder() {
        return getGroupId();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 20003;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
       *
       * <pre>
       * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int ANONYMOUS_ACCESS_FIELD_NUMBER = 20004;
      private io.dstore.engine.Values.booleanValue anonymousAccess_;
      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      public boolean hasAnonymousAccess() {
        return anonymousAccess_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getAnonymousAccess() {
        return anonymousAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : anonymousAccess_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
       *
       * <pre>
       * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getAnonymousAccessOrBuilder() {
        return getAnonymousAccess();
      }

      public static final int GROUP_ACCESS_FIELD_NUMBER = 20007;
      private io.dstore.engine.Values.booleanValue groupAccess_;
      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      public boolean hasGroupAccess() {
        return groupAccess_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getGroupAccess() {
        return groupAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : groupAccess_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
       *
       * <pre>
       * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGroupAccessOrBuilder() {
        return getGroupAccess();
      }

      public static final int ACCESS_TYPE_FIELD_NUMBER = 20008;
      private io.dstore.engine.Values.integerValue accessType_;
      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      public boolean hasAccessType() {
        return accessType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getAccessType() {
        return accessType_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessType_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
       *
       * <pre>
       * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getAccessTypeOrBuilder() {
        return getAccessType();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (groupDescription_ != null) {
          output.writeMessage(10001, getGroupDescription());
        }
        if (accessLevelId_ != null) {
          output.writeMessage(10002, getAccessLevelId());
        }
        if (description_ != null) {
          output.writeMessage(10003, getDescription());
        }
        if (forumId_ != null) {
          output.writeMessage(10004, getForumId());
        }
        if (access_ != null) {
          output.writeMessage(10005, getAccess());
        }
        if (groupId_ != null) {
          output.writeMessage(10006, getGroupId());
        }
        if (personId_ != null) {
          output.writeMessage(20003, getPersonId());
        }
        if (anonymousAccess_ != null) {
          output.writeMessage(20004, getAnonymousAccess());
        }
        if (groupAccess_ != null) {
          output.writeMessage(20007, getGroupAccess());
        }
        if (accessType_ != null) {
          output.writeMessage(20008, getAccessType());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (groupDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getGroupDescription());
        }
        if (accessLevelId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getAccessLevelId());
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getDescription());
        }
        if (forumId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getForumId());
        }
        if (access_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getAccess());
        }
        if (groupId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getGroupId());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20003, getPersonId());
        }
        if (anonymousAccess_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20004, getAnonymousAccess());
        }
        if (groupAccess_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20007, getGroupAccess());
        }
        if (accessType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20008, getAccessType());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row)
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = null;
          } else {
            groupDescription_ = null;
            groupDescriptionBuilder_ = null;
          }
          if (accessLevelIdBuilder_ == null) {
            accessLevelId_ = null;
          } else {
            accessLevelId_ = null;
            accessLevelIdBuilder_ = null;
          }
          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (forumIdBuilder_ == null) {
            forumId_ = null;
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }
          if (accessBuilder_ == null) {
            access_ = null;
          } else {
            access_ = null;
            accessBuilder_ = null;
          }
          if (groupIdBuilder_ == null) {
            groupId_ = null;
          } else {
            groupId_ = null;
            groupIdBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (anonymousAccessBuilder_ == null) {
            anonymousAccess_ = null;
          } else {
            anonymousAccess_ = null;
            anonymousAccessBuilder_ = null;
          }
          if (groupAccessBuilder_ == null) {
            groupAccess_ = null;
          } else {
            groupAccess_ = null;
            groupAccessBuilder_ = null;
          }
          if (accessTypeBuilder_ == null) {
            accessType_ = null;
          } else {
            accessType_ = null;
            accessTypeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row build() {
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row buildPartial() {
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row result = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (groupDescriptionBuilder_ == null) {
            result.groupDescription_ = groupDescription_;
          } else {
            result.groupDescription_ = groupDescriptionBuilder_.build();
          }
          if (accessLevelIdBuilder_ == null) {
            result.accessLevelId_ = accessLevelId_;
          } else {
            result.accessLevelId_ = accessLevelIdBuilder_.build();
          }
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (forumIdBuilder_ == null) {
            result.forumId_ = forumId_;
          } else {
            result.forumId_ = forumIdBuilder_.build();
          }
          if (accessBuilder_ == null) {
            result.access_ = access_;
          } else {
            result.access_ = accessBuilder_.build();
          }
          if (groupIdBuilder_ == null) {
            result.groupId_ = groupId_;
          } else {
            result.groupId_ = groupIdBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (anonymousAccessBuilder_ == null) {
            result.anonymousAccess_ = anonymousAccess_;
          } else {
            result.anonymousAccess_ = anonymousAccessBuilder_.build();
          }
          if (groupAccessBuilder_ == null) {
            result.groupAccess_ = groupAccess_;
          } else {
            result.groupAccess_ = groupAccessBuilder_.build();
          }
          if (accessTypeBuilder_ == null) {
            result.accessType_ = accessType_;
          } else {
            result.accessType_ = accessTypeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row other) {
          if (other == io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasGroupDescription()) {
            mergeGroupDescription(other.getGroupDescription());
          }
          if (other.hasAccessLevelId()) {
            mergeAccessLevelId(other.getAccessLevelId());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasForumId()) {
            mergeForumId(other.getForumId());
          }
          if (other.hasAccess()) {
            mergeAccess(other.getAccess());
          }
          if (other.hasGroupId()) {
            mergeGroupId(other.getGroupId());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasAnonymousAccess()) {
            mergeAnonymousAccess(other.getAnonymousAccess());
          }
          if (other.hasGroupAccess()) {
            mergeGroupAccess(other.getGroupAccess());
          }
          if (other.hasAccessType()) {
            mergeAccessType(other.getAccessType());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue groupDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> groupDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public boolean hasGroupDescription() {
          return groupDescriptionBuilder_ != null || groupDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getGroupDescription() {
          if (groupDescriptionBuilder_ == null) {
            return groupDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : groupDescription_;
          } else {
            return groupDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public Builder setGroupDescription(io.dstore.engine.Values.stringValue value) {
          if (groupDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupDescription_ = value;
            onChanged();
          } else {
            groupDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public Builder setGroupDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = builderForValue.build();
            onChanged();
          } else {
            groupDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public Builder mergeGroupDescription(io.dstore.engine.Values.stringValue value) {
          if (groupDescriptionBuilder_ == null) {
            if (groupDescription_ != null) {
              groupDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(groupDescription_).mergeFrom(value).buildPartial();
            } else {
              groupDescription_ = value;
            }
            onChanged();
          } else {
            groupDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public Builder clearGroupDescription() {
          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = null;
            onChanged();
          } else {
            groupDescription_ = null;
            groupDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getGroupDescriptionBuilder() {
          
          onChanged();
          return getGroupDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getGroupDescriptionOrBuilder() {
          if (groupDescriptionBuilder_ != null) {
            return groupDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return groupDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : groupDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue group_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getGroupDescriptionFieldBuilder() {
          if (groupDescriptionBuilder_ == null) {
            groupDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getGroupDescription(),
                    getParentForChildren(),
                    isClean());
            groupDescription_ = null;
          }
          return groupDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue accessLevelId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> accessLevelIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public boolean hasAccessLevelId() {
          return accessLevelIdBuilder_ != null || accessLevelId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getAccessLevelId() {
          if (accessLevelIdBuilder_ == null) {
            return accessLevelId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevelId_;
          } else {
            return accessLevelIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public Builder setAccessLevelId(io.dstore.engine.Values.integerValue value) {
          if (accessLevelIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            accessLevelId_ = value;
            onChanged();
          } else {
            accessLevelIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public Builder setAccessLevelId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (accessLevelIdBuilder_ == null) {
            accessLevelId_ = builderForValue.build();
            onChanged();
          } else {
            accessLevelIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public Builder mergeAccessLevelId(io.dstore.engine.Values.integerValue value) {
          if (accessLevelIdBuilder_ == null) {
            if (accessLevelId_ != null) {
              accessLevelId_ =
                io.dstore.engine.Values.integerValue.newBuilder(accessLevelId_).mergeFrom(value).buildPartial();
            } else {
              accessLevelId_ = value;
            }
            onChanged();
          } else {
            accessLevelIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public Builder clearAccessLevelId() {
          if (accessLevelIdBuilder_ == null) {
            accessLevelId_ = null;
            onChanged();
          } else {
            accessLevelId_ = null;
            accessLevelIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getAccessLevelIdBuilder() {
          
          onChanged();
          return getAccessLevelIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getAccessLevelIdOrBuilder() {
          if (accessLevelIdBuilder_ != null) {
            return accessLevelIdBuilder_.getMessageOrBuilder();
          } else {
            return accessLevelId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : accessLevelId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_level_id = 10002;</code>
         *
         * <pre>
         * ID eines Zugriffsrechtes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getAccessLevelIdFieldBuilder() {
          if (accessLevelIdBuilder_ == null) {
            accessLevelIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getAccessLevelId(),
                    getParentForChildren(),
                    isClean());
            accessLevelId_ = null;
          }
          return accessLevelIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public Builder setDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public Builder setDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public Builder mergeDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.engine.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10003;</code>
         *
         * <pre>
         * Beschreibung des Zugriffsrechtes "AccessLevelID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue forumId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> forumIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public boolean hasForumId() {
          return forumIdBuilder_ != null || forumId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getForumId() {
          if (forumIdBuilder_ == null) {
            return forumId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
          } else {
            return forumIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public Builder setForumId(io.dstore.engine.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forumId_ = value;
            onChanged();
          } else {
            forumIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public Builder setForumId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (forumIdBuilder_ == null) {
            forumId_ = builderForValue.build();
            onChanged();
          } else {
            forumIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public Builder mergeForumId(io.dstore.engine.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (forumId_ != null) {
              forumId_ =
                io.dstore.engine.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
            } else {
              forumId_ = value;
            }
            onChanged();
          } else {
            forumIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public Builder clearForumId() {
          if (forumIdBuilder_ == null) {
            forumId_ = null;
            onChanged();
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getForumIdBuilder() {
          
          onChanged();
          return getForumIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getForumIdOrBuilder() {
          if (forumIdBuilder_ != null) {
            return forumIdBuilder_.getMessageOrBuilder();
          } else {
            return forumId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : forumId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue forum_id = 10004;</code>
         *
         * <pre>
         * ID eines Forums - also entweder "&#64;ForumID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID eines Forums, für das "GroupID" explizit Zugriffsrechte besitzt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getForumIdFieldBuilder() {
          if (forumIdBuilder_ == null) {
            forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getForumId(),
                    getParentForChildren(),
                    isClean());
            forumId_ = null;
          }
          return forumIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue access_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> accessBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public boolean hasAccess() {
          return accessBuilder_ != null || access_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getAccess() {
          if (accessBuilder_ == null) {
            return access_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : access_;
          } else {
            return accessBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public Builder setAccess(io.dstore.engine.Values.booleanValue value) {
          if (accessBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            access_ = value;
            onChanged();
          } else {
            accessBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public Builder setAccess(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (accessBuilder_ == null) {
            access_ = builderForValue.build();
            onChanged();
          } else {
            accessBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public Builder mergeAccess(io.dstore.engine.Values.booleanValue value) {
          if (accessBuilder_ == null) {
            if (access_ != null) {
              access_ =
                io.dstore.engine.Values.booleanValue.newBuilder(access_).mergeFrom(value).buildPartial();
            } else {
              access_ = value;
            }
            onChanged();
          } else {
            accessBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public Builder clearAccess() {
          if (accessBuilder_ == null) {
            access_ = null;
            onChanged();
          } else {
            access_ = null;
            accessBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getAccessBuilder() {
          
          onChanged();
          return getAccessFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getAccessOrBuilder() {
          if (accessBuilder_ != null) {
            return accessBuilder_.getMessageOrBuilder();
          } else {
            return access_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : access_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue access = 10005;</code>
         *
         * <pre>
         * "0" Die Gruppe "GroupID" hat das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID" NICHT"1" Die Gruppe "GroupID" BESITZT das Zugriffsrecht "AccessLevelID" für das Forum "&#64;ForumID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getAccessFieldBuilder() {
          if (accessBuilder_ == null) {
            accessBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getAccess(),
                    getParentForChildren(),
                    isClean());
            access_ = null;
          }
          return accessBuilder_;
        }

        private io.dstore.engine.Values.integerValue groupId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> groupIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public boolean hasGroupId() {
          return groupIdBuilder_ != null || groupId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getGroupId() {
          if (groupIdBuilder_ == null) {
            return groupId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : groupId_;
          } else {
            return groupIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public Builder setGroupId(io.dstore.engine.Values.integerValue value) {
          if (groupIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupId_ = value;
            onChanged();
          } else {
            groupIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public Builder setGroupId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (groupIdBuilder_ == null) {
            groupId_ = builderForValue.build();
            onChanged();
          } else {
            groupIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public Builder mergeGroupId(io.dstore.engine.Values.integerValue value) {
          if (groupIdBuilder_ == null) {
            if (groupId_ != null) {
              groupId_ =
                io.dstore.engine.Values.integerValue.newBuilder(groupId_).mergeFrom(value).buildPartial();
            } else {
              groupId_ = value;
            }
            onChanged();
          } else {
            groupIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public Builder clearGroupId() {
          if (groupIdBuilder_ == null) {
            groupId_ = null;
            onChanged();
          } else {
            groupId_ = null;
            groupIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getGroupIdBuilder() {
          
          onChanged();
          return getGroupIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getGroupIdOrBuilder() {
          if (groupIdBuilder_ != null) {
            return groupIdBuilder_.getMessageOrBuilder();
          } else {
            return groupId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : groupId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue group_id = 10006;</code>
         *
         * <pre>
         * ID einer Personen-Gruppe - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder aber die ID einer Gruppe, für die EXPLIZIT Zugriffsrechte für das Forum "&#64;ForumID" existieren
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getGroupIdFieldBuilder() {
          if (groupIdBuilder_ == null) {
            groupIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getGroupId(),
                    getParentForChildren(),
                    isClean());
            groupId_ = null;
          }
          return groupIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 20003;</code>
         *
         * <pre>
         * ID einer Person - also entweder "&#64;GroupOrPersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde, oder die ID einer Person, für die explizit Zugriffsrechte für "&#64;ForumID" vergeben sind
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue anonymousAccess_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> anonymousAccessBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public boolean hasAnonymousAccess() {
          return anonymousAccessBuilder_ != null || anonymousAccess_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getAnonymousAccess() {
          if (anonymousAccessBuilder_ == null) {
            return anonymousAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : anonymousAccess_;
          } else {
            return anonymousAccessBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public Builder setAnonymousAccess(io.dstore.engine.Values.booleanValue value) {
          if (anonymousAccessBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            anonymousAccess_ = value;
            onChanged();
          } else {
            anonymousAccessBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public Builder setAnonymousAccess(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (anonymousAccessBuilder_ == null) {
            anonymousAccess_ = builderForValue.build();
            onChanged();
          } else {
            anonymousAccessBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public Builder mergeAnonymousAccess(io.dstore.engine.Values.booleanValue value) {
          if (anonymousAccessBuilder_ == null) {
            if (anonymousAccess_ != null) {
              anonymousAccess_ =
                io.dstore.engine.Values.booleanValue.newBuilder(anonymousAccess_).mergeFrom(value).buildPartial();
            } else {
              anonymousAccess_ = value;
            }
            onChanged();
          } else {
            anonymousAccessBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public Builder clearAnonymousAccess() {
          if (anonymousAccessBuilder_ == null) {
            anonymousAccess_ = null;
            onChanged();
          } else {
            anonymousAccess_ = null;
            anonymousAccessBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getAnonymousAccessBuilder() {
          
          onChanged();
          return getAnonymousAccessFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getAnonymousAccessOrBuilder() {
          if (anonymousAccessBuilder_ != null) {
            return anonymousAccessBuilder_.getMessageOrBuilder();
          } else {
            return anonymousAccess_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : anonymousAccess_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue anonymous_access = 20004;</code>
         *
         * <pre>
         * "0" : Die anonyme Person ("PersonID = 0") besitzt das Zugriffsrecht "AccessLevelID" NICHT"1" : Die anonyme Person ("PersonID = 0") BESITZT das Zugriffsrecht "AccessLevelID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getAnonymousAccessFieldBuilder() {
          if (anonymousAccessBuilder_ == null) {
            anonymousAccessBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getAnonymousAccess(),
                    getParentForChildren(),
                    isClean());
            anonymousAccess_ = null;
          }
          return anonymousAccessBuilder_;
        }

        private io.dstore.engine.Values.booleanValue groupAccess_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> groupAccessBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public boolean hasGroupAccess() {
          return groupAccessBuilder_ != null || groupAccess_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getGroupAccess() {
          if (groupAccessBuilder_ == null) {
            return groupAccess_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : groupAccess_;
          } else {
            return groupAccessBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public Builder setGroupAccess(io.dstore.engine.Values.booleanValue value) {
          if (groupAccessBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupAccess_ = value;
            onChanged();
          } else {
            groupAccessBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public Builder setGroupAccess(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (groupAccessBuilder_ == null) {
            groupAccess_ = builderForValue.build();
            onChanged();
          } else {
            groupAccessBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public Builder mergeGroupAccess(io.dstore.engine.Values.booleanValue value) {
          if (groupAccessBuilder_ == null) {
            if (groupAccess_ != null) {
              groupAccess_ =
                io.dstore.engine.Values.booleanValue.newBuilder(groupAccess_).mergeFrom(value).buildPartial();
            } else {
              groupAccess_ = value;
            }
            onChanged();
          } else {
            groupAccessBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public Builder clearGroupAccess() {
          if (groupAccessBuilder_ == null) {
            groupAccess_ = null;
            onChanged();
          } else {
            groupAccess_ = null;
            groupAccessBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getGroupAccessBuilder() {
          
          onChanged();
          return getGroupAccessFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getGroupAccessOrBuilder() {
          if (groupAccessBuilder_ != null) {
            return groupAccessBuilder_.getMessageOrBuilder();
          } else {
            return groupAccess_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : groupAccess_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue group_access = 20007;</code>
         *
         * <pre>
         * "0" : Es gibt KEINE Gruppe, der die Person zugeordnet ist, die das Zugriffsrecht "AccessLevelID" hat"1" : Die Person ist in wenigstens einer Gruppe, die das Zugriffsrecht "AccessLevelID" hat
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getGroupAccessFieldBuilder() {
          if (groupAccessBuilder_ == null) {
            groupAccessBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getGroupAccess(),
                    getParentForChildren(),
                    isClean());
            groupAccess_ = null;
          }
          return groupAccessBuilder_;
        }

        private io.dstore.engine.Values.integerValue accessType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> accessTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public boolean hasAccessType() {
          return accessTypeBuilder_ != null || accessType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getAccessType() {
          if (accessTypeBuilder_ == null) {
            return accessType_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : accessType_;
          } else {
            return accessTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public Builder setAccessType(io.dstore.engine.Values.integerValue value) {
          if (accessTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            accessType_ = value;
            onChanged();
          } else {
            accessTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public Builder setAccessType(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (accessTypeBuilder_ == null) {
            accessType_ = builderForValue.build();
            onChanged();
          } else {
            accessTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public Builder mergeAccessType(io.dstore.engine.Values.integerValue value) {
          if (accessTypeBuilder_ == null) {
            if (accessType_ != null) {
              accessType_ =
                io.dstore.engine.Values.integerValue.newBuilder(accessType_).mergeFrom(value).buildPartial();
            } else {
              accessType_ = value;
            }
            onChanged();
          } else {
            accessTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public Builder clearAccessType() {
          if (accessTypeBuilder_ == null) {
            accessType_ = null;
            onChanged();
          } else {
            accessType_ = null;
            accessTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getAccessTypeBuilder() {
          
          onChanged();
          return getAccessTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getAccessTypeOrBuilder() {
          if (accessTypeBuilder_ != null) {
            return accessTypeBuilder_.getMessageOrBuilder();
          } else {
            return accessType_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : accessType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue access_type = 20008;</code>
         *
         * <pre>
         * Diese Rückgabespalte gibt an, ob die Person "PersonID" das Zugriffsrecht "AccessLevelID" besitzt (oder eben nicht) und wodurch sie das Recht erhalten hat..."1" : Direkt"2" : Über eine Gruppe"3" : Über die anonyme Person"4" : Keine Berechtigung
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getAccessTypeFieldBuilder() {
          if (accessTypeBuilder_ == null) {
            accessTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getAccessType(),
                    getParentForChildren(),
                    isClean());
            accessType_ = null;
          }
          return accessTypeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row)
      private static final io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row();
      }

      public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetForumAccessMatrix_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetForumAccessMatrix_Ad.Response)
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.class, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response build() {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response buildPartial() {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response result = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response) {
          return mergeFrom((io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response other) {
        if (other == io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.Row.Builder, io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetForumAccessMatrix_Ad.Response)
    private static final io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response();
    }

    public static io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.FoGetForumAccessMatrixAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9dstore/engine/procedures/fo_GetForumAc" +
      "cessMatrix_Ad.proto\022(dstore.engine.fo_Ge" +
      "tForumAccessMatrix_Ad\032\032dstore/engine/val" +
      "ues.proto\032\031dstore/engine/error.proto\032\033ds" +
      "tore/engine/message.proto\"\240\002\n\nParameters" +
      "\0224\n\010forum_id\030\001 \001(\0132\".dstore.engine.value" +
      "s.integerValue\022\026\n\rforum_id_null\030\351\007 \001(\010\022?" +
      "\n\023check_person_access\030\002 \001(\0132\".dstore.eng" +
      "ine.values.booleanValue\022!\n\030check_person_" +
      "access_null\030\352\007 \001(\010\022>\n\022group_or_person_id",
      "\030\003 \001(\0132\".dstore.engine.values.integerVal" +
      "ue\022 \n\027group_or_person_id_null\030\353\007 \001(\010\"\215\006\n" +
      "\010Response\022)\n\005error\030\001 \001(\0132\032.dstore.engine" +
      ".error.Error\022/\n\007message\030\003 \003(\0132\036.dstore.e" +
      "ngine.message.Message\022C\n\003row\030\004 \003(\01326.dst" +
      "ore.engine.fo_GetForumAccessMatrix_Ad.Re" +
      "sponse.Row\032\337\004\n\003Row\022\017\n\006row_id\030\220N \001(\005\022=\n\021g" +
      "roup_description\030\221N \001(\0132!.dstore.engine." +
      "values.stringValue\022<\n\017access_level_id\030\222N" +
      " \001(\0132\".dstore.engine.values.integerValue",
      "\0227\n\013description\030\223N \001(\0132!.dstore.engine.v" +
      "alues.stringValue\0225\n\010forum_id\030\224N \001(\0132\".d" +
      "store.engine.values.integerValue\0223\n\006acce" +
      "ss\030\225N \001(\0132\".dstore.engine.values.boolean" +
      "Value\0225\n\010group_id\030\226N \001(\0132\".dstore.engine" +
      ".values.integerValue\0227\n\tperson_id\030\243\234\001 \001(" +
      "\0132\".dstore.engine.values.integerValue\022>\n" +
      "\020anonymous_access\030\244\234\001 \001(\0132\".dstore.engin" +
      "e.values.booleanValue\022:\n\014group_access\030\247\234" +
      "\001 \001(\0132\".dstore.engine.values.booleanValu",
      "e\0229\n\013access_type\030\250\234\001 \001(\0132\".dstore.engine" +
      ".values.integerValueB\030\n\026io.dstore.engine" +
      ".procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Parameters_descriptor,
        new java.lang.String[] { "ForumId", "ForumIdNull", "CheckPersonAccess", "CheckPersonAccessNull", "GroupOrPersonId", "GroupOrPersonIdNull", });
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetForumAccessMatrix_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "GroupDescription", "AccessLevelId", "Description", "ForumId", "Access", "GroupId", "PersonId", "AnonymousAccess", "GroupAccess", "AccessType", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
