// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/pm_GetPersonAccessCharacs_Pu.proto

package io.dstore.engine.procs;

public final class PmGetPersonAccessCharacsPu {
  private PmGetPersonAccessCharacsPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1001;</code>
     */
    boolean getLanguageIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      languageIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              languageIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.Builder.class);
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1001;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (languageId_ != null) {
        output.writeMessage(1, getLanguageId());
      }
      if (languageIdNull_ != false) {
        output.writeBool(1001, languageIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLanguageId());
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, languageIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters)
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters build() {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters buildPartial() {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters result = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters(this);
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters other) {
        if (other == io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters.getDefaultInstance()) return this;
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public Builder setLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Parameters)
    private static final io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters();
    }

    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      boolean hasPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      boolean hasModify();
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getModify();
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      boolean hasMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      boolean hasPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      boolean hasReadAccessRestrictionPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      boolean hasFormat();
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getFormat();
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      boolean hasRequired();
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getRequired();
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      boolean hasBasicFieldType();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getBasicFieldType();
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      boolean hasVisible();
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getVisible();
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      boolean hasBasicFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBasicFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      boolean hasId();
      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getId();
      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      boolean hasLanguageId();
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLanguageId();
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (modify_ != null) {
                  subBuilder = modify_.toBuilder();
                }
                modify_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(modify_);
                  modify_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (maxLength_ != null) {
                  subBuilder = maxLength_.toBuilder();
                }
                maxLength_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxLength_);
                  maxLength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (predefinedValues_ != null) {
                  subBuilder = predefinedValues_.toBuilder();
                }
                predefinedValues_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predefinedValues_);
                  predefinedValues_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (readAccessRestrictionPattern_ != null) {
                  subBuilder = readAccessRestrictionPattern_.toBuilder();
                }
                readAccessRestrictionPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(readAccessRestrictionPattern_);
                  readAccessRestrictionPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (format_ != null) {
                  subBuilder = format_.toBuilder();
                }
                format_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(format_);
                  format_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (required_ != null) {
                  subBuilder = required_.toBuilder();
                }
                required_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(required_);
                  required_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (basicFieldType_ != null) {
                  subBuilder = basicFieldType_.toBuilder();
                }
                basicFieldType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldType_);
                  basicFieldType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (visible_ != null) {
                  subBuilder = visible_.toBuilder();
                }
                visible_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(visible_);
                  visible_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (basicFieldTypeId_ != null) {
                  subBuilder = basicFieldTypeId_.toBuilder();
                }
                basicFieldTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(basicFieldTypeId_);
                  basicFieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (id_ != null) {
                  subBuilder = id_.toBuilder();
                }
                id_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(id_);
                  id_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (languageId_ != null) {
                  subBuilder = languageId_.toBuilder();
                }
                languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(languageId_);
                  languageId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue description_;
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue precisionValue_;
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
       *
       * <pre>
       * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int MODIFY_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue modify_;
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public boolean hasModify() {
        return modify_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getModify() {
        return modify_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder() {
        return getModify();
      }

      public static final int MAX_LENGTH_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue maxLength_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      public boolean hasMaxLength() {
        return maxLength_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getMaxLength() {
        return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
        return getMaxLength();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int PREDEFINED_VALUES_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.booleanValue predefinedValues_;
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public boolean hasPredefinedValues() {
        return predefinedValues_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getPredefinedValues() {
        return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
       *
       * <pre>
       * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
        return getPredefinedValues();
      }

      public static final int READ_ACCESS_RESTRICTION_PATTERN_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue readAccessRestrictionPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      public boolean hasReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
       *
       * <pre>
       * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
        return getReadAccessRestrictionPattern();
      }

      public static final int FORMAT_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.stringValue format_;
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public boolean hasFormat() {
        return format_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getFormat() {
        return format_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
       *
       * <pre>
       * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder() {
        return getFormat();
      }

      public static final int REQUIRED_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.booleanValue required_;
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public boolean hasRequired() {
        return required_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getRequired() {
        return required_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder() {
        return getRequired();
      }

      public static final int BASIC_FIELD_TYPE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue basicFieldType_;
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      public boolean hasBasicFieldType() {
        return basicFieldType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getBasicFieldType() {
        return basicFieldType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
        return getBasicFieldType();
      }

      public static final int VISIBLE_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.booleanValue visible_;
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      public boolean hasVisible() {
        return visible_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getVisible() {
        return visible_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder() {
        return getVisible();
      }

      public static final int BASIC_FIELD_TYPE_ID_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue basicFieldTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public boolean hasBasicFieldTypeId() {
        return basicFieldTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBasicFieldTypeId() {
        return basicFieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
       *
       * <pre>
       * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
        return getBasicFieldTypeId();
      }

      public static final int ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue id_;
      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      public boolean hasId() {
        return id_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getId() {
        return id_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : id_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getIdOrBuilder() {
        return getId();
      }

      public static final int LANGUAGE_ID_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue languageId_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      public boolean hasLanguageId() {
        return languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
       *
       * <pre>
       * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        return getLanguageId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (description_ != null) {
          output.writeMessage(10001, getDescription());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10002, getPrecisionValue());
        }
        if (modify_ != null) {
          output.writeMessage(10003, getModify());
        }
        if (maxLength_ != null) {
          output.writeMessage(10004, getMaxLength());
        }
        if (sortNo_ != null) {
          output.writeMessage(10005, getSortNo());
        }
        if (predefinedValues_ != null) {
          output.writeMessage(10006, getPredefinedValues());
        }
        if (readAccessRestrictionPattern_ != null) {
          output.writeMessage(10007, getReadAccessRestrictionPattern());
        }
        if (format_ != null) {
          output.writeMessage(10008, getFormat());
        }
        if (required_ != null) {
          output.writeMessage(10009, getRequired());
        }
        if (basicFieldType_ != null) {
          output.writeMessage(10010, getBasicFieldType());
        }
        if (visible_ != null) {
          output.writeMessage(10011, getVisible());
        }
        if (basicFieldTypeId_ != null) {
          output.writeMessage(10012, getBasicFieldTypeId());
        }
        if (id_ != null) {
          output.writeMessage(10013, getId());
        }
        if (languageId_ != null) {
          output.writeMessage(10014, getLanguageId());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getDescription());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPrecisionValue());
        }
        if (modify_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getModify());
        }
        if (maxLength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getMaxLength());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getSortNo());
        }
        if (predefinedValues_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getPredefinedValues());
        }
        if (readAccessRestrictionPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getReadAccessRestrictionPattern());
        }
        if (format_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getFormat());
        }
        if (required_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getRequired());
        }
        if (basicFieldType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getBasicFieldType());
        }
        if (visible_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getVisible());
        }
        if (basicFieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getBasicFieldTypeId());
        }
        if (id_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getId());
        }
        if (languageId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getLanguageId());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row)
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (modifyBuilder_ == null) {
            modify_ = null;
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }
          if (formatBuilder_ == null) {
            format_ = null;
          } else {
            format_ = null;
            formatBuilder_ = null;
          }
          if (requiredBuilder_ == null) {
            required_ = null;
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }
          if (visibleBuilder_ == null) {
            visible_ = null;
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }
          if (idBuilder_ == null) {
            id_ = null;
          } else {
            id_ = null;
            idBuilder_ = null;
          }
          if (languageIdBuilder_ == null) {
            languageId_ = null;
          } else {
            languageId_ = null;
            languageIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row build() {
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row buildPartial() {
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row result = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (modifyBuilder_ == null) {
            result.modify_ = modify_;
          } else {
            result.modify_ = modifyBuilder_.build();
          }
          if (maxLengthBuilder_ == null) {
            result.maxLength_ = maxLength_;
          } else {
            result.maxLength_ = maxLengthBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (predefinedValuesBuilder_ == null) {
            result.predefinedValues_ = predefinedValues_;
          } else {
            result.predefinedValues_ = predefinedValuesBuilder_.build();
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPattern_;
          } else {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPatternBuilder_.build();
          }
          if (formatBuilder_ == null) {
            result.format_ = format_;
          } else {
            result.format_ = formatBuilder_.build();
          }
          if (requiredBuilder_ == null) {
            result.required_ = required_;
          } else {
            result.required_ = requiredBuilder_.build();
          }
          if (basicFieldTypeBuilder_ == null) {
            result.basicFieldType_ = basicFieldType_;
          } else {
            result.basicFieldType_ = basicFieldTypeBuilder_.build();
          }
          if (visibleBuilder_ == null) {
            result.visible_ = visible_;
          } else {
            result.visible_ = visibleBuilder_.build();
          }
          if (basicFieldTypeIdBuilder_ == null) {
            result.basicFieldTypeId_ = basicFieldTypeId_;
          } else {
            result.basicFieldTypeId_ = basicFieldTypeIdBuilder_.build();
          }
          if (idBuilder_ == null) {
            result.id_ = id_;
          } else {
            result.id_ = idBuilder_.build();
          }
          if (languageIdBuilder_ == null) {
            result.languageId_ = languageId_;
          } else {
            result.languageId_ = languageIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row other) {
          if (other == io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasModify()) {
            mergeModify(other.getModify());
          }
          if (other.hasMaxLength()) {
            mergeMaxLength(other.getMaxLength());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasPredefinedValues()) {
            mergePredefinedValues(other.getPredefinedValues());
          }
          if (other.hasReadAccessRestrictionPattern()) {
            mergeReadAccessRestrictionPattern(other.getReadAccessRestrictionPattern());
          }
          if (other.hasFormat()) {
            mergeFormat(other.getFormat());
          }
          if (other.hasRequired()) {
            mergeRequired(other.getRequired());
          }
          if (other.hasBasicFieldType()) {
            mergeBasicFieldType(other.getBasicFieldType());
          }
          if (other.hasVisible()) {
            mergeVisible(other.getVisible());
          }
          if (other.hasBasicFieldTypeId()) {
            mergeBasicFieldTypeId(other.getBasicFieldTypeId());
          }
          if (other.hasId()) {
            mergeId(other.getId());
          }
          if (other.hasLanguageId()) {
            mergeLanguageId(other.getLanguageId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public Builder setDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public Builder setDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public Builder mergeDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.engine.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "ID" in der durch "&#64;LanguageID" angegeben Sprache. Falls keine "&#64;LanguageID" angegeben wurde oder keine Übersetzung existiert, wird die Bezeichnung in der Standardsprache ausgegeben.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public Builder setPrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public Builder setPrecisionValue(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public Builder mergePrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.engine.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10002;</code>
         *
         * <pre>
         * Gilt nur für Datentypen mit Basis-Daten-Typ "Zahl" und gibt die Anzahl erlaubter Nachkommastellen an, die in Eigenschaften zum Merkmal "ID" vorkommen dürfen.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.engine.Values.integerValue modify_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> modifyBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public boolean hasModify() {
          return modifyBuilder_ != null || modify_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getModify() {
          if (modifyBuilder_ == null) {
            return modify_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
          } else {
            return modifyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder setModify(io.dstore.engine.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            modify_ = value;
            onChanged();
          } else {
            modifyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder setModify(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (modifyBuilder_ == null) {
            modify_ = builderForValue.build();
            onChanged();
          } else {
            modifyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder mergeModify(io.dstore.engine.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (modify_ != null) {
              modify_ =
                io.dstore.engine.Values.integerValue.newBuilder(modify_).mergeFrom(value).buildPartial();
            } else {
              modify_ = value;
            }
            onChanged();
          } else {
            modifyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder clearModify() {
          if (modifyBuilder_ == null) {
            modify_ = null;
            onChanged();
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getModifyBuilder() {
          
          onChanged();
          return getModifyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder() {
          if (modifyBuilder_ != null) {
            return modifyBuilder_.getMessageOrBuilder();
          } else {
            return modify_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10003;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getModifyFieldBuilder() {
          if (modifyBuilder_ == null) {
            modifyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getModify(),
                    getParentForChildren(),
                    isClean());
            modify_ = null;
          }
          return modifyBuilder_;
        }

        private io.dstore.engine.Values.integerValue maxLength_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxLengthBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public boolean hasMaxLength() {
          return maxLengthBuilder_ != null || maxLength_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getMaxLength() {
          if (maxLengthBuilder_ == null) {
            return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          } else {
            return maxLengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxLength_ = value;
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (maxLengthBuilder_ == null) {
            maxLength_ = builderForValue.build();
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public Builder mergeMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (maxLength_ != null) {
              maxLength_ =
                io.dstore.engine.Values.integerValue.newBuilder(maxLength_).mergeFrom(value).buildPartial();
            } else {
              maxLength_ = value;
            }
            onChanged();
          } else {
            maxLengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public Builder clearMaxLength() {
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
            onChanged();
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getMaxLengthBuilder() {
          
          onChanged();
          return getMaxLengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
          if (maxLengthBuilder_ != null) {
            return maxLengthBuilder_.getMessageOrBuilder();
          } else {
            return maxLength_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10004;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "ID" haben dürfen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getMaxLengthFieldBuilder() {
          if (maxLengthBuilder_ == null) {
            maxLengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getMaxLength(),
                    getParentForChildren(),
                    isClean());
            maxLength_ = null;
          }
          return maxLengthBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10005;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge des Merkmals "ID" innerhalb aller Merkmale
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.booleanValue predefinedValues_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> predefinedValuesBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public boolean hasPredefinedValues() {
          return predefinedValuesBuilder_ != null || predefinedValues_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          } else {
            return predefinedValuesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder setPredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predefinedValues_ = value;
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder setPredefinedValues(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = builderForValue.build();
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder mergePredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (predefinedValues_ != null) {
              predefinedValues_ =
                io.dstore.engine.Values.booleanValue.newBuilder(predefinedValues_).mergeFrom(value).buildPartial();
            } else {
              predefinedValues_ = value;
            }
            onChanged();
          } else {
            predefinedValuesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder clearPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
            onChanged();
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getPredefinedValuesBuilder() {
          
          onChanged();
          return getPredefinedValuesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
          if (predefinedValuesBuilder_ != null) {
            return predefinedValuesBuilder_.getMessageOrBuilder();
          } else {
            return predefinedValues_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10006;</code>
         *
         * <pre>
         * Hat das Merkmal "ID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getPredefinedValuesFieldBuilder() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getPredefinedValues(),
                    getParentForChildren(),
                    isClean());
            predefinedValues_ = null;
          }
          return predefinedValuesBuilder_;
        }

        private io.dstore.engine.Values.stringValue readAccessRestrictionPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> readAccessRestrictionPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public boolean hasReadAccessRestrictionPattern() {
          return readAccessRestrictionPatternBuilder_ != null || readAccessRestrictionPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            return readAccessRestrictionPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          } else {
            return readAccessRestrictionPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public Builder setReadAccessRestrictionPattern(io.dstore.engine.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            readAccessRestrictionPattern_ = value;
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public Builder setReadAccessRestrictionPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = builderForValue.build();
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public Builder mergeReadAccessRestrictionPattern(io.dstore.engine.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (readAccessRestrictionPattern_ != null) {
              readAccessRestrictionPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(readAccessRestrictionPattern_).mergeFrom(value).buildPartial();
            } else {
              readAccessRestrictionPattern_ = value;
            }
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public Builder clearReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
            onChanged();
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getReadAccessRestrictionPatternBuilder() {
          
          onChanged();
          return getReadAccessRestrictionPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
          if (readAccessRestrictionPatternBuilder_ != null) {
            return readAccessRestrictionPatternBuilder_.getMessageOrBuilder();
          } else {
            return readAccessRestrictionPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10007;</code>
         *
         * <pre>
         * "NULL" wenn "Visible = 1". Welch. Teil v. Eigensch. zu "ID" für den "publicuser" ausgegeben werden :- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen ("n = 0" mögl.)- NULL : Datensätze zu "ID" fehlen ganz
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getReadAccessRestrictionPatternFieldBuilder() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getReadAccessRestrictionPattern(),
                    getParentForChildren(),
                    isClean());
            readAccessRestrictionPattern_ = null;
          }
          return readAccessRestrictionPatternBuilder_;
        }

        private io.dstore.engine.Values.stringValue format_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> formatBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public boolean hasFormat() {
          return formatBuilder_ != null || format_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getFormat() {
          if (formatBuilder_ == null) {
            return format_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
          } else {
            return formatBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder setFormat(io.dstore.engine.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            format_ = value;
            onChanged();
          } else {
            formatBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder setFormat(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (formatBuilder_ == null) {
            format_ = builderForValue.build();
            onChanged();
          } else {
            formatBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder mergeFormat(io.dstore.engine.Values.stringValue value) {
          if (formatBuilder_ == null) {
            if (format_ != null) {
              format_ =
                io.dstore.engine.Values.stringValue.newBuilder(format_).mergeFrom(value).buildPartial();
            } else {
              format_ = value;
            }
            onChanged();
          } else {
            formatBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public Builder clearFormat() {
          if (formatBuilder_ == null) {
            format_ = null;
            onChanged();
          } else {
            format_ = null;
            formatBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getFormatBuilder() {
          
          onChanged();
          return getFormatFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getFormatOrBuilder() {
          if (formatBuilder_ != null) {
            return formatBuilder_.getMessageOrBuilder();
          } else {
            return format_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : format_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue format = 10008;</code>
         *
         * <pre>
         * Von welchem "Format" (so etwas wie ein regulären Ausdruck) müssen die Eigenschaften zum Merkmal "ID" sein. Derzeit nicht implementiert und verwendet !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getFormatFieldBuilder() {
          if (formatBuilder_ == null) {
            formatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getFormat(),
                    getParentForChildren(),
                    isClean());
            format_ = null;
          }
          return formatBuilder_;
        }

        private io.dstore.engine.Values.booleanValue required_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> requiredBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public boolean hasRequired() {
          return requiredBuilder_ != null || required_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getRequired() {
          if (requiredBuilder_ == null) {
            return required_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
          } else {
            return requiredBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder setRequired(io.dstore.engine.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            required_ = value;
            onChanged();
          } else {
            requiredBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder setRequired(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (requiredBuilder_ == null) {
            required_ = builderForValue.build();
            onChanged();
          } else {
            requiredBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder mergeRequired(io.dstore.engine.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (required_ != null) {
              required_ =
                io.dstore.engine.Values.booleanValue.newBuilder(required_).mergeFrom(value).buildPartial();
            } else {
              required_ = value;
            }
            onChanged();
          } else {
            requiredBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder clearRequired() {
          if (requiredBuilder_ == null) {
            required_ = null;
            onChanged();
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getRequiredBuilder() {
          
          onChanged();
          return getRequiredFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder() {
          if (requiredBuilder_ != null) {
            return requiredBuilder_.getMessageOrBuilder();
          } else {
            return required_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10009;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "ID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "ID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getRequiredFieldBuilder() {
          if (requiredBuilder_ == null) {
            requiredBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getRequired(),
                    getParentForChildren(),
                    isClean());
            required_ = null;
          }
          return requiredBuilder_;
        }

        private io.dstore.engine.Values.stringValue basicFieldType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> basicFieldTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public boolean hasBasicFieldType() {
          return basicFieldTypeBuilder_ != null || basicFieldType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            return basicFieldType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
          } else {
            return basicFieldTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public Builder setBasicFieldType(io.dstore.engine.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldType_ = value;
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public Builder setBasicFieldType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public Builder mergeBasicFieldType(io.dstore.engine.Values.stringValue value) {
          if (basicFieldTypeBuilder_ == null) {
            if (basicFieldType_ != null) {
              basicFieldType_ =
                io.dstore.engine.Values.stringValue.newBuilder(basicFieldType_).mergeFrom(value).buildPartial();
            } else {
              basicFieldType_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public Builder clearBasicFieldType() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldType_ = null;
            onChanged();
          } else {
            basicFieldType_ = null;
            basicFieldTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getBasicFieldTypeBuilder() {
          
          onChanged();
          return getBasicFieldTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getBasicFieldTypeOrBuilder() {
          if (basicFieldTypeBuilder_ != null) {
            return basicFieldTypeBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : basicFieldType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue basic_field_type = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Basis-Feld-Typs "BasicFieldTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getBasicFieldTypeFieldBuilder() {
          if (basicFieldTypeBuilder_ == null) {
            basicFieldTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getBasicFieldType(),
                    getParentForChildren(),
                    isClean());
            basicFieldType_ = null;
          }
          return basicFieldTypeBuilder_;
        }

        private io.dstore.engine.Values.booleanValue visible_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> visibleBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public boolean hasVisible() {
          return visibleBuilder_ != null || visible_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getVisible() {
          if (visibleBuilder_ == null) {
            return visible_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
          } else {
            return visibleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public Builder setVisible(io.dstore.engine.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            visible_ = value;
            onChanged();
          } else {
            visibleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public Builder setVisible(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (visibleBuilder_ == null) {
            visible_ = builderForValue.build();
            onChanged();
          } else {
            visibleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public Builder mergeVisible(io.dstore.engine.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (visible_ != null) {
              visible_ =
                io.dstore.engine.Values.booleanValue.newBuilder(visible_).mergeFrom(value).buildPartial();
            } else {
              visible_ = value;
            }
            onChanged();
          } else {
            visibleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public Builder clearVisible() {
          if (visibleBuilder_ == null) {
            visible_ = null;
            onChanged();
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getVisibleBuilder() {
          
          onChanged();
          return getVisibleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder() {
          if (visibleBuilder_ != null) {
            return visibleBuilder_.getMessageOrBuilder();
          } else {
            return visible_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10011;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "ID" ausgegeben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getVisibleFieldBuilder() {
          if (visibleBuilder_ == null) {
            visibleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getVisible(),
                    getParentForChildren(),
                    isClean());
            visible_ = null;
          }
          return visibleBuilder_;
        }

        private io.dstore.engine.Values.integerValue basicFieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> basicFieldTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public boolean hasBasicFieldTypeId() {
          return basicFieldTypeIdBuilder_ != null || basicFieldTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            return basicFieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          } else {
            return basicFieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder setBasicFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            basicFieldTypeId_ = value;
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder setBasicFieldTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder mergeBasicFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (basicFieldTypeIdBuilder_ == null) {
            if (basicFieldTypeId_ != null) {
              basicFieldTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(basicFieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              basicFieldTypeId_ = value;
            }
            onChanged();
          } else {
            basicFieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public Builder clearBasicFieldTypeId() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeId_ = null;
            onChanged();
          } else {
            basicFieldTypeId_ = null;
            basicFieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBasicFieldTypeIdBuilder() {
          
          onChanged();
          return getBasicFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBasicFieldTypeIdOrBuilder() {
          if (basicFieldTypeIdBuilder_ != null) {
            return basicFieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return basicFieldTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : basicFieldTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue basic_field_type_id = 10012;</code>
         *
         * <pre>
         * ID eines Basis-Feld-Typs. Dieser Typ gibt an, von welchem (Daten-)Typ alle Eigenschaften zum Merkmal "ID" sein müssen (s.a. "mi_GetFieldTypes_Ad")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBasicFieldTypeIdFieldBuilder() {
          if (basicFieldTypeIdBuilder_ == null) {
            basicFieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBasicFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            basicFieldTypeId_ = null;
          }
          return basicFieldTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue id_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> idBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public boolean hasId() {
          return idBuilder_ != null || id_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getId() {
          if (idBuilder_ == null) {
            return id_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : id_;
          } else {
            return idBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public Builder setId(io.dstore.engine.Values.integerValue value) {
          if (idBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            id_ = value;
            onChanged();
          } else {
            idBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public Builder setId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (idBuilder_ == null) {
            id_ = builderForValue.build();
            onChanged();
          } else {
            idBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public Builder mergeId(io.dstore.engine.Values.integerValue value) {
          if (idBuilder_ == null) {
            if (id_ != null) {
              id_ =
                io.dstore.engine.Values.integerValue.newBuilder(id_).mergeFrom(value).buildPartial();
            } else {
              id_ = value;
            }
            onChanged();
          } else {
            idBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public Builder clearId() {
          if (idBuilder_ == null) {
            id_ = null;
            onChanged();
          } else {
            id_ = null;
            idBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getIdBuilder() {
          
          onChanged();
          return getIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getIdOrBuilder() {
          if (idBuilder_ != null) {
            return idBuilder_.getMessageOrBuilder();
          } else {
            return id_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : id_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue id = 10013;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zur "PersonTypeID = 0" zum Schlüssel "PersonGrantAccessIDs" konfiguriert ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getIdFieldBuilder() {
          if (idBuilder_ == null) {
            idBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getId(),
                    getParentForChildren(),
                    isClean());
            id_ = null;
          }
          return idBuilder_;
        }

        private io.dstore.engine.Values.integerValue languageId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public boolean hasLanguageId() {
          return languageIdBuilder_ != null || languageId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLanguageId() {
          if (languageIdBuilder_ == null) {
            return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
          } else {
            return languageIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
          if (languageIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            languageId_ = value;
            onChanged();
          } else {
            languageIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public Builder setLanguageId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (languageIdBuilder_ == null) {
            languageId_ = builderForValue.build();
            onChanged();
          } else {
            languageIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
          if (languageIdBuilder_ == null) {
            if (languageId_ != null) {
              languageId_ =
                io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
            } else {
              languageId_ = value;
            }
            onChanged();
          } else {
            languageIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public Builder clearLanguageId() {
          if (languageIdBuilder_ == null) {
            languageId_ = null;
            onChanged();
          } else {
            languageId_ = null;
            languageIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
          
          onChanged();
          return getLanguageIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
          if (languageIdBuilder_ != null) {
            return languageIdBuilder_.getMessageOrBuilder();
          } else {
            return languageId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10014;</code>
         *
         * <pre>
         * Entweder "&#64;LanguageID" oder "0" - um erkennen zu können, in welcher Sprache die "Description" angegeben ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLanguageIdFieldBuilder() {
          if (languageIdBuilder_ == null) {
            languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLanguageId(),
                    getParentForChildren(),
                    isClean());
            languageId_ = null;
          }
          return languageIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row)
      private static final io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row();
      }

      public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonAccessCharacs_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response)
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.class, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response build() {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response buildPartial() {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response result = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response other) {
        if (other == io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonAccessCharacs_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonAccessCharacs_Pu.Response)
    private static final io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response();
    }

    public static io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonAccessCharacsPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/pm_GetPersonA" +
      "ccessCharacs_Pu.proto\022*dstore.engine.pm_" +
      "GetPersonAccessCharacs_Pu\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"`\n\nParamet" +
      "ers\0227\n\013language_id\030\001 \001(\0132\".dstore.engine" +
      ".values.integerValue\022\031\n\020language_id_null" +
      "\030\351\007 \001(\010\"\372\007\n\010Response\022)\n\005error\030\001 \001(\0132\032.ds" +
      "tore.engine.error.Error\022/\n\007message\030\003 \003(\013" +
      "2\036.dstore.engine.message.Message\022E\n\003row\030",
      "\004 \003(\01328.dstore.engine.pm_GetPersonAccess" +
      "Characs_Pu.Response.Row\032\312\006\n\003Row\022\017\n\006row_i" +
      "d\030\220N \001(\005\0227\n\013description\030\221N \001(\0132!.dstore." +
      "engine.values.stringValue\022<\n\017precision_v" +
      "alue\030\222N \001(\0132\".dstore.engine.values.integ" +
      "erValue\0223\n\006modify\030\223N \001(\0132\".dstore.engine" +
      ".values.integerValue\0227\n\nmax_length\030\224N \001(" +
      "\0132\".dstore.engine.values.integerValue\0224\n" +
      "\007sort_no\030\225N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\022>\n\021predefined_values\030\226N \001(\0132",
      "\".dstore.engine.values.booleanValue\022K\n\037r" +
      "ead_access_restriction_pattern\030\227N \001(\0132!." +
      "dstore.engine.values.stringValue\0222\n\006form" +
      "at\030\230N \001(\0132!.dstore.engine.values.stringV" +
      "alue\0225\n\010required\030\231N \001(\0132\".dstore.engine." +
      "values.booleanValue\022<\n\020basic_field_type\030" +
      "\232N \001(\0132!.dstore.engine.values.stringValu" +
      "e\0224\n\007visible\030\233N \001(\0132\".dstore.engine.valu" +
      "es.booleanValue\022@\n\023basic_field_type_id\030\234" +
      "N \001(\0132\".dstore.engine.values.integerValu",
      "e\022/\n\002id\030\235N \001(\0132\".dstore.engine.values.in" +
      "tegerValue\0228\n\013language_id\030\236N \001(\0132\".dstor" +
      "e.engine.values.integerValueB\030\n\026io.dstor" +
      "e.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Parameters_descriptor,
        new java.lang.String[] { "LanguageId", "LanguageIdNull", });
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonAccessCharacs_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Description", "PrecisionValue", "Modify", "MaxLength", "SortNo", "PredefinedValues", "ReadAccessRestrictionPattern", "Format", "Required", "BasicFieldType", "Visible", "BasicFieldTypeId", "Id", "LanguageId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
