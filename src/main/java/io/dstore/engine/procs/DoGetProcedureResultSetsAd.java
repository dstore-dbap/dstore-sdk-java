// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/do_GetProcedureResultSets_Ad.proto

package io.dstore.engine.procs;

public final class DoGetProcedureResultSetsAd {
  private DoGetProcedureResultSetsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    boolean hasProcedureName();
    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.engine.Values.stringValue getProcedureName();
    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getProcedureNameOrBuilder();

    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    boolean getProcedureNameNull();

    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    boolean hasProcedureResultConditionId();
    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getProcedureResultConditionId();
    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder();

    /**
     * <code>optional bool procedure_result_condition_id_null = 1002;</code>
     */
    boolean getProcedureResultConditionIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      procedureNameNull_ = false;
      procedureResultConditionIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (procedureName_ != null) {
                subBuilder = procedureName_.toBuilder();
              }
              procedureName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureName_);
                procedureName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (procedureResultConditionId_ != null) {
                subBuilder = procedureResultConditionId_.toBuilder();
              }
              procedureResultConditionId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureResultConditionId_);
                procedureResultConditionId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureNameNull_ = input.readBool();
              break;
            }
            case 8016: {

              procedureResultConditionIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.Builder.class);
    }

    public static final int PROCEDURE_NAME_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.stringValue procedureName_;
    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    public boolean hasProcedureName() {
      return procedureName_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.engine.Values.stringValue getProcedureName() {
      return procedureName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : procedureName_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
      return getProcedureName();
    }

    public static final int PROCEDURE_NAME_NULL_FIELD_NUMBER = 1001;
    private boolean procedureNameNull_;
    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    public boolean getProcedureNameNull() {
      return procedureNameNull_;
    }

    public static final int PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue procedureResultConditionId_;
    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public boolean hasProcedureResultConditionId() {
      return procedureResultConditionId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getProcedureResultConditionId() {
      return procedureResultConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
      return getProcedureResultConditionId();
    }

    public static final int PROCEDURE_RESULT_CONDITION_ID_NULL_FIELD_NUMBER = 1002;
    private boolean procedureResultConditionIdNull_;
    /**
     * <code>optional bool procedure_result_condition_id_null = 1002;</code>
     */
    public boolean getProcedureResultConditionIdNull() {
      return procedureResultConditionIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureName_ != null) {
        output.writeMessage(1, getProcedureName());
      }
      if (procedureResultConditionId_ != null) {
        output.writeMessage(2, getProcedureResultConditionId());
      }
      if (procedureNameNull_ != false) {
        output.writeBool(1001, procedureNameNull_);
      }
      if (procedureResultConditionIdNull_ != false) {
        output.writeBool(1002, procedureResultConditionIdNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureName());
      }
      if (procedureResultConditionId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProcedureResultConditionId());
      }
      if (procedureNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureNameNull_);
      }
      if (procedureResultConditionIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, procedureResultConditionIdNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }
        procedureNameNull_ = false;

        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = null;
        } else {
          procedureResultConditionId_ = null;
          procedureResultConditionIdBuilder_ = null;
        }
        procedureResultConditionIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters build() {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters buildPartial() {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters result = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters(this);
        if (procedureNameBuilder_ == null) {
          result.procedureName_ = procedureName_;
        } else {
          result.procedureName_ = procedureNameBuilder_.build();
        }
        result.procedureNameNull_ = procedureNameNull_;
        if (procedureResultConditionIdBuilder_ == null) {
          result.procedureResultConditionId_ = procedureResultConditionId_;
        } else {
          result.procedureResultConditionId_ = procedureResultConditionIdBuilder_.build();
        }
        result.procedureResultConditionIdNull_ = procedureResultConditionIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters other) {
        if (other == io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureName()) {
          mergeProcedureName(other.getProcedureName());
        }
        if (other.getProcedureNameNull() != false) {
          setProcedureNameNull(other.getProcedureNameNull());
        }
        if (other.hasProcedureResultConditionId()) {
          mergeProcedureResultConditionId(other.getProcedureResultConditionId());
        }
        if (other.getProcedureResultConditionIdNull() != false) {
          setProcedureResultConditionIdNull(other.getProcedureResultConditionIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.stringValue procedureName_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> procedureNameBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public boolean hasProcedureName() {
        return procedureNameBuilder_ != null || procedureName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.engine.Values.stringValue getProcedureName() {
        if (procedureNameBuilder_ == null) {
          return procedureName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : procedureName_;
        } else {
          return procedureNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(io.dstore.engine.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureName_ = value;
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (procedureNameBuilder_ == null) {
          procedureName_ = builderForValue.build();
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public Builder mergeProcedureName(io.dstore.engine.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (procedureName_ != null) {
            procedureName_ =
              io.dstore.engine.Values.stringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
          } else {
            procedureName_ = value;
          }
          onChanged();
        } else {
          procedureNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public Builder clearProcedureName() {
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
          onChanged();
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getProcedureNameBuilder() {
        
        onChanged();
        return getProcedureNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
        if (procedureNameBuilder_ != null) {
          return procedureNameBuilder_.getMessageOrBuilder();
        } else {
          return procedureName_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : procedureName_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue procedure_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getProcedureNameFieldBuilder() {
        if (procedureNameBuilder_ == null) {
          procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getProcedureName(),
                  getParentForChildren(),
                  isClean());
          procedureName_ = null;
        }
        return procedureNameBuilder_;
      }

      private boolean procedureNameNull_ ;
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public boolean getProcedureNameNull() {
        return procedureNameNull_;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder setProcedureNameNull(boolean value) {
        
        procedureNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder clearProcedureNameNull() {
        
        procedureNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue procedureResultConditionId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> procedureResultConditionIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public boolean hasProcedureResultConditionId() {
        return procedureResultConditionIdBuilder_ != null || procedureResultConditionId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getProcedureResultConditionId() {
        if (procedureResultConditionIdBuilder_ == null) {
          return procedureResultConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
        } else {
          return procedureResultConditionIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder setProcedureResultConditionId(io.dstore.engine.Values.integerValue value) {
        if (procedureResultConditionIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureResultConditionId_ = value;
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder setProcedureResultConditionId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = builderForValue.build();
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder mergeProcedureResultConditionId(io.dstore.engine.Values.integerValue value) {
        if (procedureResultConditionIdBuilder_ == null) {
          if (procedureResultConditionId_ != null) {
            procedureResultConditionId_ =
              io.dstore.engine.Values.integerValue.newBuilder(procedureResultConditionId_).mergeFrom(value).buildPartial();
          } else {
            procedureResultConditionId_ = value;
          }
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder clearProcedureResultConditionId() {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = null;
          onChanged();
        } else {
          procedureResultConditionId_ = null;
          procedureResultConditionIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getProcedureResultConditionIdBuilder() {
        
        onChanged();
        return getProcedureResultConditionIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
        if (procedureResultConditionIdBuilder_ != null) {
          return procedureResultConditionIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureResultConditionId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getProcedureResultConditionIdFieldBuilder() {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getProcedureResultConditionId(),
                  getParentForChildren(),
                  isClean());
          procedureResultConditionId_ = null;
        }
        return procedureResultConditionIdBuilder_;
      }

      private boolean procedureResultConditionIdNull_ ;
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public boolean getProcedureResultConditionIdNull() {
        return procedureResultConditionIdNull_;
      }
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public Builder setProcedureResultConditionIdNull(boolean value) {
        
        procedureResultConditionIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public Builder clearProcedureResultConditionIdNull() {
        
        procedureResultConditionIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
    private static final io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters();
    }

    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      boolean hasCondition();
      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCondition();
      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getConditionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      boolean hasProcedureResultConditionId();
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getProcedureResultConditionId();
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      boolean hasDescriptionValidSinceVersion();
      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescriptionValidSinceVersion();
      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      boolean hasPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPrecisionValue();
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      boolean hasParameterName();
      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getParameterName();
      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getParameterNameOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      boolean hasScale();
      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      io.dstore.engine.Values.integerValue getScale();
      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getScaleOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      boolean hasResultColumnName();
      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      io.dstore.engine.Values.stringValue getResultColumnName();
      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getResultColumnNameOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      boolean hasLength();
      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLength();
      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLengthOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      boolean hasDescriptionLastEdited();
      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getDescriptionLastEdited();
      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      boolean hasIntroducedIndstoreVersion();
      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getIntroducedIndstoreVersion();
      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      boolean hasDataType();
      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDataType();
      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDataTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      boolean hasProcResultCondDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getProcResultCondDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (condition_ != null) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (procedureResultConditionId_ != null) {
                  subBuilder = procedureResultConditionId_.toBuilder();
                }
                procedureResultConditionId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureResultConditionId_);
                  procedureResultConditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (descriptionValidSinceVersion_ != null) {
                  subBuilder = descriptionValidSinceVersion_.toBuilder();
                }
                descriptionValidSinceVersion_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(descriptionValidSinceVersion_);
                  descriptionValidSinceVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (parameterName_ != null) {
                  subBuilder = parameterName_.toBuilder();
                }
                parameterName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(parameterName_);
                  parameterName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (scale_ != null) {
                  subBuilder = scale_.toBuilder();
                }
                scale_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(scale_);
                  scale_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (resultColumnName_ != null) {
                  subBuilder = resultColumnName_.toBuilder();
                }
                resultColumnName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(resultColumnName_);
                  resultColumnName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (length_ != null) {
                  subBuilder = length_.toBuilder();
                }
                length_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(length_);
                  length_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (descriptionLastEdited_ != null) {
                  subBuilder = descriptionLastEdited_.toBuilder();
                }
                descriptionLastEdited_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(descriptionLastEdited_);
                  descriptionLastEdited_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (introducedIndstoreVersion_ != null) {
                  subBuilder = introducedIndstoreVersion_.toBuilder();
                }
                introducedIndstoreVersion_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(introducedIndstoreVersion_);
                  introducedIndstoreVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (dataType_ != null) {
                  subBuilder = dataType_.toBuilder();
                }
                dataType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(dataType_);
                  dataType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (procResultCondDescription_ != null) {
                  subBuilder = procResultCondDescription_.toBuilder();
                }
                procResultCondDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procResultCondDescription_);
                  procResultCondDescription_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int CONDITION_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue condition_;
      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      public boolean hasCondition() {
        return condition_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCondition() {
        return condition_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
       *
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getConditionOrBuilder() {
        return getCondition();
      }

      public static final int PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue procedureResultConditionId_;
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      public boolean hasProcedureResultConditionId() {
        return procedureResultConditionId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getProcedureResultConditionId() {
        return procedureResultConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
       *
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
        return getProcedureResultConditionId();
      }

      public static final int DESCRIPTION__VALID_SINCE_VERSION_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue descriptionValidSinceVersion_;
      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      public boolean hasDescriptionValidSinceVersion() {
        return descriptionValidSinceVersion_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescriptionValidSinceVersion() {
        return descriptionValidSinceVersion_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
       *
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder() {
        return getDescriptionValidSinceVersion();
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue description_;
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
       *
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue precisionValue_;
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int PARAMETER_NAME_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue parameterName_;
      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      public boolean hasParameterName() {
        return parameterName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getParameterName() {
        return parameterName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : parameterName_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
       *
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getParameterNameOrBuilder() {
        return getParameterName();
      }

      public static final int SCALE_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue scale_;
      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      public boolean hasScale() {
        return scale_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getScale() {
        return scale_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : scale_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
       *
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getScaleOrBuilder() {
        return getScale();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int RESULT_COLUMN_NAME_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue resultColumnName_;
      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      public boolean hasResultColumnName() {
        return resultColumnName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getResultColumnName() {
        return resultColumnName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : resultColumnName_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
       *
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getResultColumnNameOrBuilder() {
        return getResultColumnName();
      }

      public static final int LENGTH_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.integerValue length_;
      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      public boolean hasLength() {
        return length_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLength() {
        return length_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : length_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
       *
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLengthOrBuilder() {
        return getLength();
      }

      public static final int DESCRIPTION__LAST_EDITED_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.timestampValue descriptionLastEdited_;
      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      public boolean hasDescriptionLastEdited() {
        return descriptionLastEdited_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getDescriptionLastEdited() {
        return descriptionLastEdited_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
       *
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder() {
        return getDescriptionLastEdited();
      }

      public static final int INTRODUCED_INDSTORE_VERSION_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.stringValue introducedIndstoreVersion_;
      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      public boolean hasIntroducedIndstoreVersion() {
        return introducedIndstoreVersion_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getIntroducedIndstoreVersion() {
        return introducedIndstoreVersion_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
       *
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder() {
        return getIntroducedIndstoreVersion();
      }

      public static final int DATA_TYPE_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.stringValue dataType_;
      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      public boolean hasDataType() {
        return dataType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDataType() {
        return dataType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dataType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
       *
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDataTypeOrBuilder() {
        return getDataType();
      }

      public static final int PROC_RESULT_COND_DESCRIPTION_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.stringValue procResultCondDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      public boolean hasProcResultCondDescription() {
        return procResultCondDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getProcResultCondDescription() {
        return procResultCondDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
       *
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder() {
        return getProcResultCondDescription();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (condition_ != null) {
          output.writeMessage(10001, getCondition());
        }
        if (procedureResultConditionId_ != null) {
          output.writeMessage(10002, getProcedureResultConditionId());
        }
        if (descriptionValidSinceVersion_ != null) {
          output.writeMessage(10003, getDescriptionValidSinceVersion());
        }
        if (description_ != null) {
          output.writeMessage(10004, getDescription());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          output.writeMessage(10006, getParameterName());
        }
        if (scale_ != null) {
          output.writeMessage(10007, getScale());
        }
        if (sortNo_ != null) {
          output.writeMessage(10008, getSortNo());
        }
        if (resultColumnName_ != null) {
          output.writeMessage(10009, getResultColumnName());
        }
        if (length_ != null) {
          output.writeMessage(10010, getLength());
        }
        if (descriptionLastEdited_ != null) {
          output.writeMessage(10011, getDescriptionLastEdited());
        }
        if (introducedIndstoreVersion_ != null) {
          output.writeMessage(10012, getIntroducedIndstoreVersion());
        }
        if (dataType_ != null) {
          output.writeMessage(10013, getDataType());
        }
        if (procResultCondDescription_ != null) {
          output.writeMessage(10014, getProcResultCondDescription());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (condition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getCondition());
        }
        if (procedureResultConditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getProcedureResultConditionId());
        }
        if (descriptionValidSinceVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getDescriptionValidSinceVersion());
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getDescription());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getParameterName());
        }
        if (scale_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getScale());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSortNo());
        }
        if (resultColumnName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getResultColumnName());
        }
        if (length_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getLength());
        }
        if (descriptionLastEdited_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getDescriptionLastEdited());
        }
        if (introducedIndstoreVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getIntroducedIndstoreVersion());
        }
        if (dataType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getDataType());
        }
        if (procResultCondDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getProcResultCondDescription());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (conditionBuilder_ == null) {
            condition_ = null;
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = null;
          } else {
            procedureResultConditionId_ = null;
            procedureResultConditionIdBuilder_ = null;
          }
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = null;
          } else {
            descriptionValidSinceVersion_ = null;
            descriptionValidSinceVersionBuilder_ = null;
          }
          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }
          if (scaleBuilder_ == null) {
            scale_ = null;
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = null;
          } else {
            resultColumnName_ = null;
            resultColumnNameBuilder_ = null;
          }
          if (lengthBuilder_ == null) {
            length_ = null;
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = null;
          } else {
            descriptionLastEdited_ = null;
            descriptionLastEditedBuilder_ = null;
          }
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = null;
          } else {
            introducedIndstoreVersion_ = null;
            introducedIndstoreVersionBuilder_ = null;
          }
          if (dataTypeBuilder_ == null) {
            dataType_ = null;
          } else {
            dataType_ = null;
            dataTypeBuilder_ = null;
          }
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = null;
          } else {
            procResultCondDescription_ = null;
            procResultCondDescriptionBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row build() {
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row result = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (procedureResultConditionIdBuilder_ == null) {
            result.procedureResultConditionId_ = procedureResultConditionId_;
          } else {
            result.procedureResultConditionId_ = procedureResultConditionIdBuilder_.build();
          }
          if (descriptionValidSinceVersionBuilder_ == null) {
            result.descriptionValidSinceVersion_ = descriptionValidSinceVersion_;
          } else {
            result.descriptionValidSinceVersion_ = descriptionValidSinceVersionBuilder_.build();
          }
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (parameterNameBuilder_ == null) {
            result.parameterName_ = parameterName_;
          } else {
            result.parameterName_ = parameterNameBuilder_.build();
          }
          if (scaleBuilder_ == null) {
            result.scale_ = scale_;
          } else {
            result.scale_ = scaleBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (resultColumnNameBuilder_ == null) {
            result.resultColumnName_ = resultColumnName_;
          } else {
            result.resultColumnName_ = resultColumnNameBuilder_.build();
          }
          if (lengthBuilder_ == null) {
            result.length_ = length_;
          } else {
            result.length_ = lengthBuilder_.build();
          }
          if (descriptionLastEditedBuilder_ == null) {
            result.descriptionLastEdited_ = descriptionLastEdited_;
          } else {
            result.descriptionLastEdited_ = descriptionLastEditedBuilder_.build();
          }
          if (introducedIndstoreVersionBuilder_ == null) {
            result.introducedIndstoreVersion_ = introducedIndstoreVersion_;
          } else {
            result.introducedIndstoreVersion_ = introducedIndstoreVersionBuilder_.build();
          }
          if (dataTypeBuilder_ == null) {
            result.dataType_ = dataType_;
          } else {
            result.dataType_ = dataTypeBuilder_.build();
          }
          if (procResultCondDescriptionBuilder_ == null) {
            result.procResultCondDescription_ = procResultCondDescription_;
          } else {
            result.procResultCondDescription_ = procResultCondDescriptionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasProcedureResultConditionId()) {
            mergeProcedureResultConditionId(other.getProcedureResultConditionId());
          }
          if (other.hasDescriptionValidSinceVersion()) {
            mergeDescriptionValidSinceVersion(other.getDescriptionValidSinceVersion());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasParameterName()) {
            mergeParameterName(other.getParameterName());
          }
          if (other.hasScale()) {
            mergeScale(other.getScale());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasResultColumnName()) {
            mergeResultColumnName(other.getResultColumnName());
          }
          if (other.hasLength()) {
            mergeLength(other.getLength());
          }
          if (other.hasDescriptionLastEdited()) {
            mergeDescriptionLastEdited(other.getDescriptionLastEdited());
          }
          if (other.hasIntroducedIndstoreVersion()) {
            mergeIntroducedIndstoreVersion(other.getIntroducedIndstoreVersion());
          }
          if (other.hasDataType()) {
            mergeDataType(other.getDataType());
          }
          if (other.hasProcResultCondDescription()) {
            mergeProcResultCondDescription(other.getProcResultCondDescription());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue condition_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> conditionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public boolean hasCondition() {
          return conditionBuilder_ != null || condition_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCondition() {
          if (conditionBuilder_ == null) {
            return condition_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public Builder setCondition(io.dstore.engine.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public Builder setCondition(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public Builder mergeCondition(io.dstore.engine.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (condition_ != null) {
              condition_ =
                io.dstore.engine.Values.stringValue.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = null;
            onChanged();
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getConditionBuilder() {
          
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : condition_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition = 10001;</code>
         *
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCondition(),
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        private io.dstore.engine.Values.integerValue procedureResultConditionId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> procedureResultConditionIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public boolean hasProcedureResultConditionId() {
          return procedureResultConditionIdBuilder_ != null || procedureResultConditionId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getProcedureResultConditionId() {
          if (procedureResultConditionIdBuilder_ == null) {
            return procedureResultConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
          } else {
            return procedureResultConditionIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public Builder setProcedureResultConditionId(io.dstore.engine.Values.integerValue value) {
          if (procedureResultConditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureResultConditionId_ = value;
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public Builder setProcedureResultConditionId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = builderForValue.build();
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public Builder mergeProcedureResultConditionId(io.dstore.engine.Values.integerValue value) {
          if (procedureResultConditionIdBuilder_ == null) {
            if (procedureResultConditionId_ != null) {
              procedureResultConditionId_ =
                io.dstore.engine.Values.integerValue.newBuilder(procedureResultConditionId_).mergeFrom(value).buildPartial();
            } else {
              procedureResultConditionId_ = value;
            }
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public Builder clearProcedureResultConditionId() {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = null;
            onChanged();
          } else {
            procedureResultConditionId_ = null;
            procedureResultConditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getProcedureResultConditionIdBuilder() {
          
          onChanged();
          return getProcedureResultConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
          if (procedureResultConditionIdBuilder_ != null) {
            return procedureResultConditionIdBuilder_.getMessageOrBuilder();
          } else {
            return procedureResultConditionId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue procedure_result_condition_id = 10002;</code>
         *
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getProcedureResultConditionIdFieldBuilder() {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getProcedureResultConditionId(),
                    getParentForChildren(),
                    isClean());
            procedureResultConditionId_ = null;
          }
          return procedureResultConditionIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue descriptionValidSinceVersion_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionValidSinceVersionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public boolean hasDescriptionValidSinceVersion() {
          return descriptionValidSinceVersionBuilder_ != null || descriptionValidSinceVersion_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescriptionValidSinceVersion() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            return descriptionValidSinceVersion_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
          } else {
            return descriptionValidSinceVersionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public Builder setDescriptionValidSinceVersion(io.dstore.engine.Values.stringValue value) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            descriptionValidSinceVersion_ = value;
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public Builder setDescriptionValidSinceVersion(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = builderForValue.build();
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public Builder mergeDescriptionValidSinceVersion(io.dstore.engine.Values.stringValue value) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            if (descriptionValidSinceVersion_ != null) {
              descriptionValidSinceVersion_ =
                io.dstore.engine.Values.stringValue.newBuilder(descriptionValidSinceVersion_).mergeFrom(value).buildPartial();
            } else {
              descriptionValidSinceVersion_ = value;
            }
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public Builder clearDescriptionValidSinceVersion() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = null;
            onChanged();
          } else {
            descriptionValidSinceVersion_ = null;
            descriptionValidSinceVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionValidSinceVersionBuilder() {
          
          onChanged();
          return getDescriptionValidSinceVersionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder() {
          if (descriptionValidSinceVersionBuilder_ != null) {
            return descriptionValidSinceVersionBuilder_.getMessageOrBuilder();
          } else {
            return descriptionValidSinceVersion_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description__valid_since_version = 10003;</code>
         *
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionValidSinceVersionFieldBuilder() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescriptionValidSinceVersion(),
                    getParentForChildren(),
                    isClean());
            descriptionValidSinceVersion_ = null;
          }
          return descriptionValidSinceVersionBuilder_;
        }

        private io.dstore.engine.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public Builder setDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public Builder setDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public Builder mergeDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.engine.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10004;</code>
         *
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public Builder setPrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public Builder setPrecisionValue(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public Builder mergePrecisionValue(io.dstore.engine.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.engine.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue precision_value = 10005;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.engine.Values.stringValue parameterName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> parameterNameBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public boolean hasParameterName() {
          return parameterNameBuilder_ != null || parameterName_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getParameterName() {
          if (parameterNameBuilder_ == null) {
            return parameterName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : parameterName_;
          } else {
            return parameterNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public Builder setParameterName(io.dstore.engine.Values.stringValue value) {
          if (parameterNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            parameterName_ = value;
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public Builder setParameterName(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (parameterNameBuilder_ == null) {
            parameterName_ = builderForValue.build();
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public Builder mergeParameterName(io.dstore.engine.Values.stringValue value) {
          if (parameterNameBuilder_ == null) {
            if (parameterName_ != null) {
              parameterName_ =
                io.dstore.engine.Values.stringValue.newBuilder(parameterName_).mergeFrom(value).buildPartial();
            } else {
              parameterName_ = value;
            }
            onChanged();
          } else {
            parameterNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public Builder clearParameterName() {
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
            onChanged();
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getParameterNameBuilder() {
          
          onChanged();
          return getParameterNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getParameterNameOrBuilder() {
          if (parameterNameBuilder_ != null) {
            return parameterNameBuilder_.getMessageOrBuilder();
          } else {
            return parameterName_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : parameterName_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue parameter_name = 10006;</code>
         *
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getParameterNameFieldBuilder() {
          if (parameterNameBuilder_ == null) {
            parameterNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getParameterName(),
                    getParentForChildren(),
                    isClean());
            parameterName_ = null;
          }
          return parameterNameBuilder_;
        }

        private io.dstore.engine.Values.integerValue scale_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> scaleBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public boolean hasScale() {
          return scaleBuilder_ != null || scale_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getScale() {
          if (scaleBuilder_ == null) {
            return scale_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : scale_;
          } else {
            return scaleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public Builder setScale(io.dstore.engine.Values.integerValue value) {
          if (scaleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            scale_ = value;
            onChanged();
          } else {
            scaleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public Builder setScale(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (scaleBuilder_ == null) {
            scale_ = builderForValue.build();
            onChanged();
          } else {
            scaleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public Builder mergeScale(io.dstore.engine.Values.integerValue value) {
          if (scaleBuilder_ == null) {
            if (scale_ != null) {
              scale_ =
                io.dstore.engine.Values.integerValue.newBuilder(scale_).mergeFrom(value).buildPartial();
            } else {
              scale_ = value;
            }
            onChanged();
          } else {
            scaleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public Builder clearScale() {
          if (scaleBuilder_ == null) {
            scale_ = null;
            onChanged();
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getScaleBuilder() {
          
          onChanged();
          return getScaleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getScaleOrBuilder() {
          if (scaleBuilder_ != null) {
            return scaleBuilder_.getMessageOrBuilder();
          } else {
            return scale_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : scale_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue scale = 10007;</code>
         *
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getScaleFieldBuilder() {
          if (scaleBuilder_ == null) {
            scaleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getScale(),
                    getParentForChildren(),
                    isClean());
            scale_ = null;
          }
          return scaleBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.stringValue resultColumnName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> resultColumnNameBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public boolean hasResultColumnName() {
          return resultColumnNameBuilder_ != null || resultColumnName_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getResultColumnName() {
          if (resultColumnNameBuilder_ == null) {
            return resultColumnName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : resultColumnName_;
          } else {
            return resultColumnNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public Builder setResultColumnName(io.dstore.engine.Values.stringValue value) {
          if (resultColumnNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            resultColumnName_ = value;
            onChanged();
          } else {
            resultColumnNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public Builder setResultColumnName(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = builderForValue.build();
            onChanged();
          } else {
            resultColumnNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public Builder mergeResultColumnName(io.dstore.engine.Values.stringValue value) {
          if (resultColumnNameBuilder_ == null) {
            if (resultColumnName_ != null) {
              resultColumnName_ =
                io.dstore.engine.Values.stringValue.newBuilder(resultColumnName_).mergeFrom(value).buildPartial();
            } else {
              resultColumnName_ = value;
            }
            onChanged();
          } else {
            resultColumnNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public Builder clearResultColumnName() {
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = null;
            onChanged();
          } else {
            resultColumnName_ = null;
            resultColumnNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getResultColumnNameBuilder() {
          
          onChanged();
          return getResultColumnNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getResultColumnNameOrBuilder() {
          if (resultColumnNameBuilder_ != null) {
            return resultColumnNameBuilder_.getMessageOrBuilder();
          } else {
            return resultColumnName_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : resultColumnName_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue result_column_name = 10009;</code>
         *
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getResultColumnNameFieldBuilder() {
          if (resultColumnNameBuilder_ == null) {
            resultColumnNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getResultColumnName(),
                    getParentForChildren(),
                    isClean());
            resultColumnName_ = null;
          }
          return resultColumnNameBuilder_;
        }

        private io.dstore.engine.Values.integerValue length_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> lengthBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public boolean hasLength() {
          return lengthBuilder_ != null || length_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLength() {
          if (lengthBuilder_ == null) {
            return length_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : length_;
          } else {
            return lengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public Builder setLength(io.dstore.engine.Values.integerValue value) {
          if (lengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            length_ = value;
            onChanged();
          } else {
            lengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public Builder setLength(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (lengthBuilder_ == null) {
            length_ = builderForValue.build();
            onChanged();
          } else {
            lengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public Builder mergeLength(io.dstore.engine.Values.integerValue value) {
          if (lengthBuilder_ == null) {
            if (length_ != null) {
              length_ =
                io.dstore.engine.Values.integerValue.newBuilder(length_).mergeFrom(value).buildPartial();
            } else {
              length_ = value;
            }
            onChanged();
          } else {
            lengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public Builder clearLength() {
          if (lengthBuilder_ == null) {
            length_ = null;
            onChanged();
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLengthBuilder() {
          
          onChanged();
          return getLengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLengthOrBuilder() {
          if (lengthBuilder_ != null) {
            return lengthBuilder_.getMessageOrBuilder();
          } else {
            return length_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : length_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue length = 10010;</code>
         *
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLengthFieldBuilder() {
          if (lengthBuilder_ == null) {
            lengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLength(),
                    getParentForChildren(),
                    isClean());
            length_ = null;
          }
          return lengthBuilder_;
        }

        private io.dstore.engine.Values.timestampValue descriptionLastEdited_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> descriptionLastEditedBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public boolean hasDescriptionLastEdited() {
          return descriptionLastEditedBuilder_ != null || descriptionLastEdited_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getDescriptionLastEdited() {
          if (descriptionLastEditedBuilder_ == null) {
            return descriptionLastEdited_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
          } else {
            return descriptionLastEditedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public Builder setDescriptionLastEdited(io.dstore.engine.Values.timestampValue value) {
          if (descriptionLastEditedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            descriptionLastEdited_ = value;
            onChanged();
          } else {
            descriptionLastEditedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public Builder setDescriptionLastEdited(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = builderForValue.build();
            onChanged();
          } else {
            descriptionLastEditedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public Builder mergeDescriptionLastEdited(io.dstore.engine.Values.timestampValue value) {
          if (descriptionLastEditedBuilder_ == null) {
            if (descriptionLastEdited_ != null) {
              descriptionLastEdited_ =
                io.dstore.engine.Values.timestampValue.newBuilder(descriptionLastEdited_).mergeFrom(value).buildPartial();
            } else {
              descriptionLastEdited_ = value;
            }
            onChanged();
          } else {
            descriptionLastEditedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public Builder clearDescriptionLastEdited() {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = null;
            onChanged();
          } else {
            descriptionLastEdited_ = null;
            descriptionLastEditedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getDescriptionLastEditedBuilder() {
          
          onChanged();
          return getDescriptionLastEditedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder() {
          if (descriptionLastEditedBuilder_ != null) {
            return descriptionLastEditedBuilder_.getMessageOrBuilder();
          } else {
            return descriptionLastEdited_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue description__last_edited = 10011;</code>
         *
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getDescriptionLastEditedFieldBuilder() {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEditedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getDescriptionLastEdited(),
                    getParentForChildren(),
                    isClean());
            descriptionLastEdited_ = null;
          }
          return descriptionLastEditedBuilder_;
        }

        private io.dstore.engine.Values.stringValue introducedIndstoreVersion_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> introducedIndstoreVersionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public boolean hasIntroducedIndstoreVersion() {
          return introducedIndstoreVersionBuilder_ != null || introducedIndstoreVersion_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getIntroducedIndstoreVersion() {
          if (introducedIndstoreVersionBuilder_ == null) {
            return introducedIndstoreVersion_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
          } else {
            return introducedIndstoreVersionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public Builder setIntroducedIndstoreVersion(io.dstore.engine.Values.stringValue value) {
          if (introducedIndstoreVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            introducedIndstoreVersion_ = value;
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public Builder setIntroducedIndstoreVersion(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = builderForValue.build();
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public Builder mergeIntroducedIndstoreVersion(io.dstore.engine.Values.stringValue value) {
          if (introducedIndstoreVersionBuilder_ == null) {
            if (introducedIndstoreVersion_ != null) {
              introducedIndstoreVersion_ =
                io.dstore.engine.Values.stringValue.newBuilder(introducedIndstoreVersion_).mergeFrom(value).buildPartial();
            } else {
              introducedIndstoreVersion_ = value;
            }
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public Builder clearIntroducedIndstoreVersion() {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = null;
            onChanged();
          } else {
            introducedIndstoreVersion_ = null;
            introducedIndstoreVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getIntroducedIndstoreVersionBuilder() {
          
          onChanged();
          return getIntroducedIndstoreVersionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder() {
          if (introducedIndstoreVersionBuilder_ != null) {
            return introducedIndstoreVersionBuilder_.getMessageOrBuilder();
          } else {
            return introducedIndstoreVersion_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue introduced_indstore_version = 10012;</code>
         *
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getIntroducedIndstoreVersionFieldBuilder() {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getIntroducedIndstoreVersion(),
                    getParentForChildren(),
                    isClean());
            introducedIndstoreVersion_ = null;
          }
          return introducedIndstoreVersionBuilder_;
        }

        private io.dstore.engine.Values.stringValue dataType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> dataTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public boolean hasDataType() {
          return dataTypeBuilder_ != null || dataType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDataType() {
          if (dataTypeBuilder_ == null) {
            return dataType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dataType_;
          } else {
            return dataTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public Builder setDataType(io.dstore.engine.Values.stringValue value) {
          if (dataTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dataType_ = value;
            onChanged();
          } else {
            dataTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public Builder setDataType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (dataTypeBuilder_ == null) {
            dataType_ = builderForValue.build();
            onChanged();
          } else {
            dataTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public Builder mergeDataType(io.dstore.engine.Values.stringValue value) {
          if (dataTypeBuilder_ == null) {
            if (dataType_ != null) {
              dataType_ =
                io.dstore.engine.Values.stringValue.newBuilder(dataType_).mergeFrom(value).buildPartial();
            } else {
              dataType_ = value;
            }
            onChanged();
          } else {
            dataTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public Builder clearDataType() {
          if (dataTypeBuilder_ == null) {
            dataType_ = null;
            onChanged();
          } else {
            dataType_ = null;
            dataTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDataTypeBuilder() {
          
          onChanged();
          return getDataTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDataTypeOrBuilder() {
          if (dataTypeBuilder_ != null) {
            return dataTypeBuilder_.getMessageOrBuilder();
          } else {
            return dataType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : dataType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue data_type = 10013;</code>
         *
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDataTypeFieldBuilder() {
          if (dataTypeBuilder_ == null) {
            dataTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDataType(),
                    getParentForChildren(),
                    isClean());
            dataType_ = null;
          }
          return dataTypeBuilder_;
        }

        private io.dstore.engine.Values.stringValue procResultCondDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> procResultCondDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public boolean hasProcResultCondDescription() {
          return procResultCondDescriptionBuilder_ != null || procResultCondDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getProcResultCondDescription() {
          if (procResultCondDescriptionBuilder_ == null) {
            return procResultCondDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
          } else {
            return procResultCondDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public Builder setProcResultCondDescription(io.dstore.engine.Values.stringValue value) {
          if (procResultCondDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procResultCondDescription_ = value;
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public Builder setProcResultCondDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = builderForValue.build();
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public Builder mergeProcResultCondDescription(io.dstore.engine.Values.stringValue value) {
          if (procResultCondDescriptionBuilder_ == null) {
            if (procResultCondDescription_ != null) {
              procResultCondDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(procResultCondDescription_).mergeFrom(value).buildPartial();
            } else {
              procResultCondDescription_ = value;
            }
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public Builder clearProcResultCondDescription() {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = null;
            onChanged();
          } else {
            procResultCondDescription_ = null;
            procResultCondDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getProcResultCondDescriptionBuilder() {
          
          onChanged();
          return getProcResultCondDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder() {
          if (procResultCondDescriptionBuilder_ != null) {
            return procResultCondDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return procResultCondDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue proc_result_cond_description = 10014;</code>
         *
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getProcResultCondDescriptionFieldBuilder() {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getProcResultCondDescription(),
                    getParentForChildren(),
                    isClean());
            procResultCondDescription_ = null;
          }
          return procResultCondDescriptionBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
      private static final io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row();
      }

      public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response)
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.class, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response build() {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response buildPartial() {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response result = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response other) {
        if (other == io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response)
    private static final io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response();
    }

    public static io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.DoGetProcedureResultSetsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/do_GetProcedu" +
      "reResultSets_Ad.proto\022*dstore.engine.do_" +
      "GetProcedureResultSets_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"\335\001\n\nParame" +
      "ters\0229\n\016procedure_name\030\001 \001(\0132!.dstore.en" +
      "gine.values.stringValue\022\034\n\023procedure_nam" +
      "e_null\030\351\007 \001(\010\022I\n\035procedure_result_condit" +
      "ion_id\030\002 \001(\0132\".dstore.engine.values.inte" +
      "gerValue\022+\n\"procedure_result_condition_i",
      "d_null\030\352\007 \001(\010\"\274\010\n\010Response\022)\n\005error\030\001 \001(" +
      "\0132\032.dstore.engine.error.Error\022/\n\007message" +
      "\030\003 \003(\0132\036.dstore.engine.message.Message\022E" +
      "\n\003row\030\004 \003(\01328.dstore.engine.do_GetProced" +
      "ureResultSets_Ad.Response.Row\032\214\007\n\003Row\022\017\n" +
      "\006row_id\030\220N \001(\005\0225\n\tcondition\030\221N \001(\0132!.dst" +
      "ore.engine.values.stringValue\022J\n\035procedu" +
      "re_result_condition_id\030\222N \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022L\n description" +
      "__valid_since_version\030\223N \001(\0132!.dstore.en",
      "gine.values.stringValue\0227\n\013description\030\224" +
      "N \001(\0132!.dstore.engine.values.stringValue" +
      "\022<\n\017precision_value\030\225N \001(\0132\".dstore.engi" +
      "ne.values.integerValue\022:\n\016parameter_name" +
      "\030\226N \001(\0132!.dstore.engine.values.stringVal" +
      "ue\0222\n\005scale\030\227N \001(\0132\".dstore.engine.value" +
      "s.integerValue\0224\n\007sort_no\030\230N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022>\n\022result_c" +
      "olumn_name\030\231N \001(\0132!.dstore.engine.values" +
      ".stringValue\0223\n\006length\030\232N \001(\0132\".dstore.e",
      "ngine.values.integerValue\022G\n\030description" +
      "__last_edited\030\233N \001(\0132$.dstore.engine.val" +
      "ues.timestampValue\022G\n\033introduced_indstor" +
      "e_version\030\234N \001(\0132!.dstore.engine.values." +
      "stringValue\0225\n\tdata_type\030\235N \001(\0132!.dstore" +
      ".engine.values.stringValue\022H\n\034proc_resul" +
      "t_cond_description\030\236N \001(\0132!.dstore.engin" +
      "e.values.stringValueB\030\n\026io.dstore.engine" +
      ".procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor,
        new java.lang.String[] { "ProcedureName", "ProcedureNameNull", "ProcedureResultConditionId", "ProcedureResultConditionIdNull", });
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Condition", "ProcedureResultConditionId", "DescriptionValidSinceVersion", "Description", "PrecisionValue", "ParameterName", "Scale", "SortNo", "ResultColumnName", "Length", "DescriptionLastEdited", "IntroducedIndstoreVersion", "DataType", "ProcResultCondDescription", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
