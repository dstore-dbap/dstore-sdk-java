// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/pm_GetPersonProperties_Pu.proto

package io.dstore.engine.procs;

public final class PmGetPersonPropertiesPu {
  private PmGetPersonPropertiesPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonProperties_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    boolean hasSortedResult();
    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    io.dstore.engine.Values.booleanValue getSortedResult();
    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getSortedResultOrBuilder();

    /**
     * <code>optional bool sorted_result_null = 1001;</code>
     */
    boolean getSortedResultNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    boolean hasIncludePersonCharacCategoryId();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    io.dstore.engine.Values.booleanValue getIncludePersonCharacCategoryId();
    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getIncludePersonCharacCategoryIdOrBuilder();

    /**
     * <code>optional bool include_person_charac_category_id_null = 1002;</code>
     */
    boolean getIncludePersonCharacCategoryIdNull();

    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    boolean hasInputParameter();
    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    io.dstore.engine.Values.stringValue getInputParameter();
    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getInputParameterOrBuilder();

    /**
     * <code>optional bool input_parameter_null = 1003;</code>
     */
    boolean getInputParameterNull();

    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    boolean hasInputIsUniqueId();
    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    io.dstore.engine.Values.integerValue getInputIsUniqueId();
    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getInputIsUniqueIdOrBuilder();

    /**
     * <code>optional bool input_is_unique_id_null = 1004;</code>
     */
    boolean getInputIsUniqueIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    io.dstore.engine.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1005;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    io.dstore.engine.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1006;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    boolean hasCharacteristicIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    io.dstore.engine.Values.stringValue getCharacteristicIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder();

    /**
     * <code>optional bool characteristic_id_list_null = 1007;</code>
     */
    boolean getCharacteristicIdListNull();

    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    boolean hasDateFormat();
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    io.dstore.engine.Values.stringValue getDateFormat();
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder();

    /**
     * <code>optional bool date_format_null = 1008;</code>
     */
    boolean getDateFormatNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    boolean hasCaseSensitive();
    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    io.dstore.engine.Values.booleanValue getCaseSensitive();
    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getCaseSensitiveOrBuilder();

    /**
     * <code>optional bool case_sensitive_null = 1009;</code>
     */
    boolean getCaseSensitiveNull();

    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    boolean hasPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    io.dstore.engine.Values.integerValue getPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

    /**
     * <code>optional bool person_id_null = 1010;</code>
     */
    boolean getPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    boolean hasDateAndTime();
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    io.dstore.engine.Values.timestampValue getDateAndTime();
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder();

    /**
     * <code>optional bool date_and_time_null = 1011;</code>
     */
    boolean getDateAndTimeNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    boolean hasGetActualProperties();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    io.dstore.engine.Values.booleanValue getGetActualProperties();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder();

    /**
     * <code>optional bool get_actual_properties_null = 1012;</code>
     */
    boolean getGetActualPropertiesNull();

    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    boolean hasSeparatorForIdentVals();
    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    io.dstore.engine.Values.stringValue getSeparatorForIdentVals();
    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getSeparatorForIdentValsOrBuilder();

    /**
     * <code>optional bool separator_for_ident_vals_null = 1013;</code>
     */
    boolean getSeparatorForIdentValsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonProperties_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      sortedResultNull_ = false;
      includePersonCharacCategoryIdNull_ = false;
      inputParameterNull_ = false;
      inputIsUniqueIdNull_ = false;
      personTypeIdNull_ = false;
      languageIdNull_ = false;
      characteristicIdListNull_ = false;
      dateFormatNull_ = false;
      caseSensitiveNull_ = false;
      personIdNull_ = false;
      dateAndTimeNull_ = false;
      getActualPropertiesNull_ = false;
      separatorForIdentValsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (sortedResult_ != null) {
                subBuilder = sortedResult_.toBuilder();
              }
              sortedResult_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortedResult_);
                sortedResult_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (includePersonCharacCategoryId_ != null) {
                subBuilder = includePersonCharacCategoryId_.toBuilder();
              }
              includePersonCharacCategoryId_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includePersonCharacCategoryId_);
                includePersonCharacCategoryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (inputParameter_ != null) {
                subBuilder = inputParameter_.toBuilder();
              }
              inputParameter_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inputParameter_);
                inputParameter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (inputIsUniqueId_ != null) {
                subBuilder = inputIsUniqueId_.toBuilder();
              }
              inputIsUniqueId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inputIsUniqueId_);
                inputIsUniqueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (characteristicIdList_ != null) {
                subBuilder = characteristicIdList_.toBuilder();
              }
              characteristicIdList_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characteristicIdList_);
                characteristicIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (dateFormat_ != null) {
                subBuilder = dateFormat_.toBuilder();
              }
              dateFormat_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dateFormat_);
                dateFormat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (caseSensitive_ != null) {
                subBuilder = caseSensitive_.toBuilder();
              }
              caseSensitive_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(caseSensitive_);
                caseSensitive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personId_ != null) {
                subBuilder = personId_.toBuilder();
              }
              personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personId_);
                personId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (dateAndTime_ != null) {
                subBuilder = dateAndTime_.toBuilder();
              }
              dateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dateAndTime_);
                dateAndTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 98: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getActualProperties_ != null) {
                subBuilder = getActualProperties_.toBuilder();
              }
              getActualProperties_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getActualProperties_);
                getActualProperties_ = subBuilder.buildPartial();
              }

              break;
            }
            case 106: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (separatorForIdentVals_ != null) {
                subBuilder = separatorForIdentVals_.toBuilder();
              }
              separatorForIdentVals_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(separatorForIdentVals_);
                separatorForIdentVals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              sortedResultNull_ = input.readBool();
              break;
            }
            case 8016: {

              includePersonCharacCategoryIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              inputParameterNull_ = input.readBool();
              break;
            }
            case 8032: {

              inputIsUniqueIdNull_ = input.readBool();
              break;
            }
            case 8040: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8048: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8056: {

              characteristicIdListNull_ = input.readBool();
              break;
            }
            case 8064: {

              dateFormatNull_ = input.readBool();
              break;
            }
            case 8072: {

              caseSensitiveNull_ = input.readBool();
              break;
            }
            case 8080: {

              personIdNull_ = input.readBool();
              break;
            }
            case 8088: {

              dateAndTimeNull_ = input.readBool();
              break;
            }
            case 8096: {

              getActualPropertiesNull_ = input.readBool();
              break;
            }
            case 8104: {

              separatorForIdentValsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.Builder.class);
    }

    public static final int SORTED_RESULT_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.booleanValue sortedResult_;
    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    public boolean hasSortedResult() {
      return sortedResult_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    public io.dstore.engine.Values.booleanValue getSortedResult() {
      return sortedResult_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : sortedResult_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getSortedResultOrBuilder() {
      return getSortedResult();
    }

    public static final int SORTED_RESULT_NULL_FIELD_NUMBER = 1001;
    private boolean sortedResultNull_;
    /**
     * <code>optional bool sorted_result_null = 1001;</code>
     */
    public boolean getSortedResultNull() {
      return sortedResultNull_;
    }

    public static final int INCLUDE_PERSON_CHARAC_CATEGORY_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.booleanValue includePersonCharacCategoryId_;
    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    public boolean hasIncludePersonCharacCategoryId() {
      return includePersonCharacCategoryId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    public io.dstore.engine.Values.booleanValue getIncludePersonCharacCategoryId() {
      return includePersonCharacCategoryId_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePersonCharacCategoryId_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getIncludePersonCharacCategoryIdOrBuilder() {
      return getIncludePersonCharacCategoryId();
    }

    public static final int INCLUDE_PERSON_CHARAC_CATEGORY_ID_NULL_FIELD_NUMBER = 1002;
    private boolean includePersonCharacCategoryIdNull_;
    /**
     * <code>optional bool include_person_charac_category_id_null = 1002;</code>
     */
    public boolean getIncludePersonCharacCategoryIdNull() {
      return includePersonCharacCategoryIdNull_;
    }

    public static final int INPUT_PARAMETER_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.stringValue inputParameter_;
    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    public boolean hasInputParameter() {
      return inputParameter_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    public io.dstore.engine.Values.stringValue getInputParameter() {
      return inputParameter_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputParameter_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getInputParameterOrBuilder() {
      return getInputParameter();
    }

    public static final int INPUT_PARAMETER_NULL_FIELD_NUMBER = 1003;
    private boolean inputParameterNull_;
    /**
     * <code>optional bool input_parameter_null = 1003;</code>
     */
    public boolean getInputParameterNull() {
      return inputParameterNull_;
    }

    public static final int INPUT_IS_UNIQUE_ID_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.integerValue inputIsUniqueId_;
    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    public boolean hasInputIsUniqueId() {
      return inputIsUniqueId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValue getInputIsUniqueId() {
      return inputIsUniqueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inputIsUniqueId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getInputIsUniqueIdOrBuilder() {
      return getInputIsUniqueId();
    }

    public static final int INPUT_IS_UNIQUE_ID_NULL_FIELD_NUMBER = 1004;
    private boolean inputIsUniqueIdNull_;
    /**
     * <code>optional bool input_is_unique_id_null = 1004;</code>
     */
    public boolean getInputIsUniqueIdNull() {
      return inputIsUniqueIdNull_;
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1005;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1005;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 6;
    private io.dstore.engine.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1006;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1006;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int CHARACTERISTIC_ID_LIST_FIELD_NUMBER = 7;
    private io.dstore.engine.Values.stringValue characteristicIdList_;
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    public boolean hasCharacteristicIdList() {
      return characteristicIdList_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    public io.dstore.engine.Values.stringValue getCharacteristicIdList() {
      return characteristicIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
      return getCharacteristicIdList();
    }

    public static final int CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER = 1007;
    private boolean characteristicIdListNull_;
    /**
     * <code>optional bool characteristic_id_list_null = 1007;</code>
     */
    public boolean getCharacteristicIdListNull() {
      return characteristicIdListNull_;
    }

    public static final int DATE_FORMAT_FIELD_NUMBER = 8;
    private io.dstore.engine.Values.stringValue dateFormat_;
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    public boolean hasDateFormat() {
      return dateFormat_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    public io.dstore.engine.Values.stringValue getDateFormat() {
      return dateFormat_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder() {
      return getDateFormat();
    }

    public static final int DATE_FORMAT_NULL_FIELD_NUMBER = 1008;
    private boolean dateFormatNull_;
    /**
     * <code>optional bool date_format_null = 1008;</code>
     */
    public boolean getDateFormatNull() {
      return dateFormatNull_;
    }

    public static final int CASE_SENSITIVE_FIELD_NUMBER = 9;
    private io.dstore.engine.Values.booleanValue caseSensitive_;
    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    public boolean hasCaseSensitive() {
      return caseSensitive_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    public io.dstore.engine.Values.booleanValue getCaseSensitive() {
      return caseSensitive_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : caseSensitive_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getCaseSensitiveOrBuilder() {
      return getCaseSensitive();
    }

    public static final int CASE_SENSITIVE_NULL_FIELD_NUMBER = 1009;
    private boolean caseSensitiveNull_;
    /**
     * <code>optional bool case_sensitive_null = 1009;</code>
     */
    public boolean getCaseSensitiveNull() {
      return caseSensitiveNull_;
    }

    public static final int PERSON_ID_FIELD_NUMBER = 10;
    private io.dstore.engine.Values.integerValue personId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    public boolean hasPersonId() {
      return personId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonId() {
      return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
      return getPersonId();
    }

    public static final int PERSON_ID_NULL_FIELD_NUMBER = 1010;
    private boolean personIdNull_;
    /**
     * <code>optional bool person_id_null = 1010;</code>
     */
    public boolean getPersonIdNull() {
      return personIdNull_;
    }

    public static final int DATE_AND_TIME_FIELD_NUMBER = 11;
    private io.dstore.engine.Values.timestampValue dateAndTime_;
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    public boolean hasDateAndTime() {
      return dateAndTime_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    public io.dstore.engine.Values.timestampValue getDateAndTime() {
      return dateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder() {
      return getDateAndTime();
    }

    public static final int DATE_AND_TIME_NULL_FIELD_NUMBER = 1011;
    private boolean dateAndTimeNull_;
    /**
     * <code>optional bool date_and_time_null = 1011;</code>
     */
    public boolean getDateAndTimeNull() {
      return dateAndTimeNull_;
    }

    public static final int GET_ACTUAL_PROPERTIES_FIELD_NUMBER = 12;
    private io.dstore.engine.Values.booleanValue getActualProperties_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    public boolean hasGetActualProperties() {
      return getActualProperties_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetActualProperties() {
      return getActualProperties_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder() {
      return getGetActualProperties();
    }

    public static final int GET_ACTUAL_PROPERTIES_NULL_FIELD_NUMBER = 1012;
    private boolean getActualPropertiesNull_;
    /**
     * <code>optional bool get_actual_properties_null = 1012;</code>
     */
    public boolean getGetActualPropertiesNull() {
      return getActualPropertiesNull_;
    }

    public static final int SEPARATOR_FOR_IDENT_VALS_FIELD_NUMBER = 13;
    private io.dstore.engine.Values.stringValue separatorForIdentVals_;
    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    public boolean hasSeparatorForIdentVals() {
      return separatorForIdentVals_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    public io.dstore.engine.Values.stringValue getSeparatorForIdentVals() {
      return separatorForIdentVals_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorForIdentVals_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getSeparatorForIdentValsOrBuilder() {
      return getSeparatorForIdentVals();
    }

    public static final int SEPARATOR_FOR_IDENT_VALS_NULL_FIELD_NUMBER = 1013;
    private boolean separatorForIdentValsNull_;
    /**
     * <code>optional bool separator_for_ident_vals_null = 1013;</code>
     */
    public boolean getSeparatorForIdentValsNull() {
      return separatorForIdentValsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sortedResult_ != null) {
        output.writeMessage(1, getSortedResult());
      }
      if (includePersonCharacCategoryId_ != null) {
        output.writeMessage(2, getIncludePersonCharacCategoryId());
      }
      if (inputParameter_ != null) {
        output.writeMessage(3, getInputParameter());
      }
      if (inputIsUniqueId_ != null) {
        output.writeMessage(4, getInputIsUniqueId());
      }
      if (personTypeId_ != null) {
        output.writeMessage(5, getPersonTypeId());
      }
      if (languageId_ != null) {
        output.writeMessage(6, getLanguageId());
      }
      if (characteristicIdList_ != null) {
        output.writeMessage(7, getCharacteristicIdList());
      }
      if (dateFormat_ != null) {
        output.writeMessage(8, getDateFormat());
      }
      if (caseSensitive_ != null) {
        output.writeMessage(9, getCaseSensitive());
      }
      if (personId_ != null) {
        output.writeMessage(10, getPersonId());
      }
      if (dateAndTime_ != null) {
        output.writeMessage(11, getDateAndTime());
      }
      if (getActualProperties_ != null) {
        output.writeMessage(12, getGetActualProperties());
      }
      if (separatorForIdentVals_ != null) {
        output.writeMessage(13, getSeparatorForIdentVals());
      }
      if (sortedResultNull_ != false) {
        output.writeBool(1001, sortedResultNull_);
      }
      if (includePersonCharacCategoryIdNull_ != false) {
        output.writeBool(1002, includePersonCharacCategoryIdNull_);
      }
      if (inputParameterNull_ != false) {
        output.writeBool(1003, inputParameterNull_);
      }
      if (inputIsUniqueIdNull_ != false) {
        output.writeBool(1004, inputIsUniqueIdNull_);
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1005, personTypeIdNull_);
      }
      if (languageIdNull_ != false) {
        output.writeBool(1006, languageIdNull_);
      }
      if (characteristicIdListNull_ != false) {
        output.writeBool(1007, characteristicIdListNull_);
      }
      if (dateFormatNull_ != false) {
        output.writeBool(1008, dateFormatNull_);
      }
      if (caseSensitiveNull_ != false) {
        output.writeBool(1009, caseSensitiveNull_);
      }
      if (personIdNull_ != false) {
        output.writeBool(1010, personIdNull_);
      }
      if (dateAndTimeNull_ != false) {
        output.writeBool(1011, dateAndTimeNull_);
      }
      if (getActualPropertiesNull_ != false) {
        output.writeBool(1012, getActualPropertiesNull_);
      }
      if (separatorForIdentValsNull_ != false) {
        output.writeBool(1013, separatorForIdentValsNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (sortedResult_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSortedResult());
      }
      if (includePersonCharacCategoryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIncludePersonCharacCategoryId());
      }
      if (inputParameter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getInputParameter());
      }
      if (inputIsUniqueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getInputIsUniqueId());
      }
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPersonTypeId());
      }
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLanguageId());
      }
      if (characteristicIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCharacteristicIdList());
      }
      if (dateFormat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDateFormat());
      }
      if (caseSensitive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getCaseSensitive());
      }
      if (personId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getPersonId());
      }
      if (dateAndTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getDateAndTime());
      }
      if (getActualProperties_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getGetActualProperties());
      }
      if (separatorForIdentVals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getSeparatorForIdentVals());
      }
      if (sortedResultNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, sortedResultNull_);
      }
      if (includePersonCharacCategoryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, includePersonCharacCategoryIdNull_);
      }
      if (inputParameterNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, inputParameterNull_);
      }
      if (inputIsUniqueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, inputIsUniqueIdNull_);
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, personTypeIdNull_);
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, languageIdNull_);
      }
      if (characteristicIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, characteristicIdListNull_);
      }
      if (dateFormatNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1008, dateFormatNull_);
      }
      if (caseSensitiveNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1009, caseSensitiveNull_);
      }
      if (personIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1010, personIdNull_);
      }
      if (dateAndTimeNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1011, dateAndTimeNull_);
      }
      if (getActualPropertiesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1012, getActualPropertiesNull_);
      }
      if (separatorForIdentValsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1013, separatorForIdentValsNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonProperties_Pu.Parameters)
        io.dstore.engine.procs.PmGetPersonPropertiesPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (sortedResultBuilder_ == null) {
          sortedResult_ = null;
        } else {
          sortedResult_ = null;
          sortedResultBuilder_ = null;
        }
        sortedResultNull_ = false;

        if (includePersonCharacCategoryIdBuilder_ == null) {
          includePersonCharacCategoryId_ = null;
        } else {
          includePersonCharacCategoryId_ = null;
          includePersonCharacCategoryIdBuilder_ = null;
        }
        includePersonCharacCategoryIdNull_ = false;

        if (inputParameterBuilder_ == null) {
          inputParameter_ = null;
        } else {
          inputParameter_ = null;
          inputParameterBuilder_ = null;
        }
        inputParameterNull_ = false;

        if (inputIsUniqueIdBuilder_ == null) {
          inputIsUniqueId_ = null;
        } else {
          inputIsUniqueId_ = null;
          inputIsUniqueIdBuilder_ = null;
        }
        inputIsUniqueIdNull_ = false;

        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }
        characteristicIdListNull_ = false;

        if (dateFormatBuilder_ == null) {
          dateFormat_ = null;
        } else {
          dateFormat_ = null;
          dateFormatBuilder_ = null;
        }
        dateFormatNull_ = false;

        if (caseSensitiveBuilder_ == null) {
          caseSensitive_ = null;
        } else {
          caseSensitive_ = null;
          caseSensitiveBuilder_ = null;
        }
        caseSensitiveNull_ = false;

        if (personIdBuilder_ == null) {
          personId_ = null;
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }
        personIdNull_ = false;

        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = null;
        } else {
          dateAndTime_ = null;
          dateAndTimeBuilder_ = null;
        }
        dateAndTimeNull_ = false;

        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = null;
        } else {
          getActualProperties_ = null;
          getActualPropertiesBuilder_ = null;
        }
        getActualPropertiesNull_ = false;

        if (separatorForIdentValsBuilder_ == null) {
          separatorForIdentVals_ = null;
        } else {
          separatorForIdentVals_ = null;
          separatorForIdentValsBuilder_ = null;
        }
        separatorForIdentValsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters build() {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters buildPartial() {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters result = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters(this);
        if (sortedResultBuilder_ == null) {
          result.sortedResult_ = sortedResult_;
        } else {
          result.sortedResult_ = sortedResultBuilder_.build();
        }
        result.sortedResultNull_ = sortedResultNull_;
        if (includePersonCharacCategoryIdBuilder_ == null) {
          result.includePersonCharacCategoryId_ = includePersonCharacCategoryId_;
        } else {
          result.includePersonCharacCategoryId_ = includePersonCharacCategoryIdBuilder_.build();
        }
        result.includePersonCharacCategoryIdNull_ = includePersonCharacCategoryIdNull_;
        if (inputParameterBuilder_ == null) {
          result.inputParameter_ = inputParameter_;
        } else {
          result.inputParameter_ = inputParameterBuilder_.build();
        }
        result.inputParameterNull_ = inputParameterNull_;
        if (inputIsUniqueIdBuilder_ == null) {
          result.inputIsUniqueId_ = inputIsUniqueId_;
        } else {
          result.inputIsUniqueId_ = inputIsUniqueIdBuilder_.build();
        }
        result.inputIsUniqueIdNull_ = inputIsUniqueIdNull_;
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (characteristicIdListBuilder_ == null) {
          result.characteristicIdList_ = characteristicIdList_;
        } else {
          result.characteristicIdList_ = characteristicIdListBuilder_.build();
        }
        result.characteristicIdListNull_ = characteristicIdListNull_;
        if (dateFormatBuilder_ == null) {
          result.dateFormat_ = dateFormat_;
        } else {
          result.dateFormat_ = dateFormatBuilder_.build();
        }
        result.dateFormatNull_ = dateFormatNull_;
        if (caseSensitiveBuilder_ == null) {
          result.caseSensitive_ = caseSensitive_;
        } else {
          result.caseSensitive_ = caseSensitiveBuilder_.build();
        }
        result.caseSensitiveNull_ = caseSensitiveNull_;
        if (personIdBuilder_ == null) {
          result.personId_ = personId_;
        } else {
          result.personId_ = personIdBuilder_.build();
        }
        result.personIdNull_ = personIdNull_;
        if (dateAndTimeBuilder_ == null) {
          result.dateAndTime_ = dateAndTime_;
        } else {
          result.dateAndTime_ = dateAndTimeBuilder_.build();
        }
        result.dateAndTimeNull_ = dateAndTimeNull_;
        if (getActualPropertiesBuilder_ == null) {
          result.getActualProperties_ = getActualProperties_;
        } else {
          result.getActualProperties_ = getActualPropertiesBuilder_.build();
        }
        result.getActualPropertiesNull_ = getActualPropertiesNull_;
        if (separatorForIdentValsBuilder_ == null) {
          result.separatorForIdentVals_ = separatorForIdentVals_;
        } else {
          result.separatorForIdentVals_ = separatorForIdentValsBuilder_.build();
        }
        result.separatorForIdentValsNull_ = separatorForIdentValsNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters other) {
        if (other == io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters.getDefaultInstance()) return this;
        if (other.hasSortedResult()) {
          mergeSortedResult(other.getSortedResult());
        }
        if (other.getSortedResultNull() != false) {
          setSortedResultNull(other.getSortedResultNull());
        }
        if (other.hasIncludePersonCharacCategoryId()) {
          mergeIncludePersonCharacCategoryId(other.getIncludePersonCharacCategoryId());
        }
        if (other.getIncludePersonCharacCategoryIdNull() != false) {
          setIncludePersonCharacCategoryIdNull(other.getIncludePersonCharacCategoryIdNull());
        }
        if (other.hasInputParameter()) {
          mergeInputParameter(other.getInputParameter());
        }
        if (other.getInputParameterNull() != false) {
          setInputParameterNull(other.getInputParameterNull());
        }
        if (other.hasInputIsUniqueId()) {
          mergeInputIsUniqueId(other.getInputIsUniqueId());
        }
        if (other.getInputIsUniqueIdNull() != false) {
          setInputIsUniqueIdNull(other.getInputIsUniqueIdNull());
        }
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasCharacteristicIdList()) {
          mergeCharacteristicIdList(other.getCharacteristicIdList());
        }
        if (other.getCharacteristicIdListNull() != false) {
          setCharacteristicIdListNull(other.getCharacteristicIdListNull());
        }
        if (other.hasDateFormat()) {
          mergeDateFormat(other.getDateFormat());
        }
        if (other.getDateFormatNull() != false) {
          setDateFormatNull(other.getDateFormatNull());
        }
        if (other.hasCaseSensitive()) {
          mergeCaseSensitive(other.getCaseSensitive());
        }
        if (other.getCaseSensitiveNull() != false) {
          setCaseSensitiveNull(other.getCaseSensitiveNull());
        }
        if (other.hasPersonId()) {
          mergePersonId(other.getPersonId());
        }
        if (other.getPersonIdNull() != false) {
          setPersonIdNull(other.getPersonIdNull());
        }
        if (other.hasDateAndTime()) {
          mergeDateAndTime(other.getDateAndTime());
        }
        if (other.getDateAndTimeNull() != false) {
          setDateAndTimeNull(other.getDateAndTimeNull());
        }
        if (other.hasGetActualProperties()) {
          mergeGetActualProperties(other.getGetActualProperties());
        }
        if (other.getGetActualPropertiesNull() != false) {
          setGetActualPropertiesNull(other.getGetActualPropertiesNull());
        }
        if (other.hasSeparatorForIdentVals()) {
          mergeSeparatorForIdentVals(other.getSeparatorForIdentVals());
        }
        if (other.getSeparatorForIdentValsNull() != false) {
          setSeparatorForIdentValsNull(other.getSeparatorForIdentValsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.booleanValue sortedResult_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> sortedResultBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public boolean hasSortedResult() {
        return sortedResultBuilder_ != null || sortedResult_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public io.dstore.engine.Values.booleanValue getSortedResult() {
        if (sortedResultBuilder_ == null) {
          return sortedResult_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : sortedResult_;
        } else {
          return sortedResultBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public Builder setSortedResult(io.dstore.engine.Values.booleanValue value) {
        if (sortedResultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortedResult_ = value;
          onChanged();
        } else {
          sortedResultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public Builder setSortedResult(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (sortedResultBuilder_ == null) {
          sortedResult_ = builderForValue.build();
          onChanged();
        } else {
          sortedResultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public Builder mergeSortedResult(io.dstore.engine.Values.booleanValue value) {
        if (sortedResultBuilder_ == null) {
          if (sortedResult_ != null) {
            sortedResult_ =
              io.dstore.engine.Values.booleanValue.newBuilder(sortedResult_).mergeFrom(value).buildPartial();
          } else {
            sortedResult_ = value;
          }
          onChanged();
        } else {
          sortedResultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public Builder clearSortedResult() {
        if (sortedResultBuilder_ == null) {
          sortedResult_ = null;
          onChanged();
        } else {
          sortedResult_ = null;
          sortedResultBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getSortedResultBuilder() {
        
        onChanged();
        return getSortedResultFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getSortedResultOrBuilder() {
        if (sortedResultBuilder_ != null) {
          return sortedResultBuilder_.getMessageOrBuilder();
        } else {
          return sortedResult_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : sortedResult_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue sorted_result = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getSortedResultFieldBuilder() {
        if (sortedResultBuilder_ == null) {
          sortedResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getSortedResult(),
                  getParentForChildren(),
                  isClean());
          sortedResult_ = null;
        }
        return sortedResultBuilder_;
      }

      private boolean sortedResultNull_ ;
      /**
       * <code>optional bool sorted_result_null = 1001;</code>
       */
      public boolean getSortedResultNull() {
        return sortedResultNull_;
      }
      /**
       * <code>optional bool sorted_result_null = 1001;</code>
       */
      public Builder setSortedResultNull(boolean value) {
        
        sortedResultNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sorted_result_null = 1001;</code>
       */
      public Builder clearSortedResultNull() {
        
        sortedResultNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue includePersonCharacCategoryId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> includePersonCharacCategoryIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public boolean hasIncludePersonCharacCategoryId() {
        return includePersonCharacCategoryIdBuilder_ != null || includePersonCharacCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue getIncludePersonCharacCategoryId() {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          return includePersonCharacCategoryId_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePersonCharacCategoryId_;
        } else {
          return includePersonCharacCategoryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public Builder setIncludePersonCharacCategoryId(io.dstore.engine.Values.booleanValue value) {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includePersonCharacCategoryId_ = value;
          onChanged();
        } else {
          includePersonCharacCategoryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public Builder setIncludePersonCharacCategoryId(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          includePersonCharacCategoryId_ = builderForValue.build();
          onChanged();
        } else {
          includePersonCharacCategoryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public Builder mergeIncludePersonCharacCategoryId(io.dstore.engine.Values.booleanValue value) {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          if (includePersonCharacCategoryId_ != null) {
            includePersonCharacCategoryId_ =
              io.dstore.engine.Values.booleanValue.newBuilder(includePersonCharacCategoryId_).mergeFrom(value).buildPartial();
          } else {
            includePersonCharacCategoryId_ = value;
          }
          onChanged();
        } else {
          includePersonCharacCategoryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public Builder clearIncludePersonCharacCategoryId() {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          includePersonCharacCategoryId_ = null;
          onChanged();
        } else {
          includePersonCharacCategoryId_ = null;
          includePersonCharacCategoryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getIncludePersonCharacCategoryIdBuilder() {
        
        onChanged();
        return getIncludePersonCharacCategoryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getIncludePersonCharacCategoryIdOrBuilder() {
        if (includePersonCharacCategoryIdBuilder_ != null) {
          return includePersonCharacCategoryIdBuilder_.getMessageOrBuilder();
        } else {
          return includePersonCharacCategoryId_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : includePersonCharacCategoryId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue include_person_charac_category_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getIncludePersonCharacCategoryIdFieldBuilder() {
        if (includePersonCharacCategoryIdBuilder_ == null) {
          includePersonCharacCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getIncludePersonCharacCategoryId(),
                  getParentForChildren(),
                  isClean());
          includePersonCharacCategoryId_ = null;
        }
        return includePersonCharacCategoryIdBuilder_;
      }

      private boolean includePersonCharacCategoryIdNull_ ;
      /**
       * <code>optional bool include_person_charac_category_id_null = 1002;</code>
       */
      public boolean getIncludePersonCharacCategoryIdNull() {
        return includePersonCharacCategoryIdNull_;
      }
      /**
       * <code>optional bool include_person_charac_category_id_null = 1002;</code>
       */
      public Builder setIncludePersonCharacCategoryIdNull(boolean value) {
        
        includePersonCharacCategoryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_person_charac_category_id_null = 1002;</code>
       */
      public Builder clearIncludePersonCharacCategoryIdNull() {
        
        includePersonCharacCategoryIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue inputParameter_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> inputParameterBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public boolean hasInputParameter() {
        return inputParameterBuilder_ != null || inputParameter_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public io.dstore.engine.Values.stringValue getInputParameter() {
        if (inputParameterBuilder_ == null) {
          return inputParameter_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : inputParameter_;
        } else {
          return inputParameterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public Builder setInputParameter(io.dstore.engine.Values.stringValue value) {
        if (inputParameterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inputParameter_ = value;
          onChanged();
        } else {
          inputParameterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public Builder setInputParameter(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (inputParameterBuilder_ == null) {
          inputParameter_ = builderForValue.build();
          onChanged();
        } else {
          inputParameterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public Builder mergeInputParameter(io.dstore.engine.Values.stringValue value) {
        if (inputParameterBuilder_ == null) {
          if (inputParameter_ != null) {
            inputParameter_ =
              io.dstore.engine.Values.stringValue.newBuilder(inputParameter_).mergeFrom(value).buildPartial();
          } else {
            inputParameter_ = value;
          }
          onChanged();
        } else {
          inputParameterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public Builder clearInputParameter() {
        if (inputParameterBuilder_ == null) {
          inputParameter_ = null;
          onChanged();
        } else {
          inputParameter_ = null;
          inputParameterBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getInputParameterBuilder() {
        
        onChanged();
        return getInputParameterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getInputParameterOrBuilder() {
        if (inputParameterBuilder_ != null) {
          return inputParameterBuilder_.getMessageOrBuilder();
        } else {
          return inputParameter_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : inputParameter_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue input_parameter = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getInputParameterFieldBuilder() {
        if (inputParameterBuilder_ == null) {
          inputParameterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getInputParameter(),
                  getParentForChildren(),
                  isClean());
          inputParameter_ = null;
        }
        return inputParameterBuilder_;
      }

      private boolean inputParameterNull_ ;
      /**
       * <code>optional bool input_parameter_null = 1003;</code>
       */
      public boolean getInputParameterNull() {
        return inputParameterNull_;
      }
      /**
       * <code>optional bool input_parameter_null = 1003;</code>
       */
      public Builder setInputParameterNull(boolean value) {
        
        inputParameterNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool input_parameter_null = 1003;</code>
       */
      public Builder clearInputParameterNull() {
        
        inputParameterNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue inputIsUniqueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> inputIsUniqueIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public boolean hasInputIsUniqueId() {
        return inputIsUniqueIdBuilder_ != null || inputIsUniqueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue getInputIsUniqueId() {
        if (inputIsUniqueIdBuilder_ == null) {
          return inputIsUniqueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inputIsUniqueId_;
        } else {
          return inputIsUniqueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public Builder setInputIsUniqueId(io.dstore.engine.Values.integerValue value) {
        if (inputIsUniqueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inputIsUniqueId_ = value;
          onChanged();
        } else {
          inputIsUniqueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public Builder setInputIsUniqueId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (inputIsUniqueIdBuilder_ == null) {
          inputIsUniqueId_ = builderForValue.build();
          onChanged();
        } else {
          inputIsUniqueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public Builder mergeInputIsUniqueId(io.dstore.engine.Values.integerValue value) {
        if (inputIsUniqueIdBuilder_ == null) {
          if (inputIsUniqueId_ != null) {
            inputIsUniqueId_ =
              io.dstore.engine.Values.integerValue.newBuilder(inputIsUniqueId_).mergeFrom(value).buildPartial();
          } else {
            inputIsUniqueId_ = value;
          }
          onChanged();
        } else {
          inputIsUniqueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public Builder clearInputIsUniqueId() {
        if (inputIsUniqueIdBuilder_ == null) {
          inputIsUniqueId_ = null;
          onChanged();
        } else {
          inputIsUniqueId_ = null;
          inputIsUniqueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getInputIsUniqueIdBuilder() {
        
        onChanged();
        return getInputIsUniqueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getInputIsUniqueIdOrBuilder() {
        if (inputIsUniqueIdBuilder_ != null) {
          return inputIsUniqueIdBuilder_.getMessageOrBuilder();
        } else {
          return inputIsUniqueId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : inputIsUniqueId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue input_is_unique_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getInputIsUniqueIdFieldBuilder() {
        if (inputIsUniqueIdBuilder_ == null) {
          inputIsUniqueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getInputIsUniqueId(),
                  getParentForChildren(),
                  isClean());
          inputIsUniqueId_ = null;
        }
        return inputIsUniqueIdBuilder_;
      }

      private boolean inputIsUniqueIdNull_ ;
      /**
       * <code>optional bool input_is_unique_id_null = 1004;</code>
       */
      public boolean getInputIsUniqueIdNull() {
        return inputIsUniqueIdNull_;
      }
      /**
       * <code>optional bool input_is_unique_id_null = 1004;</code>
       */
      public Builder setInputIsUniqueIdNull(boolean value) {
        
        inputIsUniqueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool input_is_unique_id_null = 1004;</code>
       */
      public Builder clearInputIsUniqueIdNull() {
        
        inputIsUniqueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public Builder setPersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public Builder mergePersonTypeId(io.dstore.engine.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1005;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1005;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1005;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public Builder setLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1006;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1006;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1006;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue characteristicIdList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> characteristicIdListBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public boolean hasCharacteristicIdList() {
        return characteristicIdListBuilder_ != null || characteristicIdList_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public io.dstore.engine.Values.stringValue getCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          return characteristicIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        } else {
          return characteristicIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public Builder setCharacteristicIdList(io.dstore.engine.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characteristicIdList_ = value;
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public Builder setCharacteristicIdList(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = builderForValue.build();
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public Builder mergeCharacteristicIdList(io.dstore.engine.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (characteristicIdList_ != null) {
            characteristicIdList_ =
              io.dstore.engine.Values.stringValue.newBuilder(characteristicIdList_).mergeFrom(value).buildPartial();
          } else {
            characteristicIdList_ = value;
          }
          onChanged();
        } else {
          characteristicIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public Builder clearCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
          onChanged();
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getCharacteristicIdListBuilder() {
        
        onChanged();
        return getCharacteristicIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
        if (characteristicIdListBuilder_ != null) {
          return characteristicIdListBuilder_.getMessageOrBuilder();
        } else {
          return characteristicIdList_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getCharacteristicIdListFieldBuilder() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getCharacteristicIdList(),
                  getParentForChildren(),
                  isClean());
          characteristicIdList_ = null;
        }
        return characteristicIdListBuilder_;
      }

      private boolean characteristicIdListNull_ ;
      /**
       * <code>optional bool characteristic_id_list_null = 1007;</code>
       */
      public boolean getCharacteristicIdListNull() {
        return characteristicIdListNull_;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1007;</code>
       */
      public Builder setCharacteristicIdListNull(boolean value) {
        
        characteristicIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1007;</code>
       */
      public Builder clearCharacteristicIdListNull() {
        
        characteristicIdListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue dateFormat_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> dateFormatBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public boolean hasDateFormat() {
        return dateFormatBuilder_ != null || dateFormat_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public io.dstore.engine.Values.stringValue getDateFormat() {
        if (dateFormatBuilder_ == null) {
          return dateFormat_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
        } else {
          return dateFormatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public Builder setDateFormat(io.dstore.engine.Values.stringValue value) {
        if (dateFormatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dateFormat_ = value;
          onChanged();
        } else {
          dateFormatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public Builder setDateFormat(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (dateFormatBuilder_ == null) {
          dateFormat_ = builderForValue.build();
          onChanged();
        } else {
          dateFormatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public Builder mergeDateFormat(io.dstore.engine.Values.stringValue value) {
        if (dateFormatBuilder_ == null) {
          if (dateFormat_ != null) {
            dateFormat_ =
              io.dstore.engine.Values.stringValue.newBuilder(dateFormat_).mergeFrom(value).buildPartial();
          } else {
            dateFormat_ = value;
          }
          onChanged();
        } else {
          dateFormatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public Builder clearDateFormat() {
        if (dateFormatBuilder_ == null) {
          dateFormat_ = null;
          onChanged();
        } else {
          dateFormat_ = null;
          dateFormatBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getDateFormatBuilder() {
        
        onChanged();
        return getDateFormatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder() {
        if (dateFormatBuilder_ != null) {
          return dateFormatBuilder_.getMessageOrBuilder();
        } else {
          return dateFormat_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getDateFormatFieldBuilder() {
        if (dateFormatBuilder_ == null) {
          dateFormatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getDateFormat(),
                  getParentForChildren(),
                  isClean());
          dateFormat_ = null;
        }
        return dateFormatBuilder_;
      }

      private boolean dateFormatNull_ ;
      /**
       * <code>optional bool date_format_null = 1008;</code>
       */
      public boolean getDateFormatNull() {
        return dateFormatNull_;
      }
      /**
       * <code>optional bool date_format_null = 1008;</code>
       */
      public Builder setDateFormatNull(boolean value) {
        
        dateFormatNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool date_format_null = 1008;</code>
       */
      public Builder clearDateFormatNull() {
        
        dateFormatNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue caseSensitive_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> caseSensitiveBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public boolean hasCaseSensitive() {
        return caseSensitiveBuilder_ != null || caseSensitive_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public io.dstore.engine.Values.booleanValue getCaseSensitive() {
        if (caseSensitiveBuilder_ == null) {
          return caseSensitive_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : caseSensitive_;
        } else {
          return caseSensitiveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public Builder setCaseSensitive(io.dstore.engine.Values.booleanValue value) {
        if (caseSensitiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          caseSensitive_ = value;
          onChanged();
        } else {
          caseSensitiveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public Builder setCaseSensitive(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (caseSensitiveBuilder_ == null) {
          caseSensitive_ = builderForValue.build();
          onChanged();
        } else {
          caseSensitiveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public Builder mergeCaseSensitive(io.dstore.engine.Values.booleanValue value) {
        if (caseSensitiveBuilder_ == null) {
          if (caseSensitive_ != null) {
            caseSensitive_ =
              io.dstore.engine.Values.booleanValue.newBuilder(caseSensitive_).mergeFrom(value).buildPartial();
          } else {
            caseSensitive_ = value;
          }
          onChanged();
        } else {
          caseSensitiveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public Builder clearCaseSensitive() {
        if (caseSensitiveBuilder_ == null) {
          caseSensitive_ = null;
          onChanged();
        } else {
          caseSensitive_ = null;
          caseSensitiveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getCaseSensitiveBuilder() {
        
        onChanged();
        return getCaseSensitiveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCaseSensitiveOrBuilder() {
        if (caseSensitiveBuilder_ != null) {
          return caseSensitiveBuilder_.getMessageOrBuilder();
        } else {
          return caseSensitive_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : caseSensitive_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue case_sensitive = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getCaseSensitiveFieldBuilder() {
        if (caseSensitiveBuilder_ == null) {
          caseSensitiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getCaseSensitive(),
                  getParentForChildren(),
                  isClean());
          caseSensitive_ = null;
        }
        return caseSensitiveBuilder_;
      }

      private boolean caseSensitiveNull_ ;
      /**
       * <code>optional bool case_sensitive_null = 1009;</code>
       */
      public boolean getCaseSensitiveNull() {
        return caseSensitiveNull_;
      }
      /**
       * <code>optional bool case_sensitive_null = 1009;</code>
       */
      public Builder setCaseSensitiveNull(boolean value) {
        
        caseSensitiveNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool case_sensitive_null = 1009;</code>
       */
      public Builder clearCaseSensitiveNull() {
        
        caseSensitiveNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue personId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public boolean hasPersonId() {
        return personIdBuilder_ != null || personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        if (personIdBuilder_ == null) {
          return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        } else {
          return personIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personId_ = value;
          onChanged();
        } else {
          personIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public Builder setPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personIdBuilder_ == null) {
          personId_ = builderForValue.build();
          onChanged();
        } else {
          personIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (personId_ != null) {
            personId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
          } else {
            personId_ = value;
          }
          onChanged();
        } else {
          personIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public Builder clearPersonId() {
        if (personIdBuilder_ == null) {
          personId_ = null;
          onChanged();
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
        
        onChanged();
        return getPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        if (personIdBuilder_ != null) {
          return personIdBuilder_.getMessageOrBuilder();
        } else {
          return personId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonIdFieldBuilder() {
        if (personIdBuilder_ == null) {
          personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonId(),
                  getParentForChildren(),
                  isClean());
          personId_ = null;
        }
        return personIdBuilder_;
      }

      private boolean personIdNull_ ;
      /**
       * <code>optional bool person_id_null = 1010;</code>
       */
      public boolean getPersonIdNull() {
        return personIdNull_;
      }
      /**
       * <code>optional bool person_id_null = 1010;</code>
       */
      public Builder setPersonIdNull(boolean value) {
        
        personIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_id_null = 1010;</code>
       */
      public Builder clearPersonIdNull() {
        
        personIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue dateAndTime_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> dateAndTimeBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public boolean hasDateAndTime() {
        return dateAndTimeBuilder_ != null || dateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public io.dstore.engine.Values.timestampValue getDateAndTime() {
        if (dateAndTimeBuilder_ == null) {
          return dateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
        } else {
          return dateAndTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public Builder setDateAndTime(io.dstore.engine.Values.timestampValue value) {
        if (dateAndTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dateAndTime_ = value;
          onChanged();
        } else {
          dateAndTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public Builder setDateAndTime(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = builderForValue.build();
          onChanged();
        } else {
          dateAndTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public Builder mergeDateAndTime(io.dstore.engine.Values.timestampValue value) {
        if (dateAndTimeBuilder_ == null) {
          if (dateAndTime_ != null) {
            dateAndTime_ =
              io.dstore.engine.Values.timestampValue.newBuilder(dateAndTime_).mergeFrom(value).buildPartial();
          } else {
            dateAndTime_ = value;
          }
          onChanged();
        } else {
          dateAndTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public Builder clearDateAndTime() {
        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = null;
          onChanged();
        } else {
          dateAndTime_ = null;
          dateAndTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getDateAndTimeBuilder() {
        
        onChanged();
        return getDateAndTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder() {
        if (dateAndTimeBuilder_ != null) {
          return dateAndTimeBuilder_.getMessageOrBuilder();
        } else {
          return dateAndTime_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getDateAndTimeFieldBuilder() {
        if (dateAndTimeBuilder_ == null) {
          dateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getDateAndTime(),
                  getParentForChildren(),
                  isClean());
          dateAndTime_ = null;
        }
        return dateAndTimeBuilder_;
      }

      private boolean dateAndTimeNull_ ;
      /**
       * <code>optional bool date_and_time_null = 1011;</code>
       */
      public boolean getDateAndTimeNull() {
        return dateAndTimeNull_;
      }
      /**
       * <code>optional bool date_and_time_null = 1011;</code>
       */
      public Builder setDateAndTimeNull(boolean value) {
        
        dateAndTimeNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool date_and_time_null = 1011;</code>
       */
      public Builder clearDateAndTimeNull() {
        
        dateAndTimeNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getActualProperties_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getActualPropertiesBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public boolean hasGetActualProperties() {
        return getActualPropertiesBuilder_ != null || getActualProperties_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetActualProperties() {
        if (getActualPropertiesBuilder_ == null) {
          return getActualProperties_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
        } else {
          return getActualPropertiesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public Builder setGetActualProperties(io.dstore.engine.Values.booleanValue value) {
        if (getActualPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getActualProperties_ = value;
          onChanged();
        } else {
          getActualPropertiesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public Builder setGetActualProperties(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = builderForValue.build();
          onChanged();
        } else {
          getActualPropertiesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public Builder mergeGetActualProperties(io.dstore.engine.Values.booleanValue value) {
        if (getActualPropertiesBuilder_ == null) {
          if (getActualProperties_ != null) {
            getActualProperties_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getActualProperties_).mergeFrom(value).buildPartial();
          } else {
            getActualProperties_ = value;
          }
          onChanged();
        } else {
          getActualPropertiesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public Builder clearGetActualProperties() {
        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = null;
          onChanged();
        } else {
          getActualProperties_ = null;
          getActualPropertiesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetActualPropertiesBuilder() {
        
        onChanged();
        return getGetActualPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder() {
        if (getActualPropertiesBuilder_ != null) {
          return getActualPropertiesBuilder_.getMessageOrBuilder();
        } else {
          return getActualProperties_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetActualPropertiesFieldBuilder() {
        if (getActualPropertiesBuilder_ == null) {
          getActualPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetActualProperties(),
                  getParentForChildren(),
                  isClean());
          getActualProperties_ = null;
        }
        return getActualPropertiesBuilder_;
      }

      private boolean getActualPropertiesNull_ ;
      /**
       * <code>optional bool get_actual_properties_null = 1012;</code>
       */
      public boolean getGetActualPropertiesNull() {
        return getActualPropertiesNull_;
      }
      /**
       * <code>optional bool get_actual_properties_null = 1012;</code>
       */
      public Builder setGetActualPropertiesNull(boolean value) {
        
        getActualPropertiesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_actual_properties_null = 1012;</code>
       */
      public Builder clearGetActualPropertiesNull() {
        
        getActualPropertiesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue separatorForIdentVals_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> separatorForIdentValsBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public boolean hasSeparatorForIdentVals() {
        return separatorForIdentValsBuilder_ != null || separatorForIdentVals_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public io.dstore.engine.Values.stringValue getSeparatorForIdentVals() {
        if (separatorForIdentValsBuilder_ == null) {
          return separatorForIdentVals_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorForIdentVals_;
        } else {
          return separatorForIdentValsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public Builder setSeparatorForIdentVals(io.dstore.engine.Values.stringValue value) {
        if (separatorForIdentValsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          separatorForIdentVals_ = value;
          onChanged();
        } else {
          separatorForIdentValsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public Builder setSeparatorForIdentVals(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (separatorForIdentValsBuilder_ == null) {
          separatorForIdentVals_ = builderForValue.build();
          onChanged();
        } else {
          separatorForIdentValsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public Builder mergeSeparatorForIdentVals(io.dstore.engine.Values.stringValue value) {
        if (separatorForIdentValsBuilder_ == null) {
          if (separatorForIdentVals_ != null) {
            separatorForIdentVals_ =
              io.dstore.engine.Values.stringValue.newBuilder(separatorForIdentVals_).mergeFrom(value).buildPartial();
          } else {
            separatorForIdentVals_ = value;
          }
          onChanged();
        } else {
          separatorForIdentValsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public Builder clearSeparatorForIdentVals() {
        if (separatorForIdentValsBuilder_ == null) {
          separatorForIdentVals_ = null;
          onChanged();
        } else {
          separatorForIdentVals_ = null;
          separatorForIdentValsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getSeparatorForIdentValsBuilder() {
        
        onChanged();
        return getSeparatorForIdentValsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getSeparatorForIdentValsOrBuilder() {
        if (separatorForIdentValsBuilder_ != null) {
          return separatorForIdentValsBuilder_.getMessageOrBuilder();
        } else {
          return separatorForIdentVals_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : separatorForIdentVals_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue separator_for_ident_vals = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getSeparatorForIdentValsFieldBuilder() {
        if (separatorForIdentValsBuilder_ == null) {
          separatorForIdentValsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getSeparatorForIdentVals(),
                  getParentForChildren(),
                  isClean());
          separatorForIdentVals_ = null;
        }
        return separatorForIdentValsBuilder_;
      }

      private boolean separatorForIdentValsNull_ ;
      /**
       * <code>optional bool separator_for_ident_vals_null = 1013;</code>
       */
      public boolean getSeparatorForIdentValsNull() {
        return separatorForIdentValsNull_;
      }
      /**
       * <code>optional bool separator_for_ident_vals_null = 1013;</code>
       */
      public Builder setSeparatorForIdentValsNull(boolean value) {
        
        separatorForIdentValsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool separator_for_ident_vals_null = 1013;</code>
       */
      public Builder clearSeparatorForIdentValsNull() {
        
        separatorForIdentValsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonProperties_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonProperties_Pu.Parameters)
    private static final io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters();
    }

    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonPropertiesPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonProperties_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonProperties_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.pm_GetPersonProperties_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      boolean hasValueRestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValueRestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      boolean hasCharacteristicDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCharacteristicDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      boolean hasFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getFieldTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      boolean hasCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      boolean hasValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      io.dstore.engine.Values.integerValue getValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      boolean hasModify();
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getModify();
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      boolean hasMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getMaxLength();
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      boolean hasPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getPredefinedValues();
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      boolean hasPersonCharacCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonCharacCategoryId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      boolean hasReadAccessRestrictionPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      boolean hasRequired();
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getRequired();
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      boolean hasActualValue();
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getActualValue();
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      boolean hasVisible();
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getVisible();
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      boolean hasLastEdited();
      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getLastEdited();
      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getLastEditedOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.pm_GetPersonProperties_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (valueRestrictedByPattern_ != null) {
                  subBuilder = valueRestrictedByPattern_.toBuilder();
                }
                valueRestrictedByPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueRestrictedByPattern_);
                  valueRestrictedByPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (characteristicDescription_ != null) {
                  subBuilder = characteristicDescription_.toBuilder();
                }
                characteristicDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(characteristicDescription_);
                  characteristicDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (fieldTypeId_ != null) {
                  subBuilder = fieldTypeId_.toBuilder();
                }
                fieldTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fieldTypeId_);
                  fieldTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (characteristicId_ != null) {
                  subBuilder = characteristicId_.toBuilder();
                }
                characteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(characteristicId_);
                  characteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (valueId_ != null) {
                  subBuilder = valueId_.toBuilder();
                }
                valueId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueId_);
                  valueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (modify_ != null) {
                  subBuilder = modify_.toBuilder();
                }
                modify_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(modify_);
                  modify_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (maxLength_ != null) {
                  subBuilder = maxLength_.toBuilder();
                }
                maxLength_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxLength_);
                  maxLength_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (predefinedValues_ != null) {
                  subBuilder = predefinedValues_.toBuilder();
                }
                predefinedValues_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predefinedValues_);
                  predefinedValues_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personCharacCategoryId_ != null) {
                  subBuilder = personCharacCategoryId_.toBuilder();
                }
                personCharacCategoryId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personCharacCategoryId_);
                  personCharacCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (readAccessRestrictionPattern_ != null) {
                  subBuilder = readAccessRestrictionPattern_.toBuilder();
                }
                readAccessRestrictionPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(readAccessRestrictionPattern_);
                  readAccessRestrictionPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (required_ != null) {
                  subBuilder = required_.toBuilder();
                }
                required_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(required_);
                  required_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (actualValue_ != null) {
                  subBuilder = actualValue_.toBuilder();
                }
                actualValue_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(actualValue_);
                  actualValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (visible_ != null) {
                  subBuilder = visible_.toBuilder();
                }
                visible_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(visible_);
                  visible_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (lastEdited_ != null) {
                  subBuilder = lastEdited_.toBuilder();
                }
                lastEdited_ = input.readMessage(io.dstore.engine.Values.timestampValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastEdited_);
                  lastEdited_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int VALUE_RESTRICTED_BY_PATTERN_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue valueRestrictedByPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public boolean hasValueRestrictedByPattern() {
        return valueRestrictedByPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValueRestrictedByPattern() {
        return valueRestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder() {
        return getValueRestrictedByPattern();
      }

      public static final int CHARACTERISTIC_DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue characteristicDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      public boolean hasCharacteristicDescription() {
        return characteristicDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCharacteristicDescription() {
        return characteristicDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Personen-Merkmals "CharacteristicID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
        return getCharacteristicDescription();
      }

      public static final int FIELD_TYPE_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue fieldTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public boolean hasFieldTypeId() {
        return fieldTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getFieldTypeId() {
        return fieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
       *
       * <pre>
       * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
        return getFieldTypeId();
      }

      public static final int CHARACTERISTIC_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue characteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      public boolean hasCharacteristicId() {
        return characteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCharacteristicId() {
        return characteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCharacteristicIdOrBuilder() {
        return getCharacteristicId();
      }

      public static final int VALUE_ID_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.integerValue valueId_;
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      public boolean hasValueId() {
        return valueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getValueId() {
        return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
        return getValueId();
      }

      public static final int MODIFY_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue modify_;
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public boolean hasModify() {
        return modify_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getModify() {
        return modify_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
       *
       * <pre>
       * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder() {
        return getModify();
      }

      public static final int MAX_LENGTH_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue maxLength_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      public boolean hasMaxLength() {
        return maxLength_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getMaxLength() {
        return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
       *
       * <pre>
       * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
        return getMaxLength();
      }

      public static final int PREDEFINED_VALUES_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.booleanValue predefinedValues_;
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public boolean hasPredefinedValues() {
        return predefinedValues_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getPredefinedValues() {
        return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
       *
       * <pre>
       * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
        return getPredefinedValues();
      }

      public static final int PERSON_CHARAC_CATEGORY_ID_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue personCharacCategoryId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      public boolean hasPersonCharacCategoryId() {
        return personCharacCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonCharacCategoryId() {
        return personCharacCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
       *
       * <pre>
       * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
        return getPersonCharacCategoryId();
      }

      public static final int READ_ACCESS_RESTRICTION_PATTERN_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue readAccessRestrictionPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      public boolean hasReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern() {
        return readAccessRestrictionPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
       *
       * <pre>
       * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
        return getReadAccessRestrictionPattern();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
       *
       * <pre>
       * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int REQUIRED_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.booleanValue required_;
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public boolean hasRequired() {
        return required_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getRequired() {
        return required_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
       *
       * <pre>
       * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder() {
        return getRequired();
      }

      public static final int ACTUAL_VALUE_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.stringValue actualValue_;
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public boolean hasActualValue() {
        return actualValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getActualValue() {
        return actualValue_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
       *
       * <pre>
       * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder() {
        return getActualValue();
      }

      public static final int VALUE_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.stringValue value_;
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue() {
        return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int VISIBLE_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.booleanValue visible_;
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      public boolean hasVisible() {
        return visible_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getVisible() {
        return visible_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
       *
       * <pre>
       * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder() {
        return getVisible();
      }

      public static final int LAST_EDITED_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.timestampValue lastEdited_;
      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      public boolean hasLastEdited() {
        return lastEdited_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getLastEdited() {
        return lastEdited_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : lastEdited_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
       *
       * <pre>
       * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getLastEditedOrBuilder() {
        return getLastEdited();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (valueRestrictedByPattern_ != null) {
          output.writeMessage(10001, getValueRestrictedByPattern());
        }
        if (characteristicDescription_ != null) {
          output.writeMessage(10002, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          output.writeMessage(10003, getFieldTypeId());
        }
        if (characteristicId_ != null) {
          output.writeMessage(10004, getCharacteristicId());
        }
        if (valueId_ != null) {
          output.writeMessage(10005, getValueId());
        }
        if (modify_ != null) {
          output.writeMessage(10006, getModify());
        }
        if (maxLength_ != null) {
          output.writeMessage(10007, getMaxLength());
        }
        if (predefinedValues_ != null) {
          output.writeMessage(10008, getPredefinedValues());
        }
        if (personCharacCategoryId_ != null) {
          output.writeMessage(10009, getPersonCharacCategoryId());
        }
        if (readAccessRestrictionPattern_ != null) {
          output.writeMessage(10010, getReadAccessRestrictionPattern());
        }
        if (personId_ != null) {
          output.writeMessage(10011, getPersonId());
        }
        if (required_ != null) {
          output.writeMessage(10012, getRequired());
        }
        if (actualValue_ != null) {
          output.writeMessage(10013, getActualValue());
        }
        if (value_ != null) {
          output.writeMessage(10014, getValue());
        }
        if (visible_ != null) {
          output.writeMessage(10015, getVisible());
        }
        if (lastEdited_ != null) {
          output.writeMessage(10016, getLastEdited());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (valueRestrictedByPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getValueRestrictedByPattern());
        }
        if (characteristicDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getCharacteristicDescription());
        }
        if (fieldTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getFieldTypeId());
        }
        if (characteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getCharacteristicId());
        }
        if (valueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValueId());
        }
        if (modify_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getModify());
        }
        if (maxLength_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getMaxLength());
        }
        if (predefinedValues_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getPredefinedValues());
        }
        if (personCharacCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getPersonCharacCategoryId());
        }
        if (readAccessRestrictionPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getReadAccessRestrictionPattern());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getPersonId());
        }
        if (required_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getRequired());
        }
        if (actualValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getActualValue());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getValue());
        }
        if (visible_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getVisible());
        }
        if (lastEdited_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getLastEdited());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonProperties_Pu.Response.Row)
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = null;
          } else {
            valueRestrictedByPattern_ = null;
            valueRestrictedByPatternBuilder_ = null;
          }
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }
          if (characteristicIdBuilder_ == null) {
            characteristicId_ = null;
          } else {
            characteristicId_ = null;
            characteristicIdBuilder_ = null;
          }
          if (valueIdBuilder_ == null) {
            valueId_ = null;
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }
          if (modifyBuilder_ == null) {
            modify_ = null;
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = null;
          } else {
            personCharacCategoryId_ = null;
            personCharacCategoryIdBuilder_ = null;
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (requiredBuilder_ == null) {
            required_ = null;
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }
          if (actualValueBuilder_ == null) {
            actualValue_ = null;
          } else {
            actualValue_ = null;
            actualValueBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (visibleBuilder_ == null) {
            visible_ = null;
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }
          if (lastEditedBuilder_ == null) {
            lastEdited_ = null;
          } else {
            lastEdited_ = null;
            lastEditedBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row build() {
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row buildPartial() {
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row result = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (valueRestrictedByPatternBuilder_ == null) {
            result.valueRestrictedByPattern_ = valueRestrictedByPattern_;
          } else {
            result.valueRestrictedByPattern_ = valueRestrictedByPatternBuilder_.build();
          }
          if (characteristicDescriptionBuilder_ == null) {
            result.characteristicDescription_ = characteristicDescription_;
          } else {
            result.characteristicDescription_ = characteristicDescriptionBuilder_.build();
          }
          if (fieldTypeIdBuilder_ == null) {
            result.fieldTypeId_ = fieldTypeId_;
          } else {
            result.fieldTypeId_ = fieldTypeIdBuilder_.build();
          }
          if (characteristicIdBuilder_ == null) {
            result.characteristicId_ = characteristicId_;
          } else {
            result.characteristicId_ = characteristicIdBuilder_.build();
          }
          if (valueIdBuilder_ == null) {
            result.valueId_ = valueId_;
          } else {
            result.valueId_ = valueIdBuilder_.build();
          }
          if (modifyBuilder_ == null) {
            result.modify_ = modify_;
          } else {
            result.modify_ = modifyBuilder_.build();
          }
          if (maxLengthBuilder_ == null) {
            result.maxLength_ = maxLength_;
          } else {
            result.maxLength_ = maxLengthBuilder_.build();
          }
          if (predefinedValuesBuilder_ == null) {
            result.predefinedValues_ = predefinedValues_;
          } else {
            result.predefinedValues_ = predefinedValuesBuilder_.build();
          }
          if (personCharacCategoryIdBuilder_ == null) {
            result.personCharacCategoryId_ = personCharacCategoryId_;
          } else {
            result.personCharacCategoryId_ = personCharacCategoryIdBuilder_.build();
          }
          if (readAccessRestrictionPatternBuilder_ == null) {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPattern_;
          } else {
            result.readAccessRestrictionPattern_ = readAccessRestrictionPatternBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (requiredBuilder_ == null) {
            result.required_ = required_;
          } else {
            result.required_ = requiredBuilder_.build();
          }
          if (actualValueBuilder_ == null) {
            result.actualValue_ = actualValue_;
          } else {
            result.actualValue_ = actualValueBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (visibleBuilder_ == null) {
            result.visible_ = visible_;
          } else {
            result.visible_ = visibleBuilder_.build();
          }
          if (lastEditedBuilder_ == null) {
            result.lastEdited_ = lastEdited_;
          } else {
            result.lastEdited_ = lastEditedBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row other) {
          if (other == io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasValueRestrictedByPattern()) {
            mergeValueRestrictedByPattern(other.getValueRestrictedByPattern());
          }
          if (other.hasCharacteristicDescription()) {
            mergeCharacteristicDescription(other.getCharacteristicDescription());
          }
          if (other.hasFieldTypeId()) {
            mergeFieldTypeId(other.getFieldTypeId());
          }
          if (other.hasCharacteristicId()) {
            mergeCharacteristicId(other.getCharacteristicId());
          }
          if (other.hasValueId()) {
            mergeValueId(other.getValueId());
          }
          if (other.hasModify()) {
            mergeModify(other.getModify());
          }
          if (other.hasMaxLength()) {
            mergeMaxLength(other.getMaxLength());
          }
          if (other.hasPredefinedValues()) {
            mergePredefinedValues(other.getPredefinedValues());
          }
          if (other.hasPersonCharacCategoryId()) {
            mergePersonCharacCategoryId(other.getPersonCharacCategoryId());
          }
          if (other.hasReadAccessRestrictionPattern()) {
            mergeReadAccessRestrictionPattern(other.getReadAccessRestrictionPattern());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasRequired()) {
            mergeRequired(other.getRequired());
          }
          if (other.hasActualValue()) {
            mergeActualValue(other.getActualValue());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasVisible()) {
            mergeVisible(other.getVisible());
          }
          if (other.hasLastEdited()) {
            mergeLastEdited(other.getLastEdited());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue valueRestrictedByPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueRestrictedByPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public boolean hasValueRestrictedByPattern() {
          return valueRestrictedByPatternBuilder_ != null || valueRestrictedByPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValueRestrictedByPattern() {
          if (valueRestrictedByPatternBuilder_ == null) {
            return valueRestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
          } else {
            return valueRestrictedByPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder setValueRestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (valueRestrictedByPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueRestrictedByPattern_ = value;
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder setValueRestrictedByPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = builderForValue.build();
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder mergeValueRestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (valueRestrictedByPatternBuilder_ == null) {
            if (valueRestrictedByPattern_ != null) {
              valueRestrictedByPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(valueRestrictedByPattern_).mergeFrom(value).buildPartial();
            } else {
              valueRestrictedByPattern_ = value;
            }
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder clearValueRestrictedByPattern() {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = null;
            onChanged();
          } else {
            valueRestrictedByPattern_ = null;
            valueRestrictedByPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueRestrictedByPatternBuilder() {
          
          onChanged();
          return getValueRestrictedByPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder() {
          if (valueRestrictedByPatternBuilder_ != null) {
            return valueRestrictedByPatternBuilder_.getMessageOrBuilder();
          } else {
            return valueRestrictedByPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueRestrictedByPatternFieldBuilder() {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValueRestrictedByPattern(),
                    getParentForChildren(),
                    isClean());
            valueRestrictedByPattern_ = null;
          }
          return valueRestrictedByPatternBuilder_;
        }

        private io.dstore.engine.Values.stringValue characteristicDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> characteristicDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public boolean hasCharacteristicDescription() {
          return characteristicDescriptionBuilder_ != null || characteristicDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            return characteristicDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          } else {
            return characteristicDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public Builder setCharacteristicDescription(io.dstore.engine.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            characteristicDescription_ = value;
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public Builder setCharacteristicDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = builderForValue.build();
            onChanged();
          } else {
            characteristicDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public Builder mergeCharacteristicDescription(io.dstore.engine.Values.stringValue value) {
          if (characteristicDescriptionBuilder_ == null) {
            if (characteristicDescription_ != null) {
              characteristicDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(characteristicDescription_).mergeFrom(value).buildPartial();
            } else {
              characteristicDescription_ = value;
            }
            onChanged();
          } else {
            characteristicDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public Builder clearCharacteristicDescription() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescription_ = null;
            onChanged();
          } else {
            characteristicDescription_ = null;
            characteristicDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCharacteristicDescriptionBuilder() {
          
          onChanged();
          return getCharacteristicDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicDescriptionOrBuilder() {
          if (characteristicDescriptionBuilder_ != null) {
            return characteristicDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return characteristicDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue characteristic_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Personen-Merkmals "CharacteristicID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCharacteristicDescriptionFieldBuilder() {
          if (characteristicDescriptionBuilder_ == null) {
            characteristicDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCharacteristicDescription(),
                    getParentForChildren(),
                    isClean());
            characteristicDescription_ = null;
          }
          return characteristicDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue fieldTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> fieldTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public boolean hasFieldTypeId() {
          return fieldTypeIdBuilder_ != null || fieldTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            return fieldTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          } else {
            return fieldTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder setFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fieldTypeId_ = value;
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder setFieldTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = builderForValue.build();
            onChanged();
          } else {
            fieldTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder mergeFieldTypeId(io.dstore.engine.Values.integerValue value) {
          if (fieldTypeIdBuilder_ == null) {
            if (fieldTypeId_ != null) {
              fieldTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(fieldTypeId_).mergeFrom(value).buildPartial();
            } else {
              fieldTypeId_ = value;
            }
            onChanged();
          } else {
            fieldTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public Builder clearFieldTypeId() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeId_ = null;
            onChanged();
          } else {
            fieldTypeId_ = null;
            fieldTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getFieldTypeIdBuilder() {
          
          onChanged();
          return getFieldTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getFieldTypeIdOrBuilder() {
          if (fieldTypeIdBuilder_ != null) {
            return fieldTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return fieldTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : fieldTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue field_type_id = 10003;</code>
         *
         * <pre>
         * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getFieldTypeIdFieldBuilder() {
          if (fieldTypeIdBuilder_ == null) {
            fieldTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getFieldTypeId(),
                    getParentForChildren(),
                    isClean());
            fieldTypeId_ = null;
          }
          return fieldTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue characteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> characteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public boolean hasCharacteristicId() {
          return characteristicIdBuilder_ != null || characteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCharacteristicId() {
          if (characteristicIdBuilder_ == null) {
            return characteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : characteristicId_;
          } else {
            return characteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public Builder setCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (characteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            characteristicId_ = value;
            onChanged();
          } else {
            characteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public Builder setCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (characteristicIdBuilder_ == null) {
            characteristicId_ = builderForValue.build();
            onChanged();
          } else {
            characteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public Builder mergeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (characteristicIdBuilder_ == null) {
            if (characteristicId_ != null) {
              characteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(characteristicId_).mergeFrom(value).buildPartial();
            } else {
              characteristicId_ = value;
            }
            onChanged();
          } else {
            characteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public Builder clearCharacteristicId() {
          if (characteristicIdBuilder_ == null) {
            characteristicId_ = null;
            onChanged();
          } else {
            characteristicId_ = null;
            characteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCharacteristicIdBuilder() {
          
          onChanged();
          return getCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCharacteristicIdOrBuilder() {
          if (characteristicIdBuilder_ != null) {
            return characteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return characteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : characteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue characteristic_id = 10004;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCharacteristicIdFieldBuilder() {
          if (characteristicIdBuilder_ == null) {
            characteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            characteristicId_ = null;
          }
          return characteristicIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue valueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> valueIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public boolean hasValueId() {
          return valueIdBuilder_ != null || valueId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getValueId() {
          if (valueIdBuilder_ == null) {
            return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          } else {
            return valueIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public Builder setValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueId_ = value;
            onChanged();
          } else {
            valueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public Builder setValueId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (valueIdBuilder_ == null) {
            valueId_ = builderForValue.build();
            onChanged();
          } else {
            valueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public Builder mergeValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (valueId_ != null) {
              valueId_ =
                io.dstore.engine.Values.integerValue.newBuilder(valueId_).mergeFrom(value).buildPartial();
            } else {
              valueId_ = value;
            }
            onChanged();
          } else {
            valueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public Builder clearValueId() {
          if (valueIdBuilder_ == null) {
            valueId_ = null;
            onChanged();
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getValueIdBuilder() {
          
          onChanged();
          return getValueIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
          if (valueIdBuilder_ != null) {
            return valueIdBuilder_.getMessageOrBuilder();
          } else {
            return valueId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10005;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getValueIdFieldBuilder() {
          if (valueIdBuilder_ == null) {
            valueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getValueId(),
                    getParentForChildren(),
                    isClean());
            valueId_ = null;
          }
          return valueIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue modify_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> modifyBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public boolean hasModify() {
          return modifyBuilder_ != null || modify_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getModify() {
          if (modifyBuilder_ == null) {
            return modify_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
          } else {
            return modifyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder setModify(io.dstore.engine.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            modify_ = value;
            onChanged();
          } else {
            modifyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder setModify(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (modifyBuilder_ == null) {
            modify_ = builderForValue.build();
            onChanged();
          } else {
            modifyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder mergeModify(io.dstore.engine.Values.integerValue value) {
          if (modifyBuilder_ == null) {
            if (modify_ != null) {
              modify_ =
                io.dstore.engine.Values.integerValue.newBuilder(modify_).mergeFrom(value).buildPartial();
            } else {
              modify_ = value;
            }
            onChanged();
          } else {
            modifyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public Builder clearModify() {
          if (modifyBuilder_ == null) {
            modify_ = null;
            onChanged();
          } else {
            modify_ = null;
            modifyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getModifyBuilder() {
          
          onChanged();
          return getModifyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getModifyOrBuilder() {
          if (modifyBuilder_ != null) {
            return modifyBuilder_.getMessageOrBuilder();
          } else {
            return modify_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : modify_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue modify = 10006;</code>
         *
         * <pre>
         * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getModifyFieldBuilder() {
          if (modifyBuilder_ == null) {
            modifyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getModify(),
                    getParentForChildren(),
                    isClean());
            modify_ = null;
          }
          return modifyBuilder_;
        }

        private io.dstore.engine.Values.integerValue maxLength_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxLengthBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public boolean hasMaxLength() {
          return maxLengthBuilder_ != null || maxLength_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getMaxLength() {
          if (maxLengthBuilder_ == null) {
            return maxLength_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          } else {
            return maxLengthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxLength_ = value;
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public Builder setMaxLength(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (maxLengthBuilder_ == null) {
            maxLength_ = builderForValue.build();
            onChanged();
          } else {
            maxLengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public Builder mergeMaxLength(io.dstore.engine.Values.integerValue value) {
          if (maxLengthBuilder_ == null) {
            if (maxLength_ != null) {
              maxLength_ =
                io.dstore.engine.Values.integerValue.newBuilder(maxLength_).mergeFrom(value).buildPartial();
            } else {
              maxLength_ = value;
            }
            onChanged();
          } else {
            maxLengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public Builder clearMaxLength() {
          if (maxLengthBuilder_ == null) {
            maxLength_ = null;
            onChanged();
          } else {
            maxLength_ = null;
            maxLengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getMaxLengthBuilder() {
          
          onChanged();
          return getMaxLengthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getMaxLengthOrBuilder() {
          if (maxLengthBuilder_ != null) {
            return maxLengthBuilder_.getMessageOrBuilder();
          } else {
            return maxLength_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : maxLength_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_length = 10007;</code>
         *
         * <pre>
         * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getMaxLengthFieldBuilder() {
          if (maxLengthBuilder_ == null) {
            maxLengthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getMaxLength(),
                    getParentForChildren(),
                    isClean());
            maxLength_ = null;
          }
          return maxLengthBuilder_;
        }

        private io.dstore.engine.Values.booleanValue predefinedValues_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> predefinedValuesBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public boolean hasPredefinedValues() {
          return predefinedValuesBuilder_ != null || predefinedValues_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            return predefinedValues_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          } else {
            return predefinedValuesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder setPredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predefinedValues_ = value;
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder setPredefinedValues(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = builderForValue.build();
            onChanged();
          } else {
            predefinedValuesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder mergePredefinedValues(io.dstore.engine.Values.booleanValue value) {
          if (predefinedValuesBuilder_ == null) {
            if (predefinedValues_ != null) {
              predefinedValues_ =
                io.dstore.engine.Values.booleanValue.newBuilder(predefinedValues_).mergeFrom(value).buildPartial();
            } else {
              predefinedValues_ = value;
            }
            onChanged();
          } else {
            predefinedValuesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public Builder clearPredefinedValues() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValues_ = null;
            onChanged();
          } else {
            predefinedValues_ = null;
            predefinedValuesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getPredefinedValuesBuilder() {
          
          onChanged();
          return getPredefinedValuesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getPredefinedValuesOrBuilder() {
          if (predefinedValuesBuilder_ != null) {
            return predefinedValuesBuilder_.getMessageOrBuilder();
          } else {
            return predefinedValues_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : predefinedValues_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue predefined_values = 10008;</code>
         *
         * <pre>
         * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getPredefinedValuesFieldBuilder() {
          if (predefinedValuesBuilder_ == null) {
            predefinedValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getPredefinedValues(),
                    getParentForChildren(),
                    isClean());
            predefinedValues_ = null;
          }
          return predefinedValuesBuilder_;
        }

        private io.dstore.engine.Values.integerValue personCharacCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personCharacCategoryIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public boolean hasPersonCharacCategoryId() {
          return personCharacCategoryIdBuilder_ != null || personCharacCategoryId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonCharacCategoryId() {
          if (personCharacCategoryIdBuilder_ == null) {
            return personCharacCategoryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
          } else {
            return personCharacCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public Builder setPersonCharacCategoryId(io.dstore.engine.Values.integerValue value) {
          if (personCharacCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personCharacCategoryId_ = value;
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public Builder setPersonCharacCategoryId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public Builder mergePersonCharacCategoryId(io.dstore.engine.Values.integerValue value) {
          if (personCharacCategoryIdBuilder_ == null) {
            if (personCharacCategoryId_ != null) {
              personCharacCategoryId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personCharacCategoryId_).mergeFrom(value).buildPartial();
            } else {
              personCharacCategoryId_ = value;
            }
            onChanged();
          } else {
            personCharacCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public Builder clearPersonCharacCategoryId() {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryId_ = null;
            onChanged();
          } else {
            personCharacCategoryId_ = null;
            personCharacCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonCharacCategoryIdBuilder() {
          
          onChanged();
          return getPersonCharacCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonCharacCategoryIdOrBuilder() {
          if (personCharacCategoryIdBuilder_ != null) {
            return personCharacCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return personCharacCategoryId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacCategoryId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_charac_category_id = 10009;</code>
         *
         * <pre>
         * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonCharacCategoryIdFieldBuilder() {
          if (personCharacCategoryIdBuilder_ == null) {
            personCharacCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonCharacCategoryId(),
                    getParentForChildren(),
                    isClean());
            personCharacCategoryId_ = null;
          }
          return personCharacCategoryIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue readAccessRestrictionPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> readAccessRestrictionPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public boolean hasReadAccessRestrictionPattern() {
          return readAccessRestrictionPatternBuilder_ != null || readAccessRestrictionPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            return readAccessRestrictionPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          } else {
            return readAccessRestrictionPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public Builder setReadAccessRestrictionPattern(io.dstore.engine.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            readAccessRestrictionPattern_ = value;
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public Builder setReadAccessRestrictionPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = builderForValue.build();
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public Builder mergeReadAccessRestrictionPattern(io.dstore.engine.Values.stringValue value) {
          if (readAccessRestrictionPatternBuilder_ == null) {
            if (readAccessRestrictionPattern_ != null) {
              readAccessRestrictionPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(readAccessRestrictionPattern_).mergeFrom(value).buildPartial();
            } else {
              readAccessRestrictionPattern_ = value;
            }
            onChanged();
          } else {
            readAccessRestrictionPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public Builder clearReadAccessRestrictionPattern() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPattern_ = null;
            onChanged();
          } else {
            readAccessRestrictionPattern_ = null;
            readAccessRestrictionPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getReadAccessRestrictionPatternBuilder() {
          
          onChanged();
          return getReadAccessRestrictionPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getReadAccessRestrictionPatternOrBuilder() {
          if (readAccessRestrictionPatternBuilder_ != null) {
            return readAccessRestrictionPatternBuilder_.getMessageOrBuilder();
          } else {
            return readAccessRestrictionPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : readAccessRestrictionPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue read_access_restriction_pattern = 10010;</code>
         *
         * <pre>
         * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getReadAccessRestrictionPatternFieldBuilder() {
          if (readAccessRestrictionPatternBuilder_ == null) {
            readAccessRestrictionPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getReadAccessRestrictionPattern(),
                    getParentForChildren(),
                    isClean());
            readAccessRestrictionPattern_ = null;
          }
          return readAccessRestrictionPatternBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10011;</code>
         *
         * <pre>
         * ID der durch die "Identifizierungs"-Parameter ermittelten Person oder (falls angegeben) "&#64;PersonID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue required_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> requiredBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public boolean hasRequired() {
          return requiredBuilder_ != null || required_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getRequired() {
          if (requiredBuilder_ == null) {
            return required_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
          } else {
            return requiredBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder setRequired(io.dstore.engine.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            required_ = value;
            onChanged();
          } else {
            requiredBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder setRequired(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (requiredBuilder_ == null) {
            required_ = builderForValue.build();
            onChanged();
          } else {
            requiredBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder mergeRequired(io.dstore.engine.Values.booleanValue value) {
          if (requiredBuilder_ == null) {
            if (required_ != null) {
              required_ =
                io.dstore.engine.Values.booleanValue.newBuilder(required_).mergeFrom(value).buildPartial();
            } else {
              required_ = value;
            }
            onChanged();
          } else {
            requiredBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public Builder clearRequired() {
          if (requiredBuilder_ == null) {
            required_ = null;
            onChanged();
          } else {
            required_ = null;
            requiredBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getRequiredBuilder() {
          
          onChanged();
          return getRequiredFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getRequiredOrBuilder() {
          if (requiredBuilder_ != null) {
            return requiredBuilder_.getMessageOrBuilder();
          } else {
            return required_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : required_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue required = 10012;</code>
         *
         * <pre>
         * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getRequiredFieldBuilder() {
          if (requiredBuilder_ == null) {
            requiredBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getRequired(),
                    getParentForChildren(),
                    isClean());
            required_ = null;
          }
          return requiredBuilder_;
        }

        private io.dstore.engine.Values.stringValue actualValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> actualValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public boolean hasActualValue() {
          return actualValueBuilder_ != null || actualValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getActualValue() {
          if (actualValueBuilder_ == null) {
            return actualValue_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
          } else {
            return actualValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder setActualValue(io.dstore.engine.Values.stringValue value) {
          if (actualValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            actualValue_ = value;
            onChanged();
          } else {
            actualValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder setActualValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (actualValueBuilder_ == null) {
            actualValue_ = builderForValue.build();
            onChanged();
          } else {
            actualValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder mergeActualValue(io.dstore.engine.Values.stringValue value) {
          if (actualValueBuilder_ == null) {
            if (actualValue_ != null) {
              actualValue_ =
                io.dstore.engine.Values.stringValue.newBuilder(actualValue_).mergeFrom(value).buildPartial();
            } else {
              actualValue_ = value;
            }
            onChanged();
          } else {
            actualValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder clearActualValue() {
          if (actualValueBuilder_ == null) {
            actualValue_ = null;
            onChanged();
          } else {
            actualValue_ = null;
            actualValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getActualValueBuilder() {
          
          onChanged();
          return getActualValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder() {
          if (actualValueBuilder_ != null) {
            return actualValueBuilder_.getMessageOrBuilder();
          } else {
            return actualValue_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10013;</code>
         *
         * <pre>
         * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft der Person zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getActualValueFieldBuilder() {
          if (actualValueBuilder_ == null) {
            actualValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getActualValue(),
                    getParentForChildren(),
                    isClean());
            actualValue_ = null;
          }
          return actualValueBuilder_;
        }

        private io.dstore.engine.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder setValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder setValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder mergeValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.engine.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10014;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.engine.Values.booleanValue visible_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> visibleBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public boolean hasVisible() {
          return visibleBuilder_ != null || visible_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getVisible() {
          if (visibleBuilder_ == null) {
            return visible_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
          } else {
            return visibleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public Builder setVisible(io.dstore.engine.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            visible_ = value;
            onChanged();
          } else {
            visibleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public Builder setVisible(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (visibleBuilder_ == null) {
            visible_ = builderForValue.build();
            onChanged();
          } else {
            visibleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public Builder mergeVisible(io.dstore.engine.Values.booleanValue value) {
          if (visibleBuilder_ == null) {
            if (visible_ != null) {
              visible_ =
                io.dstore.engine.Values.booleanValue.newBuilder(visible_).mergeFrom(value).buildPartial();
            } else {
              visible_ = value;
            }
            onChanged();
          } else {
            visibleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public Builder clearVisible() {
          if (visibleBuilder_ == null) {
            visible_ = null;
            onChanged();
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getVisibleBuilder() {
          
          onChanged();
          return getVisibleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getVisibleOrBuilder() {
          if (visibleBuilder_ != null) {
            return visibleBuilder_.getMessageOrBuilder();
          } else {
            return visible_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : visible_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue visible = 10015;</code>
         *
         * <pre>
         * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getVisibleFieldBuilder() {
          if (visibleBuilder_ == null) {
            visibleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getVisible(),
                    getParentForChildren(),
                    isClean());
            visible_ = null;
          }
          return visibleBuilder_;
        }

        private io.dstore.engine.Values.timestampValue lastEdited_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> lastEditedBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public boolean hasLastEdited() {
          return lastEditedBuilder_ != null || lastEdited_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getLastEdited() {
          if (lastEditedBuilder_ == null) {
            return lastEdited_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : lastEdited_;
          } else {
            return lastEditedBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public Builder setLastEdited(io.dstore.engine.Values.timestampValue value) {
          if (lastEditedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastEdited_ = value;
            onChanged();
          } else {
            lastEditedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public Builder setLastEdited(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (lastEditedBuilder_ == null) {
            lastEdited_ = builderForValue.build();
            onChanged();
          } else {
            lastEditedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public Builder mergeLastEdited(io.dstore.engine.Values.timestampValue value) {
          if (lastEditedBuilder_ == null) {
            if (lastEdited_ != null) {
              lastEdited_ =
                io.dstore.engine.Values.timestampValue.newBuilder(lastEdited_).mergeFrom(value).buildPartial();
            } else {
              lastEdited_ = value;
            }
            onChanged();
          } else {
            lastEditedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public Builder clearLastEdited() {
          if (lastEditedBuilder_ == null) {
            lastEdited_ = null;
            onChanged();
          } else {
            lastEdited_ = null;
            lastEditedBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getLastEditedBuilder() {
          
          onChanged();
          return getLastEditedFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getLastEditedOrBuilder() {
          if (lastEditedBuilder_ != null) {
            return lastEditedBuilder_.getMessageOrBuilder();
          } else {
            return lastEdited_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : lastEdited_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue last_edited = 10016;</code>
         *
         * <pre>
         * Wann die Eigenschaft (zuletzt) gesetzt wurde. ACHTUNG : Nur gefüllt, wenn "NULL" für "&#64;DateAndTime" übergeben wurde ODER "&#64;GetActuelProperties = 1" ist (sonst kommt hier "NULL" zurück) !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getLastEditedFieldBuilder() {
          if (lastEditedBuilder_ == null) {
            lastEditedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getLastEdited(),
                    getParentForChildren(),
                    isClean());
            lastEdited_ = null;
          }
          return lastEditedBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonProperties_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonProperties_Pu.Response.Row)
      private static final io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row();
      }

      public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.pm_GetPersonProperties_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.pm_GetPersonProperties_Pu.Response)
        io.dstore.engine.procs.PmGetPersonPropertiesPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.class, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor;
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response build() {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response buildPartial() {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Response result = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.PmGetPersonPropertiesPu.Response) {
          return mergeFrom((io.dstore.engine.procs.PmGetPersonPropertiesPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response other) {
        if (other == io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.PmGetPersonPropertiesPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.PmGetPersonPropertiesPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.pm_GetPersonProperties_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.Row.Builder, io.dstore.engine.procs.PmGetPersonPropertiesPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.pm_GetPersonProperties_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.pm_GetPersonProperties_Pu.Response)
    private static final io.dstore.engine.procs.PmGetPersonPropertiesPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.PmGetPersonPropertiesPu.Response();
    }

    public static io.dstore.engine.procs.PmGetPersonPropertiesPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.PmGetPersonPropertiesPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8dstore/engine/procedures/pm_GetPersonP" +
      "roperties_Pu.proto\022\'dstore.engine.pm_Get" +
      "PersonProperties_Pu\032\032dstore/engine/value" +
      "s.proto\032\031dstore/engine/error.proto\032\033dsto" +
      "re/engine/message.proto\"\344\t\n\nParameters\0229" +
      "\n\rsorted_result\030\001 \001(\0132\".dstore.engine.va" +
      "lues.booleanValue\022\033\n\022sorted_result_null\030" +
      "\351\007 \001(\010\022M\n!include_person_charac_category" +
      "_id\030\002 \001(\0132\".dstore.engine.values.boolean" +
      "Value\022/\n&include_person_charac_category_",
      "id_null\030\352\007 \001(\010\022:\n\017input_parameter\030\003 \001(\0132" +
      "!.dstore.engine.values.stringValue\022\035\n\024in" +
      "put_parameter_null\030\353\007 \001(\010\022>\n\022input_is_un" +
      "ique_id\030\004 \001(\0132\".dstore.engine.values.int" +
      "egerValue\022 \n\027input_is_unique_id_null\030\354\007 " +
      "\001(\010\022:\n\016person_type_id\030\005 \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022\034\n\023person_type_i" +
      "d_null\030\355\007 \001(\010\0227\n\013language_id\030\006 \001(\0132\".dst" +
      "ore.engine.values.integerValue\022\031\n\020langua" +
      "ge_id_null\030\356\007 \001(\010\022A\n\026characteristic_id_l",
      "ist\030\007 \001(\0132!.dstore.engine.values.stringV" +
      "alue\022$\n\033characteristic_id_list_null\030\357\007 \001" +
      "(\010\0226\n\013date_format\030\010 \001(\0132!.dstore.engine." +
      "values.stringValue\022\031\n\020date_format_null\030\360" +
      "\007 \001(\010\022:\n\016case_sensitive\030\t \001(\0132\".dstore.e" +
      "ngine.values.booleanValue\022\034\n\023case_sensit" +
      "ive_null\030\361\007 \001(\010\0225\n\tperson_id\030\n \001(\0132\".dst" +
      "ore.engine.values.integerValue\022\027\n\016person" +
      "_id_null\030\362\007 \001(\010\022;\n\rdate_and_time\030\013 \001(\0132$" +
      ".dstore.engine.values.timestampValue\022\033\n\022",
      "date_and_time_null\030\363\007 \001(\010\022A\n\025get_actual_" +
      "properties\030\014 \001(\0132\".dstore.engine.values." +
      "booleanValue\022#\n\032get_actual_properties_nu" +
      "ll\030\364\007 \001(\010\022C\n\030separator_for_ident_vals\030\r " +
      "\001(\0132!.dstore.engine.values.stringValue\022&" +
      "\n\035separator_for_ident_vals_null\030\365\007 \001(\010\"\230" +
      "\t\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstore.engi" +
      "ne.error.Error\022/\n\007message\030\003 \003(\0132\036.dstore" +
      ".engine.message.Message\022B\n\003row\030\004 \003(\01325.d" +
      "store.engine.pm_GetPersonProperties_Pu.R",
      "esponse.Row\032\353\007\n\003Row\022\017\n\006row_id\030\220N \001(\005\022G\n\033" +
      "value_restricted_by_pattern\030\221N \001(\0132!.dst" +
      "ore.engine.values.stringValue\022F\n\032charact" +
      "eristic_description\030\222N \001(\0132!.dstore.engi" +
      "ne.values.stringValue\022:\n\rfield_type_id\030\223" +
      "N \001(\0132\".dstore.engine.values.integerValu" +
      "e\022>\n\021characteristic_id\030\224N \001(\0132\".dstore.e" +
      "ngine.values.integerValue\0225\n\010value_id\030\225N" +
      " \001(\0132\".dstore.engine.values.integerValue" +
      "\0223\n\006modify\030\226N \001(\0132\".dstore.engine.values",
      ".integerValue\0227\n\nmax_length\030\227N \001(\0132\".dst" +
      "ore.engine.values.integerValue\022>\n\021predef" +
      "ined_values\030\230N \001(\0132\".dstore.engine.value" +
      "s.booleanValue\022F\n\031person_charac_category" +
      "_id\030\231N \001(\0132\".dstore.engine.values.intege" +
      "rValue\022K\n\037read_access_restriction_patter" +
      "n\030\232N \001(\0132!.dstore.engine.values.stringVa" +
      "lue\0226\n\tperson_id\030\233N \001(\0132\".dstore.engine." +
      "values.integerValue\0225\n\010required\030\234N \001(\0132\"" +
      ".dstore.engine.values.booleanValue\0228\n\014ac",
      "tual_value\030\235N \001(\0132!.dstore.engine.values" +
      ".stringValue\0221\n\005value\030\236N \001(\0132!.dstore.en" +
      "gine.values.stringValue\0224\n\007visible\030\237N \001(" +
      "\0132\".dstore.engine.values.booleanValue\022:\n" +
      "\013last_edited\030\240N \001(\0132$.dstore.engine.valu" +
      "es.timestampValueB\030\n\026io.dstore.engine.pr" +
      "ocsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonProperties_Pu_Parameters_descriptor,
        new java.lang.String[] { "SortedResult", "SortedResultNull", "IncludePersonCharacCategoryId", "IncludePersonCharacCategoryIdNull", "InputParameter", "InputParameterNull", "InputIsUniqueId", "InputIsUniqueIdNull", "PersonTypeId", "PersonTypeIdNull", "LanguageId", "LanguageIdNull", "CharacteristicIdList", "CharacteristicIdListNull", "DateFormat", "DateFormatNull", "CaseSensitive", "CaseSensitiveNull", "PersonId", "PersonIdNull", "DateAndTime", "DateAndTimeNull", "GetActualProperties", "GetActualPropertiesNull", "SeparatorForIdentVals", "SeparatorForIdentValsNull", });
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_pm_GetPersonProperties_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ValueRestrictedByPattern", "CharacteristicDescription", "FieldTypeId", "CharacteristicId", "ValueId", "Modify", "MaxLength", "PredefinedValues", "PersonCharacCategoryId", "ReadAccessRestrictionPattern", "PersonId", "Required", "ActualValue", "Value", "Visible", "LastEdited", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
