// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetBonusItemSets_Ad.proto

package io.dstore.engine.procs;

public final class OmGetBonusItemSetsAd {
  private OmGetBonusItemSetsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetBonusItemSets_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    boolean hasItemSetId();
    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getItemSetId();
    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder();

    /**
     * <code>optional bool item_set_id_null = 1001;</code>
     */
    boolean getItemSetIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    boolean hasItemConditionId();
    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getItemConditionId();
    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder();

    /**
     * <code>optional bool item_condition_id_null = 1002;</code>
     */
    boolean getItemConditionIdNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    boolean hasGetUnusedSets();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    io.dstore.engine.Values.booleanValue getGetUnusedSets();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetUnusedSetsOrBuilder();

    /**
     * <code>optional bool get_unused_sets_null = 1003;</code>
     */
    boolean getGetUnusedSetsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetBonusItemSets_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
      itemSetIdNull_ = false;
      itemConditionIdNull_ = false;
      getUnusedSetsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (itemSetId_ != null) {
                subBuilder = itemSetId_.toBuilder();
              }
              itemSetId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(itemSetId_);
                itemSetId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (itemConditionId_ != null) {
                subBuilder = itemConditionId_.toBuilder();
              }
              itemConditionId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(itemConditionId_);
                itemConditionId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getUnusedSets_ != null) {
                subBuilder = getUnusedSets_.toBuilder();
              }
              getUnusedSets_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getUnusedSets_);
                getUnusedSets_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              itemSetIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              itemConditionIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              getUnusedSetsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.Builder.class);
    }

    public static final int ITEM_SET_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue itemSetId_;
    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    public boolean hasItemSetId() {
      return itemSetId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getItemSetId() {
      return itemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
      return getItemSetId();
    }

    public static final int ITEM_SET_ID_NULL_FIELD_NUMBER = 1001;
    private boolean itemSetIdNull_;
    /**
     * <code>optional bool item_set_id_null = 1001;</code>
     */
    public boolean getItemSetIdNull() {
      return itemSetIdNull_;
    }

    public static final int ITEM_CONDITION_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue itemConditionId_;
    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    public boolean hasItemConditionId() {
      return itemConditionId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getItemConditionId() {
      return itemConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
      return getItemConditionId();
    }

    public static final int ITEM_CONDITION_ID_NULL_FIELD_NUMBER = 1002;
    private boolean itemConditionIdNull_;
    /**
     * <code>optional bool item_condition_id_null = 1002;</code>
     */
    public boolean getItemConditionIdNull() {
      return itemConditionIdNull_;
    }

    public static final int GET_UNUSED_SETS_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.booleanValue getUnusedSets_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    public boolean hasGetUnusedSets() {
      return getUnusedSets_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetUnusedSets() {
      return getUnusedSets_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getUnusedSets_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetUnusedSetsOrBuilder() {
      return getGetUnusedSets();
    }

    public static final int GET_UNUSED_SETS_NULL_FIELD_NUMBER = 1003;
    private boolean getUnusedSetsNull_;
    /**
     * <code>optional bool get_unused_sets_null = 1003;</code>
     */
    public boolean getGetUnusedSetsNull() {
      return getUnusedSetsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (itemSetId_ != null) {
        output.writeMessage(1, getItemSetId());
      }
      if (itemConditionId_ != null) {
        output.writeMessage(2, getItemConditionId());
      }
      if (getUnusedSets_ != null) {
        output.writeMessage(3, getGetUnusedSets());
      }
      if (itemSetIdNull_ != false) {
        output.writeBool(1001, itemSetIdNull_);
      }
      if (itemConditionIdNull_ != false) {
        output.writeBool(1002, itemConditionIdNull_);
      }
      if (getUnusedSetsNull_ != false) {
        output.writeBool(1003, getUnusedSetsNull_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (itemSetId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getItemSetId());
      }
      if (itemConditionId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getItemConditionId());
      }
      if (getUnusedSets_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGetUnusedSets());
      }
      if (itemSetIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, itemSetIdNull_);
      }
      if (itemConditionIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, itemConditionIdNull_);
      }
      if (getUnusedSetsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, getUnusedSetsNull_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetBonusItemSets_Ad.Parameters)
        io.dstore.engine.procs.OmGetBonusItemSetsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (itemSetIdBuilder_ == null) {
          itemSetId_ = null;
        } else {
          itemSetId_ = null;
          itemSetIdBuilder_ = null;
        }
        itemSetIdNull_ = false;

        if (itemConditionIdBuilder_ == null) {
          itemConditionId_ = null;
        } else {
          itemConditionId_ = null;
          itemConditionIdBuilder_ = null;
        }
        itemConditionIdNull_ = false;

        if (getUnusedSetsBuilder_ == null) {
          getUnusedSets_ = null;
        } else {
          getUnusedSets_ = null;
          getUnusedSetsBuilder_ = null;
        }
        getUnusedSetsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters build() {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters buildPartial() {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters result = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters(this);
        if (itemSetIdBuilder_ == null) {
          result.itemSetId_ = itemSetId_;
        } else {
          result.itemSetId_ = itemSetIdBuilder_.build();
        }
        result.itemSetIdNull_ = itemSetIdNull_;
        if (itemConditionIdBuilder_ == null) {
          result.itemConditionId_ = itemConditionId_;
        } else {
          result.itemConditionId_ = itemConditionIdBuilder_.build();
        }
        result.itemConditionIdNull_ = itemConditionIdNull_;
        if (getUnusedSetsBuilder_ == null) {
          result.getUnusedSets_ = getUnusedSets_;
        } else {
          result.getUnusedSets_ = getUnusedSetsBuilder_.build();
        }
        result.getUnusedSetsNull_ = getUnusedSetsNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters other) {
        if (other == io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasItemSetId()) {
          mergeItemSetId(other.getItemSetId());
        }
        if (other.getItemSetIdNull() != false) {
          setItemSetIdNull(other.getItemSetIdNull());
        }
        if (other.hasItemConditionId()) {
          mergeItemConditionId(other.getItemConditionId());
        }
        if (other.getItemConditionIdNull() != false) {
          setItemConditionIdNull(other.getItemConditionIdNull());
        }
        if (other.hasGetUnusedSets()) {
          mergeGetUnusedSets(other.getGetUnusedSets());
        }
        if (other.getGetUnusedSetsNull() != false) {
          setGetUnusedSetsNull(other.getGetUnusedSetsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue itemSetId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemSetIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public boolean hasItemSetId() {
        return itemSetIdBuilder_ != null || itemSetId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getItemSetId() {
        if (itemSetIdBuilder_ == null) {
          return itemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
        } else {
          return itemSetIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public Builder setItemSetId(io.dstore.engine.Values.integerValue value) {
        if (itemSetIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          itemSetId_ = value;
          onChanged();
        } else {
          itemSetIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public Builder setItemSetId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (itemSetIdBuilder_ == null) {
          itemSetId_ = builderForValue.build();
          onChanged();
        } else {
          itemSetIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public Builder mergeItemSetId(io.dstore.engine.Values.integerValue value) {
        if (itemSetIdBuilder_ == null) {
          if (itemSetId_ != null) {
            itemSetId_ =
              io.dstore.engine.Values.integerValue.newBuilder(itemSetId_).mergeFrom(value).buildPartial();
          } else {
            itemSetId_ = value;
          }
          onChanged();
        } else {
          itemSetIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public Builder clearItemSetId() {
        if (itemSetIdBuilder_ == null) {
          itemSetId_ = null;
          onChanged();
        } else {
          itemSetId_ = null;
          itemSetIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getItemSetIdBuilder() {
        
        onChanged();
        return getItemSetIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
        if (itemSetIdBuilder_ != null) {
          return itemSetIdBuilder_.getMessageOrBuilder();
        } else {
          return itemSetId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getItemSetIdFieldBuilder() {
        if (itemSetIdBuilder_ == null) {
          itemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getItemSetId(),
                  getParentForChildren(),
                  isClean());
          itemSetId_ = null;
        }
        return itemSetIdBuilder_;
      }

      private boolean itemSetIdNull_ ;
      /**
       * <code>optional bool item_set_id_null = 1001;</code>
       */
      public boolean getItemSetIdNull() {
        return itemSetIdNull_;
      }
      /**
       * <code>optional bool item_set_id_null = 1001;</code>
       */
      public Builder setItemSetIdNull(boolean value) {
        
        itemSetIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool item_set_id_null = 1001;</code>
       */
      public Builder clearItemSetIdNull() {
        
        itemSetIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue itemConditionId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemConditionIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public boolean hasItemConditionId() {
        return itemConditionIdBuilder_ != null || itemConditionId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getItemConditionId() {
        if (itemConditionIdBuilder_ == null) {
          return itemConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
        } else {
          return itemConditionIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public Builder setItemConditionId(io.dstore.engine.Values.integerValue value) {
        if (itemConditionIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          itemConditionId_ = value;
          onChanged();
        } else {
          itemConditionIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public Builder setItemConditionId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (itemConditionIdBuilder_ == null) {
          itemConditionId_ = builderForValue.build();
          onChanged();
        } else {
          itemConditionIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public Builder mergeItemConditionId(io.dstore.engine.Values.integerValue value) {
        if (itemConditionIdBuilder_ == null) {
          if (itemConditionId_ != null) {
            itemConditionId_ =
              io.dstore.engine.Values.integerValue.newBuilder(itemConditionId_).mergeFrom(value).buildPartial();
          } else {
            itemConditionId_ = value;
          }
          onChanged();
        } else {
          itemConditionIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public Builder clearItemConditionId() {
        if (itemConditionIdBuilder_ == null) {
          itemConditionId_ = null;
          onChanged();
        } else {
          itemConditionId_ = null;
          itemConditionIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getItemConditionIdBuilder() {
        
        onChanged();
        return getItemConditionIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
        if (itemConditionIdBuilder_ != null) {
          return itemConditionIdBuilder_.getMessageOrBuilder();
        } else {
          return itemConditionId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getItemConditionIdFieldBuilder() {
        if (itemConditionIdBuilder_ == null) {
          itemConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getItemConditionId(),
                  getParentForChildren(),
                  isClean());
          itemConditionId_ = null;
        }
        return itemConditionIdBuilder_;
      }

      private boolean itemConditionIdNull_ ;
      /**
       * <code>optional bool item_condition_id_null = 1002;</code>
       */
      public boolean getItemConditionIdNull() {
        return itemConditionIdNull_;
      }
      /**
       * <code>optional bool item_condition_id_null = 1002;</code>
       */
      public Builder setItemConditionIdNull(boolean value) {
        
        itemConditionIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool item_condition_id_null = 1002;</code>
       */
      public Builder clearItemConditionIdNull() {
        
        itemConditionIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getUnusedSets_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getUnusedSetsBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public boolean hasGetUnusedSets() {
        return getUnusedSetsBuilder_ != null || getUnusedSets_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetUnusedSets() {
        if (getUnusedSetsBuilder_ == null) {
          return getUnusedSets_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getUnusedSets_;
        } else {
          return getUnusedSetsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public Builder setGetUnusedSets(io.dstore.engine.Values.booleanValue value) {
        if (getUnusedSetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getUnusedSets_ = value;
          onChanged();
        } else {
          getUnusedSetsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public Builder setGetUnusedSets(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getUnusedSetsBuilder_ == null) {
          getUnusedSets_ = builderForValue.build();
          onChanged();
        } else {
          getUnusedSetsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public Builder mergeGetUnusedSets(io.dstore.engine.Values.booleanValue value) {
        if (getUnusedSetsBuilder_ == null) {
          if (getUnusedSets_ != null) {
            getUnusedSets_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getUnusedSets_).mergeFrom(value).buildPartial();
          } else {
            getUnusedSets_ = value;
          }
          onChanged();
        } else {
          getUnusedSetsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public Builder clearGetUnusedSets() {
        if (getUnusedSetsBuilder_ == null) {
          getUnusedSets_ = null;
          onChanged();
        } else {
          getUnusedSets_ = null;
          getUnusedSetsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetUnusedSetsBuilder() {
        
        onChanged();
        return getGetUnusedSetsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetUnusedSetsOrBuilder() {
        if (getUnusedSetsBuilder_ != null) {
          return getUnusedSetsBuilder_.getMessageOrBuilder();
        } else {
          return getUnusedSets_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getUnusedSets_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_unused_sets = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetUnusedSetsFieldBuilder() {
        if (getUnusedSetsBuilder_ == null) {
          getUnusedSetsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetUnusedSets(),
                  getParentForChildren(),
                  isClean());
          getUnusedSets_ = null;
        }
        return getUnusedSetsBuilder_;
      }

      private boolean getUnusedSetsNull_ ;
      /**
       * <code>optional bool get_unused_sets_null = 1003;</code>
       */
      public boolean getGetUnusedSetsNull() {
        return getUnusedSetsNull_;
      }
      /**
       * <code>optional bool get_unused_sets_null = 1003;</code>
       */
      public Builder setGetUnusedSetsNull(boolean value) {
        
        getUnusedSetsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_unused_sets_null = 1003;</code>
       */
      public Builder clearGetUnusedSetsNull() {
        
        getUnusedSetsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetBonusItemSets_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetBonusItemSets_Ad.Parameters)
    private static final io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters();
    }

    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetBonusItemSetsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetBonusItemSets_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetBonusItemSets_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.ProcedureError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.ProcedureError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetBonusItemSets_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      boolean hasItemGroupSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemGroupSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      boolean hasOperator1();
      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getOperator1();
      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getOperator1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      boolean hasCondition1();
      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCondition1();
      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCondition1OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      boolean hasCondition2();
      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCondition2();
      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCondition2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      boolean hasOperator2();
      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getOperator2();
      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getOperator2OrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      boolean hasItemConditionGroupDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getItemConditionGroupDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      boolean hasCombinePartsWithANDOperator();
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getCombinePartsWithANDOperator();
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      boolean hasRecursiveEvaluation();
      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getRecursiveEvaluation();
      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      boolean hasItemPartSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemPartSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemPartSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      boolean hasItemSetId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemSetId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      boolean hasDomainTreeNodeIds();
      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDomainTreeNodeIds();
      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      boolean hasItemConditionPartId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemConditionPartId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      boolean hasItemConditionId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemConditionId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      boolean hasCombineGroupsWithANDOperator();
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      io.dstore.engine.Values.booleanValue getCombineGroupsWithANDOperator();
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      io.dstore.engine.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      boolean hasItemConditionPartDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getItemConditionPartDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      boolean hasLevelIds();
      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLevelIds();
      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLevelIdsOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      boolean hasItemConditionGroupId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getItemConditionGroupId();
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      boolean hasMaxQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      io.dstore.engine.Values.integerValue getMaxQuantity();
      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getMaxQuantityOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      boolean hasItemConditionDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getItemConditionDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      boolean hasInheritDepth();
      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      io.dstore.engine.Values.integerValue getInheritDepth();
      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getInheritDepthOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetBonusItemSets_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemGroupSortNo_ != null) {
                  subBuilder = itemGroupSortNo_.toBuilder();
                }
                itemGroupSortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemGroupSortNo_);
                  itemGroupSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (operator1_ != null) {
                  subBuilder = operator1_.toBuilder();
                }
                operator1_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator1_);
                  operator1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (condition1_ != null) {
                  subBuilder = condition1_.toBuilder();
                }
                condition1_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition1_);
                  condition1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (condition2_ != null) {
                  subBuilder = condition2_.toBuilder();
                }
                condition2_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition2_);
                  condition2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (operator2_ != null) {
                  subBuilder = operator2_.toBuilder();
                }
                operator2_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator2_);
                  operator2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (itemConditionGroupDescription_ != null) {
                  subBuilder = itemConditionGroupDescription_.toBuilder();
                }
                itemConditionGroupDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupDescription_);
                  itemConditionGroupDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (combinePartsWithANDOperator_ != null) {
                  subBuilder = combinePartsWithANDOperator_.toBuilder();
                }
                combinePartsWithANDOperator_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combinePartsWithANDOperator_);
                  combinePartsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (recursiveEvaluation_ != null) {
                  subBuilder = recursiveEvaluation_.toBuilder();
                }
                recursiveEvaluation_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(recursiveEvaluation_);
                  recursiveEvaluation_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemPartSortNo_ != null) {
                  subBuilder = itemPartSortNo_.toBuilder();
                }
                itemPartSortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemPartSortNo_);
                  itemPartSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemSetId_ != null) {
                  subBuilder = itemSetId_.toBuilder();
                }
                itemSetId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemSetId_);
                  itemSetId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (domainTreeNodeIds_ != null) {
                  subBuilder = domainTreeNodeIds_.toBuilder();
                }
                domainTreeNodeIds_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(domainTreeNodeIds_);
                  domainTreeNodeIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemConditionPartId_ != null) {
                  subBuilder = itemConditionPartId_.toBuilder();
                }
                itemConditionPartId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartId_);
                  itemConditionPartId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemConditionId_ != null) {
                  subBuilder = itemConditionId_.toBuilder();
                }
                itemConditionId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionId_);
                  itemConditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
                if (combineGroupsWithANDOperator_ != null) {
                  subBuilder = combineGroupsWithANDOperator_.toBuilder();
                }
                combineGroupsWithANDOperator_ = input.readMessage(io.dstore.engine.Values.booleanValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combineGroupsWithANDOperator_);
                  combineGroupsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (itemConditionPartDescription_ != null) {
                  subBuilder = itemConditionPartDescription_.toBuilder();
                }
                itemConditionPartDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartDescription_);
                  itemConditionPartDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (levelIds_ != null) {
                  subBuilder = levelIds_.toBuilder();
                }
                levelIds_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelIds_);
                  levelIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (itemConditionGroupId_ != null) {
                  subBuilder = itemConditionGroupId_.toBuilder();
                }
                itemConditionGroupId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupId_);
                  itemConditionGroupId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80154: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (maxQuantity_ != null) {
                  subBuilder = maxQuantity_.toBuilder();
                }
                maxQuantity_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxQuantity_);
                  maxQuantity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80162: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (itemConditionDescription_ != null) {
                  subBuilder = itemConditionDescription_.toBuilder();
                }
                itemConditionDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionDescription_);
                  itemConditionDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80170: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (inheritDepth_ != null) {
                  subBuilder = inheritDepth_.toBuilder();
                }
                inheritDepth_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inheritDepth_);
                  inheritDepth_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int ITEM_GROUP_SORT_NO_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue itemGroupSortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public boolean hasItemGroupSortNo() {
        return itemGroupSortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemGroupSortNo() {
        return itemGroupSortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder() {
        return getItemGroupSortNo();
      }

      public static final int OPERATOR1_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue operator1_;
      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      public boolean hasOperator1() {
        return operator1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getOperator1() {
        return operator1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : operator1_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getOperator1OrBuilder() {
        return getOperator1();
      }

      public static final int CONDITION1_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue condition1_;
      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public boolean hasCondition1() {
        return condition1_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCondition1() {
        return condition1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition1_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCondition1OrBuilder() {
        return getCondition1();
      }

      public static final int CONDITION2_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue condition2_;
      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public boolean hasCondition2() {
        return condition2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCondition2() {
        return condition2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition2_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCondition2OrBuilder() {
        return getCondition2();
      }

      public static final int OPERATOR2_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue operator2_;
      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      public boolean hasOperator2() {
        return operator2_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getOperator2() {
        return operator2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : operator2_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getOperator2OrBuilder() {
        return getOperator2();
      }

      public static final int ITEM_CONDITION_GROUP_DESCRIPTION_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue itemConditionGroupDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public boolean hasItemConditionGroupDescription() {
        return itemConditionGroupDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getItemConditionGroupDescription() {
        return itemConditionGroupDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
        return getItemConditionGroupDescription();
      }

      public static final int COMBINE_PARTS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.booleanValue combinePartsWithANDOperator_;
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public boolean hasCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
        return getCombinePartsWithANDOperator();
      }

      public static final int RECURSIVE_EVALUATION_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue recursiveEvaluation_;
      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public boolean hasRecursiveEvaluation() {
        return recursiveEvaluation_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getRecursiveEvaluation() {
        return recursiveEvaluation_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder() {
        return getRecursiveEvaluation();
      }

      public static final int ITEM_PART_SORT_NO_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue itemPartSortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public boolean hasItemPartSortNo() {
        return itemPartSortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemPartSortNo() {
        return itemPartSortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemPartSortNoOrBuilder() {
        return getItemPartSortNo();
      }

      public static final int ITEM_SET_ID_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.integerValue itemSetId_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      public boolean hasItemSetId() {
        return itemSetId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemSetId() {
        return itemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
       *
       * <pre>
       * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
        return getItemSetId();
      }

      public static final int DOMAIN_TREE_NODE_IDS_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.stringValue domainTreeNodeIds_;
      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public boolean hasDomainTreeNodeIds() {
        return domainTreeNodeIds_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDomainTreeNodeIds() {
        return domainTreeNodeIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
        return getDomainTreeNodeIds();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 10012;
      private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int ITEM_CONDITION_PART_ID_FIELD_NUMBER = 10013;
      private io.dstore.engine.Values.integerValue itemConditionPartId_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public boolean hasItemConditionPartId() {
        return itemConditionPartId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemConditionPartId() {
        return itemConditionPartId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder() {
        return getItemConditionPartId();
      }

      public static final int ITEM_CONDITION_ID_FIELD_NUMBER = 10014;
      private io.dstore.engine.Values.integerValue itemConditionId_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      public boolean hasItemConditionId() {
        return itemConditionId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemConditionId() {
        return itemConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
        return getItemConditionId();
      }

      public static final int COMBINE_GROUPS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 10015;
      private io.dstore.engine.Values.booleanValue combineGroupsWithANDOperator_;
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      public boolean hasCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      public io.dstore.engine.Values.booleanValue getCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
       *
       * <pre>
       * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
       * </pre>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
        return getCombineGroupsWithANDOperator();
      }

      public static final int ITEM_CONDITION_PART_DESCRIPTION_FIELD_NUMBER = 10016;
      private io.dstore.engine.Values.stringValue itemConditionPartDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public boolean hasItemConditionPartDescription() {
        return itemConditionPartDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getItemConditionPartDescription() {
        return itemConditionPartDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
        return getItemConditionPartDescription();
      }

      public static final int LEVEL_IDS_FIELD_NUMBER = 10017;
      private io.dstore.engine.Values.stringValue levelIds_;
      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public boolean hasLevelIds() {
        return levelIds_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLevelIds() {
        return levelIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : levelIds_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLevelIdsOrBuilder() {
        return getLevelIds();
      }

      public static final int ITEM_CONDITION_GROUP_ID_FIELD_NUMBER = 10018;
      private io.dstore.engine.Values.integerValue itemConditionGroupId_;
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public boolean hasItemConditionGroupId() {
        return itemConditionGroupId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getItemConditionGroupId() {
        return itemConditionGroupId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder() {
        return getItemConditionGroupId();
      }

      public static final int MAX_QUANTITY_FIELD_NUMBER = 10019;
      private io.dstore.engine.Values.integerValue maxQuantity_;
      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      public boolean hasMaxQuantity() {
        return maxQuantity_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getMaxQuantity() {
        return maxQuantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxQuantity_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
       *
       * <pre>
       * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getMaxQuantityOrBuilder() {
        return getMaxQuantity();
      }

      public static final int ITEM_CONDITION_DESCRIPTION_FIELD_NUMBER = 10020;
      private io.dstore.engine.Values.stringValue itemConditionDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public boolean hasItemConditionDescription() {
        return itemConditionDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getItemConditionDescription() {
        return itemConditionDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder() {
        return getItemConditionDescription();
      }

      public static final int INHERIT_DEPTH_FIELD_NUMBER = 10021;
      private io.dstore.engine.Values.integerValue inheritDepth_;
      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public boolean hasInheritDepth() {
        return inheritDepth_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getInheritDepth() {
        return inheritDepth_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritDepth_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getInheritDepthOrBuilder() {
        return getInheritDepth();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (itemGroupSortNo_ != null) {
          output.writeMessage(10001, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          output.writeMessage(10002, getOperator1());
        }
        if (condition1_ != null) {
          output.writeMessage(10003, getCondition1());
        }
        if (condition2_ != null) {
          output.writeMessage(10004, getCondition2());
        }
        if (operator2_ != null) {
          output.writeMessage(10005, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          output.writeMessage(10006, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          output.writeMessage(10007, getCombinePartsWithANDOperator());
        }
        if (recursiveEvaluation_ != null) {
          output.writeMessage(10008, getRecursiveEvaluation());
        }
        if (itemPartSortNo_ != null) {
          output.writeMessage(10009, getItemPartSortNo());
        }
        if (itemSetId_ != null) {
          output.writeMessage(10010, getItemSetId());
        }
        if (domainTreeNodeIds_ != null) {
          output.writeMessage(10011, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(10012, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          output.writeMessage(10013, getItemConditionPartId());
        }
        if (itemConditionId_ != null) {
          output.writeMessage(10014, getItemConditionId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          output.writeMessage(10015, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          output.writeMessage(10016, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          output.writeMessage(10017, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          output.writeMessage(10018, getItemConditionGroupId());
        }
        if (maxQuantity_ != null) {
          output.writeMessage(10019, getMaxQuantity());
        }
        if (itemConditionDescription_ != null) {
          output.writeMessage(10020, getItemConditionDescription());
        }
        if (inheritDepth_ != null) {
          output.writeMessage(10021, getInheritDepth());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (itemGroupSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getOperator1());
        }
        if (condition1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getCondition1());
        }
        if (condition2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getCondition2());
        }
        if (operator2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getCombinePartsWithANDOperator());
        }
        if (recursiveEvaluation_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getRecursiveEvaluation());
        }
        if (itemPartSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getItemPartSortNo());
        }
        if (itemSetId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getItemSetId());
        }
        if (domainTreeNodeIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getItemConditionPartId());
        }
        if (itemConditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getItemConditionId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getItemConditionGroupId());
        }
        if (maxQuantity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10019, getMaxQuantity());
        }
        if (itemConditionDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10020, getItemConditionDescription());
        }
        if (inheritDepth_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10021, getInheritDepth());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetBonusItemSets_Ad.Response.Row)
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }
          if (operator1Builder_ == null) {
            operator1_ = null;
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }
          if (condition1Builder_ == null) {
            condition1_ = null;
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }
          if (condition2Builder_ == null) {
            condition2_ = null;
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }
          if (operator2Builder_ == null) {
            operator2_ = null;
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = null;
          } else {
            maxQuantity_ = null;
            maxQuantityBuilder_ = null;
          }
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row build() {
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row result = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (itemGroupSortNoBuilder_ == null) {
            result.itemGroupSortNo_ = itemGroupSortNo_;
          } else {
            result.itemGroupSortNo_ = itemGroupSortNoBuilder_.build();
          }
          if (operator1Builder_ == null) {
            result.operator1_ = operator1_;
          } else {
            result.operator1_ = operator1Builder_.build();
          }
          if (condition1Builder_ == null) {
            result.condition1_ = condition1_;
          } else {
            result.condition1_ = condition1Builder_.build();
          }
          if (condition2Builder_ == null) {
            result.condition2_ = condition2_;
          } else {
            result.condition2_ = condition2Builder_.build();
          }
          if (operator2Builder_ == null) {
            result.operator2_ = operator2_;
          } else {
            result.operator2_ = operator2Builder_.build();
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            result.itemConditionGroupDescription_ = itemConditionGroupDescription_;
          } else {
            result.itemConditionGroupDescription_ = itemConditionGroupDescriptionBuilder_.build();
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperator_;
          } else {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperatorBuilder_.build();
          }
          if (recursiveEvaluationBuilder_ == null) {
            result.recursiveEvaluation_ = recursiveEvaluation_;
          } else {
            result.recursiveEvaluation_ = recursiveEvaluationBuilder_.build();
          }
          if (itemPartSortNoBuilder_ == null) {
            result.itemPartSortNo_ = itemPartSortNo_;
          } else {
            result.itemPartSortNo_ = itemPartSortNoBuilder_.build();
          }
          if (itemSetIdBuilder_ == null) {
            result.itemSetId_ = itemSetId_;
          } else {
            result.itemSetId_ = itemSetIdBuilder_.build();
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            result.domainTreeNodeIds_ = domainTreeNodeIds_;
          } else {
            result.domainTreeNodeIds_ = domainTreeNodeIdsBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (itemConditionPartIdBuilder_ == null) {
            result.itemConditionPartId_ = itemConditionPartId_;
          } else {
            result.itemConditionPartId_ = itemConditionPartIdBuilder_.build();
          }
          if (itemConditionIdBuilder_ == null) {
            result.itemConditionId_ = itemConditionId_;
          } else {
            result.itemConditionId_ = itemConditionIdBuilder_.build();
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperator_;
          } else {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperatorBuilder_.build();
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            result.itemConditionPartDescription_ = itemConditionPartDescription_;
          } else {
            result.itemConditionPartDescription_ = itemConditionPartDescriptionBuilder_.build();
          }
          if (levelIdsBuilder_ == null) {
            result.levelIds_ = levelIds_;
          } else {
            result.levelIds_ = levelIdsBuilder_.build();
          }
          if (itemConditionGroupIdBuilder_ == null) {
            result.itemConditionGroupId_ = itemConditionGroupId_;
          } else {
            result.itemConditionGroupId_ = itemConditionGroupIdBuilder_.build();
          }
          if (maxQuantityBuilder_ == null) {
            result.maxQuantity_ = maxQuantity_;
          } else {
            result.maxQuantity_ = maxQuantityBuilder_.build();
          }
          if (itemConditionDescriptionBuilder_ == null) {
            result.itemConditionDescription_ = itemConditionDescription_;
          } else {
            result.itemConditionDescription_ = itemConditionDescriptionBuilder_.build();
          }
          if (inheritDepthBuilder_ == null) {
            result.inheritDepth_ = inheritDepth_;
          } else {
            result.inheritDepth_ = inheritDepthBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasItemGroupSortNo()) {
            mergeItemGroupSortNo(other.getItemGroupSortNo());
          }
          if (other.hasOperator1()) {
            mergeOperator1(other.getOperator1());
          }
          if (other.hasCondition1()) {
            mergeCondition1(other.getCondition1());
          }
          if (other.hasCondition2()) {
            mergeCondition2(other.getCondition2());
          }
          if (other.hasOperator2()) {
            mergeOperator2(other.getOperator2());
          }
          if (other.hasItemConditionGroupDescription()) {
            mergeItemConditionGroupDescription(other.getItemConditionGroupDescription());
          }
          if (other.hasCombinePartsWithANDOperator()) {
            mergeCombinePartsWithANDOperator(other.getCombinePartsWithANDOperator());
          }
          if (other.hasRecursiveEvaluation()) {
            mergeRecursiveEvaluation(other.getRecursiveEvaluation());
          }
          if (other.hasItemPartSortNo()) {
            mergeItemPartSortNo(other.getItemPartSortNo());
          }
          if (other.hasItemSetId()) {
            mergeItemSetId(other.getItemSetId());
          }
          if (other.hasDomainTreeNodeIds()) {
            mergeDomainTreeNodeIds(other.getDomainTreeNodeIds());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasItemConditionPartId()) {
            mergeItemConditionPartId(other.getItemConditionPartId());
          }
          if (other.hasItemConditionId()) {
            mergeItemConditionId(other.getItemConditionId());
          }
          if (other.hasCombineGroupsWithANDOperator()) {
            mergeCombineGroupsWithANDOperator(other.getCombineGroupsWithANDOperator());
          }
          if (other.hasItemConditionPartDescription()) {
            mergeItemConditionPartDescription(other.getItemConditionPartDescription());
          }
          if (other.hasLevelIds()) {
            mergeLevelIds(other.getLevelIds());
          }
          if (other.hasItemConditionGroupId()) {
            mergeItemConditionGroupId(other.getItemConditionGroupId());
          }
          if (other.hasMaxQuantity()) {
            mergeMaxQuantity(other.getMaxQuantity());
          }
          if (other.hasItemConditionDescription()) {
            mergeItemConditionDescription(other.getItemConditionDescription());
          }
          if (other.hasInheritDepth()) {
            mergeInheritDepth(other.getInheritDepth());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue itemGroupSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemGroupSortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public boolean hasItemGroupSortNo() {
          return itemGroupSortNoBuilder_ != null || itemGroupSortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            return itemGroupSortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
          } else {
            return itemGroupSortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder setItemGroupSortNo(io.dstore.engine.Values.integerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemGroupSortNo_ = value;
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder setItemGroupSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder mergeItemGroupSortNo(io.dstore.engine.Values.integerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (itemGroupSortNo_ != null) {
              itemGroupSortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemGroupSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemGroupSortNo_ = value;
            }
            onChanged();
          } else {
            itemGroupSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder clearItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
            onChanged();
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemGroupSortNoBuilder() {
          
          onChanged();
          return getItemGroupSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder() {
          if (itemGroupSortNoBuilder_ != null) {
            return itemGroupSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemGroupSortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_group_sort_no = 10001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemGroupSortNoFieldBuilder() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemGroupSortNo(),
                    getParentForChildren(),
                    isClean());
            itemGroupSortNo_ = null;
          }
          return itemGroupSortNoBuilder_;
        }

        private io.dstore.engine.Values.stringValue operator1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> operator1Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public boolean hasOperator1() {
          return operator1Builder_ != null || operator1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getOperator1() {
          if (operator1Builder_ == null) {
            return operator1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : operator1_;
          } else {
            return operator1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public Builder setOperator1(io.dstore.engine.Values.stringValue value) {
          if (operator1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator1_ = value;
            onChanged();
          } else {
            operator1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public Builder setOperator1(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (operator1Builder_ == null) {
            operator1_ = builderForValue.build();
            onChanged();
          } else {
            operator1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public Builder mergeOperator1(io.dstore.engine.Values.stringValue value) {
          if (operator1Builder_ == null) {
            if (operator1_ != null) {
              operator1_ =
                io.dstore.engine.Values.stringValue.newBuilder(operator1_).mergeFrom(value).buildPartial();
            } else {
              operator1_ = value;
            }
            onChanged();
          } else {
            operator1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public Builder clearOperator1() {
          if (operator1Builder_ == null) {
            operator1_ = null;
            onChanged();
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getOperator1Builder() {
          
          onChanged();
          return getOperator1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getOperator1OrBuilder() {
          if (operator1Builder_ != null) {
            return operator1Builder_.getMessageOrBuilder();
          } else {
            return operator1_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : operator1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator1 = 10002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getOperator1FieldBuilder() {
          if (operator1Builder_ == null) {
            operator1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getOperator1(),
                    getParentForChildren(),
                    isClean());
            operator1_ = null;
          }
          return operator1Builder_;
        }

        private io.dstore.engine.Values.stringValue condition1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> condition1Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public boolean hasCondition1() {
          return condition1Builder_ != null || condition1_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCondition1() {
          if (condition1Builder_ == null) {
            return condition1_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition1_;
          } else {
            return condition1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder setCondition1(io.dstore.engine.Values.stringValue value) {
          if (condition1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition1_ = value;
            onChanged();
          } else {
            condition1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder setCondition1(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (condition1Builder_ == null) {
            condition1_ = builderForValue.build();
            onChanged();
          } else {
            condition1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder mergeCondition1(io.dstore.engine.Values.stringValue value) {
          if (condition1Builder_ == null) {
            if (condition1_ != null) {
              condition1_ =
                io.dstore.engine.Values.stringValue.newBuilder(condition1_).mergeFrom(value).buildPartial();
            } else {
              condition1_ = value;
            }
            onChanged();
          } else {
            condition1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder clearCondition1() {
          if (condition1Builder_ == null) {
            condition1_ = null;
            onChanged();
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCondition1Builder() {
          
          onChanged();
          return getCondition1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCondition1OrBuilder() {
          if (condition1Builder_ != null) {
            return condition1Builder_.getMessageOrBuilder();
          } else {
            return condition1_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : condition1_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition1 = 10003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCondition1FieldBuilder() {
          if (condition1Builder_ == null) {
            condition1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCondition1(),
                    getParentForChildren(),
                    isClean());
            condition1_ = null;
          }
          return condition1Builder_;
        }

        private io.dstore.engine.Values.stringValue condition2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> condition2Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public boolean hasCondition2() {
          return condition2Builder_ != null || condition2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCondition2() {
          if (condition2Builder_ == null) {
            return condition2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : condition2_;
          } else {
            return condition2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder setCondition2(io.dstore.engine.Values.stringValue value) {
          if (condition2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition2_ = value;
            onChanged();
          } else {
            condition2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder setCondition2(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (condition2Builder_ == null) {
            condition2_ = builderForValue.build();
            onChanged();
          } else {
            condition2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder mergeCondition2(io.dstore.engine.Values.stringValue value) {
          if (condition2Builder_ == null) {
            if (condition2_ != null) {
              condition2_ =
                io.dstore.engine.Values.stringValue.newBuilder(condition2_).mergeFrom(value).buildPartial();
            } else {
              condition2_ = value;
            }
            onChanged();
          } else {
            condition2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder clearCondition2() {
          if (condition2Builder_ == null) {
            condition2_ = null;
            onChanged();
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCondition2Builder() {
          
          onChanged();
          return getCondition2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCondition2OrBuilder() {
          if (condition2Builder_ != null) {
            return condition2Builder_.getMessageOrBuilder();
          } else {
            return condition2_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : condition2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue condition2 = 10004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCondition2FieldBuilder() {
          if (condition2Builder_ == null) {
            condition2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCondition2(),
                    getParentForChildren(),
                    isClean());
            condition2_ = null;
          }
          return condition2Builder_;
        }

        private io.dstore.engine.Values.stringValue operator2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> operator2Builder_;
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public boolean hasOperator2() {
          return operator2Builder_ != null || operator2_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getOperator2() {
          if (operator2Builder_ == null) {
            return operator2_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : operator2_;
          } else {
            return operator2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public Builder setOperator2(io.dstore.engine.Values.stringValue value) {
          if (operator2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator2_ = value;
            onChanged();
          } else {
            operator2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public Builder setOperator2(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (operator2Builder_ == null) {
            operator2_ = builderForValue.build();
            onChanged();
          } else {
            operator2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public Builder mergeOperator2(io.dstore.engine.Values.stringValue value) {
          if (operator2Builder_ == null) {
            if (operator2_ != null) {
              operator2_ =
                io.dstore.engine.Values.stringValue.newBuilder(operator2_).mergeFrom(value).buildPartial();
            } else {
              operator2_ = value;
            }
            onChanged();
          } else {
            operator2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public Builder clearOperator2() {
          if (operator2Builder_ == null) {
            operator2_ = null;
            onChanged();
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getOperator2Builder() {
          
          onChanged();
          return getOperator2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getOperator2OrBuilder() {
          if (operator2Builder_ != null) {
            return operator2Builder_.getMessageOrBuilder();
          } else {
            return operator2_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : operator2_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue operator2 = 10005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Sonderfall : falls "Operator1" "IN" oder "!I" enthält, steht hier das Trennzeichen für die in "Condition1" angegebene Werte-Menge.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getOperator2FieldBuilder() {
          if (operator2Builder_ == null) {
            operator2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getOperator2(),
                    getParentForChildren(),
                    isClean());
            operator2_ = null;
          }
          return operator2Builder_;
        }

        private io.dstore.engine.Values.stringValue itemConditionGroupDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> itemConditionGroupDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public boolean hasItemConditionGroupDescription() {
          return itemConditionGroupDescriptionBuilder_ != null || itemConditionGroupDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            return itemConditionGroupDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
          } else {
            return itemConditionGroupDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder setItemConditionGroupDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupDescription_ = value;
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder setItemConditionGroupDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder mergeItemConditionGroupDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (itemConditionGroupDescription_ != null) {
              itemConditionGroupDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(itemConditionGroupDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder clearItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
            onChanged();
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getItemConditionGroupDescriptionBuilder() {
          
          onChanged();
          return getItemConditionGroupDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
          if (itemConditionGroupDescriptionBuilder_ != null) {
            return itemConditionGroupDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_group_description = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getItemConditionGroupDescriptionFieldBuilder() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getItemConditionGroupDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupDescription_ = null;
          }
          return itemConditionGroupDescriptionBuilder_;
        }

        private io.dstore.engine.Values.booleanValue combinePartsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> combinePartsWithANDOperatorBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public boolean hasCombinePartsWithANDOperator() {
          return combinePartsWithANDOperatorBuilder_ != null || combinePartsWithANDOperator_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            return combinePartsWithANDOperator_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          } else {
            return combinePartsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombinePartsWithANDOperator(io.dstore.engine.Values.booleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combinePartsWithANDOperator_ = value;
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombinePartsWithANDOperator(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder mergeCombinePartsWithANDOperator(io.dstore.engine.Values.booleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (combinePartsWithANDOperator_ != null) {
              combinePartsWithANDOperator_ =
                io.dstore.engine.Values.booleanValue.newBuilder(combinePartsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combinePartsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder clearCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
            onChanged();
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getCombinePartsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombinePartsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
          if (combinePartsWithANDOperatorBuilder_ != null) {
            return combinePartsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combinePartsWithANDOperator_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_parts_with_a_n_d_operator = 10007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getCombinePartsWithANDOperatorFieldBuilder() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getCombinePartsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combinePartsWithANDOperator_ = null;
          }
          return combinePartsWithANDOperatorBuilder_;
        }

        private io.dstore.engine.Values.integerValue recursiveEvaluation_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> recursiveEvaluationBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public boolean hasRecursiveEvaluation() {
          return recursiveEvaluationBuilder_ != null || recursiveEvaluation_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            return recursiveEvaluation_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
          } else {
            return recursiveEvaluationBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder setRecursiveEvaluation(io.dstore.engine.Values.integerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            recursiveEvaluation_ = value;
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder setRecursiveEvaluation(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = builderForValue.build();
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder mergeRecursiveEvaluation(io.dstore.engine.Values.integerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (recursiveEvaluation_ != null) {
              recursiveEvaluation_ =
                io.dstore.engine.Values.integerValue.newBuilder(recursiveEvaluation_).mergeFrom(value).buildPartial();
            } else {
              recursiveEvaluation_ = value;
            }
            onChanged();
          } else {
            recursiveEvaluationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder clearRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
            onChanged();
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getRecursiveEvaluationBuilder() {
          
          onChanged();
          return getRecursiveEvaluationFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder() {
          if (recursiveEvaluationBuilder_ != null) {
            return recursiveEvaluationBuilder_.getMessageOrBuilder();
          } else {
            return recursiveEvaluation_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue recursive_evaluation = 10008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getRecursiveEvaluationFieldBuilder() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getRecursiveEvaluation(),
                    getParentForChildren(),
                    isClean());
            recursiveEvaluation_ = null;
          }
          return recursiveEvaluationBuilder_;
        }

        private io.dstore.engine.Values.integerValue itemPartSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemPartSortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public boolean hasItemPartSortNo() {
          return itemPartSortNoBuilder_ != null || itemPartSortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            return itemPartSortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
          } else {
            return itemPartSortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder setItemPartSortNo(io.dstore.engine.Values.integerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemPartSortNo_ = value;
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder setItemPartSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder mergeItemPartSortNo(io.dstore.engine.Values.integerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (itemPartSortNo_ != null) {
              itemPartSortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemPartSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemPartSortNo_ = value;
            }
            onChanged();
          } else {
            itemPartSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder clearItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
            onChanged();
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemPartSortNoBuilder() {
          
          onChanged();
          return getItemPartSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemPartSortNoOrBuilder() {
          if (itemPartSortNoBuilder_ != null) {
            return itemPartSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemPartSortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_part_sort_no = 10009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemPartSortNoFieldBuilder() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemPartSortNo(),
                    getParentForChildren(),
                    isClean());
            itemPartSortNo_ = null;
          }
          return itemPartSortNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue itemSetId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemSetIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public boolean hasItemSetId() {
          return itemSetIdBuilder_ != null || itemSetId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemSetId() {
          if (itemSetIdBuilder_ == null) {
            return itemSetId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
          } else {
            return itemSetIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public Builder setItemSetId(io.dstore.engine.Values.integerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemSetId_ = value;
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public Builder setItemSetId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = builderForValue.build();
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public Builder mergeItemSetId(io.dstore.engine.Values.integerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (itemSetId_ != null) {
              itemSetId_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemSetId_).mergeFrom(value).buildPartial();
            } else {
              itemSetId_ = value;
            }
            onChanged();
          } else {
            itemSetIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public Builder clearItemSetId() {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
            onChanged();
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemSetIdBuilder() {
          
          onChanged();
          return getItemSetIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
          if (itemSetIdBuilder_ != null) {
            return itemSetIdBuilder_.getMessageOrBuilder();
          } else {
            return itemSetId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemSetId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_set_id = 10010;</code>
         *
         * <pre>
         * ID eines Bonus-Artikel-Sets - natürlich identisch mit "&#64;ItemSetID" wenn angegeben
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemSetIdFieldBuilder() {
          if (itemSetIdBuilder_ == null) {
            itemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemSetId(),
                    getParentForChildren(),
                    isClean());
            itemSetId_ = null;
          }
          return itemSetIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue domainTreeNodeIds_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> domainTreeNodeIdsBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public boolean hasDomainTreeNodeIds() {
          return domainTreeNodeIdsBuilder_ != null || domainTreeNodeIds_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            return domainTreeNodeIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
          } else {
            return domainTreeNodeIdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder setDomainTreeNodeIds(io.dstore.engine.Values.stringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            domainTreeNodeIds_ = value;
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder setDomainTreeNodeIds(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = builderForValue.build();
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder mergeDomainTreeNodeIds(io.dstore.engine.Values.stringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (domainTreeNodeIds_ != null) {
              domainTreeNodeIds_ =
                io.dstore.engine.Values.stringValue.newBuilder(domainTreeNodeIds_).mergeFrom(value).buildPartial();
            } else {
              domainTreeNodeIds_ = value;
            }
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder clearDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
            onChanged();
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDomainTreeNodeIdsBuilder() {
          
          onChanged();
          return getDomainTreeNodeIdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
          if (domainTreeNodeIdsBuilder_ != null) {
            return domainTreeNodeIdsBuilder_.getMessageOrBuilder();
          } else {
            return domainTreeNodeIds_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue domain_tree_node_ids = 10011;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDomainTreeNodeIdsFieldBuilder() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDomainTreeNodeIds(),
                    getParentForChildren(),
                    isClean());
            domainTreeNodeIds_ = null;
          }
          return domainTreeNodeIdsBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue itemConditionPartId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemConditionPartIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public boolean hasItemConditionPartId() {
          return itemConditionPartIdBuilder_ != null || itemConditionPartId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            return itemConditionPartId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
          } else {
            return itemConditionPartIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder setItemConditionPartId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartId_ = value;
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder setItemConditionPartId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder mergeItemConditionPartId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (itemConditionPartId_ != null) {
              itemConditionPartId_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemConditionPartId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartId_ = value;
            }
            onChanged();
          } else {
            itemConditionPartIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder clearItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
            onChanged();
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemConditionPartIdBuilder() {
          
          onChanged();
          return getItemConditionPartIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder() {
          if (itemConditionPartIdBuilder_ != null) {
            return itemConditionPartIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_part_id = 10013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemConditionPartIdFieldBuilder() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemConditionPartId(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartId_ = null;
          }
          return itemConditionPartIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue itemConditionId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemConditionIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public boolean hasItemConditionId() {
          return itemConditionIdBuilder_ != null || itemConditionId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            return itemConditionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
          } else {
            return itemConditionIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public Builder setItemConditionId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionId_ = value;
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public Builder setItemConditionId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public Builder mergeItemConditionId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (itemConditionId_ != null) {
              itemConditionId_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemConditionId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionId_ = value;
            }
            onChanged();
          } else {
            itemConditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public Builder clearItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
            onChanged();
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemConditionIdBuilder() {
          
          onChanged();
          return getItemConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
          if (itemConditionIdBuilder_ != null) {
            return itemConditionIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_id = 10014;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert (die genaue Definition ergibt sich durch die Rückgabespalten "CombineGroupsWithANDOperator" bis "RecursiveEvaluation")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemConditionIdFieldBuilder() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemConditionId(),
                    getParentForChildren(),
                    isClean());
            itemConditionId_ = null;
          }
          return itemConditionIdBuilder_;
        }

        private io.dstore.engine.Values.booleanValue combineGroupsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> combineGroupsWithANDOperatorBuilder_;
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public boolean hasCombineGroupsWithANDOperator() {
          return combineGroupsWithANDOperatorBuilder_ != null || combineGroupsWithANDOperator_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue getCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            return combineGroupsWithANDOperator_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          } else {
            return combineGroupsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public Builder setCombineGroupsWithANDOperator(io.dstore.engine.Values.booleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combineGroupsWithANDOperator_ = value;
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public Builder setCombineGroupsWithANDOperator(
            io.dstore.engine.Values.booleanValue.Builder builderForValue) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public Builder mergeCombineGroupsWithANDOperator(io.dstore.engine.Values.booleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (combineGroupsWithANDOperator_ != null) {
              combineGroupsWithANDOperator_ =
                io.dstore.engine.Values.booleanValue.newBuilder(combineGroupsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combineGroupsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public Builder clearCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
            onChanged();
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public io.dstore.engine.Values.booleanValue.Builder getCombineGroupsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombineGroupsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        public io.dstore.engine.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ != null) {
            return combineGroupsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combineGroupsWithANDOperator_ == null ?
                io.dstore.engine.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.booleanValue combine_groups_with_a_n_d_operator = 10015;</code>
         *
         * <pre>
         * Gibt an, ob die Bedingungs-Gruppen, die der Bedingung "ItemConditionID" zugeordnet sind, mit "UND" ("1") oder "ODER" ("0") verknüpft sind
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
            getCombineGroupsWithANDOperatorFieldBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                    getCombineGroupsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combineGroupsWithANDOperator_ = null;
          }
          return combineGroupsWithANDOperatorBuilder_;
        }

        private io.dstore.engine.Values.stringValue itemConditionPartDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> itemConditionPartDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public boolean hasItemConditionPartDescription() {
          return itemConditionPartDescriptionBuilder_ != null || itemConditionPartDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            return itemConditionPartDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
          } else {
            return itemConditionPartDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder setItemConditionPartDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartDescription_ = value;
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder setItemConditionPartDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder mergeItemConditionPartDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (itemConditionPartDescription_ != null) {
              itemConditionPartDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(itemConditionPartDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder clearItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
            onChanged();
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getItemConditionPartDescriptionBuilder() {
          
          onChanged();
          return getItemConditionPartDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
          if (itemConditionPartDescriptionBuilder_ != null) {
            return itemConditionPartDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_part_description = 10016;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getItemConditionPartDescriptionFieldBuilder() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getItemConditionPartDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartDescription_ = null;
          }
          return itemConditionPartDescriptionBuilder_;
        }

        private io.dstore.engine.Values.stringValue levelIds_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> levelIdsBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public boolean hasLevelIds() {
          return levelIdsBuilder_ != null || levelIds_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLevelIds() {
          if (levelIdsBuilder_ == null) {
            return levelIds_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : levelIds_;
          } else {
            return levelIdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder setLevelIds(io.dstore.engine.Values.stringValue value) {
          if (levelIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelIds_ = value;
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder setLevelIds(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (levelIdsBuilder_ == null) {
            levelIds_ = builderForValue.build();
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder mergeLevelIds(io.dstore.engine.Values.stringValue value) {
          if (levelIdsBuilder_ == null) {
            if (levelIds_ != null) {
              levelIds_ =
                io.dstore.engine.Values.stringValue.newBuilder(levelIds_).mergeFrom(value).buildPartial();
            } else {
              levelIds_ = value;
            }
            onChanged();
          } else {
            levelIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder clearLevelIds() {
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
            onChanged();
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLevelIdsBuilder() {
          
          onChanged();
          return getLevelIdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLevelIdsOrBuilder() {
          if (levelIdsBuilder_ != null) {
            return levelIdsBuilder_.getMessageOrBuilder();
          } else {
            return levelIds_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : levelIds_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue level_ids = 10017;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLevelIdsFieldBuilder() {
          if (levelIdsBuilder_ == null) {
            levelIdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLevelIds(),
                    getParentForChildren(),
                    isClean());
            levelIds_ = null;
          }
          return levelIdsBuilder_;
        }

        private io.dstore.engine.Values.integerValue itemConditionGroupId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> itemConditionGroupIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public boolean hasItemConditionGroupId() {
          return itemConditionGroupIdBuilder_ != null || itemConditionGroupId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            return itemConditionGroupId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
          } else {
            return itemConditionGroupIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder setItemConditionGroupId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupId_ = value;
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder setItemConditionGroupId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder mergeItemConditionGroupId(io.dstore.engine.Values.integerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (itemConditionGroupId_ != null) {
              itemConditionGroupId_ =
                io.dstore.engine.Values.integerValue.newBuilder(itemConditionGroupId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupId_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder clearItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
            onChanged();
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getItemConditionGroupIdBuilder() {
          
          onChanged();
          return getItemConditionGroupIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder() {
          if (itemConditionGroupIdBuilder_ != null) {
            return itemConditionGroupIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue item_condition_group_id = 10018;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getItemConditionGroupIdFieldBuilder() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getItemConditionGroupId(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupId_ = null;
          }
          return itemConditionGroupIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue maxQuantity_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> maxQuantityBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public boolean hasMaxQuantity() {
          return maxQuantityBuilder_ != null || maxQuantity_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getMaxQuantity() {
          if (maxQuantityBuilder_ == null) {
            return maxQuantity_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : maxQuantity_;
          } else {
            return maxQuantityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public Builder setMaxQuantity(io.dstore.engine.Values.integerValue value) {
          if (maxQuantityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxQuantity_ = value;
            onChanged();
          } else {
            maxQuantityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public Builder setMaxQuantity(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = builderForValue.build();
            onChanged();
          } else {
            maxQuantityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public Builder mergeMaxQuantity(io.dstore.engine.Values.integerValue value) {
          if (maxQuantityBuilder_ == null) {
            if (maxQuantity_ != null) {
              maxQuantity_ =
                io.dstore.engine.Values.integerValue.newBuilder(maxQuantity_).mergeFrom(value).buildPartial();
            } else {
              maxQuantity_ = value;
            }
            onChanged();
          } else {
            maxQuantityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public Builder clearMaxQuantity() {
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = null;
            onChanged();
          } else {
            maxQuantity_ = null;
            maxQuantityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getMaxQuantityBuilder() {
          
          onChanged();
          return getMaxQuantityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getMaxQuantityOrBuilder() {
          if (maxQuantityBuilder_ != null) {
            return maxQuantityBuilder_.getMessageOrBuilder();
          } else {
            return maxQuantity_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : maxQuantity_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue max_quantity = 10019;</code>
         *
         * <pre>
         * Wieviele Artikel der Kunde maximal aus dem Set auswählen darf, die er kostenlos erhält (sofern die Bedingungen der Verkaufs-Aktion erfüllt sind)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getMaxQuantityFieldBuilder() {
          if (maxQuantityBuilder_ == null) {
            maxQuantityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getMaxQuantity(),
                    getParentForChildren(),
                    isClean());
            maxQuantity_ = null;
          }
          return maxQuantityBuilder_;
        }

        private io.dstore.engine.Values.stringValue itemConditionDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> itemConditionDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public boolean hasItemConditionDescription() {
          return itemConditionDescriptionBuilder_ != null || itemConditionDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            return itemConditionDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
          } else {
            return itemConditionDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder setItemConditionDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionDescription_ = value;
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder setItemConditionDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder mergeItemConditionDescription(io.dstore.engine.Values.stringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (itemConditionDescription_ != null) {
              itemConditionDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(itemConditionDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder clearItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
            onChanged();
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getItemConditionDescriptionBuilder() {
          
          onChanged();
          return getItemConditionDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder() {
          if (itemConditionDescriptionBuilder_ != null) {
            return itemConditionDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue item_condition_description = 10020;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getItemConditionDescriptionFieldBuilder() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getItemConditionDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionDescription_ = null;
          }
          return itemConditionDescriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue inheritDepth_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> inheritDepthBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public boolean hasInheritDepth() {
          return inheritDepthBuilder_ != null || inheritDepth_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            return inheritDepth_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritDepth_;
          } else {
            return inheritDepthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder setInheritDepth(io.dstore.engine.Values.integerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inheritDepth_ = value;
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder setInheritDepth(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = builderForValue.build();
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder mergeInheritDepth(io.dstore.engine.Values.integerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (inheritDepth_ != null) {
              inheritDepth_ =
                io.dstore.engine.Values.integerValue.newBuilder(inheritDepth_).mergeFrom(value).buildPartial();
            } else {
              inheritDepth_ = value;
            }
            onChanged();
          } else {
            inheritDepthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder clearInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
            onChanged();
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getInheritDepthBuilder() {
          
          onChanged();
          return getInheritDepthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getInheritDepthOrBuilder() {
          if (inheritDepthBuilder_ != null) {
            return inheritDepthBuilder_.getMessageOrBuilder();
          } else {
            return inheritDepth_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : inheritDepth_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue inherit_depth = 10021;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getInheritDepthFieldBuilder() {
          if (inheritDepthBuilder_ == null) {
            inheritDepthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getInheritDepth(),
                    getParentForChildren(),
                    isClean());
            inheritDepth_ = null;
          }
          return inheritDepthBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetBonusItemSets_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetBonusItemSets_Ad.Response.Row)
      private static final io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row();
      }

      public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.ProcedureError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.Error getError() {
      return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetBonusItemSets_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetBonusItemSets_Ad.Response)
        io.dstore.engine.procs.OmGetBonusItemSetsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.class, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response build() {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response buildPartial() {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Response result = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetBonusItemSetsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.OmGetBonusItemSetsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response other) {
        if (other == io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetBonusItemSetsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetBonusItemSetsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.ProcedureError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.ProcedureError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.ProcedureError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.ProcedureError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.ProcedureError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.ProcedureError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.ProcedureError.Error, io.dstore.engine.ProcedureError.Error.Builder, io.dstore.engine.ProcedureError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetBonusItemSets_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetBonusItemSetsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetBonusItemSets_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetBonusItemSets_Ad.Response)
    private static final io.dstore.engine.procs.OmGetBonusItemSetsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetBonusItemSetsAd.Response();
    }

    public static io.dstore.engine.procs.OmGetBonusItemSetsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetBonusItemSetsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5dstore/engine/procedures/om_GetBonusIt" +
      "emSets_Ad.proto\022$dstore.engine.om_GetBon" +
      "usItemSets_Ad\032\032dstore/engine/values.prot" +
      "o\032\031dstore/engine/error.proto\032\033dstore/eng" +
      "ine/message.proto\"\234\002\n\nParameters\0227\n\013item" +
      "_set_id\030\001 \001(\0132\".dstore.engine.values.int" +
      "egerValue\022\031\n\020item_set_id_null\030\351\007 \001(\010\022=\n\021" +
      "item_condition_id\030\002 \001(\0132\".dstore.engine." +
      "values.integerValue\022\037\n\026item_condition_id" +
      "_null\030\352\007 \001(\010\022;\n\017get_unused_sets\030\003 \001(\0132\".",
      "dstore.engine.values.booleanValue\022\035\n\024get" +
      "_unused_sets_null\030\353\007 \001(\010\"\240\014\n\010Response\022)\n" +
      "\005error\030\001 \001(\0132\032.dstore.engine.error.Error" +
      "\022/\n\007message\030\003 \003(\0132\036.dstore.engine.messag" +
      "e.Message\022?\n\003row\030\004 \003(\01322.dstore.engine.o" +
      "m_GetBonusItemSets_Ad.Response.Row\032\366\n\n\003R" +
      "ow\022\017\n\006row_id\030\220N \001(\005\022?\n\022item_group_sort_n" +
      "o\030\221N \001(\0132\".dstore.engine.values.integerV" +
      "alue\0225\n\toperator1\030\222N \001(\0132!.dstore.engine" +
      ".values.stringValue\0226\n\ncondition1\030\223N \001(\013",
      "2!.dstore.engine.values.stringValue\0226\n\nc" +
      "ondition2\030\224N \001(\0132!.dstore.engine.values." +
      "stringValue\0225\n\toperator2\030\225N \001(\0132!.dstore" +
      ".engine.values.stringValue\022L\n item_condi" +
      "tion_group_description\030\226N \001(\0132!.dstore.e" +
      "ngine.values.stringValue\022N\n!combine_part" +
      "s_with_a_n_d_operator\030\227N \001(\0132\".dstore.en" +
      "gine.values.booleanValue\022A\n\024recursive_ev" +
      "aluation\030\230N \001(\0132\".dstore.engine.values.i" +
      "ntegerValue\022>\n\021item_part_sort_no\030\231N \001(\0132",
      "\".dstore.engine.values.integerValue\0228\n\013i" +
      "tem_set_id\030\232N \001(\0132\".dstore.engine.values" +
      ".integerValue\022@\n\024domain_tree_node_ids\030\233N" +
      " \001(\0132!.dstore.engine.values.stringValue\022" +
      "C\n\026node_characteristic_id\030\234N \001(\0132\".dstor" +
      "e.engine.values.integerValue\022C\n\026item_con" +
      "dition_part_id\030\235N \001(\0132\".dstore.engine.va" +
      "lues.integerValue\022>\n\021item_condition_id\030\236" +
      "N \001(\0132\".dstore.engine.values.integerValu" +
      "e\022O\n\"combine_groups_with_a_n_d_operator\030",
      "\237N \001(\0132\".dstore.engine.values.booleanVal" +
      "ue\022K\n\037item_condition_part_description\030\240N" +
      " \001(\0132!.dstore.engine.values.stringValue\022" +
      "5\n\tlevel_ids\030\241N \001(\0132!.dstore.engine.valu" +
      "es.stringValue\022D\n\027item_condition_group_i" +
      "d\030\242N \001(\0132\".dstore.engine.values.integerV" +
      "alue\0229\n\014max_quantity\030\243N \001(\0132\".dstore.eng" +
      "ine.values.integerValue\022F\n\032item_conditio" +
      "n_description\030\244N \001(\0132!.dstore.engine.val" +
      "ues.stringValue\022:\n\rinherit_depth\030\245N \001(\0132",
      "\".dstore.engine.values.integerValueB\030\n\026i" +
      "o.dstore.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.ProcedureError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetBonusItemSets_Ad_Parameters_descriptor,
        new java.lang.String[] { "ItemSetId", "ItemSetIdNull", "ItemConditionId", "ItemConditionIdNull", "GetUnusedSets", "GetUnusedSetsNull", });
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetBonusItemSets_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ItemGroupSortNo", "Operator1", "Condition1", "Condition2", "Operator2", "ItemConditionGroupDescription", "CombinePartsWithANDOperator", "RecursiveEvaluation", "ItemPartSortNo", "ItemSetId", "DomainTreeNodeIds", "NodeCharacteristicId", "ItemConditionPartId", "ItemConditionId", "CombineGroupsWithANDOperator", "ItemConditionPartDescription", "LevelIds", "ItemConditionGroupId", "MaxQuantity", "ItemConditionDescription", "InheritDepth", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.ProcedureError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
