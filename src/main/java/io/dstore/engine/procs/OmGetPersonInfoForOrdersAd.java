// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetPersonInfoForOrders_Ad.proto

package io.dstore.engine.procs;

public final class OmGetPersonInfoForOrdersAd {
  private OmGetPersonInfoForOrdersAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    boolean hasOrderId();
    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getOrderId();
    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder();

    /**
     * <code>optional bool order_id_null = 1001;</code>
     */
    boolean getOrderIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    boolean hasDateAndTime();
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    io.dstore.engine.Values.timestampValue getDateAndTime();
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder();

    /**
     * <code>optional bool date_and_time_null = 1003;</code>
     */
    boolean getDateAndTimeNull();

    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    boolean hasGetActualProperties();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    io.dstore.engine.Values.booleanValue getGetActualProperties();
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder();

    /**
     * <code>optional bool get_actual_properties_null = 1004;</code>
     */
    boolean getGetActualPropertiesNull();

    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    boolean hasDateFormat();
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    io.dstore.engine.Values.stringValue getDateFormat();
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder();

    /**
     * <code>optional bool date_format_null = 1005;</code>
     */
    boolean getDateFormatNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      orderIdNull_ = false;
      languageIdNull_ = false;
      dateAndTimeNull_ = false;
      getActualPropertiesNull_ = false;
      dateFormatNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (orderId_ != null) {
                subBuilder = orderId_.toBuilder();
              }
              orderId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(orderId_);
                orderId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (dateAndTime_ != null) {
                subBuilder = dateAndTime_.toBuilder();
              }
              dateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dateAndTime_);
                dateAndTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.booleanValue.Builder subBuilder = null;
              if (getActualProperties_ != null) {
                subBuilder = getActualProperties_.toBuilder();
              }
              getActualProperties_ = input.readMessage(io.dstore.engine.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getActualProperties_);
                getActualProperties_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (dateFormat_ != null) {
                subBuilder = dateFormat_.toBuilder();
              }
              dateFormat_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dateFormat_);
                dateFormat_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              orderIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              dateAndTimeNull_ = input.readBool();
              break;
            }
            case 8032: {

              getActualPropertiesNull_ = input.readBool();
              break;
            }
            case 8040: {

              dateFormatNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.Builder.class);
    }

    public static final int ORDER_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue orderId_;
    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    public boolean hasOrderId() {
      return orderId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getOrderId() {
      return orderId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder() {
      return getOrderId();
    }

    public static final int ORDER_ID_NULL_FIELD_NUMBER = 1001;
    private boolean orderIdNull_;
    /**
     * <code>optional bool order_id_null = 1001;</code>
     */
    public boolean getOrderIdNull() {
      return orderIdNull_;
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int DATE_AND_TIME_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.timestampValue dateAndTime_;
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    public boolean hasDateAndTime() {
      return dateAndTime_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    public io.dstore.engine.Values.timestampValue getDateAndTime() {
      return dateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder() {
      return getDateAndTime();
    }

    public static final int DATE_AND_TIME_NULL_FIELD_NUMBER = 1003;
    private boolean dateAndTimeNull_;
    /**
     * <code>optional bool date_and_time_null = 1003;</code>
     */
    public boolean getDateAndTimeNull() {
      return dateAndTimeNull_;
    }

    public static final int GET_ACTUAL_PROPERTIES_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.booleanValue getActualProperties_;
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    public boolean hasGetActualProperties() {
      return getActualProperties_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    public io.dstore.engine.Values.booleanValue getGetActualProperties() {
      return getActualProperties_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
    }
    /**
     * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
     */
    public io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder() {
      return getGetActualProperties();
    }

    public static final int GET_ACTUAL_PROPERTIES_NULL_FIELD_NUMBER = 1004;
    private boolean getActualPropertiesNull_;
    /**
     * <code>optional bool get_actual_properties_null = 1004;</code>
     */
    public boolean getGetActualPropertiesNull() {
      return getActualPropertiesNull_;
    }

    public static final int DATE_FORMAT_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.stringValue dateFormat_;
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    public boolean hasDateFormat() {
      return dateFormat_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    public io.dstore.engine.Values.stringValue getDateFormat() {
      return dateFormat_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder() {
      return getDateFormat();
    }

    public static final int DATE_FORMAT_NULL_FIELD_NUMBER = 1005;
    private boolean dateFormatNull_;
    /**
     * <code>optional bool date_format_null = 1005;</code>
     */
    public boolean getDateFormatNull() {
      return dateFormatNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (orderId_ != null) {
        output.writeMessage(1, getOrderId());
      }
      if (languageId_ != null) {
        output.writeMessage(2, getLanguageId());
      }
      if (dateAndTime_ != null) {
        output.writeMessage(3, getDateAndTime());
      }
      if (getActualProperties_ != null) {
        output.writeMessage(4, getGetActualProperties());
      }
      if (dateFormat_ != null) {
        output.writeMessage(5, getDateFormat());
      }
      if (orderIdNull_ != false) {
        output.writeBool(1001, orderIdNull_);
      }
      if (languageIdNull_ != false) {
        output.writeBool(1002, languageIdNull_);
      }
      if (dateAndTimeNull_ != false) {
        output.writeBool(1003, dateAndTimeNull_);
      }
      if (getActualPropertiesNull_ != false) {
        output.writeBool(1004, getActualPropertiesNull_);
      }
      if (dateFormatNull_ != false) {
        output.writeBool(1005, dateFormatNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (orderId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOrderId());
      }
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLanguageId());
      }
      if (dateAndTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDateAndTime());
      }
      if (getActualProperties_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGetActualProperties());
      }
      if (dateFormat_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDateFormat());
      }
      if (orderIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, orderIdNull_);
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, languageIdNull_);
      }
      if (dateAndTimeNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, dateAndTimeNull_);
      }
      if (getActualPropertiesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, getActualPropertiesNull_);
      }
      if (dateFormatNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, dateFormatNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters)
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (orderIdBuilder_ == null) {
          orderId_ = null;
        } else {
          orderId_ = null;
          orderIdBuilder_ = null;
        }
        orderIdNull_ = false;

        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = null;
        } else {
          dateAndTime_ = null;
          dateAndTimeBuilder_ = null;
        }
        dateAndTimeNull_ = false;

        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = null;
        } else {
          getActualProperties_ = null;
          getActualPropertiesBuilder_ = null;
        }
        getActualPropertiesNull_ = false;

        if (dateFormatBuilder_ == null) {
          dateFormat_ = null;
        } else {
          dateFormat_ = null;
          dateFormatBuilder_ = null;
        }
        dateFormatNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters build() {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters buildPartial() {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters result = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters(this);
        if (orderIdBuilder_ == null) {
          result.orderId_ = orderId_;
        } else {
          result.orderId_ = orderIdBuilder_.build();
        }
        result.orderIdNull_ = orderIdNull_;
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (dateAndTimeBuilder_ == null) {
          result.dateAndTime_ = dateAndTime_;
        } else {
          result.dateAndTime_ = dateAndTimeBuilder_.build();
        }
        result.dateAndTimeNull_ = dateAndTimeNull_;
        if (getActualPropertiesBuilder_ == null) {
          result.getActualProperties_ = getActualProperties_;
        } else {
          result.getActualProperties_ = getActualPropertiesBuilder_.build();
        }
        result.getActualPropertiesNull_ = getActualPropertiesNull_;
        if (dateFormatBuilder_ == null) {
          result.dateFormat_ = dateFormat_;
        } else {
          result.dateFormat_ = dateFormatBuilder_.build();
        }
        result.dateFormatNull_ = dateFormatNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters other) {
        if (other == io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters.getDefaultInstance()) return this;
        if (other.hasOrderId()) {
          mergeOrderId(other.getOrderId());
        }
        if (other.getOrderIdNull() != false) {
          setOrderIdNull(other.getOrderIdNull());
        }
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasDateAndTime()) {
          mergeDateAndTime(other.getDateAndTime());
        }
        if (other.getDateAndTimeNull() != false) {
          setDateAndTimeNull(other.getDateAndTimeNull());
        }
        if (other.hasGetActualProperties()) {
          mergeGetActualProperties(other.getGetActualProperties());
        }
        if (other.getGetActualPropertiesNull() != false) {
          setGetActualPropertiesNull(other.getGetActualPropertiesNull());
        }
        if (other.hasDateFormat()) {
          mergeDateFormat(other.getDateFormat());
        }
        if (other.getDateFormatNull() != false) {
          setDateFormatNull(other.getDateFormatNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue orderId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> orderIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public boolean hasOrderId() {
        return orderIdBuilder_ != null || orderId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getOrderId() {
        if (orderIdBuilder_ == null) {
          return orderId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
        } else {
          return orderIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public Builder setOrderId(io.dstore.engine.Values.integerValue value) {
        if (orderIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          orderId_ = value;
          onChanged();
        } else {
          orderIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public Builder setOrderId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (orderIdBuilder_ == null) {
          orderId_ = builderForValue.build();
          onChanged();
        } else {
          orderIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public Builder mergeOrderId(io.dstore.engine.Values.integerValue value) {
        if (orderIdBuilder_ == null) {
          if (orderId_ != null) {
            orderId_ =
              io.dstore.engine.Values.integerValue.newBuilder(orderId_).mergeFrom(value).buildPartial();
          } else {
            orderId_ = value;
          }
          onChanged();
        } else {
          orderIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public Builder clearOrderId() {
        if (orderIdBuilder_ == null) {
          orderId_ = null;
          onChanged();
        } else {
          orderId_ = null;
          orderIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getOrderIdBuilder() {
        
        onChanged();
        return getOrderIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getOrderIdOrBuilder() {
        if (orderIdBuilder_ != null) {
          return orderIdBuilder_.getMessageOrBuilder();
        } else {
          return orderId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : orderId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue order_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getOrderIdFieldBuilder() {
        if (orderIdBuilder_ == null) {
          orderIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getOrderId(),
                  getParentForChildren(),
                  isClean());
          orderId_ = null;
        }
        return orderIdBuilder_;
      }

      private boolean orderIdNull_ ;
      /**
       * <code>optional bool order_id_null = 1001;</code>
       */
      public boolean getOrderIdNull() {
        return orderIdNull_;
      }
      /**
       * <code>optional bool order_id_null = 1001;</code>
       */
      public Builder setOrderIdNull(boolean value) {
        
        orderIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool order_id_null = 1001;</code>
       */
      public Builder clearOrderIdNull() {
        
        orderIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue dateAndTime_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> dateAndTimeBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public boolean hasDateAndTime() {
        return dateAndTimeBuilder_ != null || dateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue getDateAndTime() {
        if (dateAndTimeBuilder_ == null) {
          return dateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
        } else {
          return dateAndTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public Builder setDateAndTime(io.dstore.engine.Values.timestampValue value) {
        if (dateAndTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dateAndTime_ = value;
          onChanged();
        } else {
          dateAndTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public Builder setDateAndTime(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = builderForValue.build();
          onChanged();
        } else {
          dateAndTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public Builder mergeDateAndTime(io.dstore.engine.Values.timestampValue value) {
        if (dateAndTimeBuilder_ == null) {
          if (dateAndTime_ != null) {
            dateAndTime_ =
              io.dstore.engine.Values.timestampValue.newBuilder(dateAndTime_).mergeFrom(value).buildPartial();
          } else {
            dateAndTime_ = value;
          }
          onChanged();
        } else {
          dateAndTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public Builder clearDateAndTime() {
        if (dateAndTimeBuilder_ == null) {
          dateAndTime_ = null;
          onChanged();
        } else {
          dateAndTime_ = null;
          dateAndTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getDateAndTimeBuilder() {
        
        onChanged();
        return getDateAndTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getDateAndTimeOrBuilder() {
        if (dateAndTimeBuilder_ != null) {
          return dateAndTimeBuilder_.getMessageOrBuilder();
        } else {
          return dateAndTime_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : dateAndTime_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue date_and_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getDateAndTimeFieldBuilder() {
        if (dateAndTimeBuilder_ == null) {
          dateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getDateAndTime(),
                  getParentForChildren(),
                  isClean());
          dateAndTime_ = null;
        }
        return dateAndTimeBuilder_;
      }

      private boolean dateAndTimeNull_ ;
      /**
       * <code>optional bool date_and_time_null = 1003;</code>
       */
      public boolean getDateAndTimeNull() {
        return dateAndTimeNull_;
      }
      /**
       * <code>optional bool date_and_time_null = 1003;</code>
       */
      public Builder setDateAndTimeNull(boolean value) {
        
        dateAndTimeNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool date_and_time_null = 1003;</code>
       */
      public Builder clearDateAndTimeNull() {
        
        dateAndTimeNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.booleanValue getActualProperties_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> getActualPropertiesBuilder_;
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public boolean hasGetActualProperties() {
        return getActualPropertiesBuilder_ != null || getActualProperties_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public io.dstore.engine.Values.booleanValue getGetActualProperties() {
        if (getActualPropertiesBuilder_ == null) {
          return getActualProperties_ == null ? io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
        } else {
          return getActualPropertiesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public Builder setGetActualProperties(io.dstore.engine.Values.booleanValue value) {
        if (getActualPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getActualProperties_ = value;
          onChanged();
        } else {
          getActualPropertiesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public Builder setGetActualProperties(
          io.dstore.engine.Values.booleanValue.Builder builderForValue) {
        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = builderForValue.build();
          onChanged();
        } else {
          getActualPropertiesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public Builder mergeGetActualProperties(io.dstore.engine.Values.booleanValue value) {
        if (getActualPropertiesBuilder_ == null) {
          if (getActualProperties_ != null) {
            getActualProperties_ =
              io.dstore.engine.Values.booleanValue.newBuilder(getActualProperties_).mergeFrom(value).buildPartial();
          } else {
            getActualProperties_ = value;
          }
          onChanged();
        } else {
          getActualPropertiesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public Builder clearGetActualProperties() {
        if (getActualPropertiesBuilder_ == null) {
          getActualProperties_ = null;
          onChanged();
        } else {
          getActualProperties_ = null;
          getActualPropertiesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public io.dstore.engine.Values.booleanValue.Builder getGetActualPropertiesBuilder() {
        
        onChanged();
        return getGetActualPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      public io.dstore.engine.Values.booleanValueOrBuilder getGetActualPropertiesOrBuilder() {
        if (getActualPropertiesBuilder_ != null) {
          return getActualPropertiesBuilder_.getMessageOrBuilder();
        } else {
          return getActualProperties_ == null ?
              io.dstore.engine.Values.booleanValue.getDefaultInstance() : getActualProperties_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.booleanValue get_actual_properties = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder> 
          getGetActualPropertiesFieldBuilder() {
        if (getActualPropertiesBuilder_ == null) {
          getActualPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.booleanValue, io.dstore.engine.Values.booleanValue.Builder, io.dstore.engine.Values.booleanValueOrBuilder>(
                  getGetActualProperties(),
                  getParentForChildren(),
                  isClean());
          getActualProperties_ = null;
        }
        return getActualPropertiesBuilder_;
      }

      private boolean getActualPropertiesNull_ ;
      /**
       * <code>optional bool get_actual_properties_null = 1004;</code>
       */
      public boolean getGetActualPropertiesNull() {
        return getActualPropertiesNull_;
      }
      /**
       * <code>optional bool get_actual_properties_null = 1004;</code>
       */
      public Builder setGetActualPropertiesNull(boolean value) {
        
        getActualPropertiesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_actual_properties_null = 1004;</code>
       */
      public Builder clearGetActualPropertiesNull() {
        
        getActualPropertiesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue dateFormat_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> dateFormatBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public boolean hasDateFormat() {
        return dateFormatBuilder_ != null || dateFormat_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public io.dstore.engine.Values.stringValue getDateFormat() {
        if (dateFormatBuilder_ == null) {
          return dateFormat_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
        } else {
          return dateFormatBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public Builder setDateFormat(io.dstore.engine.Values.stringValue value) {
        if (dateFormatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dateFormat_ = value;
          onChanged();
        } else {
          dateFormatBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public Builder setDateFormat(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (dateFormatBuilder_ == null) {
          dateFormat_ = builderForValue.build();
          onChanged();
        } else {
          dateFormatBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public Builder mergeDateFormat(io.dstore.engine.Values.stringValue value) {
        if (dateFormatBuilder_ == null) {
          if (dateFormat_ != null) {
            dateFormat_ =
              io.dstore.engine.Values.stringValue.newBuilder(dateFormat_).mergeFrom(value).buildPartial();
          } else {
            dateFormat_ = value;
          }
          onChanged();
        } else {
          dateFormatBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public Builder clearDateFormat() {
        if (dateFormatBuilder_ == null) {
          dateFormat_ = null;
          onChanged();
        } else {
          dateFormat_ = null;
          dateFormatBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getDateFormatBuilder() {
        
        onChanged();
        return getDateFormatFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDateFormatOrBuilder() {
        if (dateFormatBuilder_ != null) {
          return dateFormatBuilder_.getMessageOrBuilder();
        } else {
          return dateFormat_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : dateFormat_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue date_format = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getDateFormatFieldBuilder() {
        if (dateFormatBuilder_ == null) {
          dateFormatBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getDateFormat(),
                  getParentForChildren(),
                  isClean());
          dateFormat_ = null;
        }
        return dateFormatBuilder_;
      }

      private boolean dateFormatNull_ ;
      /**
       * <code>optional bool date_format_null = 1005;</code>
       */
      public boolean getDateFormatNull() {
        return dateFormatNull_;
      }
      /**
       * <code>optional bool date_format_null = 1005;</code>
       */
      public Builder setDateFormatNull(boolean value) {
        
        dateFormatNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool date_format_null = 1005;</code>
       */
      public Builder clearDateFormatNull() {
        
        dateFormatNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Parameters)
    private static final io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters();
    }

    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonInfoForOrders_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      boolean hasValueRestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValueRestrictedByPattern();
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      boolean hasInvoiceOrDeliveryAdress();
      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getInvoiceOrDeliveryAdress();
      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getInvoiceOrDeliveryAdressOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      boolean hasActualValue();
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      io.dstore.engine.Values.stringValue getActualValue();
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      boolean hasPersonCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      io.dstore.engine.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      boolean hasPersonTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (valueRestrictedByPattern_ != null) {
                  subBuilder = valueRestrictedByPattern_.toBuilder();
                }
                valueRestrictedByPattern_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueRestrictedByPattern_);
                  valueRestrictedByPattern_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (invoiceOrDeliveryAdress_ != null) {
                  subBuilder = invoiceOrDeliveryAdress_.toBuilder();
                }
                invoiceOrDeliveryAdress_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(invoiceOrDeliveryAdress_);
                  invoiceOrDeliveryAdress_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (actualValue_ != null) {
                  subBuilder = actualValue_.toBuilder();
                }
                actualValue_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(actualValue_);
                  actualValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personCharacteristicId_ != null) {
                  subBuilder = personCharacteristicId_.toBuilder();
                }
                personCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personCharacteristicId_);
                  personCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personTypeId_ != null) {
                  subBuilder = personTypeId_.toBuilder();
                }
                personTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personTypeId_);
                  personTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int VALUE_RESTRICTED_BY_PATTERN_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue valueRestrictedByPattern_;
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public boolean hasValueRestrictedByPattern() {
        return valueRestrictedByPattern_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValueRestrictedByPattern() {
        return valueRestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
       *
       * <pre>
       * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder() {
        return getValueRestrictedByPattern();
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue description_;
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
       *
       * <pre>
       * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int INVOICE_OR_DELIVERY_ADRESS_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue invoiceOrDeliveryAdress_;
      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      public boolean hasInvoiceOrDeliveryAdress() {
        return invoiceOrDeliveryAdress_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getInvoiceOrDeliveryAdress() {
        return invoiceOrDeliveryAdress_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : invoiceOrDeliveryAdress_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
       *
       * <pre>
       * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getInvoiceOrDeliveryAdressOrBuilder() {
        return getInvoiceOrDeliveryAdress();
      }

      public static final int ACTUAL_VALUE_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue actualValue_;
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      public boolean hasActualValue() {
        return actualValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getActualValue() {
        return actualValue_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
       *
       * <pre>
       * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder() {
        return getActualValue();
      }

      public static final int PERSON_CHARACTERISTIC_ID_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue personCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      public boolean hasPersonCharacteristicId() {
        return personCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonCharacteristicId() {
        return personCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
       *
       * <pre>
       * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder() {
        return getPersonCharacteristicId();
      }

      public static final int VALUE_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue value_;
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue() {
        return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
       *
       * <pre>
       * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int PERSON_TYPE_ID_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue personTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      public boolean hasPersonTypeId() {
        return personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonTypeId() {
        return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
       *
       * <pre>
       * ID des Personen-Typs von "PersonID"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        return getPersonTypeId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (valueRestrictedByPattern_ != null) {
          output.writeMessage(10001, getValueRestrictedByPattern());
        }
        if (description_ != null) {
          output.writeMessage(10002, getDescription());
        }
        if (personId_ != null) {
          output.writeMessage(10003, getPersonId());
        }
        if (invoiceOrDeliveryAdress_ != null) {
          output.writeMessage(10004, getInvoiceOrDeliveryAdress());
        }
        if (actualValue_ != null) {
          output.writeMessage(10005, getActualValue());
        }
        if (personCharacteristicId_ != null) {
          output.writeMessage(10006, getPersonCharacteristicId());
        }
        if (value_ != null) {
          output.writeMessage(10007, getValue());
        }
        if (sortNo_ != null) {
          output.writeMessage(10008, getSortNo());
        }
        if (personTypeId_ != null) {
          output.writeMessage(10009, getPersonTypeId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (valueRestrictedByPattern_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getValueRestrictedByPattern());
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getDescription());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPersonId());
        }
        if (invoiceOrDeliveryAdress_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getInvoiceOrDeliveryAdress());
        }
        if (actualValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getActualValue());
        }
        if (personCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getPersonCharacteristicId());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getValue());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSortNo());
        }
        if (personTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getPersonTypeId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row)
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = null;
          } else {
            valueRestrictedByPattern_ = null;
            valueRestrictedByPatternBuilder_ = null;
          }
          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            invoiceOrDeliveryAdress_ = null;
          } else {
            invoiceOrDeliveryAdress_ = null;
            invoiceOrDeliveryAdressBuilder_ = null;
          }
          if (actualValueBuilder_ == null) {
            actualValue_ = null;
          } else {
            actualValue_ = null;
            actualValueBuilder_ = null;
          }
          if (personCharacteristicIdBuilder_ == null) {
            personCharacteristicId_ = null;
          } else {
            personCharacteristicId_ = null;
            personCharacteristicIdBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (personTypeIdBuilder_ == null) {
            personTypeId_ = null;
          } else {
            personTypeId_ = null;
            personTypeIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row build() {
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row buildPartial() {
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row result = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (valueRestrictedByPatternBuilder_ == null) {
            result.valueRestrictedByPattern_ = valueRestrictedByPattern_;
          } else {
            result.valueRestrictedByPattern_ = valueRestrictedByPatternBuilder_.build();
          }
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            result.invoiceOrDeliveryAdress_ = invoiceOrDeliveryAdress_;
          } else {
            result.invoiceOrDeliveryAdress_ = invoiceOrDeliveryAdressBuilder_.build();
          }
          if (actualValueBuilder_ == null) {
            result.actualValue_ = actualValue_;
          } else {
            result.actualValue_ = actualValueBuilder_.build();
          }
          if (personCharacteristicIdBuilder_ == null) {
            result.personCharacteristicId_ = personCharacteristicId_;
          } else {
            result.personCharacteristicId_ = personCharacteristicIdBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (personTypeIdBuilder_ == null) {
            result.personTypeId_ = personTypeId_;
          } else {
            result.personTypeId_ = personTypeIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row other) {
          if (other == io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasValueRestrictedByPattern()) {
            mergeValueRestrictedByPattern(other.getValueRestrictedByPattern());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasInvoiceOrDeliveryAdress()) {
            mergeInvoiceOrDeliveryAdress(other.getInvoiceOrDeliveryAdress());
          }
          if (other.hasActualValue()) {
            mergeActualValue(other.getActualValue());
          }
          if (other.hasPersonCharacteristicId()) {
            mergePersonCharacteristicId(other.getPersonCharacteristicId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasPersonTypeId()) {
            mergePersonTypeId(other.getPersonTypeId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue valueRestrictedByPattern_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueRestrictedByPatternBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public boolean hasValueRestrictedByPattern() {
          return valueRestrictedByPatternBuilder_ != null || valueRestrictedByPattern_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValueRestrictedByPattern() {
          if (valueRestrictedByPatternBuilder_ == null) {
            return valueRestrictedByPattern_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
          } else {
            return valueRestrictedByPatternBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder setValueRestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (valueRestrictedByPatternBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueRestrictedByPattern_ = value;
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder setValueRestrictedByPattern(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = builderForValue.build();
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder mergeValueRestrictedByPattern(io.dstore.engine.Values.stringValue value) {
          if (valueRestrictedByPatternBuilder_ == null) {
            if (valueRestrictedByPattern_ != null) {
              valueRestrictedByPattern_ =
                io.dstore.engine.Values.stringValue.newBuilder(valueRestrictedByPattern_).mergeFrom(value).buildPartial();
            } else {
              valueRestrictedByPattern_ = value;
            }
            onChanged();
          } else {
            valueRestrictedByPatternBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public Builder clearValueRestrictedByPattern() {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPattern_ = null;
            onChanged();
          } else {
            valueRestrictedByPattern_ = null;
            valueRestrictedByPatternBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueRestrictedByPatternBuilder() {
          
          onChanged();
          return getValueRestrictedByPatternFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueRestrictedByPatternOrBuilder() {
          if (valueRestrictedByPatternBuilder_ != null) {
            return valueRestrictedByPatternBuilder_.getMessageOrBuilder();
          } else {
            return valueRestrictedByPattern_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : valueRestrictedByPattern_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value_restricted_by_pattern = 10001;</code>
         *
         * <pre>
         * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueRestrictedByPatternFieldBuilder() {
          if (valueRestrictedByPatternBuilder_ == null) {
            valueRestrictedByPatternBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValueRestrictedByPattern(),
                    getParentForChildren(),
                    isClean());
            valueRestrictedByPattern_ = null;
          }
          return valueRestrictedByPatternBuilder_;
        }

        private io.dstore.engine.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public Builder setDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public Builder setDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public Builder mergeDescription(io.dstore.engine.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.engine.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Merkmals "PersonCharacteristicID". Falls eine "&#64;LanguageID" ("&lt;&gt; 0" bzw. ungleich der "DefaultLanguageID" aus "Settings") angegeben wurde, wird eine entsprechende Übersetzung (sofern vorhanden, sonst die Standardbezeichnung) ausgegeben.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10003;</code>
         *
         * <pre>
         * ID des Auftraggebers bzw. der Person, an die die Ware geliefert werden soll (je nach "InvoiceOrDeliveryAdress")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue invoiceOrDeliveryAdress_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> invoiceOrDeliveryAdressBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public boolean hasInvoiceOrDeliveryAdress() {
          return invoiceOrDeliveryAdressBuilder_ != null || invoiceOrDeliveryAdress_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getInvoiceOrDeliveryAdress() {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            return invoiceOrDeliveryAdress_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : invoiceOrDeliveryAdress_;
          } else {
            return invoiceOrDeliveryAdressBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public Builder setInvoiceOrDeliveryAdress(io.dstore.engine.Values.stringValue value) {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            invoiceOrDeliveryAdress_ = value;
            onChanged();
          } else {
            invoiceOrDeliveryAdressBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public Builder setInvoiceOrDeliveryAdress(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            invoiceOrDeliveryAdress_ = builderForValue.build();
            onChanged();
          } else {
            invoiceOrDeliveryAdressBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public Builder mergeInvoiceOrDeliveryAdress(io.dstore.engine.Values.stringValue value) {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            if (invoiceOrDeliveryAdress_ != null) {
              invoiceOrDeliveryAdress_ =
                io.dstore.engine.Values.stringValue.newBuilder(invoiceOrDeliveryAdress_).mergeFrom(value).buildPartial();
            } else {
              invoiceOrDeliveryAdress_ = value;
            }
            onChanged();
          } else {
            invoiceOrDeliveryAdressBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public Builder clearInvoiceOrDeliveryAdress() {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            invoiceOrDeliveryAdress_ = null;
            onChanged();
          } else {
            invoiceOrDeliveryAdress_ = null;
            invoiceOrDeliveryAdressBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getInvoiceOrDeliveryAdressBuilder() {
          
          onChanged();
          return getInvoiceOrDeliveryAdressFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getInvoiceOrDeliveryAdressOrBuilder() {
          if (invoiceOrDeliveryAdressBuilder_ != null) {
            return invoiceOrDeliveryAdressBuilder_.getMessageOrBuilder();
          } else {
            return invoiceOrDeliveryAdress_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : invoiceOrDeliveryAdress_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue invoice_or_delivery_adress = 10004;</code>
         *
         * <pre>
         * "ia" : Für "Invoice Address", d.h. bei "PersonID" handelt es sich um den Auftraggeber"da" : Für "Delivery Address", also ist "PersonID" die LieferanschriftACHTUNG : Aufgrund der Abwärtskompatibilität enthält "Description" ein Präfix "ia_" oder "da_" !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getInvoiceOrDeliveryAdressFieldBuilder() {
          if (invoiceOrDeliveryAdressBuilder_ == null) {
            invoiceOrDeliveryAdressBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getInvoiceOrDeliveryAdress(),
                    getParentForChildren(),
                    isClean());
            invoiceOrDeliveryAdress_ = null;
          }
          return invoiceOrDeliveryAdressBuilder_;
        }

        private io.dstore.engine.Values.stringValue actualValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> actualValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public boolean hasActualValue() {
          return actualValueBuilder_ != null || actualValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getActualValue() {
          if (actualValueBuilder_ == null) {
            return actualValue_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
          } else {
            return actualValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public Builder setActualValue(io.dstore.engine.Values.stringValue value) {
          if (actualValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            actualValue_ = value;
            onChanged();
          } else {
            actualValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public Builder setActualValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (actualValueBuilder_ == null) {
            actualValue_ = builderForValue.build();
            onChanged();
          } else {
            actualValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public Builder mergeActualValue(io.dstore.engine.Values.stringValue value) {
          if (actualValueBuilder_ == null) {
            if (actualValue_ != null) {
              actualValue_ =
                io.dstore.engine.Values.stringValue.newBuilder(actualValue_).mergeFrom(value).buildPartial();
            } else {
              actualValue_ = value;
            }
            onChanged();
          } else {
            actualValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public Builder clearActualValue() {
          if (actualValueBuilder_ == null) {
            actualValue_ = null;
            onChanged();
          } else {
            actualValue_ = null;
            actualValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getActualValueBuilder() {
          
          onChanged();
          return getActualValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getActualValueOrBuilder() {
          if (actualValueBuilder_ != null) {
            return actualValueBuilder_.getMessageOrBuilder();
          } else {
            return actualValue_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : actualValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue actual_value = 10005;</code>
         *
         * <pre>
         * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier die AKTUELLE (zum Zeitpunkt des Aufrufs der Prozedur) Eigenschaft der Person "PersonID" zum Merkmal "PersonCharacteristicID".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getActualValueFieldBuilder() {
          if (actualValueBuilder_ == null) {
            actualValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getActualValue(),
                    getParentForChildren(),
                    isClean());
            actualValue_ = null;
          }
          return actualValueBuilder_;
        }

        private io.dstore.engine.Values.integerValue personCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public boolean hasPersonCharacteristicId() {
          return personCharacteristicIdBuilder_ != null || personCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonCharacteristicId() {
          if (personCharacteristicIdBuilder_ == null) {
            return personCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
          } else {
            return personCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public Builder setPersonCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (personCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personCharacteristicId_ = value;
            onChanged();
          } else {
            personCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public Builder setPersonCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personCharacteristicIdBuilder_ == null) {
            personCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            personCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public Builder mergePersonCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (personCharacteristicIdBuilder_ == null) {
            if (personCharacteristicId_ != null) {
              personCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              personCharacteristicId_ = value;
            }
            onChanged();
          } else {
            personCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public Builder clearPersonCharacteristicId() {
          if (personCharacteristicIdBuilder_ == null) {
            personCharacteristicId_ = null;
            onChanged();
          } else {
            personCharacteristicId_ = null;
            personCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonCharacteristicIdBuilder() {
          
          onChanged();
          return getPersonCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonCharacteristicIdOrBuilder() {
          if (personCharacteristicIdBuilder_ != null) {
            return personCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return personCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_characteristic_id = 10006;</code>
         *
         * <pre>
         * ID eines Personen-Merkmals, das in "PersonTypeSettings" zum Schlüssel "PersonOutputCharacteristicIDsForOrderLists&gt;" zur "PersonTypeID" definiert ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonCharacteristicIdFieldBuilder() {
          if (personCharacteristicIdBuilder_ == null) {
            personCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            personCharacteristicId_ = null;
          }
          return personCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public Builder setValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public Builder setValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public Builder mergeValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.engine.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10007;</code>
         *
         * <pre>
         * Eigenschaft von "PersonID" zum Merkmal "PersonCharacteristicID" zum Zeitpunkt "&#64;DateAndTime" bzw. zum aktuellen Zeitpunkt falls "&#64;GetActualProperties = 0" und zu "PersonCharacteristicID" keine Historie gepflegt wird. (siehe Beschreibung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.engine.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder setSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.engine.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.engine.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue sort_no = 10008;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "PersonCharacteristicID" innerhalb aller Merkmale
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.engine.Values.integerValue personTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public boolean hasPersonTypeId() {
          return personTypeIdBuilder_ != null || personTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonTypeId() {
          if (personTypeIdBuilder_ == null) {
            return personTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
          } else {
            return personTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public Builder setPersonTypeId(io.dstore.engine.Values.integerValue value) {
          if (personTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personTypeId_ = value;
            onChanged();
          } else {
            personTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public Builder setPersonTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personTypeIdBuilder_ == null) {
            personTypeId_ = builderForValue.build();
            onChanged();
          } else {
            personTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public Builder mergePersonTypeId(io.dstore.engine.Values.integerValue value) {
          if (personTypeIdBuilder_ == null) {
            if (personTypeId_ != null) {
              personTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
            } else {
              personTypeId_ = value;
            }
            onChanged();
          } else {
            personTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public Builder clearPersonTypeId() {
          if (personTypeIdBuilder_ == null) {
            personTypeId_ = null;
            onChanged();
          } else {
            personTypeId_ = null;
            personTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonTypeIdBuilder() {
          
          onChanged();
          return getPersonTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
          if (personTypeIdBuilder_ != null) {
            return personTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return personTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_type_id = 10009;</code>
         *
         * <pre>
         * ID des Personen-Typs von "PersonID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonTypeIdFieldBuilder() {
          if (personTypeIdBuilder_ == null) {
            personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonTypeId(),
                    getParentForChildren(),
                    isClean());
            personTypeId_ = null;
          }
          return personTypeIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row)
      private static final io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row();
      }

      public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetPersonInfoForOrders_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetPersonInfoForOrders_Ad.Response)
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.class, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response build() {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response buildPartial() {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response result = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response) {
          return mergeFrom((io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response other) {
        if (other == io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.Row.Builder, io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetPersonInfoForOrders_Ad.Response)
    private static final io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response();
    }

    public static io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetPersonInfoForOrdersAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/om_GetPersonI" +
      "nfoForOrders_Ad.proto\022*dstore.engine.om_" +
      "GetPersonInfoForOrders_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"\303\003\n\nParame" +
      "ters\0224\n\010order_id\030\001 \001(\0132\".dstore.engine.v" +
      "alues.integerValue\022\026\n\rorder_id_null\030\351\007 \001" +
      "(\010\0227\n\013language_id\030\002 \001(\0132\".dstore.engine." +
      "values.integerValue\022\031\n\020language_id_null\030" +
      "\352\007 \001(\010\022;\n\rdate_and_time\030\003 \001(\0132$.dstore.e",
      "ngine.values.timestampValue\022\033\n\022date_and_" +
      "time_null\030\353\007 \001(\010\022A\n\025get_actual_propertie" +
      "s\030\004 \001(\0132\".dstore.engine.values.booleanVa" +
      "lue\022#\n\032get_actual_properties_null\030\354\007 \001(\010" +
      "\0226\n\013date_format\030\005 \001(\0132!.dstore.engine.va" +
      "lues.stringValue\022\031\n\020date_format_null\030\355\007 " +
      "\001(\010\"\357\005\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstore" +
      ".engine.error.Error\022/\n\007message\030\003 \003(\0132\036.d" +
      "store.engine.message.Message\022E\n\003row\030\004 \003(" +
      "\01328.dstore.engine.om_GetPersonInfoForOrd",
      "ers_Ad.Response.Row\032\277\004\n\003Row\022\017\n\006row_id\030\220N" +
      " \001(\005\022G\n\033value_restricted_by_pattern\030\221N \001" +
      "(\0132!.dstore.engine.values.stringValue\0227\n" +
      "\013description\030\222N \001(\0132!.dstore.engine.valu" +
      "es.stringValue\0226\n\tperson_id\030\223N \001(\0132\".dst" +
      "ore.engine.values.integerValue\022F\n\032invoic" +
      "e_or_delivery_adress\030\224N \001(\0132!.dstore.eng" +
      "ine.values.stringValue\0228\n\014actual_value\030\225" +
      "N \001(\0132!.dstore.engine.values.stringValue" +
      "\022E\n\030person_characteristic_id\030\226N \001(\0132\".ds",
      "tore.engine.values.integerValue\0221\n\005value" +
      "\030\227N \001(\0132!.dstore.engine.values.stringVal" +
      "ue\0224\n\007sort_no\030\230N \001(\0132\".dstore.engine.val" +
      "ues.integerValue\022;\n\016person_type_id\030\231N \001(" +
      "\0132\".dstore.engine.values.integerValueB\030\n" +
      "\026io.dstore.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Parameters_descriptor,
        new java.lang.String[] { "OrderId", "OrderIdNull", "LanguageId", "LanguageIdNull", "DateAndTime", "DateAndTimeNull", "GetActualProperties", "GetActualPropertiesNull", "DateFormat", "DateFormatNull", });
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetPersonInfoForOrders_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ValueRestrictedByPattern", "Description", "PersonId", "InvoiceOrDeliveryAdress", "ActualValue", "PersonCharacteristicId", "Value", "SortNo", "PersonTypeId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
