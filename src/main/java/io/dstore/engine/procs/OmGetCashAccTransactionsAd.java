// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetCashAccTransactions_Ad.proto

package io.dstore.engine.procs;

public final class OmGetCashAccTransactionsAd {
  private OmGetCashAccTransactionsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCashAccTransactions_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    boolean hasPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getPersonId();
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

    /**
     * <code>optional bool person_id_null = 1001;</code>
     */
    boolean getPersonIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    boolean hasCashAccountTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getCashAccountTypeId();
    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder();

    /**
     * <code>optional bool cash_account_type_id_null = 1002;</code>
     */
    boolean getCashAccountTypeIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    boolean hasOnlyTransactionsSince();
    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    io.dstore.engine.Values.timestampValue getOnlyTransactionsSince();
    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getOnlyTransactionsSinceOrBuilder();

    /**
     * <code>optional bool only_transactions_since_null = 1003;</code>
     */
    boolean getOnlyTransactionsSinceNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCashAccTransactions_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      personIdNull_ = false;
      cashAccountTypeIdNull_ = false;
      onlyTransactionsSinceNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (personId_ != null) {
                subBuilder = personId_.toBuilder();
              }
              personId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personId_);
                personId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (cashAccountTypeId_ != null) {
                subBuilder = cashAccountTypeId_.toBuilder();
              }
              cashAccountTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cashAccountTypeId_);
                cashAccountTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (onlyTransactionsSince_ != null) {
                subBuilder = onlyTransactionsSince_.toBuilder();
              }
              onlyTransactionsSince_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyTransactionsSince_);
                onlyTransactionsSince_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              cashAccountTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              onlyTransactionsSinceNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.Builder.class);
    }

    public static final int PERSON_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue personId_;
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public boolean hasPersonId() {
      return personId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getPersonId() {
      return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
      return getPersonId();
    }

    public static final int PERSON_ID_NULL_FIELD_NUMBER = 1001;
    private boolean personIdNull_;
    /**
     * <code>optional bool person_id_null = 1001;</code>
     */
    public boolean getPersonIdNull() {
      return personIdNull_;
    }

    public static final int CASH_ACCOUNT_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue cashAccountTypeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    public boolean hasCashAccountTypeId() {
      return cashAccountTypeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getCashAccountTypeId() {
      return cashAccountTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder() {
      return getCashAccountTypeId();
    }

    public static final int CASH_ACCOUNT_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean cashAccountTypeIdNull_;
    /**
     * <code>optional bool cash_account_type_id_null = 1002;</code>
     */
    public boolean getCashAccountTypeIdNull() {
      return cashAccountTypeIdNull_;
    }

    public static final int ONLY_TRANSACTIONS_SINCE_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.timestampValue onlyTransactionsSince_;
    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    public boolean hasOnlyTransactionsSince() {
      return onlyTransactionsSince_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    public io.dstore.engine.Values.timestampValue getOnlyTransactionsSince() {
      return onlyTransactionsSince_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : onlyTransactionsSince_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getOnlyTransactionsSinceOrBuilder() {
      return getOnlyTransactionsSince();
    }

    public static final int ONLY_TRANSACTIONS_SINCE_NULL_FIELD_NUMBER = 1003;
    private boolean onlyTransactionsSinceNull_;
    /**
     * <code>optional bool only_transactions_since_null = 1003;</code>
     */
    public boolean getOnlyTransactionsSinceNull() {
      return onlyTransactionsSinceNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personId_ != null) {
        output.writeMessage(1, getPersonId());
      }
      if (cashAccountTypeId_ != null) {
        output.writeMessage(2, getCashAccountTypeId());
      }
      if (onlyTransactionsSince_ != null) {
        output.writeMessage(3, getOnlyTransactionsSince());
      }
      if (personIdNull_ != false) {
        output.writeBool(1001, personIdNull_);
      }
      if (cashAccountTypeIdNull_ != false) {
        output.writeBool(1002, cashAccountTypeIdNull_);
      }
      if (onlyTransactionsSinceNull_ != false) {
        output.writeBool(1003, onlyTransactionsSinceNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (personId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonId());
      }
      if (cashAccountTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCashAccountTypeId());
      }
      if (onlyTransactionsSince_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOnlyTransactionsSince());
      }
      if (personIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personIdNull_);
      }
      if (cashAccountTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, cashAccountTypeIdNull_);
      }
      if (onlyTransactionsSinceNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, onlyTransactionsSinceNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCashAccTransactions_Ad.Parameters)
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personIdBuilder_ == null) {
          personId_ = null;
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }
        personIdNull_ = false;

        if (cashAccountTypeIdBuilder_ == null) {
          cashAccountTypeId_ = null;
        } else {
          cashAccountTypeId_ = null;
          cashAccountTypeIdBuilder_ = null;
        }
        cashAccountTypeIdNull_ = false;

        if (onlyTransactionsSinceBuilder_ == null) {
          onlyTransactionsSince_ = null;
        } else {
          onlyTransactionsSince_ = null;
          onlyTransactionsSinceBuilder_ = null;
        }
        onlyTransactionsSinceNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters build() {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters buildPartial() {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters result = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters(this);
        if (personIdBuilder_ == null) {
          result.personId_ = personId_;
        } else {
          result.personId_ = personIdBuilder_.build();
        }
        result.personIdNull_ = personIdNull_;
        if (cashAccountTypeIdBuilder_ == null) {
          result.cashAccountTypeId_ = cashAccountTypeId_;
        } else {
          result.cashAccountTypeId_ = cashAccountTypeIdBuilder_.build();
        }
        result.cashAccountTypeIdNull_ = cashAccountTypeIdNull_;
        if (onlyTransactionsSinceBuilder_ == null) {
          result.onlyTransactionsSince_ = onlyTransactionsSince_;
        } else {
          result.onlyTransactionsSince_ = onlyTransactionsSinceBuilder_.build();
        }
        result.onlyTransactionsSinceNull_ = onlyTransactionsSinceNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters other) {
        if (other == io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonId()) {
          mergePersonId(other.getPersonId());
        }
        if (other.getPersonIdNull() != false) {
          setPersonIdNull(other.getPersonIdNull());
        }
        if (other.hasCashAccountTypeId()) {
          mergeCashAccountTypeId(other.getCashAccountTypeId());
        }
        if (other.getCashAccountTypeIdNull() != false) {
          setCashAccountTypeIdNull(other.getCashAccountTypeIdNull());
        }
        if (other.hasOnlyTransactionsSince()) {
          mergeOnlyTransactionsSince(other.getOnlyTransactionsSince());
        }
        if (other.getOnlyTransactionsSinceNull() != false) {
          setOnlyTransactionsSinceNull(other.getOnlyTransactionsSinceNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue personId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public boolean hasPersonId() {
        return personIdBuilder_ != null || personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        if (personIdBuilder_ == null) {
          return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        } else {
          return personIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personId_ = value;
          onChanged();
        } else {
          personIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder setPersonId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (personIdBuilder_ == null) {
          personId_ = builderForValue.build();
          onChanged();
        } else {
          personIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
        if (personIdBuilder_ == null) {
          if (personId_ != null) {
            personId_ =
              io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
          } else {
            personId_ = value;
          }
          onChanged();
        } else {
          personIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public Builder clearPersonId() {
        if (personIdBuilder_ == null) {
          personId_ = null;
          onChanged();
        } else {
          personId_ = null;
          personIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
        
        onChanged();
        return getPersonIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        if (personIdBuilder_ != null) {
          return personIdBuilder_.getMessageOrBuilder();
        } else {
          return personId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getPersonIdFieldBuilder() {
        if (personIdBuilder_ == null) {
          personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getPersonId(),
                  getParentForChildren(),
                  isClean());
          personId_ = null;
        }
        return personIdBuilder_;
      }

      private boolean personIdNull_ ;
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public boolean getPersonIdNull() {
        return personIdNull_;
      }
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public Builder setPersonIdNull(boolean value) {
        
        personIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_id_null = 1001;</code>
       */
      public Builder clearPersonIdNull() {
        
        personIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue cashAccountTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> cashAccountTypeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public boolean hasCashAccountTypeId() {
        return cashAccountTypeIdBuilder_ != null || cashAccountTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getCashAccountTypeId() {
        if (cashAccountTypeIdBuilder_ == null) {
          return cashAccountTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
        } else {
          return cashAccountTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public Builder setCashAccountTypeId(io.dstore.engine.Values.integerValue value) {
        if (cashAccountTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cashAccountTypeId_ = value;
          onChanged();
        } else {
          cashAccountTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public Builder setCashAccountTypeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (cashAccountTypeIdBuilder_ == null) {
          cashAccountTypeId_ = builderForValue.build();
          onChanged();
        } else {
          cashAccountTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public Builder mergeCashAccountTypeId(io.dstore.engine.Values.integerValue value) {
        if (cashAccountTypeIdBuilder_ == null) {
          if (cashAccountTypeId_ != null) {
            cashAccountTypeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(cashAccountTypeId_).mergeFrom(value).buildPartial();
          } else {
            cashAccountTypeId_ = value;
          }
          onChanged();
        } else {
          cashAccountTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public Builder clearCashAccountTypeId() {
        if (cashAccountTypeIdBuilder_ == null) {
          cashAccountTypeId_ = null;
          onChanged();
        } else {
          cashAccountTypeId_ = null;
          cashAccountTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCashAccountTypeIdBuilder() {
        
        onChanged();
        return getCashAccountTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder() {
        if (cashAccountTypeIdBuilder_ != null) {
          return cashAccountTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return cashAccountTypeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCashAccountTypeIdFieldBuilder() {
        if (cashAccountTypeIdBuilder_ == null) {
          cashAccountTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCashAccountTypeId(),
                  getParentForChildren(),
                  isClean());
          cashAccountTypeId_ = null;
        }
        return cashAccountTypeIdBuilder_;
      }

      private boolean cashAccountTypeIdNull_ ;
      /**
       * <code>optional bool cash_account_type_id_null = 1002;</code>
       */
      public boolean getCashAccountTypeIdNull() {
        return cashAccountTypeIdNull_;
      }
      /**
       * <code>optional bool cash_account_type_id_null = 1002;</code>
       */
      public Builder setCashAccountTypeIdNull(boolean value) {
        
        cashAccountTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool cash_account_type_id_null = 1002;</code>
       */
      public Builder clearCashAccountTypeIdNull() {
        
        cashAccountTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue onlyTransactionsSince_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> onlyTransactionsSinceBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public boolean hasOnlyTransactionsSince() {
        return onlyTransactionsSinceBuilder_ != null || onlyTransactionsSince_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue getOnlyTransactionsSince() {
        if (onlyTransactionsSinceBuilder_ == null) {
          return onlyTransactionsSince_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : onlyTransactionsSince_;
        } else {
          return onlyTransactionsSinceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public Builder setOnlyTransactionsSince(io.dstore.engine.Values.timestampValue value) {
        if (onlyTransactionsSinceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyTransactionsSince_ = value;
          onChanged();
        } else {
          onlyTransactionsSinceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public Builder setOnlyTransactionsSince(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (onlyTransactionsSinceBuilder_ == null) {
          onlyTransactionsSince_ = builderForValue.build();
          onChanged();
        } else {
          onlyTransactionsSinceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public Builder mergeOnlyTransactionsSince(io.dstore.engine.Values.timestampValue value) {
        if (onlyTransactionsSinceBuilder_ == null) {
          if (onlyTransactionsSince_ != null) {
            onlyTransactionsSince_ =
              io.dstore.engine.Values.timestampValue.newBuilder(onlyTransactionsSince_).mergeFrom(value).buildPartial();
          } else {
            onlyTransactionsSince_ = value;
          }
          onChanged();
        } else {
          onlyTransactionsSinceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public Builder clearOnlyTransactionsSince() {
        if (onlyTransactionsSinceBuilder_ == null) {
          onlyTransactionsSince_ = null;
          onChanged();
        } else {
          onlyTransactionsSince_ = null;
          onlyTransactionsSinceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getOnlyTransactionsSinceBuilder() {
        
        onChanged();
        return getOnlyTransactionsSinceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getOnlyTransactionsSinceOrBuilder() {
        if (onlyTransactionsSinceBuilder_ != null) {
          return onlyTransactionsSinceBuilder_.getMessageOrBuilder();
        } else {
          return onlyTransactionsSince_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : onlyTransactionsSince_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue only_transactions_since = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getOnlyTransactionsSinceFieldBuilder() {
        if (onlyTransactionsSinceBuilder_ == null) {
          onlyTransactionsSinceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getOnlyTransactionsSince(),
                  getParentForChildren(),
                  isClean());
          onlyTransactionsSince_ = null;
        }
        return onlyTransactionsSinceBuilder_;
      }

      private boolean onlyTransactionsSinceNull_ ;
      /**
       * <code>optional bool only_transactions_since_null = 1003;</code>
       */
      public boolean getOnlyTransactionsSinceNull() {
        return onlyTransactionsSinceNull_;
      }
      /**
       * <code>optional bool only_transactions_since_null = 1003;</code>
       */
      public Builder setOnlyTransactionsSinceNull(boolean value) {
        
        onlyTransactionsSinceNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_transactions_since_null = 1003;</code>
       */
      public Builder clearOnlyTransactionsSinceNull() {
        
        onlyTransactionsSinceNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCashAccTransactions_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCashAccTransactions_Ad.Parameters)
    private static final io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters();
    }

    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCashAccTransactions_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);

    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    boolean hasAccountBalance();
    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    io.dstore.engine.Values.decimalValue getAccountBalance();
    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    io.dstore.engine.Values.decimalValueOrBuilder getAccountBalanceOrBuilder();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCashAccTransactions_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
            case 810: {
              io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
              if (accountBalance_ != null) {
                subBuilder = accountBalance_.toBuilder();
              }
              accountBalance_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accountBalance_);
                accountBalance_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCashAccTransactions_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      boolean hasTransactionType();
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getTransactionType();
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getTransactionTypeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      boolean hasPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getPersonId();
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      boolean hasTransactionDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getTransactionDateAndTime();
      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getTransactionDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      boolean hasTransactionValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValue getTransactionValue();
      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      io.dstore.engine.Values.decimalValueOrBuilder getTransactionValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      boolean hasTransactionComment();
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      io.dstore.engine.Values.stringValue getTransactionComment();
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getTransactionCommentOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      boolean hasTransactionTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTransactionTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTransactionTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      boolean hasCashAccountTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCashAccountTypeId();
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      boolean hasSuspendedUntil();
      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getSuspendedUntil();
      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getSuspendedUntilOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      boolean hasTransactionId();
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      io.dstore.engine.Values.integerValue getTransactionId();
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getTransactionIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCashAccTransactions_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (transactionType_ != null) {
                  subBuilder = transactionType_.toBuilder();
                }
                transactionType_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionType_);
                  transactionType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (personId_ != null) {
                  subBuilder = personId_.toBuilder();
                }
                personId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(personId_);
                  personId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (transactionDateAndTime_ != null) {
                  subBuilder = transactionDateAndTime_.toBuilder();
                }
                transactionDateAndTime_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionDateAndTime_);
                  transactionDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.decimalValue.Builder subBuilder = null;
                if (transactionValue_ != null) {
                  subBuilder = transactionValue_.toBuilder();
                }
                transactionValue_ = input.readMessage(io.dstore.engine.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionValue_);
                  transactionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (transactionComment_ != null) {
                  subBuilder = transactionComment_.toBuilder();
                }
                transactionComment_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionComment_);
                  transactionComment_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (transactionTypeId_ != null) {
                  subBuilder = transactionTypeId_.toBuilder();
                }
                transactionTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionTypeId_);
                  transactionTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (cashAccountTypeId_ != null) {
                  subBuilder = cashAccountTypeId_.toBuilder();
                }
                cashAccountTypeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cashAccountTypeId_);
                  cashAccountTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (suspendedUntil_ != null) {
                  subBuilder = suspendedUntil_.toBuilder();
                }
                suspendedUntil_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(suspendedUntil_);
                  suspendedUntil_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (transactionId_ != null) {
                  subBuilder = transactionId_.toBuilder();
                }
                transactionId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(transactionId_);
                  transactionId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TRANSACTION_TYPE_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue transactionType_;
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      public boolean hasTransactionType() {
        return transactionType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getTransactionType() {
        return transactionType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
       *
       * <pre>
       * Bezeichnung des Transaktionstyps "TransactionTypeID"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getTransactionTypeOrBuilder() {
        return getTransactionType();
      }

      public static final int PERSON_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue personId_;
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      public boolean hasPersonId() {
        return personId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getPersonId() {
        return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
       *
       * <pre>
       * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
        return getPersonId();
      }

      public static final int TRANSACTION_DATE_AND_TIME_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.timestampValue transactionDateAndTime_;
      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      public boolean hasTransactionDateAndTime() {
        return transactionDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getTransactionDateAndTime() {
        return transactionDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : transactionDateAndTime_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
       *
       * <pre>
       * Zeitpunkt der Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getTransactionDateAndTimeOrBuilder() {
        return getTransactionDateAndTime();
      }

      public static final int TRANSACTION_VALUE_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.decimalValue transactionValue_;
      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      public boolean hasTransactionValue() {
        return transactionValue_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValue getTransactionValue() {
        return transactionValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : transactionValue_;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
       *
       * <pre>
       * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
       * </pre>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getTransactionValueOrBuilder() {
        return getTransactionValue();
      }

      public static final int TRANSACTION_COMMENT_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue transactionComment_;
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      public boolean hasTransactionComment() {
        return transactionComment_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getTransactionComment() {
        return transactionComment_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionComment_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
       *
       * <pre>
       * Kommentar zur Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getTransactionCommentOrBuilder() {
        return getTransactionComment();
      }

      public static final int TRANSACTION_TYPE_ID_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.integerValue transactionTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      public boolean hasTransactionTypeId() {
        return transactionTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTransactionTypeId() {
        return transactionTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
       *
       * <pre>
       * ID des Transaktionstyps zu der Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTransactionTypeIdOrBuilder() {
        return getTransactionTypeId();
      }

      public static final int CASH_ACCOUNT_TYPE_ID_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue cashAccountTypeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      public boolean hasCashAccountTypeId() {
        return cashAccountTypeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCashAccountTypeId() {
        return cashAccountTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
       *
       * <pre>
       * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder() {
        return getCashAccountTypeId();
      }

      public static final int SUSPENDED_UNTIL_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.timestampValue suspendedUntil_;
      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      public boolean hasSuspendedUntil() {
        return suspendedUntil_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getSuspendedUntil() {
        return suspendedUntil_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : suspendedUntil_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
       *
       * <pre>
       * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getSuspendedUntilOrBuilder() {
        return getSuspendedUntil();
      }

      public static final int TRANSACTION_ID_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.integerValue transactionId_;
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      public boolean hasTransactionId() {
        return transactionId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getTransactionId() {
        return transactionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
       *
       * <pre>
       * ID einer Transaktion
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getTransactionIdOrBuilder() {
        return getTransactionId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (transactionType_ != null) {
          output.writeMessage(10001, getTransactionType());
        }
        if (personId_ != null) {
          output.writeMessage(10002, getPersonId());
        }
        if (transactionDateAndTime_ != null) {
          output.writeMessage(10003, getTransactionDateAndTime());
        }
        if (transactionValue_ != null) {
          output.writeMessage(10004, getTransactionValue());
        }
        if (transactionComment_ != null) {
          output.writeMessage(10005, getTransactionComment());
        }
        if (transactionTypeId_ != null) {
          output.writeMessage(10006, getTransactionTypeId());
        }
        if (cashAccountTypeId_ != null) {
          output.writeMessage(10007, getCashAccountTypeId());
        }
        if (suspendedUntil_ != null) {
          output.writeMessage(10008, getSuspendedUntil());
        }
        if (transactionId_ != null) {
          output.writeMessage(10009, getTransactionId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (transactionType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTransactionType());
        }
        if (personId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPersonId());
        }
        if (transactionDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getTransactionDateAndTime());
        }
        if (transactionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getTransactionValue());
        }
        if (transactionComment_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getTransactionComment());
        }
        if (transactionTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getTransactionTypeId());
        }
        if (cashAccountTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getCashAccountTypeId());
        }
        if (suspendedUntil_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSuspendedUntil());
        }
        if (transactionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getTransactionId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCashAccTransactions_Ad.Response.Row)
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (transactionTypeBuilder_ == null) {
            transactionType_ = null;
          } else {
            transactionType_ = null;
            transactionTypeBuilder_ = null;
          }
          if (personIdBuilder_ == null) {
            personId_ = null;
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }
          if (transactionDateAndTimeBuilder_ == null) {
            transactionDateAndTime_ = null;
          } else {
            transactionDateAndTime_ = null;
            transactionDateAndTimeBuilder_ = null;
          }
          if (transactionValueBuilder_ == null) {
            transactionValue_ = null;
          } else {
            transactionValue_ = null;
            transactionValueBuilder_ = null;
          }
          if (transactionCommentBuilder_ == null) {
            transactionComment_ = null;
          } else {
            transactionComment_ = null;
            transactionCommentBuilder_ = null;
          }
          if (transactionTypeIdBuilder_ == null) {
            transactionTypeId_ = null;
          } else {
            transactionTypeId_ = null;
            transactionTypeIdBuilder_ = null;
          }
          if (cashAccountTypeIdBuilder_ == null) {
            cashAccountTypeId_ = null;
          } else {
            cashAccountTypeId_ = null;
            cashAccountTypeIdBuilder_ = null;
          }
          if (suspendedUntilBuilder_ == null) {
            suspendedUntil_ = null;
          } else {
            suspendedUntil_ = null;
            suspendedUntilBuilder_ = null;
          }
          if (transactionIdBuilder_ == null) {
            transactionId_ = null;
          } else {
            transactionId_ = null;
            transactionIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row build() {
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row buildPartial() {
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row result = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (transactionTypeBuilder_ == null) {
            result.transactionType_ = transactionType_;
          } else {
            result.transactionType_ = transactionTypeBuilder_.build();
          }
          if (personIdBuilder_ == null) {
            result.personId_ = personId_;
          } else {
            result.personId_ = personIdBuilder_.build();
          }
          if (transactionDateAndTimeBuilder_ == null) {
            result.transactionDateAndTime_ = transactionDateAndTime_;
          } else {
            result.transactionDateAndTime_ = transactionDateAndTimeBuilder_.build();
          }
          if (transactionValueBuilder_ == null) {
            result.transactionValue_ = transactionValue_;
          } else {
            result.transactionValue_ = transactionValueBuilder_.build();
          }
          if (transactionCommentBuilder_ == null) {
            result.transactionComment_ = transactionComment_;
          } else {
            result.transactionComment_ = transactionCommentBuilder_.build();
          }
          if (transactionTypeIdBuilder_ == null) {
            result.transactionTypeId_ = transactionTypeId_;
          } else {
            result.transactionTypeId_ = transactionTypeIdBuilder_.build();
          }
          if (cashAccountTypeIdBuilder_ == null) {
            result.cashAccountTypeId_ = cashAccountTypeId_;
          } else {
            result.cashAccountTypeId_ = cashAccountTypeIdBuilder_.build();
          }
          if (suspendedUntilBuilder_ == null) {
            result.suspendedUntil_ = suspendedUntil_;
          } else {
            result.suspendedUntil_ = suspendedUntilBuilder_.build();
          }
          if (transactionIdBuilder_ == null) {
            result.transactionId_ = transactionId_;
          } else {
            result.transactionId_ = transactionIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row other) {
          if (other == io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTransactionType()) {
            mergeTransactionType(other.getTransactionType());
          }
          if (other.hasPersonId()) {
            mergePersonId(other.getPersonId());
          }
          if (other.hasTransactionDateAndTime()) {
            mergeTransactionDateAndTime(other.getTransactionDateAndTime());
          }
          if (other.hasTransactionValue()) {
            mergeTransactionValue(other.getTransactionValue());
          }
          if (other.hasTransactionComment()) {
            mergeTransactionComment(other.getTransactionComment());
          }
          if (other.hasTransactionTypeId()) {
            mergeTransactionTypeId(other.getTransactionTypeId());
          }
          if (other.hasCashAccountTypeId()) {
            mergeCashAccountTypeId(other.getCashAccountTypeId());
          }
          if (other.hasSuspendedUntil()) {
            mergeSuspendedUntil(other.getSuspendedUntil());
          }
          if (other.hasTransactionId()) {
            mergeTransactionId(other.getTransactionId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue transactionType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> transactionTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public boolean hasTransactionType() {
          return transactionTypeBuilder_ != null || transactionType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getTransactionType() {
          if (transactionTypeBuilder_ == null) {
            return transactionType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionType_;
          } else {
            return transactionTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public Builder setTransactionType(io.dstore.engine.Values.stringValue value) {
          if (transactionTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionType_ = value;
            onChanged();
          } else {
            transactionTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public Builder setTransactionType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (transactionTypeBuilder_ == null) {
            transactionType_ = builderForValue.build();
            onChanged();
          } else {
            transactionTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public Builder mergeTransactionType(io.dstore.engine.Values.stringValue value) {
          if (transactionTypeBuilder_ == null) {
            if (transactionType_ != null) {
              transactionType_ =
                io.dstore.engine.Values.stringValue.newBuilder(transactionType_).mergeFrom(value).buildPartial();
            } else {
              transactionType_ = value;
            }
            onChanged();
          } else {
            transactionTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public Builder clearTransactionType() {
          if (transactionTypeBuilder_ == null) {
            transactionType_ = null;
            onChanged();
          } else {
            transactionType_ = null;
            transactionTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getTransactionTypeBuilder() {
          
          onChanged();
          return getTransactionTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getTransactionTypeOrBuilder() {
          if (transactionTypeBuilder_ != null) {
            return transactionTypeBuilder_.getMessageOrBuilder();
          } else {
            return transactionType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_type = 10001;</code>
         *
         * <pre>
         * Bezeichnung des Transaktionstyps "TransactionTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getTransactionTypeFieldBuilder() {
          if (transactionTypeBuilder_ == null) {
            transactionTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getTransactionType(),
                    getParentForChildren(),
                    isClean());
            transactionType_ = null;
          }
          return transactionTypeBuilder_;
        }

        private io.dstore.engine.Values.integerValue personId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> personIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public boolean hasPersonId() {
          return personIdBuilder_ != null || personId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getPersonId() {
          if (personIdBuilder_ == null) {
            return personId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          } else {
            return personIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public Builder setPersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            personId_ = value;
            onChanged();
          } else {
            personIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public Builder setPersonId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (personIdBuilder_ == null) {
            personId_ = builderForValue.build();
            onChanged();
          } else {
            personIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public Builder mergePersonId(io.dstore.engine.Values.integerValue value) {
          if (personIdBuilder_ == null) {
            if (personId_ != null) {
              personId_ =
                io.dstore.engine.Values.integerValue.newBuilder(personId_).mergeFrom(value).buildPartial();
            } else {
              personId_ = value;
            }
            onChanged();
          } else {
            personIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public Builder clearPersonId() {
          if (personIdBuilder_ == null) {
            personId_ = null;
            onChanged();
          } else {
            personId_ = null;
            personIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getPersonIdBuilder() {
          
          onChanged();
          return getPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getPersonIdOrBuilder() {
          if (personIdBuilder_ != null) {
            return personIdBuilder_.getMessageOrBuilder();
          } else {
            return personId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : personId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue person_id = 10002;</code>
         *
         * <pre>
         * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getPersonIdFieldBuilder() {
          if (personIdBuilder_ == null) {
            personIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getPersonId(),
                    getParentForChildren(),
                    isClean());
            personId_ = null;
          }
          return personIdBuilder_;
        }

        private io.dstore.engine.Values.timestampValue transactionDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> transactionDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public boolean hasTransactionDateAndTime() {
          return transactionDateAndTimeBuilder_ != null || transactionDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getTransactionDateAndTime() {
          if (transactionDateAndTimeBuilder_ == null) {
            return transactionDateAndTime_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : transactionDateAndTime_;
          } else {
            return transactionDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public Builder setTransactionDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (transactionDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionDateAndTime_ = value;
            onChanged();
          } else {
            transactionDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public Builder setTransactionDateAndTime(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (transactionDateAndTimeBuilder_ == null) {
            transactionDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            transactionDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public Builder mergeTransactionDateAndTime(io.dstore.engine.Values.timestampValue value) {
          if (transactionDateAndTimeBuilder_ == null) {
            if (transactionDateAndTime_ != null) {
              transactionDateAndTime_ =
                io.dstore.engine.Values.timestampValue.newBuilder(transactionDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              transactionDateAndTime_ = value;
            }
            onChanged();
          } else {
            transactionDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public Builder clearTransactionDateAndTime() {
          if (transactionDateAndTimeBuilder_ == null) {
            transactionDateAndTime_ = null;
            onChanged();
          } else {
            transactionDateAndTime_ = null;
            transactionDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getTransactionDateAndTimeBuilder() {
          
          onChanged();
          return getTransactionDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getTransactionDateAndTimeOrBuilder() {
          if (transactionDateAndTimeBuilder_ != null) {
            return transactionDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return transactionDateAndTime_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : transactionDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue transaction_date_and_time = 10003;</code>
         *
         * <pre>
         * Zeitpunkt der Transaktion
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getTransactionDateAndTimeFieldBuilder() {
          if (transactionDateAndTimeBuilder_ == null) {
            transactionDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getTransactionDateAndTime(),
                    getParentForChildren(),
                    isClean());
            transactionDateAndTime_ = null;
          }
          return transactionDateAndTimeBuilder_;
        }

        private io.dstore.engine.Values.decimalValue transactionValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> transactionValueBuilder_;
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public boolean hasTransactionValue() {
          return transactionValueBuilder_ != null || transactionValue_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue getTransactionValue() {
          if (transactionValueBuilder_ == null) {
            return transactionValue_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : transactionValue_;
          } else {
            return transactionValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public Builder setTransactionValue(io.dstore.engine.Values.decimalValue value) {
          if (transactionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionValue_ = value;
            onChanged();
          } else {
            transactionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public Builder setTransactionValue(
            io.dstore.engine.Values.decimalValue.Builder builderForValue) {
          if (transactionValueBuilder_ == null) {
            transactionValue_ = builderForValue.build();
            onChanged();
          } else {
            transactionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public Builder mergeTransactionValue(io.dstore.engine.Values.decimalValue value) {
          if (transactionValueBuilder_ == null) {
            if (transactionValue_ != null) {
              transactionValue_ =
                io.dstore.engine.Values.decimalValue.newBuilder(transactionValue_).mergeFrom(value).buildPartial();
            } else {
              transactionValue_ = value;
            }
            onChanged();
          } else {
            transactionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public Builder clearTransactionValue() {
          if (transactionValueBuilder_ == null) {
            transactionValue_ = null;
            onChanged();
          } else {
            transactionValue_ = null;
            transactionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValue.Builder getTransactionValueBuilder() {
          
          onChanged();
          return getTransactionValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        public io.dstore.engine.Values.decimalValueOrBuilder getTransactionValueOrBuilder() {
          if (transactionValueBuilder_ != null) {
            return transactionValueBuilder_.getMessageOrBuilder();
          } else {
            return transactionValue_ == null ?
                io.dstore.engine.Values.decimalValue.getDefaultInstance() : transactionValue_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.decimalValue transaction_value = 10004;</code>
         *
         * <pre>
         * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
            getTransactionValueFieldBuilder() {
          if (transactionValueBuilder_ == null) {
            transactionValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                    getTransactionValue(),
                    getParentForChildren(),
                    isClean());
            transactionValue_ = null;
          }
          return transactionValueBuilder_;
        }

        private io.dstore.engine.Values.stringValue transactionComment_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> transactionCommentBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public boolean hasTransactionComment() {
          return transactionCommentBuilder_ != null || transactionComment_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getTransactionComment() {
          if (transactionCommentBuilder_ == null) {
            return transactionComment_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionComment_;
          } else {
            return transactionCommentBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public Builder setTransactionComment(io.dstore.engine.Values.stringValue value) {
          if (transactionCommentBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionComment_ = value;
            onChanged();
          } else {
            transactionCommentBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public Builder setTransactionComment(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (transactionCommentBuilder_ == null) {
            transactionComment_ = builderForValue.build();
            onChanged();
          } else {
            transactionCommentBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public Builder mergeTransactionComment(io.dstore.engine.Values.stringValue value) {
          if (transactionCommentBuilder_ == null) {
            if (transactionComment_ != null) {
              transactionComment_ =
                io.dstore.engine.Values.stringValue.newBuilder(transactionComment_).mergeFrom(value).buildPartial();
            } else {
              transactionComment_ = value;
            }
            onChanged();
          } else {
            transactionCommentBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public Builder clearTransactionComment() {
          if (transactionCommentBuilder_ == null) {
            transactionComment_ = null;
            onChanged();
          } else {
            transactionComment_ = null;
            transactionCommentBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getTransactionCommentBuilder() {
          
          onChanged();
          return getTransactionCommentFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getTransactionCommentOrBuilder() {
          if (transactionCommentBuilder_ != null) {
            return transactionCommentBuilder_.getMessageOrBuilder();
          } else {
            return transactionComment_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : transactionComment_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue transaction_comment = 10005;</code>
         *
         * <pre>
         * Kommentar zur Transaktion
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getTransactionCommentFieldBuilder() {
          if (transactionCommentBuilder_ == null) {
            transactionCommentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getTransactionComment(),
                    getParentForChildren(),
                    isClean());
            transactionComment_ = null;
          }
          return transactionCommentBuilder_;
        }

        private io.dstore.engine.Values.integerValue transactionTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> transactionTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public boolean hasTransactionTypeId() {
          return transactionTypeIdBuilder_ != null || transactionTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTransactionTypeId() {
          if (transactionTypeIdBuilder_ == null) {
            return transactionTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionTypeId_;
          } else {
            return transactionTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public Builder setTransactionTypeId(io.dstore.engine.Values.integerValue value) {
          if (transactionTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionTypeId_ = value;
            onChanged();
          } else {
            transactionTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public Builder setTransactionTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (transactionTypeIdBuilder_ == null) {
            transactionTypeId_ = builderForValue.build();
            onChanged();
          } else {
            transactionTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public Builder mergeTransactionTypeId(io.dstore.engine.Values.integerValue value) {
          if (transactionTypeIdBuilder_ == null) {
            if (transactionTypeId_ != null) {
              transactionTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(transactionTypeId_).mergeFrom(value).buildPartial();
            } else {
              transactionTypeId_ = value;
            }
            onChanged();
          } else {
            transactionTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public Builder clearTransactionTypeId() {
          if (transactionTypeIdBuilder_ == null) {
            transactionTypeId_ = null;
            onChanged();
          } else {
            transactionTypeId_ = null;
            transactionTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTransactionTypeIdBuilder() {
          
          onChanged();
          return getTransactionTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTransactionTypeIdOrBuilder() {
          if (transactionTypeIdBuilder_ != null) {
            return transactionTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return transactionTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_type_id = 10006;</code>
         *
         * <pre>
         * ID des Transaktionstyps zu der Transaktion
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTransactionTypeIdFieldBuilder() {
          if (transactionTypeIdBuilder_ == null) {
            transactionTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTransactionTypeId(),
                    getParentForChildren(),
                    isClean());
            transactionTypeId_ = null;
          }
          return transactionTypeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue cashAccountTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> cashAccountTypeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public boolean hasCashAccountTypeId() {
          return cashAccountTypeIdBuilder_ != null || cashAccountTypeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCashAccountTypeId() {
          if (cashAccountTypeIdBuilder_ == null) {
            return cashAccountTypeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
          } else {
            return cashAccountTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public Builder setCashAccountTypeId(io.dstore.engine.Values.integerValue value) {
          if (cashAccountTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cashAccountTypeId_ = value;
            onChanged();
          } else {
            cashAccountTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public Builder setCashAccountTypeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (cashAccountTypeIdBuilder_ == null) {
            cashAccountTypeId_ = builderForValue.build();
            onChanged();
          } else {
            cashAccountTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public Builder mergeCashAccountTypeId(io.dstore.engine.Values.integerValue value) {
          if (cashAccountTypeIdBuilder_ == null) {
            if (cashAccountTypeId_ != null) {
              cashAccountTypeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(cashAccountTypeId_).mergeFrom(value).buildPartial();
            } else {
              cashAccountTypeId_ = value;
            }
            onChanged();
          } else {
            cashAccountTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public Builder clearCashAccountTypeId() {
          if (cashAccountTypeIdBuilder_ == null) {
            cashAccountTypeId_ = null;
            onChanged();
          } else {
            cashAccountTypeId_ = null;
            cashAccountTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCashAccountTypeIdBuilder() {
          
          onChanged();
          return getCashAccountTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCashAccountTypeIdOrBuilder() {
          if (cashAccountTypeIdBuilder_ != null) {
            return cashAccountTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return cashAccountTypeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : cashAccountTypeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue cash_account_type_id = 10007;</code>
         *
         * <pre>
         * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCashAccountTypeIdFieldBuilder() {
          if (cashAccountTypeIdBuilder_ == null) {
            cashAccountTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCashAccountTypeId(),
                    getParentForChildren(),
                    isClean());
            cashAccountTypeId_ = null;
          }
          return cashAccountTypeIdBuilder_;
        }

        private io.dstore.engine.Values.timestampValue suspendedUntil_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> suspendedUntilBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public boolean hasSuspendedUntil() {
          return suspendedUntilBuilder_ != null || suspendedUntil_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getSuspendedUntil() {
          if (suspendedUntilBuilder_ == null) {
            return suspendedUntil_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : suspendedUntil_;
          } else {
            return suspendedUntilBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public Builder setSuspendedUntil(io.dstore.engine.Values.timestampValue value) {
          if (suspendedUntilBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            suspendedUntil_ = value;
            onChanged();
          } else {
            suspendedUntilBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public Builder setSuspendedUntil(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (suspendedUntilBuilder_ == null) {
            suspendedUntil_ = builderForValue.build();
            onChanged();
          } else {
            suspendedUntilBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public Builder mergeSuspendedUntil(io.dstore.engine.Values.timestampValue value) {
          if (suspendedUntilBuilder_ == null) {
            if (suspendedUntil_ != null) {
              suspendedUntil_ =
                io.dstore.engine.Values.timestampValue.newBuilder(suspendedUntil_).mergeFrom(value).buildPartial();
            } else {
              suspendedUntil_ = value;
            }
            onChanged();
          } else {
            suspendedUntilBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public Builder clearSuspendedUntil() {
          if (suspendedUntilBuilder_ == null) {
            suspendedUntil_ = null;
            onChanged();
          } else {
            suspendedUntil_ = null;
            suspendedUntilBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getSuspendedUntilBuilder() {
          
          onChanged();
          return getSuspendedUntilFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getSuspendedUntilOrBuilder() {
          if (suspendedUntilBuilder_ != null) {
            return suspendedUntilBuilder_.getMessageOrBuilder();
          } else {
            return suspendedUntil_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : suspendedUntil_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue suspended_until = 10008;</code>
         *
         * <pre>
         * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getSuspendedUntilFieldBuilder() {
          if (suspendedUntilBuilder_ == null) {
            suspendedUntilBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getSuspendedUntil(),
                    getParentForChildren(),
                    isClean());
            suspendedUntil_ = null;
          }
          return suspendedUntilBuilder_;
        }

        private io.dstore.engine.Values.integerValue transactionId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> transactionIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public boolean hasTransactionId() {
          return transactionIdBuilder_ != null || transactionId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getTransactionId() {
          if (transactionIdBuilder_ == null) {
            return transactionId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionId_;
          } else {
            return transactionIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public Builder setTransactionId(io.dstore.engine.Values.integerValue value) {
          if (transactionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            transactionId_ = value;
            onChanged();
          } else {
            transactionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public Builder setTransactionId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (transactionIdBuilder_ == null) {
            transactionId_ = builderForValue.build();
            onChanged();
          } else {
            transactionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public Builder mergeTransactionId(io.dstore.engine.Values.integerValue value) {
          if (transactionIdBuilder_ == null) {
            if (transactionId_ != null) {
              transactionId_ =
                io.dstore.engine.Values.integerValue.newBuilder(transactionId_).mergeFrom(value).buildPartial();
            } else {
              transactionId_ = value;
            }
            onChanged();
          } else {
            transactionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public Builder clearTransactionId() {
          if (transactionIdBuilder_ == null) {
            transactionId_ = null;
            onChanged();
          } else {
            transactionId_ = null;
            transactionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getTransactionIdBuilder() {
          
          onChanged();
          return getTransactionIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getTransactionIdOrBuilder() {
          if (transactionIdBuilder_ != null) {
            return transactionIdBuilder_.getMessageOrBuilder();
          } else {
            return transactionId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : transactionId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue transaction_id = 10009;</code>
         *
         * <pre>
         * ID einer Transaktion
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getTransactionIdFieldBuilder() {
          if (transactionIdBuilder_ == null) {
            transactionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getTransactionId(),
                    getParentForChildren(),
                    isClean());
            transactionId_ = null;
          }
          return transactionIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCashAccTransactions_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCashAccTransactions_Ad.Response.Row)
      private static final io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row();
      }

      public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    public static final int ACCOUNT_BALANCE_FIELD_NUMBER = 101;
    private io.dstore.engine.Values.decimalValue accountBalance_;
    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    public boolean hasAccountBalance() {
      return accountBalance_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    public io.dstore.engine.Values.decimalValue getAccountBalance() {
      return accountBalance_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : accountBalance_;
    }
    /**
     * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
     */
    public io.dstore.engine.Values.decimalValueOrBuilder getAccountBalanceOrBuilder() {
      return getAccountBalance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
      if (accountBalance_ != null) {
        output.writeMessage(101, getAccountBalance());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      if (accountBalance_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(101, getAccountBalance());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCashAccTransactions_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCashAccTransactions_Ad.Response)
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.class, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        if (accountBalanceBuilder_ == null) {
          accountBalance_ = null;
        } else {
          accountBalance_ = null;
          accountBalanceBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response build() {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response buildPartial() {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response result = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        if (accountBalanceBuilder_ == null) {
          result.accountBalance_ = accountBalance_;
        } else {
          result.accountBalance_ = accountBalanceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response) {
          return mergeFrom((io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response other) {
        if (other == io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        if (other.hasAccountBalance()) {
          mergeAccountBalance(other.getAccountBalance());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetCashAccTransactions_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.Row.Builder, io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }

      private io.dstore.engine.Values.decimalValue accountBalance_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> accountBalanceBuilder_;
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public boolean hasAccountBalance() {
        return accountBalanceBuilder_ != null || accountBalance_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public io.dstore.engine.Values.decimalValue getAccountBalance() {
        if (accountBalanceBuilder_ == null) {
          return accountBalance_ == null ? io.dstore.engine.Values.decimalValue.getDefaultInstance() : accountBalance_;
        } else {
          return accountBalanceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public Builder setAccountBalance(io.dstore.engine.Values.decimalValue value) {
        if (accountBalanceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accountBalance_ = value;
          onChanged();
        } else {
          accountBalanceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public Builder setAccountBalance(
          io.dstore.engine.Values.decimalValue.Builder builderForValue) {
        if (accountBalanceBuilder_ == null) {
          accountBalance_ = builderForValue.build();
          onChanged();
        } else {
          accountBalanceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public Builder mergeAccountBalance(io.dstore.engine.Values.decimalValue value) {
        if (accountBalanceBuilder_ == null) {
          if (accountBalance_ != null) {
            accountBalance_ =
              io.dstore.engine.Values.decimalValue.newBuilder(accountBalance_).mergeFrom(value).buildPartial();
          } else {
            accountBalance_ = value;
          }
          onChanged();
        } else {
          accountBalanceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public Builder clearAccountBalance() {
        if (accountBalanceBuilder_ == null) {
          accountBalance_ = null;
          onChanged();
        } else {
          accountBalance_ = null;
          accountBalanceBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public io.dstore.engine.Values.decimalValue.Builder getAccountBalanceBuilder() {
        
        onChanged();
        return getAccountBalanceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      public io.dstore.engine.Values.decimalValueOrBuilder getAccountBalanceOrBuilder() {
        if (accountBalanceBuilder_ != null) {
          return accountBalanceBuilder_.getMessageOrBuilder();
        } else {
          return accountBalance_ == null ?
              io.dstore.engine.Values.decimalValue.getDefaultInstance() : accountBalance_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.decimalValue account_balance = 101;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder> 
          getAccountBalanceFieldBuilder() {
        if (accountBalanceBuilder_ == null) {
          accountBalanceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.decimalValue, io.dstore.engine.Values.decimalValue.Builder, io.dstore.engine.Values.decimalValueOrBuilder>(
                  getAccountBalance(),
                  getParentForChildren(),
                  isClean());
          accountBalance_ = null;
        }
        return accountBalanceBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCashAccTransactions_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCashAccTransactions_Ad.Response)
    private static final io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response();
    }

    public static io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.OmGetCashAccTransactionsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/om_GetCashAcc" +
      "Transactions_Ad.proto\022*dstore.engine.om_" +
      "GetCashAccTransactions_Ad\032\032dstore/engine" +
      "/values.proto\032\031dstore/engine/error.proto" +
      "\032\033dstore/engine/message.proto\"\260\002\n\nParame" +
      "ters\0225\n\tperson_id\030\001 \001(\0132\".dstore.engine." +
      "values.integerValue\022\027\n\016person_id_null\030\351\007" +
      " \001(\010\022@\n\024cash_account_type_id\030\002 \001(\0132\".dst" +
      "ore.engine.values.integerValue\022\"\n\031cash_a" +
      "ccount_type_id_null\030\352\007 \001(\010\022E\n\027only_trans",
      "actions_since\030\003 \001(\0132$.dstore.engine.valu" +
      "es.timestampValue\022%\n\034only_transactions_s" +
      "ince_null\030\353\007 \001(\010\"\306\006\n\010Response\022)\n\005error\030\001" +
      " \001(\0132\032.dstore.engine.error.Error\022/\n\007mess" +
      "age\030\003 \003(\0132\036.dstore.engine.message.Messag" +
      "e\022E\n\003row\030\004 \003(\01328.dstore.engine.om_GetCas" +
      "hAccTransactions_Ad.Response.Row\022;\n\017acco" +
      "unt_balance\030e \001(\0132\".dstore.engine.values" +
      ".decimalValue\032\331\004\n\003Row\022\017\n\006row_id\030\220N \001(\005\022<" +
      "\n\020transaction_type\030\221N \001(\0132!.dstore.engin",
      "e.values.stringValue\0226\n\tperson_id\030\222N \001(\013" +
      "2\".dstore.engine.values.integerValue\022H\n\031" +
      "transaction_date_and_time\030\223N \001(\0132$.dstor" +
      "e.engine.values.timestampValue\022>\n\021transa" +
      "ction_value\030\224N \001(\0132\".dstore.engine.value" +
      "s.decimalValue\022?\n\023transaction_comment\030\225N" +
      " \001(\0132!.dstore.engine.values.stringValue\022" +
      "@\n\023transaction_type_id\030\226N \001(\0132\".dstore.e" +
      "ngine.values.integerValue\022A\n\024cash_accoun" +
      "t_type_id\030\227N \001(\0132\".dstore.engine.values.",
      "integerValue\022>\n\017suspended_until\030\230N \001(\0132$" +
      ".dstore.engine.values.timestampValue\022;\n\016" +
      "transaction_id\030\231N \001(\0132\".dstore.engine.va" +
      "lues.integerValueB\030\n\026io.dstore.engine.pr" +
      "ocsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Parameters_descriptor,
        new java.lang.String[] { "PersonId", "PersonIdNull", "CashAccountTypeId", "CashAccountTypeIdNull", "OnlyTransactionsSince", "OnlyTransactionsSinceNull", });
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", "AccountBalance", });
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCashAccTransactions_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TransactionType", "PersonId", "TransactionDateAndTime", "TransactionValue", "TransactionComment", "TransactionTypeId", "CashAccountTypeId", "SuspendedUntil", "TransactionId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
