// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetLockDependencies_Ad.proto

package io.dstore.engine.procs;

public final class MiGetLockDependenciesAd {
  private MiGetLockDependenciesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLockDependencies_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLockDependencies_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Parameters() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLockDependencies_Ad.Parameters)
        io.dstore.engine.procs.MiGetLockDependenciesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters build() {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters buildPartial() {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters result = new io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters other) {
        if (other == io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLockDependencies_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLockDependencies_Ad.Parameters)
    private static final io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters();
    }

    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Parameters> PARSER =
        new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.MiGetLockDependenciesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLockDependencies_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLockDependencies_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.MiGetLockDependenciesAd.Response.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLockDependencies_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      boolean hasTableName();
      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      io.dstore.engine.Values.stringValue getTableName();
      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getTableNameOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      boolean hasBlockingProcessId();
      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      io.dstore.engine.Values.integerValue getBlockingProcessId();
      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getBlockingProcessIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      boolean hasCommand();
      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCommand();
      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCommandOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      boolean hasServerProcessId();
      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      io.dstore.engine.Values.integerValue getServerProcessId();
      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getServerProcessIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      boolean hasDatabaseName();
      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      io.dstore.engine.Values.stringValue getDatabaseName();
      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getDatabaseNameOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      boolean hasLockType();
      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLockType();
      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLockTypeOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLockDependencies_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (tableName_ != null) {
                  subBuilder = tableName_.toBuilder();
                }
                tableName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(tableName_);
                  tableName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (blockingProcessId_ != null) {
                  subBuilder = blockingProcessId_.toBuilder();
                }
                blockingProcessId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(blockingProcessId_);
                  blockingProcessId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (command_ != null) {
                  subBuilder = command_.toBuilder();
                }
                command_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(command_);
                  command_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (serverProcessId_ != null) {
                  subBuilder = serverProcessId_.toBuilder();
                }
                serverProcessId_ = input.readMessage(io.dstore.engine.Values.integerValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(serverProcessId_);
                  serverProcessId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (databaseName_ != null) {
                  subBuilder = databaseName_.toBuilder();
                }
                databaseName_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(databaseName_);
                  databaseName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (lockType_ != null) {
                  subBuilder = lockType_.toBuilder();
                }
                lockType_ = input.readMessage(io.dstore.engine.Values.stringValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lockType_);
                  lockType_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TABLE_NAME_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.stringValue tableName_;
      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      public boolean hasTableName() {
        return tableName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getTableName() {
        return tableName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : tableName_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
       *
       * <pre>
       * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getTableNameOrBuilder() {
        return getTableName();
      }

      public static final int BLOCKING_PROCESS_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue blockingProcessId_;
      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      public boolean hasBlockingProcessId() {
        return blockingProcessId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getBlockingProcessId() {
        return blockingProcessId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : blockingProcessId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
       *
       * <pre>
       * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getBlockingProcessIdOrBuilder() {
        return getBlockingProcessId();
      }

      public static final int COMMAND_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue command_;
      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      public boolean hasCommand() {
        return command_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCommand() {
        return command_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : command_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
       *
       * <pre>
       * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCommandOrBuilder() {
        return getCommand();
      }

      public static final int SERVER_PROCESS_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue serverProcessId_;
      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      public boolean hasServerProcessId() {
        return serverProcessId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getServerProcessId() {
        return serverProcessId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : serverProcessId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
       *
       * <pre>
       * Eine Server-Prozeß-ID
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getServerProcessIdOrBuilder() {
        return getServerProcessId();
      }

      public static final int DATABASE_NAME_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue databaseName_;
      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      public boolean hasDatabaseName() {
        return databaseName_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getDatabaseName() {
        return databaseName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : databaseName_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
       *
       * <pre>
       * Name der Datenbank, in der die Tabelle "TableName" liegt
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getDatabaseNameOrBuilder() {
        return getDatabaseName();
      }

      public static final int LOCK_TYPE_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue lockType_;
      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      public boolean hasLockType() {
        return lockType_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLockType() {
        return lockType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : lockType_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
       *
       * <pre>
       * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLockTypeOrBuilder() {
        return getLockType();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (tableName_ != null) {
          output.writeMessage(10001, getTableName());
        }
        if (blockingProcessId_ != null) {
          output.writeMessage(10002, getBlockingProcessId());
        }
        if (command_ != null) {
          output.writeMessage(10003, getCommand());
        }
        if (serverProcessId_ != null) {
          output.writeMessage(10004, getServerProcessId());
        }
        if (databaseName_ != null) {
          output.writeMessage(10005, getDatabaseName());
        }
        if (lockType_ != null) {
          output.writeMessage(10006, getLockType());
        }
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (tableName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTableName());
        }
        if (blockingProcessId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getBlockingProcessId());
        }
        if (command_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getCommand());
        }
        if (serverProcessId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getServerProcessId());
        }
        if (databaseName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getDatabaseName());
        }
        if (lockType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getLockType());
        }
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLockDependencies_Ad.Response.Row)
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (tableNameBuilder_ == null) {
            tableName_ = null;
          } else {
            tableName_ = null;
            tableNameBuilder_ = null;
          }
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = null;
          } else {
            blockingProcessId_ = null;
            blockingProcessIdBuilder_ = null;
          }
          if (commandBuilder_ == null) {
            command_ = null;
          } else {
            command_ = null;
            commandBuilder_ = null;
          }
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = null;
          } else {
            serverProcessId_ = null;
            serverProcessIdBuilder_ = null;
          }
          if (databaseNameBuilder_ == null) {
            databaseName_ = null;
          } else {
            databaseName_ = null;
            databaseNameBuilder_ = null;
          }
          if (lockTypeBuilder_ == null) {
            lockType_ = null;
          } else {
            lockType_ = null;
            lockTypeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row build() {
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row buildPartial() {
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row result = new io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (tableNameBuilder_ == null) {
            result.tableName_ = tableName_;
          } else {
            result.tableName_ = tableNameBuilder_.build();
          }
          if (blockingProcessIdBuilder_ == null) {
            result.blockingProcessId_ = blockingProcessId_;
          } else {
            result.blockingProcessId_ = blockingProcessIdBuilder_.build();
          }
          if (commandBuilder_ == null) {
            result.command_ = command_;
          } else {
            result.command_ = commandBuilder_.build();
          }
          if (serverProcessIdBuilder_ == null) {
            result.serverProcessId_ = serverProcessId_;
          } else {
            result.serverProcessId_ = serverProcessIdBuilder_.build();
          }
          if (databaseNameBuilder_ == null) {
            result.databaseName_ = databaseName_;
          } else {
            result.databaseName_ = databaseNameBuilder_.build();
          }
          if (lockTypeBuilder_ == null) {
            result.lockType_ = lockType_;
          } else {
            result.lockType_ = lockTypeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row other) {
          if (other == io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTableName()) {
            mergeTableName(other.getTableName());
          }
          if (other.hasBlockingProcessId()) {
            mergeBlockingProcessId(other.getBlockingProcessId());
          }
          if (other.hasCommand()) {
            mergeCommand(other.getCommand());
          }
          if (other.hasServerProcessId()) {
            mergeServerProcessId(other.getServerProcessId());
          }
          if (other.hasDatabaseName()) {
            mergeDatabaseName(other.getDatabaseName());
          }
          if (other.hasLockType()) {
            mergeLockType(other.getLockType());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.stringValue tableName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> tableNameBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public boolean hasTableName() {
          return tableNameBuilder_ != null || tableName_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getTableName() {
          if (tableNameBuilder_ == null) {
            return tableName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : tableName_;
          } else {
            return tableNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public Builder setTableName(io.dstore.engine.Values.stringValue value) {
          if (tableNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            tableName_ = value;
            onChanged();
          } else {
            tableNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public Builder setTableName(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (tableNameBuilder_ == null) {
            tableName_ = builderForValue.build();
            onChanged();
          } else {
            tableNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public Builder mergeTableName(io.dstore.engine.Values.stringValue value) {
          if (tableNameBuilder_ == null) {
            if (tableName_ != null) {
              tableName_ =
                io.dstore.engine.Values.stringValue.newBuilder(tableName_).mergeFrom(value).buildPartial();
            } else {
              tableName_ = value;
            }
            onChanged();
          } else {
            tableNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public Builder clearTableName() {
          if (tableNameBuilder_ == null) {
            tableName_ = null;
            onChanged();
          } else {
            tableName_ = null;
            tableNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getTableNameBuilder() {
          
          onChanged();
          return getTableNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getTableNameOrBuilder() {
          if (tableNameBuilder_ != null) {
            return tableNameBuilder_.getMessageOrBuilder();
          } else {
            return tableName_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : tableName_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue table_name = 10001;</code>
         *
         * <pre>
         * Name der Tabelle, die gerade ge"locked" ist/wird, und somit Ursache für die "Blockade" sein kann
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getTableNameFieldBuilder() {
          if (tableNameBuilder_ == null) {
            tableNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getTableName(),
                    getParentForChildren(),
                    isClean());
            tableName_ = null;
          }
          return tableNameBuilder_;
        }

        private io.dstore.engine.Values.integerValue blockingProcessId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> blockingProcessIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public boolean hasBlockingProcessId() {
          return blockingProcessIdBuilder_ != null || blockingProcessId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getBlockingProcessId() {
          if (blockingProcessIdBuilder_ == null) {
            return blockingProcessId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : blockingProcessId_;
          } else {
            return blockingProcessIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public Builder setBlockingProcessId(io.dstore.engine.Values.integerValue value) {
          if (blockingProcessIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            blockingProcessId_ = value;
            onChanged();
          } else {
            blockingProcessIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public Builder setBlockingProcessId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = builderForValue.build();
            onChanged();
          } else {
            blockingProcessIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public Builder mergeBlockingProcessId(io.dstore.engine.Values.integerValue value) {
          if (blockingProcessIdBuilder_ == null) {
            if (blockingProcessId_ != null) {
              blockingProcessId_ =
                io.dstore.engine.Values.integerValue.newBuilder(blockingProcessId_).mergeFrom(value).buildPartial();
            } else {
              blockingProcessId_ = value;
            }
            onChanged();
          } else {
            blockingProcessIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public Builder clearBlockingProcessId() {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessId_ = null;
            onChanged();
          } else {
            blockingProcessId_ = null;
            blockingProcessIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getBlockingProcessIdBuilder() {
          
          onChanged();
          return getBlockingProcessIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getBlockingProcessIdOrBuilder() {
          if (blockingProcessIdBuilder_ != null) {
            return blockingProcessIdBuilder_.getMessageOrBuilder();
          } else {
            return blockingProcessId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : blockingProcessId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue blocking_process_id = 10002;</code>
         *
         * <pre>
         * ID eines anderen Prozesses, durch den der Prozeß "ServerProcessID" ge"blocked" wird
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getBlockingProcessIdFieldBuilder() {
          if (blockingProcessIdBuilder_ == null) {
            blockingProcessIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getBlockingProcessId(),
                    getParentForChildren(),
                    isClean());
            blockingProcessId_ = null;
          }
          return blockingProcessIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue command_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> commandBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public boolean hasCommand() {
          return commandBuilder_ != null || command_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCommand() {
          if (commandBuilder_ == null) {
            return command_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : command_;
          } else {
            return commandBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public Builder setCommand(io.dstore.engine.Values.stringValue value) {
          if (commandBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            command_ = value;
            onChanged();
          } else {
            commandBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public Builder setCommand(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (commandBuilder_ == null) {
            command_ = builderForValue.build();
            onChanged();
          } else {
            commandBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public Builder mergeCommand(io.dstore.engine.Values.stringValue value) {
          if (commandBuilder_ == null) {
            if (command_ != null) {
              command_ =
                io.dstore.engine.Values.stringValue.newBuilder(command_).mergeFrom(value).buildPartial();
            } else {
              command_ = value;
            }
            onChanged();
          } else {
            commandBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public Builder clearCommand() {
          if (commandBuilder_ == null) {
            command_ = null;
            onChanged();
          } else {
            command_ = null;
            commandBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCommandBuilder() {
          
          onChanged();
          return getCommandFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCommandOrBuilder() {
          if (commandBuilder_ != null) {
            return commandBuilder_.getMessageOrBuilder();
          } else {
            return command_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : command_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue command = 10003;</code>
         *
         * <pre>
         * Was für eine Art von Kommando wird vom Prozeß "ServerProcessID" gerade ausgeführt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCommandFieldBuilder() {
          if (commandBuilder_ == null) {
            commandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCommand(),
                    getParentForChildren(),
                    isClean());
            command_ = null;
          }
          return commandBuilder_;
        }

        private io.dstore.engine.Values.integerValue serverProcessId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> serverProcessIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public boolean hasServerProcessId() {
          return serverProcessIdBuilder_ != null || serverProcessId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getServerProcessId() {
          if (serverProcessIdBuilder_ == null) {
            return serverProcessId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : serverProcessId_;
          } else {
            return serverProcessIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public Builder setServerProcessId(io.dstore.engine.Values.integerValue value) {
          if (serverProcessIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            serverProcessId_ = value;
            onChanged();
          } else {
            serverProcessIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public Builder setServerProcessId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = builderForValue.build();
            onChanged();
          } else {
            serverProcessIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public Builder mergeServerProcessId(io.dstore.engine.Values.integerValue value) {
          if (serverProcessIdBuilder_ == null) {
            if (serverProcessId_ != null) {
              serverProcessId_ =
                io.dstore.engine.Values.integerValue.newBuilder(serverProcessId_).mergeFrom(value).buildPartial();
            } else {
              serverProcessId_ = value;
            }
            onChanged();
          } else {
            serverProcessIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public Builder clearServerProcessId() {
          if (serverProcessIdBuilder_ == null) {
            serverProcessId_ = null;
            onChanged();
          } else {
            serverProcessId_ = null;
            serverProcessIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getServerProcessIdBuilder() {
          
          onChanged();
          return getServerProcessIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getServerProcessIdOrBuilder() {
          if (serverProcessIdBuilder_ != null) {
            return serverProcessIdBuilder_.getMessageOrBuilder();
          } else {
            return serverProcessId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : serverProcessId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue server_process_id = 10004;</code>
         *
         * <pre>
         * Eine Server-Prozeß-ID
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getServerProcessIdFieldBuilder() {
          if (serverProcessIdBuilder_ == null) {
            serverProcessIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getServerProcessId(),
                    getParentForChildren(),
                    isClean());
            serverProcessId_ = null;
          }
          return serverProcessIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue databaseName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> databaseNameBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public boolean hasDatabaseName() {
          return databaseNameBuilder_ != null || databaseName_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getDatabaseName() {
          if (databaseNameBuilder_ == null) {
            return databaseName_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : databaseName_;
          } else {
            return databaseNameBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public Builder setDatabaseName(io.dstore.engine.Values.stringValue value) {
          if (databaseNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            databaseName_ = value;
            onChanged();
          } else {
            databaseNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public Builder setDatabaseName(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (databaseNameBuilder_ == null) {
            databaseName_ = builderForValue.build();
            onChanged();
          } else {
            databaseNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public Builder mergeDatabaseName(io.dstore.engine.Values.stringValue value) {
          if (databaseNameBuilder_ == null) {
            if (databaseName_ != null) {
              databaseName_ =
                io.dstore.engine.Values.stringValue.newBuilder(databaseName_).mergeFrom(value).buildPartial();
            } else {
              databaseName_ = value;
            }
            onChanged();
          } else {
            databaseNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public Builder clearDatabaseName() {
          if (databaseNameBuilder_ == null) {
            databaseName_ = null;
            onChanged();
          } else {
            databaseName_ = null;
            databaseNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getDatabaseNameBuilder() {
          
          onChanged();
          return getDatabaseNameFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getDatabaseNameOrBuilder() {
          if (databaseNameBuilder_ != null) {
            return databaseNameBuilder_.getMessageOrBuilder();
          } else {
            return databaseName_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : databaseName_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue database_name = 10005;</code>
         *
         * <pre>
         * Name der Datenbank, in der die Tabelle "TableName" liegt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getDatabaseNameFieldBuilder() {
          if (databaseNameBuilder_ == null) {
            databaseNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getDatabaseName(),
                    getParentForChildren(),
                    isClean());
            databaseName_ = null;
          }
          return databaseNameBuilder_;
        }

        private io.dstore.engine.Values.stringValue lockType_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> lockTypeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public boolean hasLockType() {
          return lockTypeBuilder_ != null || lockType_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLockType() {
          if (lockTypeBuilder_ == null) {
            return lockType_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : lockType_;
          } else {
            return lockTypeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public Builder setLockType(io.dstore.engine.Values.stringValue value) {
          if (lockTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lockType_ = value;
            onChanged();
          } else {
            lockTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public Builder setLockType(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (lockTypeBuilder_ == null) {
            lockType_ = builderForValue.build();
            onChanged();
          } else {
            lockTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public Builder mergeLockType(io.dstore.engine.Values.stringValue value) {
          if (lockTypeBuilder_ == null) {
            if (lockType_ != null) {
              lockType_ =
                io.dstore.engine.Values.stringValue.newBuilder(lockType_).mergeFrom(value).buildPartial();
            } else {
              lockType_ = value;
            }
            onChanged();
          } else {
            lockTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public Builder clearLockType() {
          if (lockTypeBuilder_ == null) {
            lockType_ = null;
            onChanged();
          } else {
            lockType_ = null;
            lockTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLockTypeBuilder() {
          
          onChanged();
          return getLockTypeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLockTypeOrBuilder() {
          if (lockTypeBuilder_ != null) {
            return lockTypeBuilder_.getMessageOrBuilder();
          } else {
            return lockType_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : lockType_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue lock_type = 10006;</code>
         *
         * <pre>
         * Art des Locks ("Sh_table", "Ex_page", etc.) auf "TableName"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLockTypeFieldBuilder() {
          if (lockTypeBuilder_ == null) {
            lockTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLockType(),
                    getParentForChildren(),
                    isClean());
            lockType_ = null;
          }
          return lockTypeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLockDependencies_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLockDependencies_Ad.Response.Row)
      private static final io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row();
      }

      public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      public static final com.google.protobuf.Parser<Row> PARSER =
          new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.MiGetLockDependenciesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLockDependencies_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLockDependencies_Ad.Response)
        io.dstore.engine.procs.MiGetLockDependenciesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLockDependenciesAd.Response.class, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.MiGetLockDependenciesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor;
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.MiGetLockDependenciesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response build() {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response buildPartial() {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Response result = new io.dstore.engine.procs.MiGetLockDependenciesAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.MiGetLockDependenciesAd.Response) {
          return mergeFrom((io.dstore.engine.procs.MiGetLockDependenciesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.MiGetLockDependenciesAd.Response other) {
        if (other == io.dstore.engine.procs.MiGetLockDependenciesAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.MiGetLockDependenciesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.MiGetLockDependenciesAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLockDependencies_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.Row.Builder, io.dstore.engine.procs.MiGetLockDependenciesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLockDependencies_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLockDependencies_Ad.Response)
    private static final io.dstore.engine.procs.MiGetLockDependenciesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLockDependenciesAd.Response();
    }

    public static io.dstore.engine.procs.MiGetLockDependenciesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static final com.google.protobuf.Parser<Response> PARSER =
        new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.MiGetLockDependenciesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8dstore/engine/procedures/mi_GetLockDep" +
      "endencies_Ad.proto\022\'dstore.engine.mi_Get" +
      "LockDependencies_Ad\032\032dstore/engine/value" +
      "s.proto\032\031dstore/engine/error.proto\032\033dsto" +
      "re/engine/message.proto\"\014\n\nParameters\"\244\004" +
      "\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstore.engin" +
      "e.error.Error\022/\n\007message\030\003 \003(\0132\036.dstore." +
      "engine.message.Message\022B\n\003row\030\004 \003(\01325.ds" +
      "tore.engine.mi_GetLockDependencies_Ad.Re" +
      "sponse.Row\032\367\002\n\003Row\022\017\n\006row_id\030\220N \001(\005\0226\n\nt",
      "able_name\030\221N \001(\0132!.dstore.engine.values." +
      "stringValue\022@\n\023blocking_process_id\030\222N \001(" +
      "\0132\".dstore.engine.values.integerValue\0223\n" +
      "\007command\030\223N \001(\0132!.dstore.engine.values.s" +
      "tringValue\022>\n\021server_process_id\030\224N \001(\0132\"" +
      ".dstore.engine.values.integerValue\0229\n\rda" +
      "tabase_name\030\225N \001(\0132!.dstore.engine.value" +
      "s.stringValue\0225\n\tlock_type\030\226N \001(\0132!.dsto" +
      "re.engine.values.stringValueB\030\n\026io.dstor" +
      "e.engine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLockDependencies_Ad_Parameters_descriptor,
        new java.lang.String[] { });
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLockDependencies_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TableName", "BlockingProcessId", "Command", "ServerProcessId", "DatabaseName", "LockType", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
