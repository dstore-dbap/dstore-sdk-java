// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetLocales.proto

package io.dstore.engine.procs;

public final class MiGetLocales {
  private MiGetLocales() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLocales.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    boolean hasCountryId();
    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getCountryId();
    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder();

    /**
     * <code>optional bool country_id_null = 1001;</code>
     */
    boolean getCountryIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    boolean hasGetNamesInLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    io.dstore.engine.Values.integerValue getGetNamesInLanguageId();
    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getGetNamesInLanguageIdOrBuilder();

    /**
     * <code>optional bool get_names_in_language_id_null = 1003;</code>
     */
    boolean getGetNamesInLanguageIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetLocales.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLocales.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      countryIdNull_ = false;
      languageIdNull_ = false;
      getNamesInLanguageIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (countryId_ != null) {
                subBuilder = countryId_.toBuilder();
              }
              countryId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(countryId_);
                countryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (getNamesInLanguageId_ != null) {
                subBuilder = getNamesInLanguageId_.toBuilder();
              }
              getNamesInLanguageId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getNamesInLanguageId_);
                getNamesInLanguageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              countryIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              getNamesInLanguageIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.MiGetLocales.Parameters.class, io.dstore.engine.procs.MiGetLocales.Parameters.Builder.class);
    }

    public static final int COUNTRY_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue countryId_;
    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    public boolean hasCountryId() {
      return countryId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getCountryId() {
      return countryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder() {
      return getCountryId();
    }

    public static final int COUNTRY_ID_NULL_FIELD_NUMBER = 1001;
    private boolean countryIdNull_;
    /**
     * <code>optional bool country_id_null = 1001;</code>
     */
    public boolean getCountryIdNull() {
      return countryIdNull_;
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int GET_NAMES_IN_LANGUAGE_ID_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.integerValue getNamesInLanguageId_;
    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    public boolean hasGetNamesInLanguageId() {
      return getNamesInLanguageId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValue getGetNamesInLanguageId() {
      return getNamesInLanguageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : getNamesInLanguageId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getGetNamesInLanguageIdOrBuilder() {
      return getGetNamesInLanguageId();
    }

    public static final int GET_NAMES_IN_LANGUAGE_ID_NULL_FIELD_NUMBER = 1003;
    private boolean getNamesInLanguageIdNull_;
    /**
     * <code>optional bool get_names_in_language_id_null = 1003;</code>
     */
    public boolean getGetNamesInLanguageIdNull() {
      return getNamesInLanguageIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (countryId_ != null) {
        output.writeMessage(1, getCountryId());
      }
      if (languageId_ != null) {
        output.writeMessage(2, getLanguageId());
      }
      if (getNamesInLanguageId_ != null) {
        output.writeMessage(3, getGetNamesInLanguageId());
      }
      if (countryIdNull_ != false) {
        output.writeBool(1001, countryIdNull_);
      }
      if (languageIdNull_ != false) {
        output.writeBool(1002, languageIdNull_);
      }
      if (getNamesInLanguageIdNull_ != false) {
        output.writeBool(1003, getNamesInLanguageIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (countryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCountryId());
      }
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLanguageId());
      }
      if (getNamesInLanguageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGetNamesInLanguageId());
      }
      if (countryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, countryIdNull_);
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, languageIdNull_);
      }
      if (getNamesInLanguageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, getNamesInLanguageIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.MiGetLocales.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLocales.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLocales.Parameters)
        io.dstore.engine.procs.MiGetLocales.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLocales.Parameters.class, io.dstore.engine.procs.MiGetLocales.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procs.MiGetLocales.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (countryIdBuilder_ == null) {
          countryId_ = null;
        } else {
          countryId_ = null;
          countryIdBuilder_ = null;
        }
        countryIdNull_ = false;

        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (getNamesInLanguageIdBuilder_ == null) {
          getNamesInLanguageId_ = null;
        } else {
          getNamesInLanguageId_ = null;
          getNamesInLanguageIdBuilder_ = null;
        }
        getNamesInLanguageIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor;
      }

      public io.dstore.engine.procs.MiGetLocales.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procs.MiGetLocales.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procs.MiGetLocales.Parameters build() {
        io.dstore.engine.procs.MiGetLocales.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.MiGetLocales.Parameters buildPartial() {
        io.dstore.engine.procs.MiGetLocales.Parameters result = new io.dstore.engine.procs.MiGetLocales.Parameters(this);
        if (countryIdBuilder_ == null) {
          result.countryId_ = countryId_;
        } else {
          result.countryId_ = countryIdBuilder_.build();
        }
        result.countryIdNull_ = countryIdNull_;
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (getNamesInLanguageIdBuilder_ == null) {
          result.getNamesInLanguageId_ = getNamesInLanguageId_;
        } else {
          result.getNamesInLanguageId_ = getNamesInLanguageIdBuilder_.build();
        }
        result.getNamesInLanguageIdNull_ = getNamesInLanguageIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.MiGetLocales.Parameters) {
          return mergeFrom((io.dstore.engine.procs.MiGetLocales.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.MiGetLocales.Parameters other) {
        if (other == io.dstore.engine.procs.MiGetLocales.Parameters.getDefaultInstance()) return this;
        if (other.hasCountryId()) {
          mergeCountryId(other.getCountryId());
        }
        if (other.getCountryIdNull() != false) {
          setCountryIdNull(other.getCountryIdNull());
        }
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasGetNamesInLanguageId()) {
          mergeGetNamesInLanguageId(other.getGetNamesInLanguageId());
        }
        if (other.getGetNamesInLanguageIdNull() != false) {
          setGetNamesInLanguageIdNull(other.getGetNamesInLanguageIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.MiGetLocales.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.MiGetLocales.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue countryId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> countryIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public boolean hasCountryId() {
        return countryIdBuilder_ != null || countryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getCountryId() {
        if (countryIdBuilder_ == null) {
          return countryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
        } else {
          return countryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public Builder setCountryId(io.dstore.engine.Values.integerValue value) {
        if (countryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          countryId_ = value;
          onChanged();
        } else {
          countryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public Builder setCountryId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (countryIdBuilder_ == null) {
          countryId_ = builderForValue.build();
          onChanged();
        } else {
          countryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public Builder mergeCountryId(io.dstore.engine.Values.integerValue value) {
        if (countryIdBuilder_ == null) {
          if (countryId_ != null) {
            countryId_ =
              io.dstore.engine.Values.integerValue.newBuilder(countryId_).mergeFrom(value).buildPartial();
          } else {
            countryId_ = value;
          }
          onChanged();
        } else {
          countryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public Builder clearCountryId() {
        if (countryIdBuilder_ == null) {
          countryId_ = null;
          onChanged();
        } else {
          countryId_ = null;
          countryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getCountryIdBuilder() {
        
        onChanged();
        return getCountryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder() {
        if (countryIdBuilder_ != null) {
          return countryIdBuilder_.getMessageOrBuilder();
        } else {
          return countryId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getCountryIdFieldBuilder() {
        if (countryIdBuilder_ == null) {
          countryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getCountryId(),
                  getParentForChildren(),
                  isClean());
          countryId_ = null;
        }
        return countryIdBuilder_;
      }

      private boolean countryIdNull_ ;
      /**
       * <code>optional bool country_id_null = 1001;</code>
       */
      public boolean getCountryIdNull() {
        return countryIdNull_;
      }
      /**
       * <code>optional bool country_id_null = 1001;</code>
       */
      public Builder setCountryIdNull(boolean value) {
        
        countryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool country_id_null = 1001;</code>
       */
      public Builder clearCountryIdNull() {
        
        countryIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue getNamesInLanguageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> getNamesInLanguageIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public boolean hasGetNamesInLanguageId() {
        return getNamesInLanguageIdBuilder_ != null || getNamesInLanguageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue getGetNamesInLanguageId() {
        if (getNamesInLanguageIdBuilder_ == null) {
          return getNamesInLanguageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : getNamesInLanguageId_;
        } else {
          return getNamesInLanguageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public Builder setGetNamesInLanguageId(io.dstore.engine.Values.integerValue value) {
        if (getNamesInLanguageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getNamesInLanguageId_ = value;
          onChanged();
        } else {
          getNamesInLanguageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public Builder setGetNamesInLanguageId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (getNamesInLanguageIdBuilder_ == null) {
          getNamesInLanguageId_ = builderForValue.build();
          onChanged();
        } else {
          getNamesInLanguageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public Builder mergeGetNamesInLanguageId(io.dstore.engine.Values.integerValue value) {
        if (getNamesInLanguageIdBuilder_ == null) {
          if (getNamesInLanguageId_ != null) {
            getNamesInLanguageId_ =
              io.dstore.engine.Values.integerValue.newBuilder(getNamesInLanguageId_).mergeFrom(value).buildPartial();
          } else {
            getNamesInLanguageId_ = value;
          }
          onChanged();
        } else {
          getNamesInLanguageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public Builder clearGetNamesInLanguageId() {
        if (getNamesInLanguageIdBuilder_ == null) {
          getNamesInLanguageId_ = null;
          onChanged();
        } else {
          getNamesInLanguageId_ = null;
          getNamesInLanguageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getGetNamesInLanguageIdBuilder() {
        
        onChanged();
        return getGetNamesInLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getGetNamesInLanguageIdOrBuilder() {
        if (getNamesInLanguageIdBuilder_ != null) {
          return getNamesInLanguageIdBuilder_.getMessageOrBuilder();
        } else {
          return getNamesInLanguageId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : getNamesInLanguageId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue get_names_in_language_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getGetNamesInLanguageIdFieldBuilder() {
        if (getNamesInLanguageIdBuilder_ == null) {
          getNamesInLanguageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getGetNamesInLanguageId(),
                  getParentForChildren(),
                  isClean());
          getNamesInLanguageId_ = null;
        }
        return getNamesInLanguageIdBuilder_;
      }

      private boolean getNamesInLanguageIdNull_ ;
      /**
       * <code>optional bool get_names_in_language_id_null = 1003;</code>
       */
      public boolean getGetNamesInLanguageIdNull() {
        return getNamesInLanguageIdNull_;
      }
      /**
       * <code>optional bool get_names_in_language_id_null = 1003;</code>
       */
      public Builder setGetNamesInLanguageIdNull(boolean value) {
        
        getNamesInLanguageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_names_in_language_id_null = 1003;</code>
       */
      public Builder clearGetNamesInLanguageIdNull() {
        
        getNamesInLanguageIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLocales.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLocales.Parameters)
    private static final io.dstore.engine.procs.MiGetLocales.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLocales.Parameters();
    }

    public static io.dstore.engine.procs.MiGetLocales.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.MiGetLocales.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLocales.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.MiGetLocales.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetLocales.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLocales.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procs.MiGetLocales.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procs.MiGetLocales.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procs.MiGetLocales.Response.class, io.dstore.engine.procs.MiGetLocales.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetLocales.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      boolean hasCountryId();
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      io.dstore.engine.Values.integerValue getCountryId();
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      boolean hasCountryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCountryDescription();
      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCountryDescriptionOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      boolean hasLanguageSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLanguageSymbol();
      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLanguageSymbolOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      boolean hasLocaleId();
      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLocaleId();
      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLocaleIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      boolean hasCountryDescrInGivenLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCountryDescrInGivenLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInGivenLanguageOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      boolean hasLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLanguageOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      boolean hasLanguageInLocaleLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLanguageInLocaleLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLanguageInLocaleLanguageOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      boolean hasLanguageInGivenLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getLanguageInGivenLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getLanguageInGivenLanguageOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      boolean hasCountryCode();
      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCountryCode();
      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCountryCodeOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      boolean hasCountryDescrInLocaleLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      io.dstore.engine.Values.stringValue getCountryDescrInLocaleLanguage();
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInLocaleLanguageOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      boolean hasLanguageId();
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getLanguageId();
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLocales.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetLocales.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (countryId_ != null) {
                  subBuilder = countryId_.toBuilder();
                }
                countryId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countryId_);
                  countryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (countryDescription_ != null) {
                  subBuilder = countryDescription_.toBuilder();
                }
                countryDescription_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countryDescription_);
                  countryDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (languageSymbol_ != null) {
                  subBuilder = languageSymbol_.toBuilder();
                }
                languageSymbol_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(languageSymbol_);
                  languageSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (localeId_ != null) {
                  subBuilder = localeId_.toBuilder();
                }
                localeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(localeId_);
                  localeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (countryDescrInGivenLanguage_ != null) {
                  subBuilder = countryDescrInGivenLanguage_.toBuilder();
                }
                countryDescrInGivenLanguage_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countryDescrInGivenLanguage_);
                  countryDescrInGivenLanguage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (language_ != null) {
                  subBuilder = language_.toBuilder();
                }
                language_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(language_);
                  language_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (languageInLocaleLanguage_ != null) {
                  subBuilder = languageInLocaleLanguage_.toBuilder();
                }
                languageInLocaleLanguage_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(languageInLocaleLanguage_);
                  languageInLocaleLanguage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (languageInGivenLanguage_ != null) {
                  subBuilder = languageInGivenLanguage_.toBuilder();
                }
                languageInGivenLanguage_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(languageInGivenLanguage_);
                  languageInGivenLanguage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (countryCode_ != null) {
                  subBuilder = countryCode_.toBuilder();
                }
                countryCode_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countryCode_);
                  countryCode_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (countryDescrInLocaleLanguage_ != null) {
                  subBuilder = countryDescrInLocaleLanguage_.toBuilder();
                }
                countryDescrInLocaleLanguage_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(countryDescrInLocaleLanguage_);
                  countryDescrInLocaleLanguage_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (languageId_ != null) {
                  subBuilder = languageId_.toBuilder();
                }
                languageId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(languageId_);
                  languageId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLocales.Response.Row.class, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int COUNTRY_ID_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.integerValue countryId_;
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      public boolean hasCountryId() {
        return countryId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getCountryId() {
        return countryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
       *
       * <pre>
       * ID eines Landes
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder() {
        return getCountryId();
      }

      public static final int COUNTRY_DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.stringValue countryDescription_;
      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      public boolean hasCountryDescription() {
        return countryDescription_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCountryDescription() {
        return countryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescription_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCountryDescriptionOrBuilder() {
        return getCountryDescription();
      }

      public static final int LANGUAGE_SYMBOL_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.stringValue languageSymbol_;
      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public boolean hasLanguageSymbol() {
        return languageSymbol_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLanguageSymbol() {
        return languageSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageSymbol_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
       *
       * <pre>
       * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLanguageSymbolOrBuilder() {
        return getLanguageSymbol();
      }

      public static final int LOCALE_ID_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.integerValue localeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      public boolean hasLocaleId() {
        return localeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLocaleId() {
        return localeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : localeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
       *
       * <pre>
       * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLocaleIdOrBuilder() {
        return getLocaleId();
      }

      public static final int COUNTRY_DESCR_IN_GIVEN_LANGUAGE_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue countryDescrInGivenLanguage_;
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public boolean hasCountryDescrInGivenLanguage() {
        return countryDescrInGivenLanguage_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCountryDescrInGivenLanguage() {
        return countryDescrInGivenLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInGivenLanguage_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInGivenLanguageOrBuilder() {
        return getCountryDescrInGivenLanguage();
      }

      public static final int LANGUAGE_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.stringValue language_;
      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      public boolean hasLanguage() {
        return language_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLanguage() {
        return language_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : language_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
       *
       * <pre>
       * Bezeichnung der Sprache (in der "DefaultLanguageID")
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLanguageOrBuilder() {
        return getLanguage();
      }

      public static final int LANGUAGE_IN_LOCALE_LANGUAGE_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.stringValue languageInLocaleLanguage_;
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      public boolean hasLanguageInLocaleLanguage() {
        return languageInLocaleLanguage_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLanguageInLocaleLanguage() {
        return languageInLocaleLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInLocaleLanguage_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLanguageInLocaleLanguageOrBuilder() {
        return getLanguageInLocaleLanguage();
      }

      public static final int LANGUAGE_IN_GIVEN_LANGUAGE_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.stringValue languageInGivenLanguage_;
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public boolean hasLanguageInGivenLanguage() {
        return languageInGivenLanguage_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getLanguageInGivenLanguage() {
        return languageInGivenLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInGivenLanguage_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
       *
       * <pre>
       * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getLanguageInGivenLanguageOrBuilder() {
        return getLanguageInGivenLanguage();
      }

      public static final int COUNTRY_CODE_FIELD_NUMBER = 10009;
      private io.dstore.engine.Values.stringValue countryCode_;
      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public boolean hasCountryCode() {
        return countryCode_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCountryCode() {
        return countryCode_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryCode_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
       *
       * <pre>
       * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCountryCodeOrBuilder() {
        return getCountryCode();
      }

      public static final int COUNTRY_DESCR_IN_LOCALE_LANGUAGE_FIELD_NUMBER = 10010;
      private io.dstore.engine.Values.stringValue countryDescrInLocaleLanguage_;
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      public boolean hasCountryDescrInLocaleLanguage() {
        return countryDescrInLocaleLanguage_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getCountryDescrInLocaleLanguage() {
        return countryDescrInLocaleLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInLocaleLanguage_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
       *
       * <pre>
       * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInLocaleLanguageOrBuilder() {
        return getCountryDescrInLocaleLanguage();
      }

      public static final int LANGUAGE_ID_FIELD_NUMBER = 10011;
      private io.dstore.engine.Values.integerValue languageId_;
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      public boolean hasLanguageId() {
        return languageId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getLanguageId() {
        return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
       *
       * <pre>
       * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        return getLanguageId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (countryId_ != null) {
          output.writeMessage(10001, getCountryId());
        }
        if (countryDescription_ != null) {
          output.writeMessage(10002, getCountryDescription());
        }
        if (languageSymbol_ != null) {
          output.writeMessage(10003, getLanguageSymbol());
        }
        if (localeId_ != null) {
          output.writeMessage(10004, getLocaleId());
        }
        if (countryDescrInGivenLanguage_ != null) {
          output.writeMessage(10005, getCountryDescrInGivenLanguage());
        }
        if (language_ != null) {
          output.writeMessage(10006, getLanguage());
        }
        if (languageInLocaleLanguage_ != null) {
          output.writeMessage(10007, getLanguageInLocaleLanguage());
        }
        if (languageInGivenLanguage_ != null) {
          output.writeMessage(10008, getLanguageInGivenLanguage());
        }
        if (countryCode_ != null) {
          output.writeMessage(10009, getCountryCode());
        }
        if (countryDescrInLocaleLanguage_ != null) {
          output.writeMessage(10010, getCountryDescrInLocaleLanguage());
        }
        if (languageId_ != null) {
          output.writeMessage(10011, getLanguageId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (countryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getCountryId());
        }
        if (countryDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getCountryDescription());
        }
        if (languageSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getLanguageSymbol());
        }
        if (localeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getLocaleId());
        }
        if (countryDescrInGivenLanguage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getCountryDescrInGivenLanguage());
        }
        if (language_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getLanguage());
        }
        if (languageInLocaleLanguage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getLanguageInLocaleLanguage());
        }
        if (languageInGivenLanguage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getLanguageInGivenLanguage());
        }
        if (countryCode_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getCountryCode());
        }
        if (countryDescrInLocaleLanguage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getCountryDescrInLocaleLanguage());
        }
        if (languageId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getLanguageId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procs.MiGetLocales.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procs.MiGetLocales.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetLocales.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLocales.Response.Row)
          io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procs.MiGetLocales.Response.Row.class, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procs.MiGetLocales.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (countryIdBuilder_ == null) {
            countryId_ = null;
          } else {
            countryId_ = null;
            countryIdBuilder_ = null;
          }
          if (countryDescriptionBuilder_ == null) {
            countryDescription_ = null;
          } else {
            countryDescription_ = null;
            countryDescriptionBuilder_ = null;
          }
          if (languageSymbolBuilder_ == null) {
            languageSymbol_ = null;
          } else {
            languageSymbol_ = null;
            languageSymbolBuilder_ = null;
          }
          if (localeIdBuilder_ == null) {
            localeId_ = null;
          } else {
            localeId_ = null;
            localeIdBuilder_ = null;
          }
          if (countryDescrInGivenLanguageBuilder_ == null) {
            countryDescrInGivenLanguage_ = null;
          } else {
            countryDescrInGivenLanguage_ = null;
            countryDescrInGivenLanguageBuilder_ = null;
          }
          if (languageBuilder_ == null) {
            language_ = null;
          } else {
            language_ = null;
            languageBuilder_ = null;
          }
          if (languageInLocaleLanguageBuilder_ == null) {
            languageInLocaleLanguage_ = null;
          } else {
            languageInLocaleLanguage_ = null;
            languageInLocaleLanguageBuilder_ = null;
          }
          if (languageInGivenLanguageBuilder_ == null) {
            languageInGivenLanguage_ = null;
          } else {
            languageInGivenLanguage_ = null;
            languageInGivenLanguageBuilder_ = null;
          }
          if (countryCodeBuilder_ == null) {
            countryCode_ = null;
          } else {
            countryCode_ = null;
            countryCodeBuilder_ = null;
          }
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            countryDescrInLocaleLanguage_ = null;
          } else {
            countryDescrInLocaleLanguage_ = null;
            countryDescrInLocaleLanguageBuilder_ = null;
          }
          if (languageIdBuilder_ == null) {
            languageId_ = null;
          } else {
            languageId_ = null;
            languageIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor;
        }

        public io.dstore.engine.procs.MiGetLocales.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procs.MiGetLocales.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procs.MiGetLocales.Response.Row build() {
          io.dstore.engine.procs.MiGetLocales.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procs.MiGetLocales.Response.Row buildPartial() {
          io.dstore.engine.procs.MiGetLocales.Response.Row result = new io.dstore.engine.procs.MiGetLocales.Response.Row(this);
          result.rowId_ = rowId_;
          if (countryIdBuilder_ == null) {
            result.countryId_ = countryId_;
          } else {
            result.countryId_ = countryIdBuilder_.build();
          }
          if (countryDescriptionBuilder_ == null) {
            result.countryDescription_ = countryDescription_;
          } else {
            result.countryDescription_ = countryDescriptionBuilder_.build();
          }
          if (languageSymbolBuilder_ == null) {
            result.languageSymbol_ = languageSymbol_;
          } else {
            result.languageSymbol_ = languageSymbolBuilder_.build();
          }
          if (localeIdBuilder_ == null) {
            result.localeId_ = localeId_;
          } else {
            result.localeId_ = localeIdBuilder_.build();
          }
          if (countryDescrInGivenLanguageBuilder_ == null) {
            result.countryDescrInGivenLanguage_ = countryDescrInGivenLanguage_;
          } else {
            result.countryDescrInGivenLanguage_ = countryDescrInGivenLanguageBuilder_.build();
          }
          if (languageBuilder_ == null) {
            result.language_ = language_;
          } else {
            result.language_ = languageBuilder_.build();
          }
          if (languageInLocaleLanguageBuilder_ == null) {
            result.languageInLocaleLanguage_ = languageInLocaleLanguage_;
          } else {
            result.languageInLocaleLanguage_ = languageInLocaleLanguageBuilder_.build();
          }
          if (languageInGivenLanguageBuilder_ == null) {
            result.languageInGivenLanguage_ = languageInGivenLanguage_;
          } else {
            result.languageInGivenLanguage_ = languageInGivenLanguageBuilder_.build();
          }
          if (countryCodeBuilder_ == null) {
            result.countryCode_ = countryCode_;
          } else {
            result.countryCode_ = countryCodeBuilder_.build();
          }
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            result.countryDescrInLocaleLanguage_ = countryDescrInLocaleLanguage_;
          } else {
            result.countryDescrInLocaleLanguage_ = countryDescrInLocaleLanguageBuilder_.build();
          }
          if (languageIdBuilder_ == null) {
            result.languageId_ = languageId_;
          } else {
            result.languageId_ = languageIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procs.MiGetLocales.Response.Row) {
            return mergeFrom((io.dstore.engine.procs.MiGetLocales.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procs.MiGetLocales.Response.Row other) {
          if (other == io.dstore.engine.procs.MiGetLocales.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasCountryId()) {
            mergeCountryId(other.getCountryId());
          }
          if (other.hasCountryDescription()) {
            mergeCountryDescription(other.getCountryDescription());
          }
          if (other.hasLanguageSymbol()) {
            mergeLanguageSymbol(other.getLanguageSymbol());
          }
          if (other.hasLocaleId()) {
            mergeLocaleId(other.getLocaleId());
          }
          if (other.hasCountryDescrInGivenLanguage()) {
            mergeCountryDescrInGivenLanguage(other.getCountryDescrInGivenLanguage());
          }
          if (other.hasLanguage()) {
            mergeLanguage(other.getLanguage());
          }
          if (other.hasLanguageInLocaleLanguage()) {
            mergeLanguageInLocaleLanguage(other.getLanguageInLocaleLanguage());
          }
          if (other.hasLanguageInGivenLanguage()) {
            mergeLanguageInGivenLanguage(other.getLanguageInGivenLanguage());
          }
          if (other.hasCountryCode()) {
            mergeCountryCode(other.getCountryCode());
          }
          if (other.hasCountryDescrInLocaleLanguage()) {
            mergeCountryDescrInLocaleLanguage(other.getCountryDescrInLocaleLanguage());
          }
          if (other.hasLanguageId()) {
            mergeLanguageId(other.getLanguageId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procs.MiGetLocales.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procs.MiGetLocales.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.integerValue countryId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> countryIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public boolean hasCountryId() {
          return countryIdBuilder_ != null || countryId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getCountryId() {
          if (countryIdBuilder_ == null) {
            return countryId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
          } else {
            return countryIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public Builder setCountryId(io.dstore.engine.Values.integerValue value) {
          if (countryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countryId_ = value;
            onChanged();
          } else {
            countryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public Builder setCountryId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (countryIdBuilder_ == null) {
            countryId_ = builderForValue.build();
            onChanged();
          } else {
            countryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public Builder mergeCountryId(io.dstore.engine.Values.integerValue value) {
          if (countryIdBuilder_ == null) {
            if (countryId_ != null) {
              countryId_ =
                io.dstore.engine.Values.integerValue.newBuilder(countryId_).mergeFrom(value).buildPartial();
            } else {
              countryId_ = value;
            }
            onChanged();
          } else {
            countryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public Builder clearCountryId() {
          if (countryIdBuilder_ == null) {
            countryId_ = null;
            onChanged();
          } else {
            countryId_ = null;
            countryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getCountryIdBuilder() {
          
          onChanged();
          return getCountryIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getCountryIdOrBuilder() {
          if (countryIdBuilder_ != null) {
            return countryIdBuilder_.getMessageOrBuilder();
          } else {
            return countryId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : countryId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue country_id = 10001;</code>
         *
         * <pre>
         * ID eines Landes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getCountryIdFieldBuilder() {
          if (countryIdBuilder_ == null) {
            countryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getCountryId(),
                    getParentForChildren(),
                    isClean());
            countryId_ = null;
          }
          return countryIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue countryDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> countryDescriptionBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public boolean hasCountryDescription() {
          return countryDescriptionBuilder_ != null || countryDescription_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCountryDescription() {
          if (countryDescriptionBuilder_ == null) {
            return countryDescription_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescription_;
          } else {
            return countryDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder setCountryDescription(io.dstore.engine.Values.stringValue value) {
          if (countryDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countryDescription_ = value;
            onChanged();
          } else {
            countryDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder setCountryDescription(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (countryDescriptionBuilder_ == null) {
            countryDescription_ = builderForValue.build();
            onChanged();
          } else {
            countryDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder mergeCountryDescription(io.dstore.engine.Values.stringValue value) {
          if (countryDescriptionBuilder_ == null) {
            if (countryDescription_ != null) {
              countryDescription_ =
                io.dstore.engine.Values.stringValue.newBuilder(countryDescription_).mergeFrom(value).buildPartial();
            } else {
              countryDescription_ = value;
            }
            onChanged();
          } else {
            countryDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder clearCountryDescription() {
          if (countryDescriptionBuilder_ == null) {
            countryDescription_ = null;
            onChanged();
          } else {
            countryDescription_ = null;
            countryDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCountryDescriptionBuilder() {
          
          onChanged();
          return getCountryDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCountryDescriptionOrBuilder() {
          if (countryDescriptionBuilder_ != null) {
            return countryDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return countryDescription_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescription_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_description = 10002;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCountryDescriptionFieldBuilder() {
          if (countryDescriptionBuilder_ == null) {
            countryDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCountryDescription(),
                    getParentForChildren(),
                    isClean());
            countryDescription_ = null;
          }
          return countryDescriptionBuilder_;
        }

        private io.dstore.engine.Values.stringValue languageSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> languageSymbolBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public boolean hasLanguageSymbol() {
          return languageSymbolBuilder_ != null || languageSymbol_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLanguageSymbol() {
          if (languageSymbolBuilder_ == null) {
            return languageSymbol_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageSymbol_;
          } else {
            return languageSymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder setLanguageSymbol(io.dstore.engine.Values.stringValue value) {
          if (languageSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            languageSymbol_ = value;
            onChanged();
          } else {
            languageSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder setLanguageSymbol(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (languageSymbolBuilder_ == null) {
            languageSymbol_ = builderForValue.build();
            onChanged();
          } else {
            languageSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder mergeLanguageSymbol(io.dstore.engine.Values.stringValue value) {
          if (languageSymbolBuilder_ == null) {
            if (languageSymbol_ != null) {
              languageSymbol_ =
                io.dstore.engine.Values.stringValue.newBuilder(languageSymbol_).mergeFrom(value).buildPartial();
            } else {
              languageSymbol_ = value;
            }
            onChanged();
          } else {
            languageSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder clearLanguageSymbol() {
          if (languageSymbolBuilder_ == null) {
            languageSymbol_ = null;
            onChanged();
          } else {
            languageSymbol_ = null;
            languageSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLanguageSymbolBuilder() {
          
          onChanged();
          return getLanguageSymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLanguageSymbolOrBuilder() {
          if (languageSymbolBuilder_ != null) {
            return languageSymbolBuilder_.getMessageOrBuilder();
          } else {
            return languageSymbol_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : languageSymbol_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_symbol = 10003;</code>
         *
         * <pre>
         * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLanguageSymbolFieldBuilder() {
          if (languageSymbolBuilder_ == null) {
            languageSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLanguageSymbol(),
                    getParentForChildren(),
                    isClean());
            languageSymbol_ = null;
          }
          return languageSymbolBuilder_;
        }

        private io.dstore.engine.Values.integerValue localeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> localeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public boolean hasLocaleId() {
          return localeIdBuilder_ != null || localeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLocaleId() {
          if (localeIdBuilder_ == null) {
            return localeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : localeId_;
          } else {
            return localeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public Builder setLocaleId(io.dstore.engine.Values.integerValue value) {
          if (localeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            localeId_ = value;
            onChanged();
          } else {
            localeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public Builder setLocaleId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (localeIdBuilder_ == null) {
            localeId_ = builderForValue.build();
            onChanged();
          } else {
            localeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public Builder mergeLocaleId(io.dstore.engine.Values.integerValue value) {
          if (localeIdBuilder_ == null) {
            if (localeId_ != null) {
              localeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(localeId_).mergeFrom(value).buildPartial();
            } else {
              localeId_ = value;
            }
            onChanged();
          } else {
            localeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public Builder clearLocaleId() {
          if (localeIdBuilder_ == null) {
            localeId_ = null;
            onChanged();
          } else {
            localeId_ = null;
            localeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLocaleIdBuilder() {
          
          onChanged();
          return getLocaleIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLocaleIdOrBuilder() {
          if (localeIdBuilder_ != null) {
            return localeIdBuilder_.getMessageOrBuilder();
          } else {
            return localeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : localeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue locale_id = 10004;</code>
         *
         * <pre>
         * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLocaleIdFieldBuilder() {
          if (localeIdBuilder_ == null) {
            localeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLocaleId(),
                    getParentForChildren(),
                    isClean());
            localeId_ = null;
          }
          return localeIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue countryDescrInGivenLanguage_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> countryDescrInGivenLanguageBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public boolean hasCountryDescrInGivenLanguage() {
          return countryDescrInGivenLanguageBuilder_ != null || countryDescrInGivenLanguage_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCountryDescrInGivenLanguage() {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            return countryDescrInGivenLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInGivenLanguage_;
          } else {
            return countryDescrInGivenLanguageBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder setCountryDescrInGivenLanguage(io.dstore.engine.Values.stringValue value) {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countryDescrInGivenLanguage_ = value;
            onChanged();
          } else {
            countryDescrInGivenLanguageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder setCountryDescrInGivenLanguage(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            countryDescrInGivenLanguage_ = builderForValue.build();
            onChanged();
          } else {
            countryDescrInGivenLanguageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder mergeCountryDescrInGivenLanguage(io.dstore.engine.Values.stringValue value) {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            if (countryDescrInGivenLanguage_ != null) {
              countryDescrInGivenLanguage_ =
                io.dstore.engine.Values.stringValue.newBuilder(countryDescrInGivenLanguage_).mergeFrom(value).buildPartial();
            } else {
              countryDescrInGivenLanguage_ = value;
            }
            onChanged();
          } else {
            countryDescrInGivenLanguageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder clearCountryDescrInGivenLanguage() {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            countryDescrInGivenLanguage_ = null;
            onChanged();
          } else {
            countryDescrInGivenLanguage_ = null;
            countryDescrInGivenLanguageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCountryDescrInGivenLanguageBuilder() {
          
          onChanged();
          return getCountryDescrInGivenLanguageFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInGivenLanguageOrBuilder() {
          if (countryDescrInGivenLanguageBuilder_ != null) {
            return countryDescrInGivenLanguageBuilder_.getMessageOrBuilder();
          } else {
            return countryDescrInGivenLanguage_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInGivenLanguage_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_given_language = 10005;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCountryDescrInGivenLanguageFieldBuilder() {
          if (countryDescrInGivenLanguageBuilder_ == null) {
            countryDescrInGivenLanguageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCountryDescrInGivenLanguage(),
                    getParentForChildren(),
                    isClean());
            countryDescrInGivenLanguage_ = null;
          }
          return countryDescrInGivenLanguageBuilder_;
        }

        private io.dstore.engine.Values.stringValue language_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> languageBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public boolean hasLanguage() {
          return languageBuilder_ != null || language_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLanguage() {
          if (languageBuilder_ == null) {
            return language_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : language_;
          } else {
            return languageBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder setLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            language_ = value;
            onChanged();
          } else {
            languageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder setLanguage(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (languageBuilder_ == null) {
            language_ = builderForValue.build();
            onChanged();
          } else {
            languageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder mergeLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageBuilder_ == null) {
            if (language_ != null) {
              language_ =
                io.dstore.engine.Values.stringValue.newBuilder(language_).mergeFrom(value).buildPartial();
            } else {
              language_ = value;
            }
            onChanged();
          } else {
            languageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public Builder clearLanguage() {
          if (languageBuilder_ == null) {
            language_ = null;
            onChanged();
          } else {
            language_ = null;
            languageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLanguageBuilder() {
          
          onChanged();
          return getLanguageFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLanguageOrBuilder() {
          if (languageBuilder_ != null) {
            return languageBuilder_.getMessageOrBuilder();
          } else {
            return language_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : language_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language = 10006;</code>
         *
         * <pre>
         * Bezeichnung der Sprache (in der "DefaultLanguageID")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLanguageFieldBuilder() {
          if (languageBuilder_ == null) {
            languageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLanguage(),
                    getParentForChildren(),
                    isClean());
            language_ = null;
          }
          return languageBuilder_;
        }

        private io.dstore.engine.Values.stringValue languageInLocaleLanguage_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> languageInLocaleLanguageBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public boolean hasLanguageInLocaleLanguage() {
          return languageInLocaleLanguageBuilder_ != null || languageInLocaleLanguage_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLanguageInLocaleLanguage() {
          if (languageInLocaleLanguageBuilder_ == null) {
            return languageInLocaleLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInLocaleLanguage_;
          } else {
            return languageInLocaleLanguageBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public Builder setLanguageInLocaleLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageInLocaleLanguageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            languageInLocaleLanguage_ = value;
            onChanged();
          } else {
            languageInLocaleLanguageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public Builder setLanguageInLocaleLanguage(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (languageInLocaleLanguageBuilder_ == null) {
            languageInLocaleLanguage_ = builderForValue.build();
            onChanged();
          } else {
            languageInLocaleLanguageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public Builder mergeLanguageInLocaleLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageInLocaleLanguageBuilder_ == null) {
            if (languageInLocaleLanguage_ != null) {
              languageInLocaleLanguage_ =
                io.dstore.engine.Values.stringValue.newBuilder(languageInLocaleLanguage_).mergeFrom(value).buildPartial();
            } else {
              languageInLocaleLanguage_ = value;
            }
            onChanged();
          } else {
            languageInLocaleLanguageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public Builder clearLanguageInLocaleLanguage() {
          if (languageInLocaleLanguageBuilder_ == null) {
            languageInLocaleLanguage_ = null;
            onChanged();
          } else {
            languageInLocaleLanguage_ = null;
            languageInLocaleLanguageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLanguageInLocaleLanguageBuilder() {
          
          onChanged();
          return getLanguageInLocaleLanguageFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLanguageInLocaleLanguageOrBuilder() {
          if (languageInLocaleLanguageBuilder_ != null) {
            return languageInLocaleLanguageBuilder_.getMessageOrBuilder();
          } else {
            return languageInLocaleLanguage_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInLocaleLanguage_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_locale_language = 10007;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLanguageInLocaleLanguageFieldBuilder() {
          if (languageInLocaleLanguageBuilder_ == null) {
            languageInLocaleLanguageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLanguageInLocaleLanguage(),
                    getParentForChildren(),
                    isClean());
            languageInLocaleLanguage_ = null;
          }
          return languageInLocaleLanguageBuilder_;
        }

        private io.dstore.engine.Values.stringValue languageInGivenLanguage_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> languageInGivenLanguageBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public boolean hasLanguageInGivenLanguage() {
          return languageInGivenLanguageBuilder_ != null || languageInGivenLanguage_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getLanguageInGivenLanguage() {
          if (languageInGivenLanguageBuilder_ == null) {
            return languageInGivenLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInGivenLanguage_;
          } else {
            return languageInGivenLanguageBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder setLanguageInGivenLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageInGivenLanguageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            languageInGivenLanguage_ = value;
            onChanged();
          } else {
            languageInGivenLanguageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder setLanguageInGivenLanguage(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (languageInGivenLanguageBuilder_ == null) {
            languageInGivenLanguage_ = builderForValue.build();
            onChanged();
          } else {
            languageInGivenLanguageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder mergeLanguageInGivenLanguage(io.dstore.engine.Values.stringValue value) {
          if (languageInGivenLanguageBuilder_ == null) {
            if (languageInGivenLanguage_ != null) {
              languageInGivenLanguage_ =
                io.dstore.engine.Values.stringValue.newBuilder(languageInGivenLanguage_).mergeFrom(value).buildPartial();
            } else {
              languageInGivenLanguage_ = value;
            }
            onChanged();
          } else {
            languageInGivenLanguageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public Builder clearLanguageInGivenLanguage() {
          if (languageInGivenLanguageBuilder_ == null) {
            languageInGivenLanguage_ = null;
            onChanged();
          } else {
            languageInGivenLanguage_ = null;
            languageInGivenLanguageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getLanguageInGivenLanguageBuilder() {
          
          onChanged();
          return getLanguageInGivenLanguageFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getLanguageInGivenLanguageOrBuilder() {
          if (languageInGivenLanguageBuilder_ != null) {
            return languageInGivenLanguageBuilder_.getMessageOrBuilder();
          } else {
            return languageInGivenLanguage_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : languageInGivenLanguage_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue language_in_given_language = 10008;</code>
         *
         * <pre>
         * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getLanguageInGivenLanguageFieldBuilder() {
          if (languageInGivenLanguageBuilder_ == null) {
            languageInGivenLanguageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getLanguageInGivenLanguage(),
                    getParentForChildren(),
                    isClean());
            languageInGivenLanguage_ = null;
          }
          return languageInGivenLanguageBuilder_;
        }

        private io.dstore.engine.Values.stringValue countryCode_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> countryCodeBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public boolean hasCountryCode() {
          return countryCodeBuilder_ != null || countryCode_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCountryCode() {
          if (countryCodeBuilder_ == null) {
            return countryCode_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryCode_;
          } else {
            return countryCodeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder setCountryCode(io.dstore.engine.Values.stringValue value) {
          if (countryCodeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countryCode_ = value;
            onChanged();
          } else {
            countryCodeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder setCountryCode(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (countryCodeBuilder_ == null) {
            countryCode_ = builderForValue.build();
            onChanged();
          } else {
            countryCodeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder mergeCountryCode(io.dstore.engine.Values.stringValue value) {
          if (countryCodeBuilder_ == null) {
            if (countryCode_ != null) {
              countryCode_ =
                io.dstore.engine.Values.stringValue.newBuilder(countryCode_).mergeFrom(value).buildPartial();
            } else {
              countryCode_ = value;
            }
            onChanged();
          } else {
            countryCodeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public Builder clearCountryCode() {
          if (countryCodeBuilder_ == null) {
            countryCode_ = null;
            onChanged();
          } else {
            countryCode_ = null;
            countryCodeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCountryCodeBuilder() {
          
          onChanged();
          return getCountryCodeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCountryCodeOrBuilder() {
          if (countryCodeBuilder_ != null) {
            return countryCodeBuilder_.getMessageOrBuilder();
          } else {
            return countryCode_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : countryCode_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_code = 10009;</code>
         *
         * <pre>
         * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCountryCodeFieldBuilder() {
          if (countryCodeBuilder_ == null) {
            countryCodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCountryCode(),
                    getParentForChildren(),
                    isClean());
            countryCode_ = null;
          }
          return countryCodeBuilder_;
        }

        private io.dstore.engine.Values.stringValue countryDescrInLocaleLanguage_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> countryDescrInLocaleLanguageBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public boolean hasCountryDescrInLocaleLanguage() {
          return countryDescrInLocaleLanguageBuilder_ != null || countryDescrInLocaleLanguage_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getCountryDescrInLocaleLanguage() {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            return countryDescrInLocaleLanguage_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInLocaleLanguage_;
          } else {
            return countryDescrInLocaleLanguageBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public Builder setCountryDescrInLocaleLanguage(io.dstore.engine.Values.stringValue value) {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            countryDescrInLocaleLanguage_ = value;
            onChanged();
          } else {
            countryDescrInLocaleLanguageBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public Builder setCountryDescrInLocaleLanguage(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            countryDescrInLocaleLanguage_ = builderForValue.build();
            onChanged();
          } else {
            countryDescrInLocaleLanguageBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public Builder mergeCountryDescrInLocaleLanguage(io.dstore.engine.Values.stringValue value) {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            if (countryDescrInLocaleLanguage_ != null) {
              countryDescrInLocaleLanguage_ =
                io.dstore.engine.Values.stringValue.newBuilder(countryDescrInLocaleLanguage_).mergeFrom(value).buildPartial();
            } else {
              countryDescrInLocaleLanguage_ = value;
            }
            onChanged();
          } else {
            countryDescrInLocaleLanguageBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public Builder clearCountryDescrInLocaleLanguage() {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            countryDescrInLocaleLanguage_ = null;
            onChanged();
          } else {
            countryDescrInLocaleLanguage_ = null;
            countryDescrInLocaleLanguageBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getCountryDescrInLocaleLanguageBuilder() {
          
          onChanged();
          return getCountryDescrInLocaleLanguageFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getCountryDescrInLocaleLanguageOrBuilder() {
          if (countryDescrInLocaleLanguageBuilder_ != null) {
            return countryDescrInLocaleLanguageBuilder_.getMessageOrBuilder();
          } else {
            return countryDescrInLocaleLanguage_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : countryDescrInLocaleLanguage_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue country_descr_in_locale_language = 10010;</code>
         *
         * <pre>
         * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getCountryDescrInLocaleLanguageFieldBuilder() {
          if (countryDescrInLocaleLanguageBuilder_ == null) {
            countryDescrInLocaleLanguageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getCountryDescrInLocaleLanguage(),
                    getParentForChildren(),
                    isClean());
            countryDescrInLocaleLanguage_ = null;
          }
          return countryDescrInLocaleLanguageBuilder_;
        }

        private io.dstore.engine.Values.integerValue languageId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> languageIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public boolean hasLanguageId() {
          return languageIdBuilder_ != null || languageId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getLanguageId() {
          if (languageIdBuilder_ == null) {
            return languageId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
          } else {
            return languageIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public Builder setLanguageId(io.dstore.engine.Values.integerValue value) {
          if (languageIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            languageId_ = value;
            onChanged();
          } else {
            languageIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public Builder setLanguageId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (languageIdBuilder_ == null) {
            languageId_ = builderForValue.build();
            onChanged();
          } else {
            languageIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public Builder mergeLanguageId(io.dstore.engine.Values.integerValue value) {
          if (languageIdBuilder_ == null) {
            if (languageId_ != null) {
              languageId_ =
                io.dstore.engine.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
            } else {
              languageId_ = value;
            }
            onChanged();
          } else {
            languageIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public Builder clearLanguageId() {
          if (languageIdBuilder_ == null) {
            languageId_ = null;
            onChanged();
          } else {
            languageId_ = null;
            languageIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getLanguageIdBuilder() {
          
          onChanged();
          return getLanguageIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
          if (languageIdBuilder_ != null) {
            return languageIdBuilder_.getMessageOrBuilder();
          } else {
            return languageId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : languageId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue language_id = 10011;</code>
         *
         * <pre>
         * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getLanguageIdFieldBuilder() {
          if (languageIdBuilder_ == null) {
            languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getLanguageId(),
                    getParentForChildren(),
                    isClean());
            languageId_ = null;
          }
          return languageIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLocales.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLocales.Response.Row)
      private static final io.dstore.engine.procs.MiGetLocales.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLocales.Response.Row();
      }

      public static io.dstore.engine.procs.MiGetLocales.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procs.MiGetLocales.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.MiGetLocales.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procs.MiGetLocales.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procs.MiGetLocales.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetLocales.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetLocales.Response)
        io.dstore.engine.procs.MiGetLocales.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procs.MiGetLocales.Response.class, io.dstore.engine.procs.MiGetLocales.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procs.MiGetLocales.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procs.MiGetLocales.internal_static_dstore_engine_mi_GetLocales_Response_descriptor;
      }

      public io.dstore.engine.procs.MiGetLocales.Response getDefaultInstanceForType() {
        return io.dstore.engine.procs.MiGetLocales.Response.getDefaultInstance();
      }

      public io.dstore.engine.procs.MiGetLocales.Response build() {
        io.dstore.engine.procs.MiGetLocales.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procs.MiGetLocales.Response buildPartial() {
        io.dstore.engine.procs.MiGetLocales.Response result = new io.dstore.engine.procs.MiGetLocales.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procs.MiGetLocales.Response) {
          return mergeFrom((io.dstore.engine.procs.MiGetLocales.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procs.MiGetLocales.Response other) {
        if (other == io.dstore.engine.procs.MiGetLocales.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procs.MiGetLocales.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procs.MiGetLocales.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procs.MiGetLocales.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.MiGetLocales.Response.Row, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder, io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLocales.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.MiGetLocales.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procs.MiGetLocales.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.MiGetLocales.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procs.MiGetLocales.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procs.MiGetLocales.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLocales.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLocales.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procs.MiGetLocales.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procs.MiGetLocales.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procs.MiGetLocales.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetLocales.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procs.MiGetLocales.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procs.MiGetLocales.Response.Row, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder, io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procs.MiGetLocales.Response.Row, io.dstore.engine.procs.MiGetLocales.Response.Row.Builder, io.dstore.engine.procs.MiGetLocales.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetLocales.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetLocales.Response)
    private static final io.dstore.engine.procs.MiGetLocales.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procs.MiGetLocales.Response();
    }

    public static io.dstore.engine.procs.MiGetLocales.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procs.MiGetLocales.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLocales_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLocales_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLocales_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetLocales_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,dstore/engine/procedures/mi_GetLocales" +
      ".proto\022\033dstore.engine.mi_GetLocales\032\032dst" +
      "ore/engine/values.proto\032\031dstore/engine/e" +
      "rror.proto\032\033dstore/engine/message.proto\"" +
      "\240\002\n\nParameters\0226\n\ncountry_id\030\001 \001(\0132\".dst" +
      "ore.engine.values.integerValue\022\030\n\017countr" +
      "y_id_null\030\351\007 \001(\010\0227\n\013language_id\030\002 \001(\0132\"." +
      "dstore.engine.values.integerValue\022\031\n\020lan" +
      "guage_id_null\030\352\007 \001(\010\022D\n\030get_names_in_lan" +
      "guage_id\030\003 \001(\0132\".dstore.engine.values.in",
      "tegerValue\022&\n\035get_names_in_language_id_n" +
      "ull\030\353\007 \001(\010\"\374\006\n\010Response\022)\n\005error\030\001 \001(\0132\032" +
      ".dstore.engine.error.Error\022/\n\007message\030\003 " +
      "\003(\0132\036.dstore.engine.message.Message\0226\n\003r" +
      "ow\030\004 \003(\0132).dstore.engine.mi_GetLocales.R" +
      "esponse.Row\032\333\005\n\003Row\022\017\n\006row_id\030\220N \001(\005\0227\n\n" +
      "country_id\030\221N \001(\0132\".dstore.engine.values" +
      ".integerValue\022?\n\023country_description\030\222N " +
      "\001(\0132!.dstore.engine.values.stringValue\022;" +
      "\n\017language_symbol\030\223N \001(\0132!.dstore.engine",
      ".values.stringValue\0226\n\tlocale_id\030\224N \001(\0132" +
      "\".dstore.engine.values.integerValue\022K\n\037c" +
      "ountry_descr_in_given_language\030\225N \001(\0132!." +
      "dstore.engine.values.stringValue\0224\n\010lang" +
      "uage\030\226N \001(\0132!.dstore.engine.values.strin" +
      "gValue\022G\n\033language_in_locale_language\030\227N" +
      " \001(\0132!.dstore.engine.values.stringValue\022" +
      "F\n\032language_in_given_language\030\230N \001(\0132!.d" +
      "store.engine.values.stringValue\0228\n\014count" +
      "ry_code\030\231N \001(\0132!.dstore.engine.values.st",
      "ringValue\022L\n country_descr_in_locale_lan" +
      "guage\030\232N \001(\0132!.dstore.engine.values.stri" +
      "ngValue\0228\n\013language_id\030\233N \001(\0132\".dstore.e" +
      "ngine.values.integerValueB\030\n\026io.dstore.e" +
      "ngine.procsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetLocales_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLocales_Parameters_descriptor,
        new java.lang.String[] { "CountryId", "CountryIdNull", "LanguageId", "LanguageIdNull", "GetNamesInLanguageId", "GetNamesInLanguageIdNull", });
    internal_static_dstore_engine_mi_GetLocales_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetLocales_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLocales_Response_descriptor,
        new java.lang.String[] { "Error", "Message", "Row", });
    internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetLocales_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetLocales_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetLocales_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "CountryId", "CountryDescription", "LanguageSymbol", "LocaleId", "CountryDescrInGivenLanguage", "Language", "LanguageInLocaleLanguage", "LanguageInGivenLanguage", "CountryCode", "CountryDescrInLocaleLanguage", "LanguageId", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
