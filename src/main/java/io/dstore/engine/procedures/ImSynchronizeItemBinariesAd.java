// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_SynchronizeItemBinaries_Ad.proto

package io.dstore.engine.procedures;

public final class ImSynchronizeItemBinariesAd {
  private ImSynchronizeItemBinariesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    boolean hasCharacIdForSynchronization();
    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    io.dstore.Values.integerValue getCharacIdForSynchronization();
    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getCharacIdForSynchronizationOrBuilder();

    /**
     * <code>optional bool charac_id_for_synchronization_null = 1001;</code>
     */
    boolean getCharacIdForSynchronizationNull();

    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    boolean hasReportOnly();
    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    io.dstore.Values.booleanValue getReportOnly();
    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getReportOnlyOrBuilder();

    /**
     * <code>optional bool report_only_null = 1002;</code>
     */
    boolean getReportOnlyNull();

    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    boolean hasOnlyDirectSuccessorsOfId();
    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    io.dstore.Values.integerValue getOnlyDirectSuccessorsOfId();
    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    io.dstore.Values.integerValueOrBuilder getOnlyDirectSuccessorsOfIdOrBuilder();

    /**
     * <code>optional bool only_direct_successors_of_id_null = 1003;</code>
     */
    boolean getOnlyDirectSuccessorsOfIdNull();

    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    boolean hasProcessValuesInChunksWithSize();
    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    io.dstore.Values.integerValue getProcessValuesInChunksWithSize();
    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    io.dstore.Values.integerValueOrBuilder getProcessValuesInChunksWithSizeOrBuilder();

    /**
     * <code>optional bool process_values_in_chunks_with_size_null = 1004;</code>
     */
    boolean getProcessValuesInChunksWithSizeNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      characIdForSynchronizationNull_ = false;
      reportOnlyNull_ = false;
      onlyDirectSuccessorsOfIdNull_ = false;
      processValuesInChunksWithSizeNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (characIdForSynchronization_ != null) {
                subBuilder = characIdForSynchronization_.toBuilder();
              }
              characIdForSynchronization_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characIdForSynchronization_);
                characIdForSynchronization_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (reportOnly_ != null) {
                subBuilder = reportOnly_.toBuilder();
              }
              reportOnly_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reportOnly_);
                reportOnly_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (onlyDirectSuccessorsOfId_ != null) {
                subBuilder = onlyDirectSuccessorsOfId_.toBuilder();
              }
              onlyDirectSuccessorsOfId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyDirectSuccessorsOfId_);
                onlyDirectSuccessorsOfId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (processValuesInChunksWithSize_ != null) {
                subBuilder = processValuesInChunksWithSize_.toBuilder();
              }
              processValuesInChunksWithSize_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(processValuesInChunksWithSize_);
                processValuesInChunksWithSize_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              characIdForSynchronizationNull_ = input.readBool();
              break;
            }
            case 8016: {

              reportOnlyNull_ = input.readBool();
              break;
            }
            case 8024: {

              onlyDirectSuccessorsOfIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              processValuesInChunksWithSizeNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.Builder.class);
    }

    public static final int CHARAC_ID_FOR_SYNCHRONIZATION_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue characIdForSynchronization_;
    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    public boolean hasCharacIdForSynchronization() {
      return characIdForSynchronization_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    public io.dstore.Values.integerValue getCharacIdForSynchronization() {
      return characIdForSynchronization_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : characIdForSynchronization_;
    }
    /**
     * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getCharacIdForSynchronizationOrBuilder() {
      return getCharacIdForSynchronization();
    }

    public static final int CHARAC_ID_FOR_SYNCHRONIZATION_NULL_FIELD_NUMBER = 1001;
    private boolean characIdForSynchronizationNull_;
    /**
     * <code>optional bool charac_id_for_synchronization_null = 1001;</code>
     */
    public boolean getCharacIdForSynchronizationNull() {
      return characIdForSynchronizationNull_;
    }

    public static final int REPORT_ONLY_FIELD_NUMBER = 2;
    private io.dstore.Values.booleanValue reportOnly_;
    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    public boolean hasReportOnly() {
      return reportOnly_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    public io.dstore.Values.booleanValue getReportOnly() {
      return reportOnly_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : reportOnly_;
    }
    /**
     * <code>optional .dstore.values.booleanValue report_only = 2;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getReportOnlyOrBuilder() {
      return getReportOnly();
    }

    public static final int REPORT_ONLY_NULL_FIELD_NUMBER = 1002;
    private boolean reportOnlyNull_;
    /**
     * <code>optional bool report_only_null = 1002;</code>
     */
    public boolean getReportOnlyNull() {
      return reportOnlyNull_;
    }

    public static final int ONLY_DIRECT_SUCCESSORS_OF_ID_FIELD_NUMBER = 3;
    private io.dstore.Values.integerValue onlyDirectSuccessorsOfId_;
    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    public boolean hasOnlyDirectSuccessorsOfId() {
      return onlyDirectSuccessorsOfId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    public io.dstore.Values.integerValue getOnlyDirectSuccessorsOfId() {
      return onlyDirectSuccessorsOfId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : onlyDirectSuccessorsOfId_;
    }
    /**
     * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getOnlyDirectSuccessorsOfIdOrBuilder() {
      return getOnlyDirectSuccessorsOfId();
    }

    public static final int ONLY_DIRECT_SUCCESSORS_OF_ID_NULL_FIELD_NUMBER = 1003;
    private boolean onlyDirectSuccessorsOfIdNull_;
    /**
     * <code>optional bool only_direct_successors_of_id_null = 1003;</code>
     */
    public boolean getOnlyDirectSuccessorsOfIdNull() {
      return onlyDirectSuccessorsOfIdNull_;
    }

    public static final int PROCESS_VALUES_IN_CHUNKS_WITH_SIZE_FIELD_NUMBER = 4;
    private io.dstore.Values.integerValue processValuesInChunksWithSize_;
    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    public boolean hasProcessValuesInChunksWithSize() {
      return processValuesInChunksWithSize_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    public io.dstore.Values.integerValue getProcessValuesInChunksWithSize() {
      return processValuesInChunksWithSize_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : processValuesInChunksWithSize_;
    }
    /**
     * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getProcessValuesInChunksWithSizeOrBuilder() {
      return getProcessValuesInChunksWithSize();
    }

    public static final int PROCESS_VALUES_IN_CHUNKS_WITH_SIZE_NULL_FIELD_NUMBER = 1004;
    private boolean processValuesInChunksWithSizeNull_;
    /**
     * <code>optional bool process_values_in_chunks_with_size_null = 1004;</code>
     */
    public boolean getProcessValuesInChunksWithSizeNull() {
      return processValuesInChunksWithSizeNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (characIdForSynchronization_ != null) {
        output.writeMessage(1, getCharacIdForSynchronization());
      }
      if (reportOnly_ != null) {
        output.writeMessage(2, getReportOnly());
      }
      if (onlyDirectSuccessorsOfId_ != null) {
        output.writeMessage(3, getOnlyDirectSuccessorsOfId());
      }
      if (processValuesInChunksWithSize_ != null) {
        output.writeMessage(4, getProcessValuesInChunksWithSize());
      }
      if (characIdForSynchronizationNull_ != false) {
        output.writeBool(1001, characIdForSynchronizationNull_);
      }
      if (reportOnlyNull_ != false) {
        output.writeBool(1002, reportOnlyNull_);
      }
      if (onlyDirectSuccessorsOfIdNull_ != false) {
        output.writeBool(1003, onlyDirectSuccessorsOfIdNull_);
      }
      if (processValuesInChunksWithSizeNull_ != false) {
        output.writeBool(1004, processValuesInChunksWithSizeNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (characIdForSynchronization_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCharacIdForSynchronization());
      }
      if (reportOnly_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getReportOnly());
      }
      if (onlyDirectSuccessorsOfId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOnlyDirectSuccessorsOfId());
      }
      if (processValuesInChunksWithSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProcessValuesInChunksWithSize());
      }
      if (characIdForSynchronizationNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, characIdForSynchronizationNull_);
      }
      if (reportOnlyNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, reportOnlyNull_);
      }
      if (onlyDirectSuccessorsOfIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, onlyDirectSuccessorsOfIdNull_);
      }
      if (processValuesInChunksWithSizeNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, processValuesInChunksWithSizeNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters other = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters) obj;

      boolean result = true;
      result = result && (hasCharacIdForSynchronization() == other.hasCharacIdForSynchronization());
      if (hasCharacIdForSynchronization()) {
        result = result && getCharacIdForSynchronization()
            .equals(other.getCharacIdForSynchronization());
      }
      result = result && (getCharacIdForSynchronizationNull()
          == other.getCharacIdForSynchronizationNull());
      result = result && (hasReportOnly() == other.hasReportOnly());
      if (hasReportOnly()) {
        result = result && getReportOnly()
            .equals(other.getReportOnly());
      }
      result = result && (getReportOnlyNull()
          == other.getReportOnlyNull());
      result = result && (hasOnlyDirectSuccessorsOfId() == other.hasOnlyDirectSuccessorsOfId());
      if (hasOnlyDirectSuccessorsOfId()) {
        result = result && getOnlyDirectSuccessorsOfId()
            .equals(other.getOnlyDirectSuccessorsOfId());
      }
      result = result && (getOnlyDirectSuccessorsOfIdNull()
          == other.getOnlyDirectSuccessorsOfIdNull());
      result = result && (hasProcessValuesInChunksWithSize() == other.hasProcessValuesInChunksWithSize());
      if (hasProcessValuesInChunksWithSize()) {
        result = result && getProcessValuesInChunksWithSize()
            .equals(other.getProcessValuesInChunksWithSize());
      }
      result = result && (getProcessValuesInChunksWithSizeNull()
          == other.getProcessValuesInChunksWithSizeNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCharacIdForSynchronization()) {
        hash = (37 * hash) + CHARAC_ID_FOR_SYNCHRONIZATION_FIELD_NUMBER;
        hash = (53 * hash) + getCharacIdForSynchronization().hashCode();
      }
      hash = (37 * hash) + CHARAC_ID_FOR_SYNCHRONIZATION_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCharacIdForSynchronizationNull());
      if (hasReportOnly()) {
        hash = (37 * hash) + REPORT_ONLY_FIELD_NUMBER;
        hash = (53 * hash) + getReportOnly().hashCode();
      }
      hash = (37 * hash) + REPORT_ONLY_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReportOnlyNull());
      if (hasOnlyDirectSuccessorsOfId()) {
        hash = (37 * hash) + ONLY_DIRECT_SUCCESSORS_OF_ID_FIELD_NUMBER;
        hash = (53 * hash) + getOnlyDirectSuccessorsOfId().hashCode();
      }
      hash = (37 * hash) + ONLY_DIRECT_SUCCESSORS_OF_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOnlyDirectSuccessorsOfIdNull());
      if (hasProcessValuesInChunksWithSize()) {
        hash = (37 * hash) + PROCESS_VALUES_IN_CHUNKS_WITH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getProcessValuesInChunksWithSize().hashCode();
      }
      hash = (37 * hash) + PROCESS_VALUES_IN_CHUNKS_WITH_SIZE_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcessValuesInChunksWithSizeNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters)
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (characIdForSynchronizationBuilder_ == null) {
          characIdForSynchronization_ = null;
        } else {
          characIdForSynchronization_ = null;
          characIdForSynchronizationBuilder_ = null;
        }
        characIdForSynchronizationNull_ = false;

        if (reportOnlyBuilder_ == null) {
          reportOnly_ = null;
        } else {
          reportOnly_ = null;
          reportOnlyBuilder_ = null;
        }
        reportOnlyNull_ = false;

        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          onlyDirectSuccessorsOfId_ = null;
        } else {
          onlyDirectSuccessorsOfId_ = null;
          onlyDirectSuccessorsOfIdBuilder_ = null;
        }
        onlyDirectSuccessorsOfIdNull_ = false;

        if (processValuesInChunksWithSizeBuilder_ == null) {
          processValuesInChunksWithSize_ = null;
        } else {
          processValuesInChunksWithSize_ = null;
          processValuesInChunksWithSizeBuilder_ = null;
        }
        processValuesInChunksWithSizeNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters build() {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters result = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters(this);
        if (characIdForSynchronizationBuilder_ == null) {
          result.characIdForSynchronization_ = characIdForSynchronization_;
        } else {
          result.characIdForSynchronization_ = characIdForSynchronizationBuilder_.build();
        }
        result.characIdForSynchronizationNull_ = characIdForSynchronizationNull_;
        if (reportOnlyBuilder_ == null) {
          result.reportOnly_ = reportOnly_;
        } else {
          result.reportOnly_ = reportOnlyBuilder_.build();
        }
        result.reportOnlyNull_ = reportOnlyNull_;
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          result.onlyDirectSuccessorsOfId_ = onlyDirectSuccessorsOfId_;
        } else {
          result.onlyDirectSuccessorsOfId_ = onlyDirectSuccessorsOfIdBuilder_.build();
        }
        result.onlyDirectSuccessorsOfIdNull_ = onlyDirectSuccessorsOfIdNull_;
        if (processValuesInChunksWithSizeBuilder_ == null) {
          result.processValuesInChunksWithSize_ = processValuesInChunksWithSize_;
        } else {
          result.processValuesInChunksWithSize_ = processValuesInChunksWithSizeBuilder_.build();
        }
        result.processValuesInChunksWithSizeNull_ = processValuesInChunksWithSizeNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasCharacIdForSynchronization()) {
          mergeCharacIdForSynchronization(other.getCharacIdForSynchronization());
        }
        if (other.getCharacIdForSynchronizationNull() != false) {
          setCharacIdForSynchronizationNull(other.getCharacIdForSynchronizationNull());
        }
        if (other.hasReportOnly()) {
          mergeReportOnly(other.getReportOnly());
        }
        if (other.getReportOnlyNull() != false) {
          setReportOnlyNull(other.getReportOnlyNull());
        }
        if (other.hasOnlyDirectSuccessorsOfId()) {
          mergeOnlyDirectSuccessorsOfId(other.getOnlyDirectSuccessorsOfId());
        }
        if (other.getOnlyDirectSuccessorsOfIdNull() != false) {
          setOnlyDirectSuccessorsOfIdNull(other.getOnlyDirectSuccessorsOfIdNull());
        }
        if (other.hasProcessValuesInChunksWithSize()) {
          mergeProcessValuesInChunksWithSize(other.getProcessValuesInChunksWithSize());
        }
        if (other.getProcessValuesInChunksWithSizeNull() != false) {
          setProcessValuesInChunksWithSizeNull(other.getProcessValuesInChunksWithSizeNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue characIdForSynchronization_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> characIdForSynchronizationBuilder_;
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public boolean hasCharacIdForSynchronization() {
        return characIdForSynchronizationBuilder_ != null || characIdForSynchronization_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public io.dstore.Values.integerValue getCharacIdForSynchronization() {
        if (characIdForSynchronizationBuilder_ == null) {
          return characIdForSynchronization_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : characIdForSynchronization_;
        } else {
          return characIdForSynchronizationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public Builder setCharacIdForSynchronization(io.dstore.Values.integerValue value) {
        if (characIdForSynchronizationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characIdForSynchronization_ = value;
          onChanged();
        } else {
          characIdForSynchronizationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public Builder setCharacIdForSynchronization(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (characIdForSynchronizationBuilder_ == null) {
          characIdForSynchronization_ = builderForValue.build();
          onChanged();
        } else {
          characIdForSynchronizationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public Builder mergeCharacIdForSynchronization(io.dstore.Values.integerValue value) {
        if (characIdForSynchronizationBuilder_ == null) {
          if (characIdForSynchronization_ != null) {
            characIdForSynchronization_ =
              io.dstore.Values.integerValue.newBuilder(characIdForSynchronization_).mergeFrom(value).buildPartial();
          } else {
            characIdForSynchronization_ = value;
          }
          onChanged();
        } else {
          characIdForSynchronizationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public Builder clearCharacIdForSynchronization() {
        if (characIdForSynchronizationBuilder_ == null) {
          characIdForSynchronization_ = null;
          onChanged();
        } else {
          characIdForSynchronization_ = null;
          characIdForSynchronizationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getCharacIdForSynchronizationBuilder() {
        
        onChanged();
        return getCharacIdForSynchronizationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getCharacIdForSynchronizationOrBuilder() {
        if (characIdForSynchronizationBuilder_ != null) {
          return characIdForSynchronizationBuilder_.getMessageOrBuilder();
        } else {
          return characIdForSynchronization_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : characIdForSynchronization_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue charac_id_for_synchronization = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getCharacIdForSynchronizationFieldBuilder() {
        if (characIdForSynchronizationBuilder_ == null) {
          characIdForSynchronizationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getCharacIdForSynchronization(),
                  getParentForChildren(),
                  isClean());
          characIdForSynchronization_ = null;
        }
        return characIdForSynchronizationBuilder_;
      }

      private boolean characIdForSynchronizationNull_ ;
      /**
       * <code>optional bool charac_id_for_synchronization_null = 1001;</code>
       */
      public boolean getCharacIdForSynchronizationNull() {
        return characIdForSynchronizationNull_;
      }
      /**
       * <code>optional bool charac_id_for_synchronization_null = 1001;</code>
       */
      public Builder setCharacIdForSynchronizationNull(boolean value) {
        
        characIdForSynchronizationNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool charac_id_for_synchronization_null = 1001;</code>
       */
      public Builder clearCharacIdForSynchronizationNull() {
        
        characIdForSynchronizationNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue reportOnly_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> reportOnlyBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public boolean hasReportOnly() {
        return reportOnlyBuilder_ != null || reportOnly_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public io.dstore.Values.booleanValue getReportOnly() {
        if (reportOnlyBuilder_ == null) {
          return reportOnly_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : reportOnly_;
        } else {
          return reportOnlyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public Builder setReportOnly(io.dstore.Values.booleanValue value) {
        if (reportOnlyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reportOnly_ = value;
          onChanged();
        } else {
          reportOnlyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public Builder setReportOnly(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (reportOnlyBuilder_ == null) {
          reportOnly_ = builderForValue.build();
          onChanged();
        } else {
          reportOnlyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public Builder mergeReportOnly(io.dstore.Values.booleanValue value) {
        if (reportOnlyBuilder_ == null) {
          if (reportOnly_ != null) {
            reportOnly_ =
              io.dstore.Values.booleanValue.newBuilder(reportOnly_).mergeFrom(value).buildPartial();
          } else {
            reportOnly_ = value;
          }
          onChanged();
        } else {
          reportOnlyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public Builder clearReportOnly() {
        if (reportOnlyBuilder_ == null) {
          reportOnly_ = null;
          onChanged();
        } else {
          reportOnly_ = null;
          reportOnlyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public io.dstore.Values.booleanValue.Builder getReportOnlyBuilder() {
        
        onChanged();
        return getReportOnlyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getReportOnlyOrBuilder() {
        if (reportOnlyBuilder_ != null) {
          return reportOnlyBuilder_.getMessageOrBuilder();
        } else {
          return reportOnly_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : reportOnly_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue report_only = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getReportOnlyFieldBuilder() {
        if (reportOnlyBuilder_ == null) {
          reportOnlyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getReportOnly(),
                  getParentForChildren(),
                  isClean());
          reportOnly_ = null;
        }
        return reportOnlyBuilder_;
      }

      private boolean reportOnlyNull_ ;
      /**
       * <code>optional bool report_only_null = 1002;</code>
       */
      public boolean getReportOnlyNull() {
        return reportOnlyNull_;
      }
      /**
       * <code>optional bool report_only_null = 1002;</code>
       */
      public Builder setReportOnlyNull(boolean value) {
        
        reportOnlyNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool report_only_null = 1002;</code>
       */
      public Builder clearReportOnlyNull() {
        
        reportOnlyNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue onlyDirectSuccessorsOfId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> onlyDirectSuccessorsOfIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public boolean hasOnlyDirectSuccessorsOfId() {
        return onlyDirectSuccessorsOfIdBuilder_ != null || onlyDirectSuccessorsOfId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public io.dstore.Values.integerValue getOnlyDirectSuccessorsOfId() {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          return onlyDirectSuccessorsOfId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : onlyDirectSuccessorsOfId_;
        } else {
          return onlyDirectSuccessorsOfIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public Builder setOnlyDirectSuccessorsOfId(io.dstore.Values.integerValue value) {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyDirectSuccessorsOfId_ = value;
          onChanged();
        } else {
          onlyDirectSuccessorsOfIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public Builder setOnlyDirectSuccessorsOfId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          onlyDirectSuccessorsOfId_ = builderForValue.build();
          onChanged();
        } else {
          onlyDirectSuccessorsOfIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public Builder mergeOnlyDirectSuccessorsOfId(io.dstore.Values.integerValue value) {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          if (onlyDirectSuccessorsOfId_ != null) {
            onlyDirectSuccessorsOfId_ =
              io.dstore.Values.integerValue.newBuilder(onlyDirectSuccessorsOfId_).mergeFrom(value).buildPartial();
          } else {
            onlyDirectSuccessorsOfId_ = value;
          }
          onChanged();
        } else {
          onlyDirectSuccessorsOfIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public Builder clearOnlyDirectSuccessorsOfId() {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          onlyDirectSuccessorsOfId_ = null;
          onChanged();
        } else {
          onlyDirectSuccessorsOfId_ = null;
          onlyDirectSuccessorsOfIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public io.dstore.Values.integerValue.Builder getOnlyDirectSuccessorsOfIdBuilder() {
        
        onChanged();
        return getOnlyDirectSuccessorsOfIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getOnlyDirectSuccessorsOfIdOrBuilder() {
        if (onlyDirectSuccessorsOfIdBuilder_ != null) {
          return onlyDirectSuccessorsOfIdBuilder_.getMessageOrBuilder();
        } else {
          return onlyDirectSuccessorsOfId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : onlyDirectSuccessorsOfId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue only_direct_successors_of_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getOnlyDirectSuccessorsOfIdFieldBuilder() {
        if (onlyDirectSuccessorsOfIdBuilder_ == null) {
          onlyDirectSuccessorsOfIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getOnlyDirectSuccessorsOfId(),
                  getParentForChildren(),
                  isClean());
          onlyDirectSuccessorsOfId_ = null;
        }
        return onlyDirectSuccessorsOfIdBuilder_;
      }

      private boolean onlyDirectSuccessorsOfIdNull_ ;
      /**
       * <code>optional bool only_direct_successors_of_id_null = 1003;</code>
       */
      public boolean getOnlyDirectSuccessorsOfIdNull() {
        return onlyDirectSuccessorsOfIdNull_;
      }
      /**
       * <code>optional bool only_direct_successors_of_id_null = 1003;</code>
       */
      public Builder setOnlyDirectSuccessorsOfIdNull(boolean value) {
        
        onlyDirectSuccessorsOfIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_direct_successors_of_id_null = 1003;</code>
       */
      public Builder clearOnlyDirectSuccessorsOfIdNull() {
        
        onlyDirectSuccessorsOfIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue processValuesInChunksWithSize_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> processValuesInChunksWithSizeBuilder_;
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public boolean hasProcessValuesInChunksWithSize() {
        return processValuesInChunksWithSizeBuilder_ != null || processValuesInChunksWithSize_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public io.dstore.Values.integerValue getProcessValuesInChunksWithSize() {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          return processValuesInChunksWithSize_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : processValuesInChunksWithSize_;
        } else {
          return processValuesInChunksWithSizeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public Builder setProcessValuesInChunksWithSize(io.dstore.Values.integerValue value) {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          processValuesInChunksWithSize_ = value;
          onChanged();
        } else {
          processValuesInChunksWithSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public Builder setProcessValuesInChunksWithSize(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          processValuesInChunksWithSize_ = builderForValue.build();
          onChanged();
        } else {
          processValuesInChunksWithSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public Builder mergeProcessValuesInChunksWithSize(io.dstore.Values.integerValue value) {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          if (processValuesInChunksWithSize_ != null) {
            processValuesInChunksWithSize_ =
              io.dstore.Values.integerValue.newBuilder(processValuesInChunksWithSize_).mergeFrom(value).buildPartial();
          } else {
            processValuesInChunksWithSize_ = value;
          }
          onChanged();
        } else {
          processValuesInChunksWithSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public Builder clearProcessValuesInChunksWithSize() {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          processValuesInChunksWithSize_ = null;
          onChanged();
        } else {
          processValuesInChunksWithSize_ = null;
          processValuesInChunksWithSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public io.dstore.Values.integerValue.Builder getProcessValuesInChunksWithSizeBuilder() {
        
        onChanged();
        return getProcessValuesInChunksWithSizeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getProcessValuesInChunksWithSizeOrBuilder() {
        if (processValuesInChunksWithSizeBuilder_ != null) {
          return processValuesInChunksWithSizeBuilder_.getMessageOrBuilder();
        } else {
          return processValuesInChunksWithSize_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : processValuesInChunksWithSize_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue process_values_in_chunks_with_size = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getProcessValuesInChunksWithSizeFieldBuilder() {
        if (processValuesInChunksWithSizeBuilder_ == null) {
          processValuesInChunksWithSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getProcessValuesInChunksWithSize(),
                  getParentForChildren(),
                  isClean());
          processValuesInChunksWithSize_ = null;
        }
        return processValuesInChunksWithSizeBuilder_;
      }

      private boolean processValuesInChunksWithSizeNull_ ;
      /**
       * <code>optional bool process_values_in_chunks_with_size_null = 1004;</code>
       */
      public boolean getProcessValuesInChunksWithSizeNull() {
        return processValuesInChunksWithSizeNull_;
      }
      /**
       * <code>optional bool process_values_in_chunks_with_size_null = 1004;</code>
       */
      public Builder setProcessValuesInChunksWithSizeNull(boolean value) {
        
        processValuesInChunksWithSizeNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool process_values_in_chunks_with_size_null = 1004;</code>
       */
      public Builder clearProcessValuesInChunksWithSizeNull() {
        
        processValuesInChunksWithSizeNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Parameters)
    private static final io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters();
    }

    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_SynchronizeItemBinaries_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      boolean hasTimeIntervallId();
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      io.dstore.Values.integerValue getTimeIntervallId();
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      io.dstore.Values.integerValueOrBuilder getTimeIntervallIdOrBuilder();

      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      boolean hasDateIntervallId();
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      io.dstore.Values.integerValue getDateIntervallId();
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      io.dstore.Values.integerValueOrBuilder getDateIntervallIdOrBuilder();

      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      boolean hasBinaryCodeId();
      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      io.dstore.Values.integerValue getBinaryCodeId();
      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder();

      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      boolean hasValue();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      io.dstore.Values.stringValue getValue();
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      io.dstore.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      io.dstore.Values.integerValue getNodeId();
      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      boolean hasSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      io.dstore.Values.integerValue getSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (timeIntervallId_ != null) {
                  subBuilder = timeIntervallId_.toBuilder();
                }
                timeIntervallId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(timeIntervallId_);
                  timeIntervallId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (dateIntervallId_ != null) {
                  subBuilder = dateIntervallId_.toBuilder();
                }
                dateIntervallId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(dateIntervallId_);
                  dateIntervallId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (binaryCodeId_ != null) {
                  subBuilder = binaryCodeId_.toBuilder();
                }
                binaryCodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryCodeId_);
                  binaryCodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TIME_INTERVALL_ID_FIELD_NUMBER = 10001;
      private io.dstore.Values.integerValue timeIntervallId_;
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      public boolean hasTimeIntervallId() {
        return timeIntervallId_ != null;
      }
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      public io.dstore.Values.integerValue getTimeIntervallId() {
        return timeIntervallId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : timeIntervallId_;
      }
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTimeIntervallIdOrBuilder() {
        return getTimeIntervallId();
      }

      public static final int DATE_INTERVALL_ID_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue dateIntervallId_;
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      public boolean hasDateIntervallId() {
        return dateIntervallId_ != null;
      }
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      public io.dstore.Values.integerValue getDateIntervallId() {
        return dateIntervallId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : dateIntervallId_;
      }
      /**
       * <pre>
       * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getDateIntervallIdOrBuilder() {
        return getDateIntervallId();
      }

      public static final int BINARY_CODE_ID_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue binaryCodeId_;
      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public boolean hasBinaryCodeId() {
        return binaryCodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public io.dstore.Values.integerValue getBinaryCodeId() {
        return binaryCodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
      }
      /**
       * <pre>
       * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
        return getBinaryCodeId();
      }

      public static final int VALUE_FIELD_NUMBER = 10004;
      private io.dstore.Values.stringValue value_;
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      public io.dstore.Values.stringValue getValue() {
        return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <pre>
       * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10004;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue nodeId_;
      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      public io.dstore.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <pre>
       * ID eines Arikel-Elementes, das synchronisiert werden muß
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10005;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue sortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      public io.dstore.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (timeIntervallId_ != null) {
          output.writeMessage(10001, getTimeIntervallId());
        }
        if (dateIntervallId_ != null) {
          output.writeMessage(10002, getDateIntervallId());
        }
        if (binaryCodeId_ != null) {
          output.writeMessage(10003, getBinaryCodeId());
        }
        if (value_ != null) {
          output.writeMessage(10004, getValue());
        }
        if (nodeId_ != null) {
          output.writeMessage(10005, getNodeId());
        }
        if (sortNo_ != null) {
          output.writeMessage(10006, getSortNo());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (timeIntervallId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTimeIntervallId());
        }
        if (dateIntervallId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getDateIntervallId());
        }
        if (binaryCodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getBinaryCodeId());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getValue());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getNodeId());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getSortNo());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row other = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasTimeIntervallId() == other.hasTimeIntervallId());
        if (hasTimeIntervallId()) {
          result = result && getTimeIntervallId()
              .equals(other.getTimeIntervallId());
        }
        result = result && (hasDateIntervallId() == other.hasDateIntervallId());
        if (hasDateIntervallId()) {
          result = result && getDateIntervallId()
              .equals(other.getDateIntervallId());
        }
        result = result && (hasBinaryCodeId() == other.hasBinaryCodeId());
        if (hasBinaryCodeId()) {
          result = result && getBinaryCodeId()
              .equals(other.getBinaryCodeId());
        }
        result = result && (hasValue() == other.hasValue());
        if (hasValue()) {
          result = result && getValue()
              .equals(other.getValue());
        }
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && getNodeId()
              .equals(other.getNodeId());
        }
        result = result && (hasSortNo() == other.hasSortNo());
        if (hasSortNo()) {
          result = result && getSortNo()
              .equals(other.getSortNo());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasTimeIntervallId()) {
          hash = (37 * hash) + TIME_INTERVALL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTimeIntervallId().hashCode();
        }
        if (hasDateIntervallId()) {
          hash = (37 * hash) + DATE_INTERVALL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getDateIntervallId().hashCode();
        }
        if (hasBinaryCodeId()) {
          hash = (37 * hash) + BINARY_CODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getBinaryCodeId().hashCode();
        }
        if (hasValue()) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValue().hashCode();
        }
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId().hashCode();
        }
        if (hasSortNo()) {
          hash = (37 * hash) + SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getSortNo().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row)
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (timeIntervallIdBuilder_ == null) {
            timeIntervallId_ = null;
          } else {
            timeIntervallId_ = null;
            timeIntervallIdBuilder_ = null;
          }
          if (dateIntervallIdBuilder_ == null) {
            dateIntervallId_ = null;
          } else {
            dateIntervallId_ = null;
            dateIntervallIdBuilder_ = null;
          }
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row build() {
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row result = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (timeIntervallIdBuilder_ == null) {
            result.timeIntervallId_ = timeIntervallId_;
          } else {
            result.timeIntervallId_ = timeIntervallIdBuilder_.build();
          }
          if (dateIntervallIdBuilder_ == null) {
            result.dateIntervallId_ = dateIntervallId_;
          } else {
            result.dateIntervallId_ = dateIntervallIdBuilder_.build();
          }
          if (binaryCodeIdBuilder_ == null) {
            result.binaryCodeId_ = binaryCodeId_;
          } else {
            result.binaryCodeId_ = binaryCodeIdBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTimeIntervallId()) {
            mergeTimeIntervallId(other.getTimeIntervallId());
          }
          if (other.hasDateIntervallId()) {
            mergeDateIntervallId(other.getDateIntervallId());
          }
          if (other.hasBinaryCodeId()) {
            mergeBinaryCodeId(other.getBinaryCodeId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.integerValue timeIntervallId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> timeIntervallIdBuilder_;
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public boolean hasTimeIntervallId() {
          return timeIntervallIdBuilder_ != null || timeIntervallId_ != null;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public io.dstore.Values.integerValue getTimeIntervallId() {
          if (timeIntervallIdBuilder_ == null) {
            return timeIntervallId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : timeIntervallId_;
          } else {
            return timeIntervallIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public Builder setTimeIntervallId(io.dstore.Values.integerValue value) {
          if (timeIntervallIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            timeIntervallId_ = value;
            onChanged();
          } else {
            timeIntervallIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public Builder setTimeIntervallId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (timeIntervallIdBuilder_ == null) {
            timeIntervallId_ = builderForValue.build();
            onChanged();
          } else {
            timeIntervallIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public Builder mergeTimeIntervallId(io.dstore.Values.integerValue value) {
          if (timeIntervallIdBuilder_ == null) {
            if (timeIntervallId_ != null) {
              timeIntervallId_ =
                io.dstore.Values.integerValue.newBuilder(timeIntervallId_).mergeFrom(value).buildPartial();
            } else {
              timeIntervallId_ = value;
            }
            onChanged();
          } else {
            timeIntervallIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public Builder clearTimeIntervallId() {
          if (timeIntervallIdBuilder_ == null) {
            timeIntervallId_ = null;
            onChanged();
          } else {
            timeIntervallId_ = null;
            timeIntervallIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public io.dstore.Values.integerValue.Builder getTimeIntervallIdBuilder() {
          
          onChanged();
          return getTimeIntervallIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getTimeIntervallIdOrBuilder() {
          if (timeIntervallIdBuilder_ != null) {
            return timeIntervallIdBuilder_.getMessageOrBuilder();
          } else {
            return timeIntervallId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : timeIntervallId_;
          }
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue time_intervall_id = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getTimeIntervallIdFieldBuilder() {
          if (timeIntervallIdBuilder_ == null) {
            timeIntervallIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getTimeIntervallId(),
                    getParentForChildren(),
                    isClean());
            timeIntervallId_ = null;
          }
          return timeIntervallIdBuilder_;
        }

        private io.dstore.Values.integerValue dateIntervallId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> dateIntervallIdBuilder_;
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public boolean hasDateIntervallId() {
          return dateIntervallIdBuilder_ != null || dateIntervallId_ != null;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public io.dstore.Values.integerValue getDateIntervallId() {
          if (dateIntervallIdBuilder_ == null) {
            return dateIntervallId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : dateIntervallId_;
          } else {
            return dateIntervallIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public Builder setDateIntervallId(io.dstore.Values.integerValue value) {
          if (dateIntervallIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dateIntervallId_ = value;
            onChanged();
          } else {
            dateIntervallIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public Builder setDateIntervallId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (dateIntervallIdBuilder_ == null) {
            dateIntervallId_ = builderForValue.build();
            onChanged();
          } else {
            dateIntervallIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public Builder mergeDateIntervallId(io.dstore.Values.integerValue value) {
          if (dateIntervallIdBuilder_ == null) {
            if (dateIntervallId_ != null) {
              dateIntervallId_ =
                io.dstore.Values.integerValue.newBuilder(dateIntervallId_).mergeFrom(value).buildPartial();
            } else {
              dateIntervallId_ = value;
            }
            onChanged();
          } else {
            dateIntervallIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public Builder clearDateIntervallId() {
          if (dateIntervallIdBuilder_ == null) {
            dateIntervallId_ = null;
            onChanged();
          } else {
            dateIntervallId_ = null;
            dateIntervallIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public io.dstore.Values.integerValue.Builder getDateIntervallIdBuilder() {
          
          onChanged();
          return getDateIntervallIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getDateIntervallIdOrBuilder() {
          if (dateIntervallIdBuilder_ != null) {
            return dateIntervallIdBuilder_.getMessageOrBuilder();
          } else {
            return dateIntervallId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : dateIntervallId_;
          }
        }
        /**
         * <pre>
         * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue date_intervall_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getDateIntervallIdFieldBuilder() {
          if (dateIntervallIdBuilder_ == null) {
            dateIntervallIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getDateIntervallId(),
                    getParentForChildren(),
                    isClean());
            dateIntervallId_ = null;
          }
          return dateIntervallIdBuilder_;
        }

        private io.dstore.Values.integerValue binaryCodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> binaryCodeIdBuilder_;
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public boolean hasBinaryCodeId() {
          return binaryCodeIdBuilder_ != null || binaryCodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValue getBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            return binaryCodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          } else {
            return binaryCodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder setBinaryCodeId(io.dstore.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryCodeId_ = value;
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder setBinaryCodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = builderForValue.build();
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder mergeBinaryCodeId(io.dstore.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (binaryCodeId_ != null) {
              binaryCodeId_ =
                io.dstore.Values.integerValue.newBuilder(binaryCodeId_).mergeFrom(value).buildPartial();
            } else {
              binaryCodeId_ = value;
            }
            onChanged();
          } else {
            binaryCodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder clearBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
            onChanged();
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getBinaryCodeIdBuilder() {
          
          onChanged();
          return getBinaryCodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
          if (binaryCodeIdBuilder_ != null) {
            return binaryCodeIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryCodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getBinaryCodeIdFieldBuilder() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getBinaryCodeId(),
                    getParentForChildren(),
                    isClean());
            binaryCodeId_ = null;
          }
          return binaryCodeIdBuilder_;
        }

        private io.dstore.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public io.dstore.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public Builder setValue(io.dstore.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public Builder setValue(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public Builder mergeValue(io.dstore.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public io.dstore.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <pre>
         * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public io.dstore.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public Builder setNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public Builder setNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public Builder mergeNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public io.dstore.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Arikel-Elementes, das synchronisiert werden muß
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public io.dstore.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public Builder setSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public Builder setSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public Builder mergeSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public io.dstore.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row)
      private static final io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response other = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_SynchronizeItemBinaries_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_SynchronizeItemBinaries_Ad.Response)
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.class, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response build() {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response buildPartial() {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response result = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response other) {
        if (other == io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.Row.Builder, io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_SynchronizeItemBinaries_Ad.Response)
    private static final io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response();
    }

    public static io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImSynchronizeItemBinariesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n<dstore/engine/procedures/im_Synchroniz" +
      "eItemBinaries_Ad.proto\022+dstore.engine.im" +
      "_SynchronizeItemBinaries_Ad\032\023dstore/valu" +
      "es.proto\032\033dstore/engine/message.proto\032#d" +
      "store/engine/metainformation.proto\"\264\003\n\nP" +
      "arameters\022B\n\035charac_id_for_synchronizati" +
      "on\030\001 \001(\0132\033.dstore.values.integerValue\022+\n" +
      "\"charac_id_for_synchronization_null\030\351\007 \001" +
      "(\010\0220\n\013report_only\030\002 \001(\0132\033.dstore.values." +
      "booleanValue\022\031\n\020report_only_null\030\352\007 \001(\010\022",
      "A\n\034only_direct_successors_of_id\030\003 \001(\0132\033." +
      "dstore.values.integerValue\022*\n!only_direc" +
      "t_successors_of_id_null\030\353\007 \001(\010\022G\n\"proces" +
      "s_values_in_chunks_with_size\030\004 \001(\0132\033.dst" +
      "ore.values.integerValue\0220\n\'process_value" +
      "s_in_chunks_with_size_null\030\354\007 \001(\010\"\230\004\n\010Re" +
      "sponse\022H\n\020meta_information\030\002 \003(\0132..dstor" +
      "e.engine.metainformation.MetaInformation" +
      "\022/\n\007message\030\003 \003(\0132\036.dstore.engine.messag" +
      "e.Message\022F\n\003row\030\004 \003(\01329.dstore.engine.i",
      "m_SynchronizeItemBinaries_Ad.Response.Ro" +
      "w\032\310\002\n\003Row\022\017\n\006row_id\030\220N \001(\005\0227\n\021time_inter" +
      "vall_id\030\221N \001(\0132\033.dstore.values.integerVa" +
      "lue\0227\n\021date_intervall_id\030\222N \001(\0132\033.dstore" +
      ".values.integerValue\0224\n\016binary_code_id\030\223" +
      "N \001(\0132\033.dstore.values.integerValue\022*\n\005va" +
      "lue\030\224N \001(\0132\032.dstore.values.stringValue\022-" +
      "\n\007node_id\030\225N \001(\0132\033.dstore.values.integer" +
      "Value\022-\n\007sort_no\030\226N \001(\0132\033.dstore.values." +
      "integerValueB^\n\033io.dstore.engine.procedu",
      "resZ?gosdk.dstore.de/engine/procedures/i" +
      "m_SynchronizeItemBinaries_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Parameters_descriptor,
        new java.lang.String[] { "CharacIdForSynchronization", "CharacIdForSynchronizationNull", "ReportOnly", "ReportOnlyNull", "OnlyDirectSuccessorsOfId", "OnlyDirectSuccessorsOfIdNull", "ProcessValuesInChunksWithSize", "ProcessValuesInChunksWithSizeNull", });
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_im_SynchronizeItemBinaries_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TimeIntervallId", "DateIntervallId", "BinaryCodeId", "Value", "NodeId", "SortNo", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
