// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/do_GetProcedureNames_Ad.proto

package io.dstore.engine.procedures;

public final class DoGetProcedureNamesAd {
  private DoGetProcedureNamesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureNames_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    boolean hasProcedureCategoryId();
    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    io.dstore.values.IntegerValue getProcedureCategoryId();
    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder();

    /**
     * <code>bool procedure_category_id_null = 1001;</code>
     */
    boolean getProcedureCategoryIdNull();

    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    boolean hasProcedureTypeId();
    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    io.dstore.values.IntegerValue getProcedureTypeId();
    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder();

    /**
     * <code>bool procedure_type_id_null = 1002;</code>
     */
    boolean getProcedureTypeIdNull();

    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    boolean hasActualVersion();
    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    io.dstore.values.StringValue getActualVersion();
    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    io.dstore.values.StringValueOrBuilder getActualVersionOrBuilder();

    /**
     * <code>bool actual_version_null = 1003;</code>
     */
    boolean getActualVersionNull();

    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    boolean hasProcedureName();
    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    io.dstore.values.StringValue getProcedureName();
    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder();

    /**
     * <code>bool procedure_name_null = 1004;</code>
     */
    boolean getProcedureNameNull();

    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    boolean hasGetProcsWithMissingDocu();
    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    io.dstore.values.BooleanValue getGetProcsWithMissingDocu();
    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    io.dstore.values.BooleanValueOrBuilder getGetProcsWithMissingDocuOrBuilder();

    /**
     * <code>bool get_procs_with_missing_docu_null = 1005;</code>
     */
    boolean getGetProcsWithMissingDocuNull();
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureNames_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      procedureCategoryIdNull_ = false;
      procedureTypeIdNull_ = false;
      actualVersionNull_ = false;
      procedureNameNull_ = false;
      getProcsWithMissingDocuNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (procedureCategoryId_ != null) {
                subBuilder = procedureCategoryId_.toBuilder();
              }
              procedureCategoryId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureCategoryId_);
                procedureCategoryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (procedureTypeId_ != null) {
                subBuilder = procedureTypeId_.toBuilder();
              }
              procedureTypeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureTypeId_);
                procedureTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (actualVersion_ != null) {
                subBuilder = actualVersion_.toBuilder();
              }
              actualVersion_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(actualVersion_);
                actualVersion_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (procedureName_ != null) {
                subBuilder = procedureName_.toBuilder();
              }
              procedureName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureName_);
                procedureName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.values.BooleanValue.Builder subBuilder = null;
              if (getProcsWithMissingDocu_ != null) {
                subBuilder = getProcsWithMissingDocu_.toBuilder();
              }
              getProcsWithMissingDocu_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getProcsWithMissingDocu_);
                getProcsWithMissingDocu_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureCategoryIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              procedureTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              actualVersionNull_ = input.readBool();
              break;
            }
            case 8032: {

              procedureNameNull_ = input.readBool();
              break;
            }
            case 8040: {

              getProcsWithMissingDocuNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.Builder.class);
    }

    public static final int PROCEDURE_CATEGORY_ID_FIELD_NUMBER = 1;
    private io.dstore.values.IntegerValue procedureCategoryId_;
    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    public boolean hasProcedureCategoryId() {
      return procedureCategoryId_ != null;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    public io.dstore.values.IntegerValue getProcedureCategoryId() {
      return procedureCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder() {
      return getProcedureCategoryId();
    }

    public static final int PROCEDURE_CATEGORY_ID_NULL_FIELD_NUMBER = 1001;
    private boolean procedureCategoryIdNull_;
    /**
     * <code>bool procedure_category_id_null = 1001;</code>
     */
    public boolean getProcedureCategoryIdNull() {
      return procedureCategoryIdNull_;
    }

    public static final int PROCEDURE_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.values.IntegerValue procedureTypeId_;
    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    public boolean hasProcedureTypeId() {
      return procedureTypeId_ != null;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    public io.dstore.values.IntegerValue getProcedureTypeId() {
      return procedureTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder() {
      return getProcedureTypeId();
    }

    public static final int PROCEDURE_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean procedureTypeIdNull_;
    /**
     * <code>bool procedure_type_id_null = 1002;</code>
     */
    public boolean getProcedureTypeIdNull() {
      return procedureTypeIdNull_;
    }

    public static final int ACTUAL_VERSION_FIELD_NUMBER = 3;
    private io.dstore.values.StringValue actualVersion_;
    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    public boolean hasActualVersion() {
      return actualVersion_ != null;
    }
    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    public io.dstore.values.StringValue getActualVersion() {
      return actualVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : actualVersion_;
    }
    /**
     * <code>.dstore.values.StringValue actual_version = 3;</code>
     */
    public io.dstore.values.StringValueOrBuilder getActualVersionOrBuilder() {
      return getActualVersion();
    }

    public static final int ACTUAL_VERSION_NULL_FIELD_NUMBER = 1003;
    private boolean actualVersionNull_;
    /**
     * <code>bool actual_version_null = 1003;</code>
     */
    public boolean getActualVersionNull() {
      return actualVersionNull_;
    }

    public static final int PROCEDURE_NAME_FIELD_NUMBER = 4;
    private io.dstore.values.StringValue procedureName_;
    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    public boolean hasProcedureName() {
      return procedureName_ != null;
    }
    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    public io.dstore.values.StringValue getProcedureName() {
      return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
    }
    /**
     * <code>.dstore.values.StringValue procedure_name = 4;</code>
     */
    public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
      return getProcedureName();
    }

    public static final int PROCEDURE_NAME_NULL_FIELD_NUMBER = 1004;
    private boolean procedureNameNull_;
    /**
     * <code>bool procedure_name_null = 1004;</code>
     */
    public boolean getProcedureNameNull() {
      return procedureNameNull_;
    }

    public static final int GET_PROCS_WITH_MISSING_DOCU_FIELD_NUMBER = 5;
    private io.dstore.values.BooleanValue getProcsWithMissingDocu_;
    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    public boolean hasGetProcsWithMissingDocu() {
      return getProcsWithMissingDocu_ != null;
    }
    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    public io.dstore.values.BooleanValue getGetProcsWithMissingDocu() {
      return getProcsWithMissingDocu_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : getProcsWithMissingDocu_;
    }
    /**
     * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
     */
    public io.dstore.values.BooleanValueOrBuilder getGetProcsWithMissingDocuOrBuilder() {
      return getGetProcsWithMissingDocu();
    }

    public static final int GET_PROCS_WITH_MISSING_DOCU_NULL_FIELD_NUMBER = 1005;
    private boolean getProcsWithMissingDocuNull_;
    /**
     * <code>bool get_procs_with_missing_docu_null = 1005;</code>
     */
    public boolean getGetProcsWithMissingDocuNull() {
      return getProcsWithMissingDocuNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureCategoryId_ != null) {
        output.writeMessage(1, getProcedureCategoryId());
      }
      if (procedureTypeId_ != null) {
        output.writeMessage(2, getProcedureTypeId());
      }
      if (actualVersion_ != null) {
        output.writeMessage(3, getActualVersion());
      }
      if (procedureName_ != null) {
        output.writeMessage(4, getProcedureName());
      }
      if (getProcsWithMissingDocu_ != null) {
        output.writeMessage(5, getGetProcsWithMissingDocu());
      }
      if (procedureCategoryIdNull_ != false) {
        output.writeBool(1001, procedureCategoryIdNull_);
      }
      if (procedureTypeIdNull_ != false) {
        output.writeBool(1002, procedureTypeIdNull_);
      }
      if (actualVersionNull_ != false) {
        output.writeBool(1003, actualVersionNull_);
      }
      if (procedureNameNull_ != false) {
        output.writeBool(1004, procedureNameNull_);
      }
      if (getProcsWithMissingDocuNull_ != false) {
        output.writeBool(1005, getProcsWithMissingDocuNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureCategoryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureCategoryId());
      }
      if (procedureTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProcedureTypeId());
      }
      if (actualVersion_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getActualVersion());
      }
      if (procedureName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getProcedureName());
      }
      if (getProcsWithMissingDocu_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGetProcsWithMissingDocu());
      }
      if (procedureCategoryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureCategoryIdNull_);
      }
      if (procedureTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, procedureTypeIdNull_);
      }
      if (actualVersionNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, actualVersionNull_);
      }
      if (procedureNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, procedureNameNull_);
      }
      if (getProcsWithMissingDocuNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, getProcsWithMissingDocuNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters other = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters) obj;

      boolean result = true;
      result = result && (hasProcedureCategoryId() == other.hasProcedureCategoryId());
      if (hasProcedureCategoryId()) {
        result = result && getProcedureCategoryId()
            .equals(other.getProcedureCategoryId());
      }
      result = result && (getProcedureCategoryIdNull()
          == other.getProcedureCategoryIdNull());
      result = result && (hasProcedureTypeId() == other.hasProcedureTypeId());
      if (hasProcedureTypeId()) {
        result = result && getProcedureTypeId()
            .equals(other.getProcedureTypeId());
      }
      result = result && (getProcedureTypeIdNull()
          == other.getProcedureTypeIdNull());
      result = result && (hasActualVersion() == other.hasActualVersion());
      if (hasActualVersion()) {
        result = result && getActualVersion()
            .equals(other.getActualVersion());
      }
      result = result && (getActualVersionNull()
          == other.getActualVersionNull());
      result = result && (hasProcedureName() == other.hasProcedureName());
      if (hasProcedureName()) {
        result = result && getProcedureName()
            .equals(other.getProcedureName());
      }
      result = result && (getProcedureNameNull()
          == other.getProcedureNameNull());
      result = result && (hasGetProcsWithMissingDocu() == other.hasGetProcsWithMissingDocu());
      if (hasGetProcsWithMissingDocu()) {
        result = result && getGetProcsWithMissingDocu()
            .equals(other.getGetProcsWithMissingDocu());
      }
      result = result && (getGetProcsWithMissingDocuNull()
          == other.getGetProcsWithMissingDocuNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProcedureCategoryId()) {
        hash = (37 * hash) + PROCEDURE_CATEGORY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureCategoryId().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_CATEGORY_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureCategoryIdNull());
      if (hasProcedureTypeId()) {
        hash = (37 * hash) + PROCEDURE_TYPE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureTypeId().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_TYPE_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureTypeIdNull());
      if (hasActualVersion()) {
        hash = (37 * hash) + ACTUAL_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getActualVersion().hashCode();
      }
      hash = (37 * hash) + ACTUAL_VERSION_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActualVersionNull());
      if (hasProcedureName()) {
        hash = (37 * hash) + PROCEDURE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureName().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_NAME_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureNameNull());
      if (hasGetProcsWithMissingDocu()) {
        hash = (37 * hash) + GET_PROCS_WITH_MISSING_DOCU_FIELD_NUMBER;
        hash = (53 * hash) + getGetProcsWithMissingDocu().hashCode();
      }
      hash = (37 * hash) + GET_PROCS_WITH_MISSING_DOCU_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGetProcsWithMissingDocuNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureNames_Ad.Parameters)
        io.dstore.engine.procedures.DoGetProcedureNamesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = null;
        } else {
          procedureCategoryId_ = null;
          procedureCategoryIdBuilder_ = null;
        }
        procedureCategoryIdNull_ = false;

        if (procedureTypeIdBuilder_ == null) {
          procedureTypeId_ = null;
        } else {
          procedureTypeId_ = null;
          procedureTypeIdBuilder_ = null;
        }
        procedureTypeIdNull_ = false;

        if (actualVersionBuilder_ == null) {
          actualVersion_ = null;
        } else {
          actualVersion_ = null;
          actualVersionBuilder_ = null;
        }
        actualVersionNull_ = false;

        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }
        procedureNameNull_ = false;

        if (getProcsWithMissingDocuBuilder_ == null) {
          getProcsWithMissingDocu_ = null;
        } else {
          getProcsWithMissingDocu_ = null;
          getProcsWithMissingDocuBuilder_ = null;
        }
        getProcsWithMissingDocuNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters build() {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters result = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters(this);
        if (procedureCategoryIdBuilder_ == null) {
          result.procedureCategoryId_ = procedureCategoryId_;
        } else {
          result.procedureCategoryId_ = procedureCategoryIdBuilder_.build();
        }
        result.procedureCategoryIdNull_ = procedureCategoryIdNull_;
        if (procedureTypeIdBuilder_ == null) {
          result.procedureTypeId_ = procedureTypeId_;
        } else {
          result.procedureTypeId_ = procedureTypeIdBuilder_.build();
        }
        result.procedureTypeIdNull_ = procedureTypeIdNull_;
        if (actualVersionBuilder_ == null) {
          result.actualVersion_ = actualVersion_;
        } else {
          result.actualVersion_ = actualVersionBuilder_.build();
        }
        result.actualVersionNull_ = actualVersionNull_;
        if (procedureNameBuilder_ == null) {
          result.procedureName_ = procedureName_;
        } else {
          result.procedureName_ = procedureNameBuilder_.build();
        }
        result.procedureNameNull_ = procedureNameNull_;
        if (getProcsWithMissingDocuBuilder_ == null) {
          result.getProcsWithMissingDocu_ = getProcsWithMissingDocu_;
        } else {
          result.getProcsWithMissingDocu_ = getProcsWithMissingDocuBuilder_.build();
        }
        result.getProcsWithMissingDocuNull_ = getProcsWithMissingDocuNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureCategoryId()) {
          mergeProcedureCategoryId(other.getProcedureCategoryId());
        }
        if (other.getProcedureCategoryIdNull() != false) {
          setProcedureCategoryIdNull(other.getProcedureCategoryIdNull());
        }
        if (other.hasProcedureTypeId()) {
          mergeProcedureTypeId(other.getProcedureTypeId());
        }
        if (other.getProcedureTypeIdNull() != false) {
          setProcedureTypeIdNull(other.getProcedureTypeIdNull());
        }
        if (other.hasActualVersion()) {
          mergeActualVersion(other.getActualVersion());
        }
        if (other.getActualVersionNull() != false) {
          setActualVersionNull(other.getActualVersionNull());
        }
        if (other.hasProcedureName()) {
          mergeProcedureName(other.getProcedureName());
        }
        if (other.getProcedureNameNull() != false) {
          setProcedureNameNull(other.getProcedureNameNull());
        }
        if (other.hasGetProcsWithMissingDocu()) {
          mergeGetProcsWithMissingDocu(other.getGetProcsWithMissingDocu());
        }
        if (other.getGetProcsWithMissingDocuNull() != false) {
          setGetProcsWithMissingDocuNull(other.getGetProcsWithMissingDocuNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.IntegerValue procedureCategoryId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> procedureCategoryIdBuilder_;
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public boolean hasProcedureCategoryId() {
        return procedureCategoryIdBuilder_ != null || procedureCategoryId_ != null;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public io.dstore.values.IntegerValue getProcedureCategoryId() {
        if (procedureCategoryIdBuilder_ == null) {
          return procedureCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
        } else {
          return procedureCategoryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public Builder setProcedureCategoryId(io.dstore.values.IntegerValue value) {
        if (procedureCategoryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureCategoryId_ = value;
          onChanged();
        } else {
          procedureCategoryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public Builder setProcedureCategoryId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = builderForValue.build();
          onChanged();
        } else {
          procedureCategoryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public Builder mergeProcedureCategoryId(io.dstore.values.IntegerValue value) {
        if (procedureCategoryIdBuilder_ == null) {
          if (procedureCategoryId_ != null) {
            procedureCategoryId_ =
              io.dstore.values.IntegerValue.newBuilder(procedureCategoryId_).mergeFrom(value).buildPartial();
          } else {
            procedureCategoryId_ = value;
          }
          onChanged();
        } else {
          procedureCategoryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public Builder clearProcedureCategoryId() {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = null;
          onChanged();
        } else {
          procedureCategoryId_ = null;
          procedureCategoryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public io.dstore.values.IntegerValue.Builder getProcedureCategoryIdBuilder() {
        
        onChanged();
        return getProcedureCategoryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder() {
        if (procedureCategoryIdBuilder_ != null) {
          return procedureCategoryIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureCategoryId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_category_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getProcedureCategoryIdFieldBuilder() {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getProcedureCategoryId(),
                  getParentForChildren(),
                  isClean());
          procedureCategoryId_ = null;
        }
        return procedureCategoryIdBuilder_;
      }

      private boolean procedureCategoryIdNull_ ;
      /**
       * <code>bool procedure_category_id_null = 1001;</code>
       */
      public boolean getProcedureCategoryIdNull() {
        return procedureCategoryIdNull_;
      }
      /**
       * <code>bool procedure_category_id_null = 1001;</code>
       */
      public Builder setProcedureCategoryIdNull(boolean value) {
        
        procedureCategoryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool procedure_category_id_null = 1001;</code>
       */
      public Builder clearProcedureCategoryIdNull() {
        
        procedureCategoryIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.IntegerValue procedureTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> procedureTypeIdBuilder_;
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public boolean hasProcedureTypeId() {
        return procedureTypeIdBuilder_ != null || procedureTypeId_ != null;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public io.dstore.values.IntegerValue getProcedureTypeId() {
        if (procedureTypeIdBuilder_ == null) {
          return procedureTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
        } else {
          return procedureTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public Builder setProcedureTypeId(io.dstore.values.IntegerValue value) {
        if (procedureTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureTypeId_ = value;
          onChanged();
        } else {
          procedureTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public Builder setProcedureTypeId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (procedureTypeIdBuilder_ == null) {
          procedureTypeId_ = builderForValue.build();
          onChanged();
        } else {
          procedureTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public Builder mergeProcedureTypeId(io.dstore.values.IntegerValue value) {
        if (procedureTypeIdBuilder_ == null) {
          if (procedureTypeId_ != null) {
            procedureTypeId_ =
              io.dstore.values.IntegerValue.newBuilder(procedureTypeId_).mergeFrom(value).buildPartial();
          } else {
            procedureTypeId_ = value;
          }
          onChanged();
        } else {
          procedureTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public Builder clearProcedureTypeId() {
        if (procedureTypeIdBuilder_ == null) {
          procedureTypeId_ = null;
          onChanged();
        } else {
          procedureTypeId_ = null;
          procedureTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public io.dstore.values.IntegerValue.Builder getProcedureTypeIdBuilder() {
        
        onChanged();
        return getProcedureTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder() {
        if (procedureTypeIdBuilder_ != null) {
          return procedureTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureTypeId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getProcedureTypeIdFieldBuilder() {
        if (procedureTypeIdBuilder_ == null) {
          procedureTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getProcedureTypeId(),
                  getParentForChildren(),
                  isClean());
          procedureTypeId_ = null;
        }
        return procedureTypeIdBuilder_;
      }

      private boolean procedureTypeIdNull_ ;
      /**
       * <code>bool procedure_type_id_null = 1002;</code>
       */
      public boolean getProcedureTypeIdNull() {
        return procedureTypeIdNull_;
      }
      /**
       * <code>bool procedure_type_id_null = 1002;</code>
       */
      public Builder setProcedureTypeIdNull(boolean value) {
        
        procedureTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool procedure_type_id_null = 1002;</code>
       */
      public Builder clearProcedureTypeIdNull() {
        
        procedureTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue actualVersion_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> actualVersionBuilder_;
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public boolean hasActualVersion() {
        return actualVersionBuilder_ != null || actualVersion_ != null;
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public io.dstore.values.StringValue getActualVersion() {
        if (actualVersionBuilder_ == null) {
          return actualVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : actualVersion_;
        } else {
          return actualVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public Builder setActualVersion(io.dstore.values.StringValue value) {
        if (actualVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          actualVersion_ = value;
          onChanged();
        } else {
          actualVersionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public Builder setActualVersion(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (actualVersionBuilder_ == null) {
          actualVersion_ = builderForValue.build();
          onChanged();
        } else {
          actualVersionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public Builder mergeActualVersion(io.dstore.values.StringValue value) {
        if (actualVersionBuilder_ == null) {
          if (actualVersion_ != null) {
            actualVersion_ =
              io.dstore.values.StringValue.newBuilder(actualVersion_).mergeFrom(value).buildPartial();
          } else {
            actualVersion_ = value;
          }
          onChanged();
        } else {
          actualVersionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public Builder clearActualVersion() {
        if (actualVersionBuilder_ == null) {
          actualVersion_ = null;
          onChanged();
        } else {
          actualVersion_ = null;
          actualVersionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public io.dstore.values.StringValue.Builder getActualVersionBuilder() {
        
        onChanged();
        return getActualVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      public io.dstore.values.StringValueOrBuilder getActualVersionOrBuilder() {
        if (actualVersionBuilder_ != null) {
          return actualVersionBuilder_.getMessageOrBuilder();
        } else {
          return actualVersion_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : actualVersion_;
        }
      }
      /**
       * <code>.dstore.values.StringValue actual_version = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getActualVersionFieldBuilder() {
        if (actualVersionBuilder_ == null) {
          actualVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getActualVersion(),
                  getParentForChildren(),
                  isClean());
          actualVersion_ = null;
        }
        return actualVersionBuilder_;
      }

      private boolean actualVersionNull_ ;
      /**
       * <code>bool actual_version_null = 1003;</code>
       */
      public boolean getActualVersionNull() {
        return actualVersionNull_;
      }
      /**
       * <code>bool actual_version_null = 1003;</code>
       */
      public Builder setActualVersionNull(boolean value) {
        
        actualVersionNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool actual_version_null = 1003;</code>
       */
      public Builder clearActualVersionNull() {
        
        actualVersionNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue procedureName_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureNameBuilder_;
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public boolean hasProcedureName() {
        return procedureNameBuilder_ != null || procedureName_ != null;
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public io.dstore.values.StringValue getProcedureName() {
        if (procedureNameBuilder_ == null) {
          return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
        } else {
          return procedureNameBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public Builder setProcedureName(io.dstore.values.StringValue value) {
        if (procedureNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureName_ = value;
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public Builder setProcedureName(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (procedureNameBuilder_ == null) {
          procedureName_ = builderForValue.build();
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public Builder mergeProcedureName(io.dstore.values.StringValue value) {
        if (procedureNameBuilder_ == null) {
          if (procedureName_ != null) {
            procedureName_ =
              io.dstore.values.StringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
          } else {
            procedureName_ = value;
          }
          onChanged();
        } else {
          procedureNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public Builder clearProcedureName() {
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
          onChanged();
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public io.dstore.values.StringValue.Builder getProcedureNameBuilder() {
        
        onChanged();
        return getProcedureNameFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
        if (procedureNameBuilder_ != null) {
          return procedureNameBuilder_.getMessageOrBuilder();
        } else {
          return procedureName_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
        }
      }
      /**
       * <code>.dstore.values.StringValue procedure_name = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getProcedureNameFieldBuilder() {
        if (procedureNameBuilder_ == null) {
          procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getProcedureName(),
                  getParentForChildren(),
                  isClean());
          procedureName_ = null;
        }
        return procedureNameBuilder_;
      }

      private boolean procedureNameNull_ ;
      /**
       * <code>bool procedure_name_null = 1004;</code>
       */
      public boolean getProcedureNameNull() {
        return procedureNameNull_;
      }
      /**
       * <code>bool procedure_name_null = 1004;</code>
       */
      public Builder setProcedureNameNull(boolean value) {
        
        procedureNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool procedure_name_null = 1004;</code>
       */
      public Builder clearProcedureNameNull() {
        
        procedureNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.BooleanValue getProcsWithMissingDocu_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> getProcsWithMissingDocuBuilder_;
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public boolean hasGetProcsWithMissingDocu() {
        return getProcsWithMissingDocuBuilder_ != null || getProcsWithMissingDocu_ != null;
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public io.dstore.values.BooleanValue getGetProcsWithMissingDocu() {
        if (getProcsWithMissingDocuBuilder_ == null) {
          return getProcsWithMissingDocu_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : getProcsWithMissingDocu_;
        } else {
          return getProcsWithMissingDocuBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public Builder setGetProcsWithMissingDocu(io.dstore.values.BooleanValue value) {
        if (getProcsWithMissingDocuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getProcsWithMissingDocu_ = value;
          onChanged();
        } else {
          getProcsWithMissingDocuBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public Builder setGetProcsWithMissingDocu(
          io.dstore.values.BooleanValue.Builder builderForValue) {
        if (getProcsWithMissingDocuBuilder_ == null) {
          getProcsWithMissingDocu_ = builderForValue.build();
          onChanged();
        } else {
          getProcsWithMissingDocuBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public Builder mergeGetProcsWithMissingDocu(io.dstore.values.BooleanValue value) {
        if (getProcsWithMissingDocuBuilder_ == null) {
          if (getProcsWithMissingDocu_ != null) {
            getProcsWithMissingDocu_ =
              io.dstore.values.BooleanValue.newBuilder(getProcsWithMissingDocu_).mergeFrom(value).buildPartial();
          } else {
            getProcsWithMissingDocu_ = value;
          }
          onChanged();
        } else {
          getProcsWithMissingDocuBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public Builder clearGetProcsWithMissingDocu() {
        if (getProcsWithMissingDocuBuilder_ == null) {
          getProcsWithMissingDocu_ = null;
          onChanged();
        } else {
          getProcsWithMissingDocu_ = null;
          getProcsWithMissingDocuBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public io.dstore.values.BooleanValue.Builder getGetProcsWithMissingDocuBuilder() {
        
        onChanged();
        return getGetProcsWithMissingDocuFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getGetProcsWithMissingDocuOrBuilder() {
        if (getProcsWithMissingDocuBuilder_ != null) {
          return getProcsWithMissingDocuBuilder_.getMessageOrBuilder();
        } else {
          return getProcsWithMissingDocu_ == null ?
              io.dstore.values.BooleanValue.getDefaultInstance() : getProcsWithMissingDocu_;
        }
      }
      /**
       * <code>.dstore.values.BooleanValue get_procs_with_missing_docu = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
          getGetProcsWithMissingDocuFieldBuilder() {
        if (getProcsWithMissingDocuBuilder_ == null) {
          getProcsWithMissingDocuBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                  getGetProcsWithMissingDocu(),
                  getParentForChildren(),
                  isClean());
          getProcsWithMissingDocu_ = null;
        }
        return getProcsWithMissingDocuBuilder_;
      }

      private boolean getProcsWithMissingDocuNull_ ;
      /**
       * <code>bool get_procs_with_missing_docu_null = 1005;</code>
       */
      public boolean getGetProcsWithMissingDocuNull() {
        return getProcsWithMissingDocuNull_;
      }
      /**
       * <code>bool get_procs_with_missing_docu_null = 1005;</code>
       */
      public Builder setGetProcsWithMissingDocuNull(boolean value) {
        
        getProcsWithMissingDocuNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool get_procs_with_missing_docu_null = 1005;</code>
       */
      public Builder clearGetProcsWithMissingDocuNull() {
        
        getProcsWithMissingDocuNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureNames_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureNames_Ad.Parameters)
    private static final io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters();
    }

    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.DoGetProcedureNamesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureNames_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureNames_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureNames_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      boolean hasProcedureType();
      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      io.dstore.values.StringValue getProcedureType();
      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      io.dstore.values.StringValueOrBuilder getProcedureTypeOrBuilder();

      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      boolean hasProcedureCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      io.dstore.values.IntegerValue getProcedureCategoryId();
      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder();

      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      boolean hasProcedureFunction();
      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      io.dstore.values.StringValue getProcedureFunction();
      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      io.dstore.values.StringValueOrBuilder getProcedureFunctionOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      boolean hasProcedureCategory();
      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      io.dstore.values.StringValue getProcedureCategory();
      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      io.dstore.values.StringValueOrBuilder getProcedureCategoryOrBuilder();

      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      boolean hasActualdstoreVersion();
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      io.dstore.values.StringValue getActualdstoreVersion();
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      io.dstore.values.StringValueOrBuilder getActualdstoreVersionOrBuilder();

      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      boolean hasProcedureTypeId();
      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      io.dstore.values.IntegerValue getProcedureTypeId();
      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder();

      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      boolean hasLastEditedAtChar();
      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      io.dstore.values.StringValue getLastEditedAtChar();
      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      io.dstore.values.StringValueOrBuilder getLastEditedAtCharOrBuilder();

      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      boolean hasProcedureName();
      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      io.dstore.values.StringValue getProcedureName();
      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder();

      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      boolean hasFirstdstoreVersion();
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      io.dstore.values.StringValue getFirstdstoreVersion();
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      io.dstore.values.StringValueOrBuilder getFirstdstoreVersionOrBuilder();

      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      boolean hasAuthor();
      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      io.dstore.values.StringValue getAuthor();
      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      io.dstore.values.StringValueOrBuilder getAuthorOrBuilder();

      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      boolean hasFirstCreatedAtChar();
      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      io.dstore.values.StringValue getFirstCreatedAtChar();
      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      io.dstore.values.StringValueOrBuilder getFirstCreatedAtCharOrBuilder();

      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      boolean hasAliasProcedureName();
      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      io.dstore.values.StringValue getAliasProcedureName();
      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      io.dstore.values.StringValueOrBuilder getAliasProcedureNameOrBuilder();

      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      boolean hasRegisteredForDocu();
      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      io.dstore.values.BooleanValue getRegisteredForDocu();
      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getRegisteredForDocuOrBuilder();

      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      boolean hasLastCreatedAtChar();
      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      io.dstore.values.StringValue getLastCreatedAtChar();
      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      io.dstore.values.StringValueOrBuilder getLastCreatedAtCharOrBuilder();

      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      boolean hasDocuExists();
      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      io.dstore.values.BooleanValue getDocuExists();
      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getDocuExistsOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureNames_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (procedureType_ != null) {
                  subBuilder = procedureType_.toBuilder();
                }
                procedureType_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureType_);
                  procedureType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (procedureCategoryId_ != null) {
                  subBuilder = procedureCategoryId_.toBuilder();
                }
                procedureCategoryId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureCategoryId_);
                  procedureCategoryId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (procedureFunction_ != null) {
                  subBuilder = procedureFunction_.toBuilder();
                }
                procedureFunction_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureFunction_);
                  procedureFunction_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (procedureCategory_ != null) {
                  subBuilder = procedureCategory_.toBuilder();
                }
                procedureCategory_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureCategory_);
                  procedureCategory_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (actualdstoreVersion_ != null) {
                  subBuilder = actualdstoreVersion_.toBuilder();
                }
                actualdstoreVersion_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(actualdstoreVersion_);
                  actualdstoreVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (procedureTypeId_ != null) {
                  subBuilder = procedureTypeId_.toBuilder();
                }
                procedureTypeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureTypeId_);
                  procedureTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (lastEditedAtChar_ != null) {
                  subBuilder = lastEditedAtChar_.toBuilder();
                }
                lastEditedAtChar_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastEditedAtChar_);
                  lastEditedAtChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (procedureName_ != null) {
                  subBuilder = procedureName_.toBuilder();
                }
                procedureName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureName_);
                  procedureName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (firstdstoreVersion_ != null) {
                  subBuilder = firstdstoreVersion_.toBuilder();
                }
                firstdstoreVersion_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(firstdstoreVersion_);
                  firstdstoreVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (author_ != null) {
                  subBuilder = author_.toBuilder();
                }
                author_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(author_);
                  author_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (firstCreatedAtChar_ != null) {
                  subBuilder = firstCreatedAtChar_.toBuilder();
                }
                firstCreatedAtChar_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(firstCreatedAtChar_);
                  firstCreatedAtChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (aliasProcedureName_ != null) {
                  subBuilder = aliasProcedureName_.toBuilder();
                }
                aliasProcedureName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(aliasProcedureName_);
                  aliasProcedureName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (registeredForDocu_ != null) {
                  subBuilder = registeredForDocu_.toBuilder();
                }
                registeredForDocu_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(registeredForDocu_);
                  registeredForDocu_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (lastCreatedAtChar_ != null) {
                  subBuilder = lastCreatedAtChar_.toBuilder();
                }
                lastCreatedAtChar_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lastCreatedAtChar_);
                  lastCreatedAtChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (docuExists_ != null) {
                  subBuilder = docuExists_.toBuilder();
                }
                docuExists_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(docuExists_);
                  docuExists_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PROCEDURE_TYPE_FIELD_NUMBER = 10001;
      private io.dstore.values.StringValue procedureType_;
      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      public boolean hasProcedureType() {
        return procedureType_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      public io.dstore.values.StringValue getProcedureType() {
        return procedureType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureType_;
      }
      /**
       * <pre>
       * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_type = 10001;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureTypeOrBuilder() {
        return getProcedureType();
      }

      public static final int PROCEDURE_CATEGORY_ID_FIELD_NUMBER = 10002;
      private io.dstore.values.IntegerValue procedureCategoryId_;
      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      public boolean hasProcedureCategoryId() {
        return procedureCategoryId_ != null;
      }
      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      public io.dstore.values.IntegerValue getProcedureCategoryId() {
        return procedureCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
      }
      /**
       * <pre>
       * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder() {
        return getProcedureCategoryId();
      }

      public static final int PROCEDURE_FUNCTION_FIELD_NUMBER = 10003;
      private io.dstore.values.StringValue procedureFunction_;
      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      public boolean hasProcedureFunction() {
        return procedureFunction_ != null;
      }
      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      public io.dstore.values.StringValue getProcedureFunction() {
        return procedureFunction_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureFunction_;
      }
      /**
       * <pre>
       * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_function = 10003;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureFunctionOrBuilder() {
        return getProcedureFunction();
      }

      public static final int PROCEDURE_CATEGORY_FIELD_NUMBER = 10004;
      private io.dstore.values.StringValue procedureCategory_;
      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      public boolean hasProcedureCategory() {
        return procedureCategory_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      public io.dstore.values.StringValue getProcedureCategory() {
        return procedureCategory_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureCategory_;
      }
      /**
       * <pre>
       * Bezeichnung der Kategorie "ProcedureCategoryID"
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_category = 10004;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureCategoryOrBuilder() {
        return getProcedureCategory();
      }

      public static final int ACTUALDSTORE_VERSION_FIELD_NUMBER = 10005;
      private io.dstore.values.StringValue actualdstoreVersion_;
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      public boolean hasActualdstoreVersion() {
        return actualdstoreVersion_ != null;
      }
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      public io.dstore.values.StringValue getActualdstoreVersion() {
        return actualdstoreVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : actualdstoreVersion_;
      }
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
       * </pre>
       *
       * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
       */
      public io.dstore.values.StringValueOrBuilder getActualdstoreVersionOrBuilder() {
        return getActualdstoreVersion();
      }

      public static final int PROCEDURE_TYPE_ID_FIELD_NUMBER = 10006;
      private io.dstore.values.IntegerValue procedureTypeId_;
      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      public boolean hasProcedureTypeId() {
        return procedureTypeId_ != null;
      }
      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      public io.dstore.values.IntegerValue getProcedureTypeId() {
        return procedureTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
      }
      /**
       * <pre>
       * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
       * </pre>
       *
       * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder() {
        return getProcedureTypeId();
      }

      public static final int LAST_EDITED_AT_CHAR_FIELD_NUMBER = 10007;
      private io.dstore.values.StringValue lastEditedAtChar_;
      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      public boolean hasLastEditedAtChar() {
        return lastEditedAtChar_ != null;
      }
      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      public io.dstore.values.StringValue getLastEditedAtChar() {
        return lastEditedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lastEditedAtChar_;
      }
      /**
       * <pre>
       * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLastEditedAtCharOrBuilder() {
        return getLastEditedAtChar();
      }

      public static final int PROCEDURE_NAME_FIELD_NUMBER = 10008;
      private io.dstore.values.StringValue procedureName_;
      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      public boolean hasProcedureName() {
        return procedureName_ != null;
      }
      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      public io.dstore.values.StringValue getProcedureName() {
        return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
      }
      /**
       * <pre>
       * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue procedure_name = 10008;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
        return getProcedureName();
      }

      public static final int FIRSTDSTORE_VERSION_FIELD_NUMBER = 10009;
      private io.dstore.values.StringValue firstdstoreVersion_;
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      public boolean hasFirstdstoreVersion() {
        return firstdstoreVersion_ != null;
      }
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      public io.dstore.values.StringValue getFirstdstoreVersion() {
        return firstdstoreVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : firstdstoreVersion_;
      }
      /**
       * <pre>
       * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
       * </pre>
       *
       * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
       */
      public io.dstore.values.StringValueOrBuilder getFirstdstoreVersionOrBuilder() {
        return getFirstdstoreVersion();
      }

      public static final int AUTHOR_FIELD_NUMBER = 10010;
      private io.dstore.values.StringValue author_;
      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      public boolean hasAuthor() {
        return author_ != null;
      }
      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      public io.dstore.values.StringValue getAuthor() {
        return author_ == null ? io.dstore.values.StringValue.getDefaultInstance() : author_;
      }
      /**
       * <pre>
       * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
       * </pre>
       *
       * <code>.dstore.values.StringValue author = 10010;</code>
       */
      public io.dstore.values.StringValueOrBuilder getAuthorOrBuilder() {
        return getAuthor();
      }

      public static final int FIRST_CREATED_AT_CHAR_FIELD_NUMBER = 10011;
      private io.dstore.values.StringValue firstCreatedAtChar_;
      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      public boolean hasFirstCreatedAtChar() {
        return firstCreatedAtChar_ != null;
      }
      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      public io.dstore.values.StringValue getFirstCreatedAtChar() {
        return firstCreatedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : firstCreatedAtChar_;
      }
      /**
       * <pre>
       * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
       * </pre>
       *
       * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
       */
      public io.dstore.values.StringValueOrBuilder getFirstCreatedAtCharOrBuilder() {
        return getFirstCreatedAtChar();
      }

      public static final int ALIAS_PROCEDURE_NAME_FIELD_NUMBER = 10012;
      private io.dstore.values.StringValue aliasProcedureName_;
      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      public boolean hasAliasProcedureName() {
        return aliasProcedureName_ != null;
      }
      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      public io.dstore.values.StringValue getAliasProcedureName() {
        return aliasProcedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : aliasProcedureName_;
      }
      /**
       * <pre>
       * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
       * </pre>
       *
       * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
       */
      public io.dstore.values.StringValueOrBuilder getAliasProcedureNameOrBuilder() {
        return getAliasProcedureName();
      }

      public static final int REGISTERED_FOR_DOCU_FIELD_NUMBER = 10013;
      private io.dstore.values.BooleanValue registeredForDocu_;
      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      public boolean hasRegisteredForDocu() {
        return registeredForDocu_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      public io.dstore.values.BooleanValue getRegisteredForDocu() {
        return registeredForDocu_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : registeredForDocu_;
      }
      /**
       * <pre>
       * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getRegisteredForDocuOrBuilder() {
        return getRegisteredForDocu();
      }

      public static final int LAST_CREATED_AT_CHAR_FIELD_NUMBER = 10014;
      private io.dstore.values.StringValue lastCreatedAtChar_;
      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      public boolean hasLastCreatedAtChar() {
        return lastCreatedAtChar_ != null;
      }
      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      public io.dstore.values.StringValue getLastCreatedAtChar() {
        return lastCreatedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lastCreatedAtChar_;
      }
      /**
       * <pre>
       * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
       * </pre>
       *
       * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
       */
      public io.dstore.values.StringValueOrBuilder getLastCreatedAtCharOrBuilder() {
        return getLastCreatedAtChar();
      }

      public static final int DOCU_EXISTS_FIELD_NUMBER = 10015;
      private io.dstore.values.BooleanValue docuExists_;
      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      public boolean hasDocuExists() {
        return docuExists_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      public io.dstore.values.BooleanValue getDocuExists() {
        return docuExists_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : docuExists_;
      }
      /**
       * <pre>
       * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
       * </pre>
       *
       * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getDocuExistsOrBuilder() {
        return getDocuExists();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (procedureType_ != null) {
          output.writeMessage(10001, getProcedureType());
        }
        if (procedureCategoryId_ != null) {
          output.writeMessage(10002, getProcedureCategoryId());
        }
        if (procedureFunction_ != null) {
          output.writeMessage(10003, getProcedureFunction());
        }
        if (procedureCategory_ != null) {
          output.writeMessage(10004, getProcedureCategory());
        }
        if (actualdstoreVersion_ != null) {
          output.writeMessage(10005, getActualdstoreVersion());
        }
        if (procedureTypeId_ != null) {
          output.writeMessage(10006, getProcedureTypeId());
        }
        if (lastEditedAtChar_ != null) {
          output.writeMessage(10007, getLastEditedAtChar());
        }
        if (procedureName_ != null) {
          output.writeMessage(10008, getProcedureName());
        }
        if (firstdstoreVersion_ != null) {
          output.writeMessage(10009, getFirstdstoreVersion());
        }
        if (author_ != null) {
          output.writeMessage(10010, getAuthor());
        }
        if (firstCreatedAtChar_ != null) {
          output.writeMessage(10011, getFirstCreatedAtChar());
        }
        if (aliasProcedureName_ != null) {
          output.writeMessage(10012, getAliasProcedureName());
        }
        if (registeredForDocu_ != null) {
          output.writeMessage(10013, getRegisteredForDocu());
        }
        if (lastCreatedAtChar_ != null) {
          output.writeMessage(10014, getLastCreatedAtChar());
        }
        if (docuExists_ != null) {
          output.writeMessage(10015, getDocuExists());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (procedureType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getProcedureType());
        }
        if (procedureCategoryId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getProcedureCategoryId());
        }
        if (procedureFunction_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getProcedureFunction());
        }
        if (procedureCategory_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getProcedureCategory());
        }
        if (actualdstoreVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getActualdstoreVersion());
        }
        if (procedureTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getProcedureTypeId());
        }
        if (lastEditedAtChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getLastEditedAtChar());
        }
        if (procedureName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getProcedureName());
        }
        if (firstdstoreVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getFirstdstoreVersion());
        }
        if (author_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getAuthor());
        }
        if (firstCreatedAtChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getFirstCreatedAtChar());
        }
        if (aliasProcedureName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getAliasProcedureName());
        }
        if (registeredForDocu_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getRegisteredForDocu());
        }
        if (lastCreatedAtChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getLastCreatedAtChar());
        }
        if (docuExists_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getDocuExists());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row other = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasProcedureType() == other.hasProcedureType());
        if (hasProcedureType()) {
          result = result && getProcedureType()
              .equals(other.getProcedureType());
        }
        result = result && (hasProcedureCategoryId() == other.hasProcedureCategoryId());
        if (hasProcedureCategoryId()) {
          result = result && getProcedureCategoryId()
              .equals(other.getProcedureCategoryId());
        }
        result = result && (hasProcedureFunction() == other.hasProcedureFunction());
        if (hasProcedureFunction()) {
          result = result && getProcedureFunction()
              .equals(other.getProcedureFunction());
        }
        result = result && (hasProcedureCategory() == other.hasProcedureCategory());
        if (hasProcedureCategory()) {
          result = result && getProcedureCategory()
              .equals(other.getProcedureCategory());
        }
        result = result && (hasActualdstoreVersion() == other.hasActualdstoreVersion());
        if (hasActualdstoreVersion()) {
          result = result && getActualdstoreVersion()
              .equals(other.getActualdstoreVersion());
        }
        result = result && (hasProcedureTypeId() == other.hasProcedureTypeId());
        if (hasProcedureTypeId()) {
          result = result && getProcedureTypeId()
              .equals(other.getProcedureTypeId());
        }
        result = result && (hasLastEditedAtChar() == other.hasLastEditedAtChar());
        if (hasLastEditedAtChar()) {
          result = result && getLastEditedAtChar()
              .equals(other.getLastEditedAtChar());
        }
        result = result && (hasProcedureName() == other.hasProcedureName());
        if (hasProcedureName()) {
          result = result && getProcedureName()
              .equals(other.getProcedureName());
        }
        result = result && (hasFirstdstoreVersion() == other.hasFirstdstoreVersion());
        if (hasFirstdstoreVersion()) {
          result = result && getFirstdstoreVersion()
              .equals(other.getFirstdstoreVersion());
        }
        result = result && (hasAuthor() == other.hasAuthor());
        if (hasAuthor()) {
          result = result && getAuthor()
              .equals(other.getAuthor());
        }
        result = result && (hasFirstCreatedAtChar() == other.hasFirstCreatedAtChar());
        if (hasFirstCreatedAtChar()) {
          result = result && getFirstCreatedAtChar()
              .equals(other.getFirstCreatedAtChar());
        }
        result = result && (hasAliasProcedureName() == other.hasAliasProcedureName());
        if (hasAliasProcedureName()) {
          result = result && getAliasProcedureName()
              .equals(other.getAliasProcedureName());
        }
        result = result && (hasRegisteredForDocu() == other.hasRegisteredForDocu());
        if (hasRegisteredForDocu()) {
          result = result && getRegisteredForDocu()
              .equals(other.getRegisteredForDocu());
        }
        result = result && (hasLastCreatedAtChar() == other.hasLastCreatedAtChar());
        if (hasLastCreatedAtChar()) {
          result = result && getLastCreatedAtChar()
              .equals(other.getLastCreatedAtChar());
        }
        result = result && (hasDocuExists() == other.hasDocuExists());
        if (hasDocuExists()) {
          result = result && getDocuExists()
              .equals(other.getDocuExists());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasProcedureType()) {
          hash = (37 * hash) + PROCEDURE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureType().hashCode();
        }
        if (hasProcedureCategoryId()) {
          hash = (37 * hash) + PROCEDURE_CATEGORY_ID_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureCategoryId().hashCode();
        }
        if (hasProcedureFunction()) {
          hash = (37 * hash) + PROCEDURE_FUNCTION_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureFunction().hashCode();
        }
        if (hasProcedureCategory()) {
          hash = (37 * hash) + PROCEDURE_CATEGORY_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureCategory().hashCode();
        }
        if (hasActualdstoreVersion()) {
          hash = (37 * hash) + ACTUALDSTORE_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getActualdstoreVersion().hashCode();
        }
        if (hasProcedureTypeId()) {
          hash = (37 * hash) + PROCEDURE_TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureTypeId().hashCode();
        }
        if (hasLastEditedAtChar()) {
          hash = (37 * hash) + LAST_EDITED_AT_CHAR_FIELD_NUMBER;
          hash = (53 * hash) + getLastEditedAtChar().hashCode();
        }
        if (hasProcedureName()) {
          hash = (37 * hash) + PROCEDURE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureName().hashCode();
        }
        if (hasFirstdstoreVersion()) {
          hash = (37 * hash) + FIRSTDSTORE_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getFirstdstoreVersion().hashCode();
        }
        if (hasAuthor()) {
          hash = (37 * hash) + AUTHOR_FIELD_NUMBER;
          hash = (53 * hash) + getAuthor().hashCode();
        }
        if (hasFirstCreatedAtChar()) {
          hash = (37 * hash) + FIRST_CREATED_AT_CHAR_FIELD_NUMBER;
          hash = (53 * hash) + getFirstCreatedAtChar().hashCode();
        }
        if (hasAliasProcedureName()) {
          hash = (37 * hash) + ALIAS_PROCEDURE_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getAliasProcedureName().hashCode();
        }
        if (hasRegisteredForDocu()) {
          hash = (37 * hash) + REGISTERED_FOR_DOCU_FIELD_NUMBER;
          hash = (53 * hash) + getRegisteredForDocu().hashCode();
        }
        if (hasLastCreatedAtChar()) {
          hash = (37 * hash) + LAST_CREATED_AT_CHAR_FIELD_NUMBER;
          hash = (53 * hash) + getLastCreatedAtChar().hashCode();
        }
        if (hasDocuExists()) {
          hash = (37 * hash) + DOCU_EXISTS_FIELD_NUMBER;
          hash = (53 * hash) + getDocuExists().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureNames_Ad.Response.Row)
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (procedureTypeBuilder_ == null) {
            procedureType_ = null;
          } else {
            procedureType_ = null;
            procedureTypeBuilder_ = null;
          }
          if (procedureCategoryIdBuilder_ == null) {
            procedureCategoryId_ = null;
          } else {
            procedureCategoryId_ = null;
            procedureCategoryIdBuilder_ = null;
          }
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = null;
          } else {
            procedureFunction_ = null;
            procedureFunctionBuilder_ = null;
          }
          if (procedureCategoryBuilder_ == null) {
            procedureCategory_ = null;
          } else {
            procedureCategory_ = null;
            procedureCategoryBuilder_ = null;
          }
          if (actualdstoreVersionBuilder_ == null) {
            actualdstoreVersion_ = null;
          } else {
            actualdstoreVersion_ = null;
            actualdstoreVersionBuilder_ = null;
          }
          if (procedureTypeIdBuilder_ == null) {
            procedureTypeId_ = null;
          } else {
            procedureTypeId_ = null;
            procedureTypeIdBuilder_ = null;
          }
          if (lastEditedAtCharBuilder_ == null) {
            lastEditedAtChar_ = null;
          } else {
            lastEditedAtChar_ = null;
            lastEditedAtCharBuilder_ = null;
          }
          if (procedureNameBuilder_ == null) {
            procedureName_ = null;
          } else {
            procedureName_ = null;
            procedureNameBuilder_ = null;
          }
          if (firstdstoreVersionBuilder_ == null) {
            firstdstoreVersion_ = null;
          } else {
            firstdstoreVersion_ = null;
            firstdstoreVersionBuilder_ = null;
          }
          if (authorBuilder_ == null) {
            author_ = null;
          } else {
            author_ = null;
            authorBuilder_ = null;
          }
          if (firstCreatedAtCharBuilder_ == null) {
            firstCreatedAtChar_ = null;
          } else {
            firstCreatedAtChar_ = null;
            firstCreatedAtCharBuilder_ = null;
          }
          if (aliasProcedureNameBuilder_ == null) {
            aliasProcedureName_ = null;
          } else {
            aliasProcedureName_ = null;
            aliasProcedureNameBuilder_ = null;
          }
          if (registeredForDocuBuilder_ == null) {
            registeredForDocu_ = null;
          } else {
            registeredForDocu_ = null;
            registeredForDocuBuilder_ = null;
          }
          if (lastCreatedAtCharBuilder_ == null) {
            lastCreatedAtChar_ = null;
          } else {
            lastCreatedAtChar_ = null;
            lastCreatedAtCharBuilder_ = null;
          }
          if (docuExistsBuilder_ == null) {
            docuExists_ = null;
          } else {
            docuExists_ = null;
            docuExistsBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row build() {
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row result = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (procedureTypeBuilder_ == null) {
            result.procedureType_ = procedureType_;
          } else {
            result.procedureType_ = procedureTypeBuilder_.build();
          }
          if (procedureCategoryIdBuilder_ == null) {
            result.procedureCategoryId_ = procedureCategoryId_;
          } else {
            result.procedureCategoryId_ = procedureCategoryIdBuilder_.build();
          }
          if (procedureFunctionBuilder_ == null) {
            result.procedureFunction_ = procedureFunction_;
          } else {
            result.procedureFunction_ = procedureFunctionBuilder_.build();
          }
          if (procedureCategoryBuilder_ == null) {
            result.procedureCategory_ = procedureCategory_;
          } else {
            result.procedureCategory_ = procedureCategoryBuilder_.build();
          }
          if (actualdstoreVersionBuilder_ == null) {
            result.actualdstoreVersion_ = actualdstoreVersion_;
          } else {
            result.actualdstoreVersion_ = actualdstoreVersionBuilder_.build();
          }
          if (procedureTypeIdBuilder_ == null) {
            result.procedureTypeId_ = procedureTypeId_;
          } else {
            result.procedureTypeId_ = procedureTypeIdBuilder_.build();
          }
          if (lastEditedAtCharBuilder_ == null) {
            result.lastEditedAtChar_ = lastEditedAtChar_;
          } else {
            result.lastEditedAtChar_ = lastEditedAtCharBuilder_.build();
          }
          if (procedureNameBuilder_ == null) {
            result.procedureName_ = procedureName_;
          } else {
            result.procedureName_ = procedureNameBuilder_.build();
          }
          if (firstdstoreVersionBuilder_ == null) {
            result.firstdstoreVersion_ = firstdstoreVersion_;
          } else {
            result.firstdstoreVersion_ = firstdstoreVersionBuilder_.build();
          }
          if (authorBuilder_ == null) {
            result.author_ = author_;
          } else {
            result.author_ = authorBuilder_.build();
          }
          if (firstCreatedAtCharBuilder_ == null) {
            result.firstCreatedAtChar_ = firstCreatedAtChar_;
          } else {
            result.firstCreatedAtChar_ = firstCreatedAtCharBuilder_.build();
          }
          if (aliasProcedureNameBuilder_ == null) {
            result.aliasProcedureName_ = aliasProcedureName_;
          } else {
            result.aliasProcedureName_ = aliasProcedureNameBuilder_.build();
          }
          if (registeredForDocuBuilder_ == null) {
            result.registeredForDocu_ = registeredForDocu_;
          } else {
            result.registeredForDocu_ = registeredForDocuBuilder_.build();
          }
          if (lastCreatedAtCharBuilder_ == null) {
            result.lastCreatedAtChar_ = lastCreatedAtChar_;
          } else {
            result.lastCreatedAtChar_ = lastCreatedAtCharBuilder_.build();
          }
          if (docuExistsBuilder_ == null) {
            result.docuExists_ = docuExists_;
          } else {
            result.docuExists_ = docuExistsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasProcedureType()) {
            mergeProcedureType(other.getProcedureType());
          }
          if (other.hasProcedureCategoryId()) {
            mergeProcedureCategoryId(other.getProcedureCategoryId());
          }
          if (other.hasProcedureFunction()) {
            mergeProcedureFunction(other.getProcedureFunction());
          }
          if (other.hasProcedureCategory()) {
            mergeProcedureCategory(other.getProcedureCategory());
          }
          if (other.hasActualdstoreVersion()) {
            mergeActualdstoreVersion(other.getActualdstoreVersion());
          }
          if (other.hasProcedureTypeId()) {
            mergeProcedureTypeId(other.getProcedureTypeId());
          }
          if (other.hasLastEditedAtChar()) {
            mergeLastEditedAtChar(other.getLastEditedAtChar());
          }
          if (other.hasProcedureName()) {
            mergeProcedureName(other.getProcedureName());
          }
          if (other.hasFirstdstoreVersion()) {
            mergeFirstdstoreVersion(other.getFirstdstoreVersion());
          }
          if (other.hasAuthor()) {
            mergeAuthor(other.getAuthor());
          }
          if (other.hasFirstCreatedAtChar()) {
            mergeFirstCreatedAtChar(other.getFirstCreatedAtChar());
          }
          if (other.hasAliasProcedureName()) {
            mergeAliasProcedureName(other.getAliasProcedureName());
          }
          if (other.hasRegisteredForDocu()) {
            mergeRegisteredForDocu(other.getRegisteredForDocu());
          }
          if (other.hasLastCreatedAtChar()) {
            mergeLastCreatedAtChar(other.getLastCreatedAtChar());
          }
          if (other.hasDocuExists()) {
            mergeDocuExists(other.getDocuExists());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.StringValue procedureType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureTypeBuilder_;
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public boolean hasProcedureType() {
          return procedureTypeBuilder_ != null || procedureType_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public io.dstore.values.StringValue getProcedureType() {
          if (procedureTypeBuilder_ == null) {
            return procedureType_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureType_;
          } else {
            return procedureTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public Builder setProcedureType(io.dstore.values.StringValue value) {
          if (procedureTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureType_ = value;
            onChanged();
          } else {
            procedureTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public Builder setProcedureType(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (procedureTypeBuilder_ == null) {
            procedureType_ = builderForValue.build();
            onChanged();
          } else {
            procedureTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public Builder mergeProcedureType(io.dstore.values.StringValue value) {
          if (procedureTypeBuilder_ == null) {
            if (procedureType_ != null) {
              procedureType_ =
                io.dstore.values.StringValue.newBuilder(procedureType_).mergeFrom(value).buildPartial();
            } else {
              procedureType_ = value;
            }
            onChanged();
          } else {
            procedureTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public Builder clearProcedureType() {
          if (procedureTypeBuilder_ == null) {
            procedureType_ = null;
            onChanged();
          } else {
            procedureType_ = null;
            procedureTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public io.dstore.values.StringValue.Builder getProcedureTypeBuilder() {
          
          onChanged();
          return getProcedureTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        public io.dstore.values.StringValueOrBuilder getProcedureTypeOrBuilder() {
          if (procedureTypeBuilder_ != null) {
            return procedureTypeBuilder_.getMessageOrBuilder();
          } else {
            return procedureType_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : procedureType_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_type = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getProcedureTypeFieldBuilder() {
          if (procedureTypeBuilder_ == null) {
            procedureTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getProcedureType(),
                    getParentForChildren(),
                    isClean());
            procedureType_ = null;
          }
          return procedureTypeBuilder_;
        }

        private io.dstore.values.IntegerValue procedureCategoryId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> procedureCategoryIdBuilder_;
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public boolean hasProcedureCategoryId() {
          return procedureCategoryIdBuilder_ != null || procedureCategoryId_ != null;
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public io.dstore.values.IntegerValue getProcedureCategoryId() {
          if (procedureCategoryIdBuilder_ == null) {
            return procedureCategoryId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
          } else {
            return procedureCategoryIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public Builder setProcedureCategoryId(io.dstore.values.IntegerValue value) {
          if (procedureCategoryIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureCategoryId_ = value;
            onChanged();
          } else {
            procedureCategoryIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public Builder setProcedureCategoryId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (procedureCategoryIdBuilder_ == null) {
            procedureCategoryId_ = builderForValue.build();
            onChanged();
          } else {
            procedureCategoryIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public Builder mergeProcedureCategoryId(io.dstore.values.IntegerValue value) {
          if (procedureCategoryIdBuilder_ == null) {
            if (procedureCategoryId_ != null) {
              procedureCategoryId_ =
                io.dstore.values.IntegerValue.newBuilder(procedureCategoryId_).mergeFrom(value).buildPartial();
            } else {
              procedureCategoryId_ = value;
            }
            onChanged();
          } else {
            procedureCategoryIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public Builder clearProcedureCategoryId() {
          if (procedureCategoryIdBuilder_ == null) {
            procedureCategoryId_ = null;
            onChanged();
          } else {
            procedureCategoryId_ = null;
            procedureCategoryIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public io.dstore.values.IntegerValue.Builder getProcedureCategoryIdBuilder() {
          
          onChanged();
          return getProcedureCategoryIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getProcedureCategoryIdOrBuilder() {
          if (procedureCategoryIdBuilder_ != null) {
            return procedureCategoryIdBuilder_.getMessageOrBuilder();
          } else {
            return procedureCategoryId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : procedureCategoryId_;
          }
        }
        /**
         * <pre>
         * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getProcedureCategoryIdFieldBuilder() {
          if (procedureCategoryIdBuilder_ == null) {
            procedureCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getProcedureCategoryId(),
                    getParentForChildren(),
                    isClean());
            procedureCategoryId_ = null;
          }
          return procedureCategoryIdBuilder_;
        }

        private io.dstore.values.StringValue procedureFunction_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureFunctionBuilder_;
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public boolean hasProcedureFunction() {
          return procedureFunctionBuilder_ != null || procedureFunction_ != null;
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public io.dstore.values.StringValue getProcedureFunction() {
          if (procedureFunctionBuilder_ == null) {
            return procedureFunction_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureFunction_;
          } else {
            return procedureFunctionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public Builder setProcedureFunction(io.dstore.values.StringValue value) {
          if (procedureFunctionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureFunction_ = value;
            onChanged();
          } else {
            procedureFunctionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public Builder setProcedureFunction(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = builderForValue.build();
            onChanged();
          } else {
            procedureFunctionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public Builder mergeProcedureFunction(io.dstore.values.StringValue value) {
          if (procedureFunctionBuilder_ == null) {
            if (procedureFunction_ != null) {
              procedureFunction_ =
                io.dstore.values.StringValue.newBuilder(procedureFunction_).mergeFrom(value).buildPartial();
            } else {
              procedureFunction_ = value;
            }
            onChanged();
          } else {
            procedureFunctionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public Builder clearProcedureFunction() {
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = null;
            onChanged();
          } else {
            procedureFunction_ = null;
            procedureFunctionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public io.dstore.values.StringValue.Builder getProcedureFunctionBuilder() {
          
          onChanged();
          return getProcedureFunctionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        public io.dstore.values.StringValueOrBuilder getProcedureFunctionOrBuilder() {
          if (procedureFunctionBuilder_ != null) {
            return procedureFunctionBuilder_.getMessageOrBuilder();
          } else {
            return procedureFunction_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : procedureFunction_;
          }
        }
        /**
         * <pre>
         * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_function = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getProcedureFunctionFieldBuilder() {
          if (procedureFunctionBuilder_ == null) {
            procedureFunctionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getProcedureFunction(),
                    getParentForChildren(),
                    isClean());
            procedureFunction_ = null;
          }
          return procedureFunctionBuilder_;
        }

        private io.dstore.values.StringValue procedureCategory_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureCategoryBuilder_;
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public boolean hasProcedureCategory() {
          return procedureCategoryBuilder_ != null || procedureCategory_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public io.dstore.values.StringValue getProcedureCategory() {
          if (procedureCategoryBuilder_ == null) {
            return procedureCategory_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureCategory_;
          } else {
            return procedureCategoryBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public Builder setProcedureCategory(io.dstore.values.StringValue value) {
          if (procedureCategoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureCategory_ = value;
            onChanged();
          } else {
            procedureCategoryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public Builder setProcedureCategory(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (procedureCategoryBuilder_ == null) {
            procedureCategory_ = builderForValue.build();
            onChanged();
          } else {
            procedureCategoryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public Builder mergeProcedureCategory(io.dstore.values.StringValue value) {
          if (procedureCategoryBuilder_ == null) {
            if (procedureCategory_ != null) {
              procedureCategory_ =
                io.dstore.values.StringValue.newBuilder(procedureCategory_).mergeFrom(value).buildPartial();
            } else {
              procedureCategory_ = value;
            }
            onChanged();
          } else {
            procedureCategoryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public Builder clearProcedureCategory() {
          if (procedureCategoryBuilder_ == null) {
            procedureCategory_ = null;
            onChanged();
          } else {
            procedureCategory_ = null;
            procedureCategoryBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public io.dstore.values.StringValue.Builder getProcedureCategoryBuilder() {
          
          onChanged();
          return getProcedureCategoryFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        public io.dstore.values.StringValueOrBuilder getProcedureCategoryOrBuilder() {
          if (procedureCategoryBuilder_ != null) {
            return procedureCategoryBuilder_.getMessageOrBuilder();
          } else {
            return procedureCategory_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : procedureCategory_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Kategorie "ProcedureCategoryID"
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_category = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getProcedureCategoryFieldBuilder() {
          if (procedureCategoryBuilder_ == null) {
            procedureCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getProcedureCategory(),
                    getParentForChildren(),
                    isClean());
            procedureCategory_ = null;
          }
          return procedureCategoryBuilder_;
        }

        private io.dstore.values.StringValue actualdstoreVersion_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> actualdstoreVersionBuilder_;
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public boolean hasActualdstoreVersion() {
          return actualdstoreVersionBuilder_ != null || actualdstoreVersion_ != null;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public io.dstore.values.StringValue getActualdstoreVersion() {
          if (actualdstoreVersionBuilder_ == null) {
            return actualdstoreVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : actualdstoreVersion_;
          } else {
            return actualdstoreVersionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public Builder setActualdstoreVersion(io.dstore.values.StringValue value) {
          if (actualdstoreVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            actualdstoreVersion_ = value;
            onChanged();
          } else {
            actualdstoreVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public Builder setActualdstoreVersion(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (actualdstoreVersionBuilder_ == null) {
            actualdstoreVersion_ = builderForValue.build();
            onChanged();
          } else {
            actualdstoreVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public Builder mergeActualdstoreVersion(io.dstore.values.StringValue value) {
          if (actualdstoreVersionBuilder_ == null) {
            if (actualdstoreVersion_ != null) {
              actualdstoreVersion_ =
                io.dstore.values.StringValue.newBuilder(actualdstoreVersion_).mergeFrom(value).buildPartial();
            } else {
              actualdstoreVersion_ = value;
            }
            onChanged();
          } else {
            actualdstoreVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public Builder clearActualdstoreVersion() {
          if (actualdstoreVersionBuilder_ == null) {
            actualdstoreVersion_ = null;
            onChanged();
          } else {
            actualdstoreVersion_ = null;
            actualdstoreVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public io.dstore.values.StringValue.Builder getActualdstoreVersionBuilder() {
          
          onChanged();
          return getActualdstoreVersionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        public io.dstore.values.StringValueOrBuilder getActualdstoreVersionOrBuilder() {
          if (actualdstoreVersionBuilder_ != null) {
            return actualdstoreVersionBuilder_.getMessageOrBuilder();
          } else {
            return actualdstoreVersion_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : actualdstoreVersion_;
          }
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
         * </pre>
         *
         * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getActualdstoreVersionFieldBuilder() {
          if (actualdstoreVersionBuilder_ == null) {
            actualdstoreVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getActualdstoreVersion(),
                    getParentForChildren(),
                    isClean());
            actualdstoreVersion_ = null;
          }
          return actualdstoreVersionBuilder_;
        }

        private io.dstore.values.IntegerValue procedureTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> procedureTypeIdBuilder_;
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public boolean hasProcedureTypeId() {
          return procedureTypeIdBuilder_ != null || procedureTypeId_ != null;
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue getProcedureTypeId() {
          if (procedureTypeIdBuilder_ == null) {
            return procedureTypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
          } else {
            return procedureTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public Builder setProcedureTypeId(io.dstore.values.IntegerValue value) {
          if (procedureTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureTypeId_ = value;
            onChanged();
          } else {
            procedureTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public Builder setProcedureTypeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (procedureTypeIdBuilder_ == null) {
            procedureTypeId_ = builderForValue.build();
            onChanged();
          } else {
            procedureTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public Builder mergeProcedureTypeId(io.dstore.values.IntegerValue value) {
          if (procedureTypeIdBuilder_ == null) {
            if (procedureTypeId_ != null) {
              procedureTypeId_ =
                io.dstore.values.IntegerValue.newBuilder(procedureTypeId_).mergeFrom(value).buildPartial();
            } else {
              procedureTypeId_ = value;
            }
            onChanged();
          } else {
            procedureTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public Builder clearProcedureTypeId() {
          if (procedureTypeIdBuilder_ == null) {
            procedureTypeId_ = null;
            onChanged();
          } else {
            procedureTypeId_ = null;
            procedureTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public io.dstore.values.IntegerValue.Builder getProcedureTypeIdBuilder() {
          
          onChanged();
          return getProcedureTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getProcedureTypeIdOrBuilder() {
          if (procedureTypeIdBuilder_ != null) {
            return procedureTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return procedureTypeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : procedureTypeId_;
          }
        }
        /**
         * <pre>
         * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
         * </pre>
         *
         * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getProcedureTypeIdFieldBuilder() {
          if (procedureTypeIdBuilder_ == null) {
            procedureTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getProcedureTypeId(),
                    getParentForChildren(),
                    isClean());
            procedureTypeId_ = null;
          }
          return procedureTypeIdBuilder_;
        }

        private io.dstore.values.StringValue lastEditedAtChar_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> lastEditedAtCharBuilder_;
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public boolean hasLastEditedAtChar() {
          return lastEditedAtCharBuilder_ != null || lastEditedAtChar_ != null;
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public io.dstore.values.StringValue getLastEditedAtChar() {
          if (lastEditedAtCharBuilder_ == null) {
            return lastEditedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lastEditedAtChar_;
          } else {
            return lastEditedAtCharBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public Builder setLastEditedAtChar(io.dstore.values.StringValue value) {
          if (lastEditedAtCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastEditedAtChar_ = value;
            onChanged();
          } else {
            lastEditedAtCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public Builder setLastEditedAtChar(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (lastEditedAtCharBuilder_ == null) {
            lastEditedAtChar_ = builderForValue.build();
            onChanged();
          } else {
            lastEditedAtCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public Builder mergeLastEditedAtChar(io.dstore.values.StringValue value) {
          if (lastEditedAtCharBuilder_ == null) {
            if (lastEditedAtChar_ != null) {
              lastEditedAtChar_ =
                io.dstore.values.StringValue.newBuilder(lastEditedAtChar_).mergeFrom(value).buildPartial();
            } else {
              lastEditedAtChar_ = value;
            }
            onChanged();
          } else {
            lastEditedAtCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public Builder clearLastEditedAtChar() {
          if (lastEditedAtCharBuilder_ == null) {
            lastEditedAtChar_ = null;
            onChanged();
          } else {
            lastEditedAtChar_ = null;
            lastEditedAtCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public io.dstore.values.StringValue.Builder getLastEditedAtCharBuilder() {
          
          onChanged();
          return getLastEditedAtCharFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLastEditedAtCharOrBuilder() {
          if (lastEditedAtCharBuilder_ != null) {
            return lastEditedAtCharBuilder_.getMessageOrBuilder();
          } else {
            return lastEditedAtChar_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : lastEditedAtChar_;
          }
        }
        /**
         * <pre>
         * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLastEditedAtCharFieldBuilder() {
          if (lastEditedAtCharBuilder_ == null) {
            lastEditedAtCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLastEditedAtChar(),
                    getParentForChildren(),
                    isClean());
            lastEditedAtChar_ = null;
          }
          return lastEditedAtCharBuilder_;
        }

        private io.dstore.values.StringValue procedureName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureNameBuilder_;
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public boolean hasProcedureName() {
          return procedureNameBuilder_ != null || procedureName_ != null;
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public io.dstore.values.StringValue getProcedureName() {
          if (procedureNameBuilder_ == null) {
            return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
          } else {
            return procedureNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public Builder setProcedureName(io.dstore.values.StringValue value) {
          if (procedureNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureName_ = value;
            onChanged();
          } else {
            procedureNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public Builder setProcedureName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (procedureNameBuilder_ == null) {
            procedureName_ = builderForValue.build();
            onChanged();
          } else {
            procedureNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public Builder mergeProcedureName(io.dstore.values.StringValue value) {
          if (procedureNameBuilder_ == null) {
            if (procedureName_ != null) {
              procedureName_ =
                io.dstore.values.StringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
            } else {
              procedureName_ = value;
            }
            onChanged();
          } else {
            procedureNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public Builder clearProcedureName() {
          if (procedureNameBuilder_ == null) {
            procedureName_ = null;
            onChanged();
          } else {
            procedureName_ = null;
            procedureNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public io.dstore.values.StringValue.Builder getProcedureNameBuilder() {
          
          onChanged();
          return getProcedureNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
          if (procedureNameBuilder_ != null) {
            return procedureNameBuilder_.getMessageOrBuilder();
          } else {
            return procedureName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
          }
        }
        /**
         * <pre>
         * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue procedure_name = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getProcedureNameFieldBuilder() {
          if (procedureNameBuilder_ == null) {
            procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getProcedureName(),
                    getParentForChildren(),
                    isClean());
            procedureName_ = null;
          }
          return procedureNameBuilder_;
        }

        private io.dstore.values.StringValue firstdstoreVersion_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> firstdstoreVersionBuilder_;
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public boolean hasFirstdstoreVersion() {
          return firstdstoreVersionBuilder_ != null || firstdstoreVersion_ != null;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public io.dstore.values.StringValue getFirstdstoreVersion() {
          if (firstdstoreVersionBuilder_ == null) {
            return firstdstoreVersion_ == null ? io.dstore.values.StringValue.getDefaultInstance() : firstdstoreVersion_;
          } else {
            return firstdstoreVersionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public Builder setFirstdstoreVersion(io.dstore.values.StringValue value) {
          if (firstdstoreVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            firstdstoreVersion_ = value;
            onChanged();
          } else {
            firstdstoreVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public Builder setFirstdstoreVersion(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (firstdstoreVersionBuilder_ == null) {
            firstdstoreVersion_ = builderForValue.build();
            onChanged();
          } else {
            firstdstoreVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public Builder mergeFirstdstoreVersion(io.dstore.values.StringValue value) {
          if (firstdstoreVersionBuilder_ == null) {
            if (firstdstoreVersion_ != null) {
              firstdstoreVersion_ =
                io.dstore.values.StringValue.newBuilder(firstdstoreVersion_).mergeFrom(value).buildPartial();
            } else {
              firstdstoreVersion_ = value;
            }
            onChanged();
          } else {
            firstdstoreVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public Builder clearFirstdstoreVersion() {
          if (firstdstoreVersionBuilder_ == null) {
            firstdstoreVersion_ = null;
            onChanged();
          } else {
            firstdstoreVersion_ = null;
            firstdstoreVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public io.dstore.values.StringValue.Builder getFirstdstoreVersionBuilder() {
          
          onChanged();
          return getFirstdstoreVersionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        public io.dstore.values.StringValueOrBuilder getFirstdstoreVersionOrBuilder() {
          if (firstdstoreVersionBuilder_ != null) {
            return firstdstoreVersionBuilder_.getMessageOrBuilder();
          } else {
            return firstdstoreVersion_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : firstdstoreVersion_;
          }
        }
        /**
         * <pre>
         * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
         * </pre>
         *
         * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getFirstdstoreVersionFieldBuilder() {
          if (firstdstoreVersionBuilder_ == null) {
            firstdstoreVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getFirstdstoreVersion(),
                    getParentForChildren(),
                    isClean());
            firstdstoreVersion_ = null;
          }
          return firstdstoreVersionBuilder_;
        }

        private io.dstore.values.StringValue author_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> authorBuilder_;
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public boolean hasAuthor() {
          return authorBuilder_ != null || author_ != null;
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public io.dstore.values.StringValue getAuthor() {
          if (authorBuilder_ == null) {
            return author_ == null ? io.dstore.values.StringValue.getDefaultInstance() : author_;
          } else {
            return authorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public Builder setAuthor(io.dstore.values.StringValue value) {
          if (authorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            author_ = value;
            onChanged();
          } else {
            authorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public Builder setAuthor(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (authorBuilder_ == null) {
            author_ = builderForValue.build();
            onChanged();
          } else {
            authorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public Builder mergeAuthor(io.dstore.values.StringValue value) {
          if (authorBuilder_ == null) {
            if (author_ != null) {
              author_ =
                io.dstore.values.StringValue.newBuilder(author_).mergeFrom(value).buildPartial();
            } else {
              author_ = value;
            }
            onChanged();
          } else {
            authorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public Builder clearAuthor() {
          if (authorBuilder_ == null) {
            author_ = null;
            onChanged();
          } else {
            author_ = null;
            authorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public io.dstore.values.StringValue.Builder getAuthorBuilder() {
          
          onChanged();
          return getAuthorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        public io.dstore.values.StringValueOrBuilder getAuthorOrBuilder() {
          if (authorBuilder_ != null) {
            return authorBuilder_.getMessageOrBuilder();
          } else {
            return author_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : author_;
          }
        }
        /**
         * <pre>
         * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
         * </pre>
         *
         * <code>.dstore.values.StringValue author = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getAuthorFieldBuilder() {
          if (authorBuilder_ == null) {
            authorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getAuthor(),
                    getParentForChildren(),
                    isClean());
            author_ = null;
          }
          return authorBuilder_;
        }

        private io.dstore.values.StringValue firstCreatedAtChar_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> firstCreatedAtCharBuilder_;
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public boolean hasFirstCreatedAtChar() {
          return firstCreatedAtCharBuilder_ != null || firstCreatedAtChar_ != null;
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public io.dstore.values.StringValue getFirstCreatedAtChar() {
          if (firstCreatedAtCharBuilder_ == null) {
            return firstCreatedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : firstCreatedAtChar_;
          } else {
            return firstCreatedAtCharBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public Builder setFirstCreatedAtChar(io.dstore.values.StringValue value) {
          if (firstCreatedAtCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            firstCreatedAtChar_ = value;
            onChanged();
          } else {
            firstCreatedAtCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public Builder setFirstCreatedAtChar(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (firstCreatedAtCharBuilder_ == null) {
            firstCreatedAtChar_ = builderForValue.build();
            onChanged();
          } else {
            firstCreatedAtCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public Builder mergeFirstCreatedAtChar(io.dstore.values.StringValue value) {
          if (firstCreatedAtCharBuilder_ == null) {
            if (firstCreatedAtChar_ != null) {
              firstCreatedAtChar_ =
                io.dstore.values.StringValue.newBuilder(firstCreatedAtChar_).mergeFrom(value).buildPartial();
            } else {
              firstCreatedAtChar_ = value;
            }
            onChanged();
          } else {
            firstCreatedAtCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public Builder clearFirstCreatedAtChar() {
          if (firstCreatedAtCharBuilder_ == null) {
            firstCreatedAtChar_ = null;
            onChanged();
          } else {
            firstCreatedAtChar_ = null;
            firstCreatedAtCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public io.dstore.values.StringValue.Builder getFirstCreatedAtCharBuilder() {
          
          onChanged();
          return getFirstCreatedAtCharFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        public io.dstore.values.StringValueOrBuilder getFirstCreatedAtCharOrBuilder() {
          if (firstCreatedAtCharBuilder_ != null) {
            return firstCreatedAtCharBuilder_.getMessageOrBuilder();
          } else {
            return firstCreatedAtChar_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : firstCreatedAtChar_;
          }
        }
        /**
         * <pre>
         * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
         * </pre>
         *
         * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getFirstCreatedAtCharFieldBuilder() {
          if (firstCreatedAtCharBuilder_ == null) {
            firstCreatedAtCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getFirstCreatedAtChar(),
                    getParentForChildren(),
                    isClean());
            firstCreatedAtChar_ = null;
          }
          return firstCreatedAtCharBuilder_;
        }

        private io.dstore.values.StringValue aliasProcedureName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> aliasProcedureNameBuilder_;
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public boolean hasAliasProcedureName() {
          return aliasProcedureNameBuilder_ != null || aliasProcedureName_ != null;
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public io.dstore.values.StringValue getAliasProcedureName() {
          if (aliasProcedureNameBuilder_ == null) {
            return aliasProcedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : aliasProcedureName_;
          } else {
            return aliasProcedureNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public Builder setAliasProcedureName(io.dstore.values.StringValue value) {
          if (aliasProcedureNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            aliasProcedureName_ = value;
            onChanged();
          } else {
            aliasProcedureNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public Builder setAliasProcedureName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (aliasProcedureNameBuilder_ == null) {
            aliasProcedureName_ = builderForValue.build();
            onChanged();
          } else {
            aliasProcedureNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public Builder mergeAliasProcedureName(io.dstore.values.StringValue value) {
          if (aliasProcedureNameBuilder_ == null) {
            if (aliasProcedureName_ != null) {
              aliasProcedureName_ =
                io.dstore.values.StringValue.newBuilder(aliasProcedureName_).mergeFrom(value).buildPartial();
            } else {
              aliasProcedureName_ = value;
            }
            onChanged();
          } else {
            aliasProcedureNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public Builder clearAliasProcedureName() {
          if (aliasProcedureNameBuilder_ == null) {
            aliasProcedureName_ = null;
            onChanged();
          } else {
            aliasProcedureName_ = null;
            aliasProcedureNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public io.dstore.values.StringValue.Builder getAliasProcedureNameBuilder() {
          
          onChanged();
          return getAliasProcedureNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        public io.dstore.values.StringValueOrBuilder getAliasProcedureNameOrBuilder() {
          if (aliasProcedureNameBuilder_ != null) {
            return aliasProcedureNameBuilder_.getMessageOrBuilder();
          } else {
            return aliasProcedureName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : aliasProcedureName_;
          }
        }
        /**
         * <pre>
         * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
         * </pre>
         *
         * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getAliasProcedureNameFieldBuilder() {
          if (aliasProcedureNameBuilder_ == null) {
            aliasProcedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getAliasProcedureName(),
                    getParentForChildren(),
                    isClean());
            aliasProcedureName_ = null;
          }
          return aliasProcedureNameBuilder_;
        }

        private io.dstore.values.BooleanValue registeredForDocu_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> registeredForDocuBuilder_;
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public boolean hasRegisteredForDocu() {
          return registeredForDocuBuilder_ != null || registeredForDocu_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public io.dstore.values.BooleanValue getRegisteredForDocu() {
          if (registeredForDocuBuilder_ == null) {
            return registeredForDocu_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : registeredForDocu_;
          } else {
            return registeredForDocuBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public Builder setRegisteredForDocu(io.dstore.values.BooleanValue value) {
          if (registeredForDocuBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            registeredForDocu_ = value;
            onChanged();
          } else {
            registeredForDocuBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public Builder setRegisteredForDocu(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (registeredForDocuBuilder_ == null) {
            registeredForDocu_ = builderForValue.build();
            onChanged();
          } else {
            registeredForDocuBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public Builder mergeRegisteredForDocu(io.dstore.values.BooleanValue value) {
          if (registeredForDocuBuilder_ == null) {
            if (registeredForDocu_ != null) {
              registeredForDocu_ =
                io.dstore.values.BooleanValue.newBuilder(registeredForDocu_).mergeFrom(value).buildPartial();
            } else {
              registeredForDocu_ = value;
            }
            onChanged();
          } else {
            registeredForDocuBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public Builder clearRegisteredForDocu() {
          if (registeredForDocuBuilder_ == null) {
            registeredForDocu_ = null;
            onChanged();
          } else {
            registeredForDocu_ = null;
            registeredForDocuBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public io.dstore.values.BooleanValue.Builder getRegisteredForDocuBuilder() {
          
          onChanged();
          return getRegisteredForDocuFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getRegisteredForDocuOrBuilder() {
          if (registeredForDocuBuilder_ != null) {
            return registeredForDocuBuilder_.getMessageOrBuilder();
          } else {
            return registeredForDocu_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : registeredForDocu_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getRegisteredForDocuFieldBuilder() {
          if (registeredForDocuBuilder_ == null) {
            registeredForDocuBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getRegisteredForDocu(),
                    getParentForChildren(),
                    isClean());
            registeredForDocu_ = null;
          }
          return registeredForDocuBuilder_;
        }

        private io.dstore.values.StringValue lastCreatedAtChar_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> lastCreatedAtCharBuilder_;
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public boolean hasLastCreatedAtChar() {
          return lastCreatedAtCharBuilder_ != null || lastCreatedAtChar_ != null;
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public io.dstore.values.StringValue getLastCreatedAtChar() {
          if (lastCreatedAtCharBuilder_ == null) {
            return lastCreatedAtChar_ == null ? io.dstore.values.StringValue.getDefaultInstance() : lastCreatedAtChar_;
          } else {
            return lastCreatedAtCharBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public Builder setLastCreatedAtChar(io.dstore.values.StringValue value) {
          if (lastCreatedAtCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lastCreatedAtChar_ = value;
            onChanged();
          } else {
            lastCreatedAtCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public Builder setLastCreatedAtChar(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (lastCreatedAtCharBuilder_ == null) {
            lastCreatedAtChar_ = builderForValue.build();
            onChanged();
          } else {
            lastCreatedAtCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public Builder mergeLastCreatedAtChar(io.dstore.values.StringValue value) {
          if (lastCreatedAtCharBuilder_ == null) {
            if (lastCreatedAtChar_ != null) {
              lastCreatedAtChar_ =
                io.dstore.values.StringValue.newBuilder(lastCreatedAtChar_).mergeFrom(value).buildPartial();
            } else {
              lastCreatedAtChar_ = value;
            }
            onChanged();
          } else {
            lastCreatedAtCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public Builder clearLastCreatedAtChar() {
          if (lastCreatedAtCharBuilder_ == null) {
            lastCreatedAtChar_ = null;
            onChanged();
          } else {
            lastCreatedAtChar_ = null;
            lastCreatedAtCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public io.dstore.values.StringValue.Builder getLastCreatedAtCharBuilder() {
          
          onChanged();
          return getLastCreatedAtCharFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        public io.dstore.values.StringValueOrBuilder getLastCreatedAtCharOrBuilder() {
          if (lastCreatedAtCharBuilder_ != null) {
            return lastCreatedAtCharBuilder_.getMessageOrBuilder();
          } else {
            return lastCreatedAtChar_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : lastCreatedAtChar_;
          }
        }
        /**
         * <pre>
         * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
         * </pre>
         *
         * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getLastCreatedAtCharFieldBuilder() {
          if (lastCreatedAtCharBuilder_ == null) {
            lastCreatedAtCharBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getLastCreatedAtChar(),
                    getParentForChildren(),
                    isClean());
            lastCreatedAtChar_ = null;
          }
          return lastCreatedAtCharBuilder_;
        }

        private io.dstore.values.BooleanValue docuExists_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> docuExistsBuilder_;
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public boolean hasDocuExists() {
          return docuExistsBuilder_ != null || docuExists_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public io.dstore.values.BooleanValue getDocuExists() {
          if (docuExistsBuilder_ == null) {
            return docuExists_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : docuExists_;
          } else {
            return docuExistsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public Builder setDocuExists(io.dstore.values.BooleanValue value) {
          if (docuExistsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            docuExists_ = value;
            onChanged();
          } else {
            docuExistsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public Builder setDocuExists(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (docuExistsBuilder_ == null) {
            docuExists_ = builderForValue.build();
            onChanged();
          } else {
            docuExistsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public Builder mergeDocuExists(io.dstore.values.BooleanValue value) {
          if (docuExistsBuilder_ == null) {
            if (docuExists_ != null) {
              docuExists_ =
                io.dstore.values.BooleanValue.newBuilder(docuExists_).mergeFrom(value).buildPartial();
            } else {
              docuExists_ = value;
            }
            onChanged();
          } else {
            docuExistsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public Builder clearDocuExists() {
          if (docuExistsBuilder_ == null) {
            docuExists_ = null;
            onChanged();
          } else {
            docuExists_ = null;
            docuExistsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public io.dstore.values.BooleanValue.Builder getDocuExistsBuilder() {
          
          onChanged();
          return getDocuExistsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getDocuExistsOrBuilder() {
          if (docuExistsBuilder_ != null) {
            return docuExistsBuilder_.getMessageOrBuilder();
          } else {
            return docuExists_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : docuExists_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
         * </pre>
         *
         * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getDocuExistsFieldBuilder() {
          if (docuExistsBuilder_ == null) {
            docuExistsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getDocuExists(),
                    getParentForChildren(),
                    isClean());
            docuExists_ = null;
          }
          return docuExistsBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureNames_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureNames_Ad.Response.Row)
      private static final io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.DoGetProcedureNamesAd.Response other = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureNames_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureNames_Ad.Response)
        io.dstore.engine.procedures.DoGetProcedureNamesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.class, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response build() {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response buildPartial() {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Response result = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.DoGetProcedureNamesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.DoGetProcedureNamesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response other) {
        if (other == io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.DoGetProcedureNamesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.DoGetProcedureNamesAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureNames_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureNamesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureNames_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureNames_Ad.Response)
    private static final io.dstore.engine.procedures.DoGetProcedureNamesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureNamesAd.Response();
    }

    public static io.dstore.engine.procedures.DoGetProcedureNamesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.DoGetProcedureNamesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6dstore/engine/procedures/do_GetProcedu" +
      "reNames_Ad.proto\022%dstore.engine.do_GetPr" +
      "ocedureNames_Ad\032\023dstore/values.proto\032\032ds" +
      "tore/engine/engine.proto\"\327\003\n\nParameters\022" +
      ":\n\025procedure_category_id\030\001 \001(\0132\033.dstore." +
      "values.IntegerValue\022#\n\032procedure_categor" +
      "y_id_null\030\351\007 \001(\010\0226\n\021procedure_type_id\030\002 " +
      "\001(\0132\033.dstore.values.IntegerValue\022\037\n\026proc" +
      "edure_type_id_null\030\352\007 \001(\010\0222\n\016actual_vers" +
      "ion\030\003 \001(\0132\032.dstore.values.StringValue\022\034\n",
      "\023actual_version_null\030\353\007 \001(\010\0222\n\016procedure" +
      "_name\030\004 \001(\0132\032.dstore.values.StringValue\022" +
      "\034\n\023procedure_name_null\030\354\007 \001(\010\022@\n\033get_pro" +
      "cs_with_missing_docu\030\005 \001(\0132\033.dstore.valu" +
      "es.BooleanValue\022)\n get_procs_with_missin" +
      "g_docu_null\030\355\007 \001(\010\"\226\010\n\010Response\0228\n\020meta_" +
      "information\030\002 \003(\0132\036.dstore.engine.MetaIn" +
      "formation\022\'\n\007message\030\003 \003(\0132\026.dstore.engi" +
      "ne.Message\022@\n\003row\030\004 \003(\01323.dstore.engine." +
      "do_GetProcedureNames_Ad.Response.Row\032\344\006\n",
      "\003Row\022\017\n\006row_id\030\220N \001(\005\0223\n\016procedure_type\030" +
      "\221N \001(\0132\032.dstore.values.StringValue\022;\n\025pr" +
      "ocedure_category_id\030\222N \001(\0132\033.dstore.valu" +
      "es.IntegerValue\0227\n\022procedure_function\030\223N" +
      " \001(\0132\032.dstore.values.StringValue\0227\n\022proc" +
      "edure_category\030\224N \001(\0132\032.dstore.values.St" +
      "ringValue\0229\n\024actualdstore_version\030\225N \001(\013" +
      "2\032.dstore.values.StringValue\0227\n\021procedur" +
      "e_type_id\030\226N \001(\0132\033.dstore.values.Integer" +
      "Value\0228\n\023last_edited_at_char\030\227N \001(\0132\032.ds",
      "tore.values.StringValue\0223\n\016procedure_nam" +
      "e\030\230N \001(\0132\032.dstore.values.StringValue\0228\n\023" +
      "firstdstore_version\030\231N \001(\0132\032.dstore.valu" +
      "es.StringValue\022+\n\006author\030\232N \001(\0132\032.dstore" +
      ".values.StringValue\022:\n\025first_created_at_" +
      "char\030\233N \001(\0132\032.dstore.values.StringValue\022" +
      "9\n\024alias_procedure_name\030\234N \001(\0132\032.dstore." +
      "values.StringValue\0229\n\023registered_for_doc" +
      "u\030\235N \001(\0132\033.dstore.values.BooleanValue\0229\n" +
      "\024last_created_at_char\030\236N \001(\0132\032.dstore.va",
      "lues.StringValue\0221\n\013docu_exists\030\237N \001(\0132\033" +
      ".dstore.values.BooleanValueBX\n\033io.dstore" +
      ".engine.proceduresZ9gosdk.dstore.de/engi" +
      "ne/procedures/do_GetProcedureNames_Adb\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureNames_Ad_Parameters_descriptor,
        new java.lang.String[] { "ProcedureCategoryId", "ProcedureCategoryIdNull", "ProcedureTypeId", "ProcedureTypeIdNull", "ActualVersion", "ActualVersionNull", "ProcedureName", "ProcedureNameNull", "GetProcsWithMissingDocu", "GetProcsWithMissingDocuNull", });
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureNames_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ProcedureType", "ProcedureCategoryId", "ProcedureFunction", "ProcedureCategory", "ActualdstoreVersion", "ProcedureTypeId", "LastEditedAtChar", "ProcedureName", "FirstdstoreVersion", "Author", "FirstCreatedAtChar", "AliasProcedureName", "RegisteredForDocu", "LastCreatedAtChar", "DocuExists", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
