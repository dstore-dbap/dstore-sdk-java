// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetShippingTypes_Ad.proto

package io.dstore.engine.procedures;

public final class OmGetShippingTypesAd {
  private OmGetShippingTypesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippingTypes_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    io.dstore.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1001;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    boolean hasShippingTypeId();
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    io.dstore.Values.integerValue getShippingTypeId();
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

    /**
     * <code>optional bool shipping_type_id_null = 1002;</code>
     */
    boolean getShippingTypeIdNull();

    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    boolean hasOnlyActive();
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    io.dstore.Values.booleanValue getOnlyActive();
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder();

    /**
     * <code>optional bool only_active_null = 1003;</code>
     */
    boolean getOnlyActiveNull();

    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    boolean hasValidAtDateAndTime();
    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    io.dstore.Values.timestampValue getValidAtDateAndTime();
    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    io.dstore.Values.timestampValueOrBuilder getValidAtDateAndTimeOrBuilder();

    /**
     * <code>optional bool valid_at_date_and_time_null = 1004;</code>
     */
    boolean getValidAtDateAndTimeNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippingTypes_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      languageIdNull_ = false;
      shippingTypeIdNull_ = false;
      onlyActiveNull_ = false;
      validAtDateAndTimeNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (shippingTypeId_ != null) {
                subBuilder = shippingTypeId_.toBuilder();
              }
              shippingTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shippingTypeId_);
                shippingTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (onlyActive_ != null) {
                subBuilder = onlyActive_.toBuilder();
              }
              onlyActive_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyActive_);
                onlyActive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.timestampValue.Builder subBuilder = null;
              if (validAtDateAndTime_ != null) {
                subBuilder = validAtDateAndTime_.toBuilder();
              }
              validAtDateAndTime_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(validAtDateAndTime_);
                validAtDateAndTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              shippingTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              onlyActiveNull_ = input.readBool();
              break;
            }
            case 8032: {

              validAtDateAndTimeNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.Builder.class);
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    public io.dstore.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.values.integerValue language_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1001;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue shippingTypeId_;
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    public boolean hasShippingTypeId() {
      return shippingTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    public io.dstore.Values.integerValue getShippingTypeId() {
      return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
      return getShippingTypeId();
    }

    public static final int SHIPPING_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean shippingTypeIdNull_;
    /**
     * <code>optional bool shipping_type_id_null = 1002;</code>
     */
    public boolean getShippingTypeIdNull() {
      return shippingTypeIdNull_;
    }

    public static final int ONLY_ACTIVE_FIELD_NUMBER = 3;
    private io.dstore.Values.booleanValue onlyActive_;
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public boolean hasOnlyActive() {
      return onlyActive_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public io.dstore.Values.booleanValue getOnlyActive() {
      return onlyActive_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder() {
      return getOnlyActive();
    }

    public static final int ONLY_ACTIVE_NULL_FIELD_NUMBER = 1003;
    private boolean onlyActiveNull_;
    /**
     * <code>optional bool only_active_null = 1003;</code>
     */
    public boolean getOnlyActiveNull() {
      return onlyActiveNull_;
    }

    public static final int VALID_AT_DATE_AND_TIME_FIELD_NUMBER = 4;
    private io.dstore.Values.timestampValue validAtDateAndTime_;
    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    public boolean hasValidAtDateAndTime() {
      return validAtDateAndTime_ != null;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    public io.dstore.Values.timestampValue getValidAtDateAndTime() {
      return validAtDateAndTime_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validAtDateAndTime_;
    }
    /**
     * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
     */
    public io.dstore.Values.timestampValueOrBuilder getValidAtDateAndTimeOrBuilder() {
      return getValidAtDateAndTime();
    }

    public static final int VALID_AT_DATE_AND_TIME_NULL_FIELD_NUMBER = 1004;
    private boolean validAtDateAndTimeNull_;
    /**
     * <code>optional bool valid_at_date_and_time_null = 1004;</code>
     */
    public boolean getValidAtDateAndTimeNull() {
      return validAtDateAndTimeNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (languageId_ != null) {
        output.writeMessage(1, getLanguageId());
      }
      if (shippingTypeId_ != null) {
        output.writeMessage(2, getShippingTypeId());
      }
      if (onlyActive_ != null) {
        output.writeMessage(3, getOnlyActive());
      }
      if (validAtDateAndTime_ != null) {
        output.writeMessage(4, getValidAtDateAndTime());
      }
      if (languageIdNull_ != false) {
        output.writeBool(1001, languageIdNull_);
      }
      if (shippingTypeIdNull_ != false) {
        output.writeBool(1002, shippingTypeIdNull_);
      }
      if (onlyActiveNull_ != false) {
        output.writeBool(1003, onlyActiveNull_);
      }
      if (validAtDateAndTimeNull_ != false) {
        output.writeBool(1004, validAtDateAndTimeNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLanguageId());
      }
      if (shippingTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getShippingTypeId());
      }
      if (onlyActive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOnlyActive());
      }
      if (validAtDateAndTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValidAtDateAndTime());
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, languageIdNull_);
      }
      if (shippingTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, shippingTypeIdNull_);
      }
      if (onlyActiveNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, onlyActiveNull_);
      }
      if (validAtDateAndTimeNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, validAtDateAndTimeNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippingTypes_Ad.Parameters)
        io.dstore.engine.procedures.OmGetShippingTypesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }
        shippingTypeIdNull_ = false;

        if (onlyActiveBuilder_ == null) {
          onlyActive_ = null;
        } else {
          onlyActive_ = null;
          onlyActiveBuilder_ = null;
        }
        onlyActiveNull_ = false;

        if (validAtDateAndTimeBuilder_ == null) {
          validAtDateAndTime_ = null;
        } else {
          validAtDateAndTime_ = null;
          validAtDateAndTimeBuilder_ = null;
        }
        validAtDateAndTimeNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters build() {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters result = new io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters(this);
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (shippingTypeIdBuilder_ == null) {
          result.shippingTypeId_ = shippingTypeId_;
        } else {
          result.shippingTypeId_ = shippingTypeIdBuilder_.build();
        }
        result.shippingTypeIdNull_ = shippingTypeIdNull_;
        if (onlyActiveBuilder_ == null) {
          result.onlyActive_ = onlyActive_;
        } else {
          result.onlyActive_ = onlyActiveBuilder_.build();
        }
        result.onlyActiveNull_ = onlyActiveNull_;
        if (validAtDateAndTimeBuilder_ == null) {
          result.validAtDateAndTime_ = validAtDateAndTime_;
        } else {
          result.validAtDateAndTime_ = validAtDateAndTimeBuilder_.build();
        }
        result.validAtDateAndTimeNull_ = validAtDateAndTimeNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasShippingTypeId()) {
          mergeShippingTypeId(other.getShippingTypeId());
        }
        if (other.getShippingTypeIdNull() != false) {
          setShippingTypeIdNull(other.getShippingTypeIdNull());
        }
        if (other.hasOnlyActive()) {
          mergeOnlyActive(other.getOnlyActive());
        }
        if (other.getOnlyActiveNull() != false) {
          setOnlyActiveNull(other.getOnlyActiveNull());
        }
        if (other.hasValidAtDateAndTime()) {
          mergeValidAtDateAndTime(other.getValidAtDateAndTime());
        }
        if (other.getValidAtDateAndTimeNull() != false) {
          setValidAtDateAndTimeNull(other.getValidAtDateAndTimeNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public io.dstore.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public Builder setLanguageId(io.dstore.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public Builder setLanguageId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public Builder mergeLanguageId(io.dstore.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1001;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue shippingTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue getShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        } else {
          return shippingTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public Builder setShippingTypeId(io.dstore.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shippingTypeId_ = value;
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public Builder setShippingTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = builderForValue.build();
          onChanged();
        } else {
          shippingTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public Builder mergeShippingTypeId(io.dstore.Values.integerValue value) {
        if (shippingTypeIdBuilder_ == null) {
          if (shippingTypeId_ != null) {
            shippingTypeId_ =
              io.dstore.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
          } else {
            shippingTypeId_ = value;
          }
          onChanged();
        } else {
          shippingTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public Builder clearShippingTypeId() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeId_ = null;
          onChanged();
        } else {
          shippingTypeId_ = null;
          shippingTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getShippingTypeIdBuilder() {
        
        onChanged();
        return getShippingTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        if (shippingTypeIdBuilder_ != null) {
          return shippingTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return shippingTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getShippingTypeIdFieldBuilder() {
        if (shippingTypeIdBuilder_ == null) {
          shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getShippingTypeId(),
                  getParentForChildren(),
                  isClean());
          shippingTypeId_ = null;
        }
        return shippingTypeIdBuilder_;
      }

      private boolean shippingTypeIdNull_ ;
      /**
       * <code>optional bool shipping_type_id_null = 1002;</code>
       */
      public boolean getShippingTypeIdNull() {
        return shippingTypeIdNull_;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1002;</code>
       */
      public Builder setShippingTypeIdNull(boolean value) {
        
        shippingTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shipping_type_id_null = 1002;</code>
       */
      public Builder clearShippingTypeIdNull() {
        
        shippingTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue onlyActive_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> onlyActiveBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public boolean hasOnlyActive() {
        return onlyActiveBuilder_ != null || onlyActive_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValue getOnlyActive() {
        if (onlyActiveBuilder_ == null) {
          return onlyActive_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
        } else {
          return onlyActiveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder setOnlyActive(io.dstore.Values.booleanValue value) {
        if (onlyActiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyActive_ = value;
          onChanged();
        } else {
          onlyActiveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder setOnlyActive(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (onlyActiveBuilder_ == null) {
          onlyActive_ = builderForValue.build();
          onChanged();
        } else {
          onlyActiveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder mergeOnlyActive(io.dstore.Values.booleanValue value) {
        if (onlyActiveBuilder_ == null) {
          if (onlyActive_ != null) {
            onlyActive_ =
              io.dstore.Values.booleanValue.newBuilder(onlyActive_).mergeFrom(value).buildPartial();
          } else {
            onlyActive_ = value;
          }
          onChanged();
        } else {
          onlyActiveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder clearOnlyActive() {
        if (onlyActiveBuilder_ == null) {
          onlyActive_ = null;
          onChanged();
        } else {
          onlyActive_ = null;
          onlyActiveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValue.Builder getOnlyActiveBuilder() {
        
        onChanged();
        return getOnlyActiveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder() {
        if (onlyActiveBuilder_ != null) {
          return onlyActiveBuilder_.getMessageOrBuilder();
        } else {
          return onlyActive_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getOnlyActiveFieldBuilder() {
        if (onlyActiveBuilder_ == null) {
          onlyActiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getOnlyActive(),
                  getParentForChildren(),
                  isClean());
          onlyActive_ = null;
        }
        return onlyActiveBuilder_;
      }

      private boolean onlyActiveNull_ ;
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public boolean getOnlyActiveNull() {
        return onlyActiveNull_;
      }
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public Builder setOnlyActiveNull(boolean value) {
        
        onlyActiveNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public Builder clearOnlyActiveNull() {
        
        onlyActiveNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.timestampValue validAtDateAndTime_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> validAtDateAndTimeBuilder_;
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public boolean hasValidAtDateAndTime() {
        return validAtDateAndTimeBuilder_ != null || validAtDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public io.dstore.Values.timestampValue getValidAtDateAndTime() {
        if (validAtDateAndTimeBuilder_ == null) {
          return validAtDateAndTime_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : validAtDateAndTime_;
        } else {
          return validAtDateAndTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public Builder setValidAtDateAndTime(io.dstore.Values.timestampValue value) {
        if (validAtDateAndTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          validAtDateAndTime_ = value;
          onChanged();
        } else {
          validAtDateAndTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public Builder setValidAtDateAndTime(
          io.dstore.Values.timestampValue.Builder builderForValue) {
        if (validAtDateAndTimeBuilder_ == null) {
          validAtDateAndTime_ = builderForValue.build();
          onChanged();
        } else {
          validAtDateAndTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public Builder mergeValidAtDateAndTime(io.dstore.Values.timestampValue value) {
        if (validAtDateAndTimeBuilder_ == null) {
          if (validAtDateAndTime_ != null) {
            validAtDateAndTime_ =
              io.dstore.Values.timestampValue.newBuilder(validAtDateAndTime_).mergeFrom(value).buildPartial();
          } else {
            validAtDateAndTime_ = value;
          }
          onChanged();
        } else {
          validAtDateAndTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public Builder clearValidAtDateAndTime() {
        if (validAtDateAndTimeBuilder_ == null) {
          validAtDateAndTime_ = null;
          onChanged();
        } else {
          validAtDateAndTime_ = null;
          validAtDateAndTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public io.dstore.Values.timestampValue.Builder getValidAtDateAndTimeBuilder() {
        
        onChanged();
        return getValidAtDateAndTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getValidAtDateAndTimeOrBuilder() {
        if (validAtDateAndTimeBuilder_ != null) {
          return validAtDateAndTimeBuilder_.getMessageOrBuilder();
        } else {
          return validAtDateAndTime_ == null ?
              io.dstore.Values.timestampValue.getDefaultInstance() : validAtDateAndTime_;
        }
      }
      /**
       * <code>optional .dstore.values.timestampValue valid_at_date_and_time = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
          getValidAtDateAndTimeFieldBuilder() {
        if (validAtDateAndTimeBuilder_ == null) {
          validAtDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                  getValidAtDateAndTime(),
                  getParentForChildren(),
                  isClean());
          validAtDateAndTime_ = null;
        }
        return validAtDateAndTimeBuilder_;
      }

      private boolean validAtDateAndTimeNull_ ;
      /**
       * <code>optional bool valid_at_date_and_time_null = 1004;</code>
       */
      public boolean getValidAtDateAndTimeNull() {
        return validAtDateAndTimeNull_;
      }
      /**
       * <code>optional bool valid_at_date_and_time_null = 1004;</code>
       */
      public Builder setValidAtDateAndTimeNull(boolean value) {
        
        validAtDateAndTimeNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool valid_at_date_and_time_null = 1004;</code>
       */
      public Builder clearValidAtDateAndTimeNull() {
        
        validAtDateAndTimeNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippingTypes_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippingTypes_Ad.Parameters)
    private static final io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters();
    }

    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetShippingTypesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippingTypes_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippingTypes_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetShippingTypesAd.Response.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetShippingTypes_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      boolean hasBruttoSumTo();
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      io.dstore.Values.decimalValue getBruttoSumTo();
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getBruttoSumToOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      boolean hasPriorityNo();
      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      io.dstore.Values.integerValue getPriorityNo();
      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      boolean hasShippingTypeDescription();
      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.Values.stringValue getShippingTypeDescription();
      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      boolean hasSurchargeUnitSymbol();
      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      io.dstore.Values.stringValue getSurchargeUnitSymbol();
      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getSurchargeUnitSymbolOrBuilder();

      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      boolean hasBruttoSumFrom();
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      io.dstore.Values.decimalValue getBruttoSumFrom();
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getBruttoSumFromOrBuilder();

      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      boolean hasSurchargeValue();
      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      io.dstore.Values.decimalValue getSurchargeValue();
      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      boolean hasCost();
      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      io.dstore.Values.decimalValue getCost();
      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getCostOrBuilder();

      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      boolean hasGrossSumTo();
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      io.dstore.Values.decimalValue getGrossSumTo();
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getGrossSumToOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      boolean hasCurrencyId();
      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      io.dstore.Values.integerValue getCurrencyId();
      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getCurrencyIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      boolean hasCurrencySymbol();
      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      io.dstore.Values.stringValue getCurrencySymbol();
      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getCurrencySymbolOrBuilder();

      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      boolean hasCreatedAtDateAndTime();
      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      io.dstore.Values.timestampValue getCreatedAtDateAndTime();
      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      io.dstore.Values.timestampValueOrBuilder getCreatedAtDateAndTimeOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      boolean hasActive();
      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      io.dstore.Values.booleanValue getActive();
      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      boolean hasCostCurrencyId();
      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      io.dstore.Values.integerValue getCostCurrencyId();
      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getCostCurrencyIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      boolean hasTranslatedDescription();
      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      io.dstore.Values.stringValue getTranslatedDescription();
      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getTranslatedDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      boolean hasGrossSumFrom();
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      io.dstore.Values.decimalValue getGrossSumFrom();
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      io.dstore.Values.decimalValueOrBuilder getGrossSumFromOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      boolean hasRegion();
      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      io.dstore.Values.stringValue getRegion();
      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getRegionOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      boolean hasSurchargeIsAbsoluteValue();
      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      io.dstore.Values.integerValue getSurchargeIsAbsoluteValue();
      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      boolean hasCostCurrencySymbol();
      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      io.dstore.Values.stringValue getCostCurrencySymbol();
      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getCostCurrencySymbolOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      boolean hasShippingTypeId();
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      io.dstore.Values.integerValue getShippingTypeId();
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      boolean hasRegionId();
      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      io.dstore.Values.integerValue getRegionId();
      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getRegionIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      boolean hasSurchargeTypeDescription();
      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      io.dstore.Values.stringValue getSurchargeTypeDescription();
      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      boolean hasSurchargeTypeId();
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      io.dstore.Values.integerValue getSurchargeTypeId();
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      boolean hasSurchargeUnitId();
      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      io.dstore.Values.integerValue getSurchargeUnitId();
      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeUnitIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetShippingTypes_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (bruttoSumTo_ != null) {
                  subBuilder = bruttoSumTo_.toBuilder();
                }
                bruttoSumTo_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bruttoSumTo_);
                  bruttoSumTo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (priorityNo_ != null) {
                  subBuilder = priorityNo_.toBuilder();
                }
                priorityNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(priorityNo_);
                  priorityNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (shippingTypeDescription_ != null) {
                  subBuilder = shippingTypeDescription_.toBuilder();
                }
                shippingTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingTypeDescription_);
                  shippingTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (surchargeUnitSymbol_ != null) {
                  subBuilder = surchargeUnitSymbol_.toBuilder();
                }
                surchargeUnitSymbol_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeUnitSymbol_);
                  surchargeUnitSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (bruttoSumFrom_ != null) {
                  subBuilder = bruttoSumFrom_.toBuilder();
                }
                bruttoSumFrom_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bruttoSumFrom_);
                  bruttoSumFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (cost_ != null) {
                  subBuilder = cost_.toBuilder();
                }
                cost_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cost_);
                  cost_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (grossSumTo_ != null) {
                  subBuilder = grossSumTo_.toBuilder();
                }
                grossSumTo_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossSumTo_);
                  grossSumTo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (currencyId_ != null) {
                  subBuilder = currencyId_.toBuilder();
                }
                currencyId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currencyId_);
                  currencyId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (currencySymbol_ != null) {
                  subBuilder = currencySymbol_.toBuilder();
                }
                currencySymbol_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(currencySymbol_);
                  currencySymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.timestampValue.Builder subBuilder = null;
                if (createdAtDateAndTime_ != null) {
                  subBuilder = createdAtDateAndTime_.toBuilder();
                }
                createdAtDateAndTime_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(createdAtDateAndTime_);
                  createdAtDateAndTime_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (costCurrencyId_ != null) {
                  subBuilder = costCurrencyId_.toBuilder();
                }
                costCurrencyId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(costCurrencyId_);
                  costCurrencyId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (translatedDescription_ != null) {
                  subBuilder = translatedDescription_.toBuilder();
                }
                translatedDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(translatedDescription_);
                  translatedDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (grossSumFrom_ != null) {
                  subBuilder = grossSumFrom_.toBuilder();
                }
                grossSumFrom_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(grossSumFrom_);
                  grossSumFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (region_ != null) {
                  subBuilder = region_.toBuilder();
                }
                region_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(region_);
                  region_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80138: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeIsAbsoluteValue_ != null) {
                  subBuilder = surchargeIsAbsoluteValue_.toBuilder();
                }
                surchargeIsAbsoluteValue_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeIsAbsoluteValue_);
                  surchargeIsAbsoluteValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80146: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (costCurrencySymbol_ != null) {
                  subBuilder = costCurrencySymbol_.toBuilder();
                }
                costCurrencySymbol_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(costCurrencySymbol_);
                  costCurrencySymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80154: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (shippingTypeId_ != null) {
                  subBuilder = shippingTypeId_.toBuilder();
                }
                shippingTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shippingTypeId_);
                  shippingTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80162: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (regionId_ != null) {
                  subBuilder = regionId_.toBuilder();
                }
                regionId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(regionId_);
                  regionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80170: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (surchargeTypeDescription_ != null) {
                  subBuilder = surchargeTypeDescription_.toBuilder();
                }
                surchargeTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeDescription_);
                  surchargeTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80178: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80186: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeUnitId_ != null) {
                  subBuilder = surchargeUnitId_.toBuilder();
                }
                surchargeUnitId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeUnitId_);
                  surchargeUnitId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int BRUTTO_SUM_TO_FIELD_NUMBER = 10001;
      private io.dstore.Values.decimalValue bruttoSumTo_;
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      public boolean hasBruttoSumTo() {
        return bruttoSumTo_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      public io.dstore.Values.decimalValue getBruttoSumTo() {
        return bruttoSumTo_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumTo_;
      }
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumTo"
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getBruttoSumToOrBuilder() {
        return getBruttoSumTo();
      }

      public static final int PRIORITY_NO_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue priorityNo_;
      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      public boolean hasPriorityNo() {
        return priorityNo_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      public io.dstore.Values.integerValue getPriorityNo() {
        return priorityNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
      }
      /**
       * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder() {
        return getPriorityNo();
      }

      public static final int SHIPPING_TYPE_DESCRIPTION_FIELD_NUMBER = 10003;
      private io.dstore.Values.stringValue shippingTypeDescription_;
      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public boolean hasShippingTypeDescription() {
        return shippingTypeDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.Values.stringValue getShippingTypeDescription() {
        return shippingTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
       *
       * <pre>
       * Bezeichnung der Versandart "ShippingTypeID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder() {
        return getShippingTypeDescription();
      }

      public static final int SURCHARGE_UNIT_SYMBOL_FIELD_NUMBER = 10004;
      private io.dstore.Values.stringValue surchargeUnitSymbol_;
      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      public boolean hasSurchargeUnitSymbol() {
        return surchargeUnitSymbol_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      public io.dstore.Values.stringValue getSurchargeUnitSymbol() {
        return surchargeUnitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeUnitSymbol_;
      }
      /**
       * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
       *
       * <pre>
       * Symbol/Abkürzung der Einheit "SurchargeUnitID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getSurchargeUnitSymbolOrBuilder() {
        return getSurchargeUnitSymbol();
      }

      public static final int BRUTTO_SUM_FROM_FIELD_NUMBER = 10005;
      private io.dstore.Values.decimalValue bruttoSumFrom_;
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      public boolean hasBruttoSumFrom() {
        return bruttoSumFrom_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      public io.dstore.Values.decimalValue getBruttoSumFrom() {
        return bruttoSumFrom_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumFrom_;
      }
      /**
       * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "GrossSumFrom"
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getBruttoSumFromOrBuilder() {
        return getBruttoSumFrom();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10006;
      private io.dstore.Values.decimalValue surchargeValue_;
      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      public io.dstore.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
       *
       * <pre>
       * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int COST_FIELD_NUMBER = 10007;
      private io.dstore.Values.decimalValue cost_;
      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      public boolean hasCost() {
        return cost_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      public io.dstore.Values.decimalValue getCost() {
        return cost_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : cost_;
      }
      /**
       * <code>optional .dstore.values.decimalValue cost = 10007;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeValue"
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getCostOrBuilder() {
        return getCost();
      }

      public static final int GROSS_SUM_TO_FIELD_NUMBER = 10008;
      private io.dstore.Values.decimalValue grossSumTo_;
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      public boolean hasGrossSumTo() {
        return grossSumTo_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      public io.dstore.Values.decimalValue getGrossSumTo() {
        return grossSumTo_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : grossSumTo_;
      }
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getGrossSumToOrBuilder() {
        return getGrossSumTo();
      }

      public static final int CURRENCY_ID_FIELD_NUMBER = 10009;
      private io.dstore.Values.integerValue currencyId_;
      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      public boolean hasCurrencyId() {
        return currencyId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      public io.dstore.Values.integerValue getCurrencyId() {
        return currencyId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : currencyId_;
      }
      /**
       * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
       *
       * <pre>
       * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
        return getCurrencyId();
      }

      public static final int CURRENCY_SYMBOL_FIELD_NUMBER = 10010;
      private io.dstore.Values.stringValue currencySymbol_;
      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public boolean hasCurrencySymbol() {
        return currencySymbol_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public io.dstore.Values.stringValue getCurrencySymbol() {
        return currencySymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : currencySymbol_;
      }
      /**
       * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
       *
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getCurrencySymbolOrBuilder() {
        return getCurrencySymbol();
      }

      public static final int CREATED_AT_DATE_AND_TIME_FIELD_NUMBER = 10011;
      private io.dstore.Values.timestampValue createdAtDateAndTime_;
      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      public boolean hasCreatedAtDateAndTime() {
        return createdAtDateAndTime_ != null;
      }
      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      public io.dstore.Values.timestampValue getCreatedAtDateAndTime() {
        return createdAtDateAndTime_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : createdAtDateAndTime_;
      }
      /**
       * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
       *
       * <pre>
       * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
       * </pre>
       */
      public io.dstore.Values.timestampValueOrBuilder getCreatedAtDateAndTimeOrBuilder() {
        return getCreatedAtDateAndTime();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10012;
      private io.dstore.Values.booleanValue active_;
      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      public io.dstore.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <code>optional .dstore.values.booleanValue active = 10012;</code>
       *
       * <pre>
       * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int COST_CURRENCY_ID_FIELD_NUMBER = 10013;
      private io.dstore.Values.integerValue costCurrencyId_;
      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      public boolean hasCostCurrencyId() {
        return costCurrencyId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      public io.dstore.Values.integerValue getCostCurrencyId() {
        return costCurrencyId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : costCurrencyId_;
      }
      /**
       * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitID"
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getCostCurrencyIdOrBuilder() {
        return getCostCurrencyId();
      }

      public static final int TRANSLATED_DESCRIPTION_FIELD_NUMBER = 10014;
      private io.dstore.Values.stringValue translatedDescription_;
      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      public boolean hasTranslatedDescription() {
        return translatedDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      public io.dstore.Values.stringValue getTranslatedDescription() {
        return translatedDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : translatedDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
       *
       * <pre>
       * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getTranslatedDescriptionOrBuilder() {
        return getTranslatedDescription();
      }

      public static final int GROSS_SUM_FROM_FIELD_NUMBER = 10015;
      private io.dstore.Values.decimalValue grossSumFrom_;
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      public boolean hasGrossSumFrom() {
        return grossSumFrom_ != null;
      }
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      public io.dstore.Values.decimalValue getGrossSumFrom() {
        return grossSumFrom_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : grossSumFrom_;
      }
      /**
       * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
       *
       * <pre>
       * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
       * </pre>
       */
      public io.dstore.Values.decimalValueOrBuilder getGrossSumFromOrBuilder() {
        return getGrossSumFrom();
      }

      public static final int REGION_FIELD_NUMBER = 10016;
      private io.dstore.Values.stringValue region_;
      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      public boolean hasRegion() {
        return region_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      public io.dstore.Values.stringValue getRegion() {
        return region_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : region_;
      }
      /**
       * <code>optional .dstore.values.stringValue region = 10016;</code>
       *
       * <pre>
       * Bezeichnung der Region "RegionID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getRegionOrBuilder() {
        return getRegion();
      }

      public static final int SURCHARGE_IS_ABSOLUTE_VALUE_FIELD_NUMBER = 10017;
      private io.dstore.Values.integerValue surchargeIsAbsoluteValue_;
      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public boolean hasSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public io.dstore.Values.integerValue getSurchargeIsAbsoluteValue() {
        return surchargeIsAbsoluteValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
       *
       * <pre>
       * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
        return getSurchargeIsAbsoluteValue();
      }

      public static final int COST_CURRENCY_SYMBOL_FIELD_NUMBER = 10018;
      private io.dstore.Values.stringValue costCurrencySymbol_;
      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      public boolean hasCostCurrencySymbol() {
        return costCurrencySymbol_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      public io.dstore.Values.stringValue getCostCurrencySymbol() {
        return costCurrencySymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : costCurrencySymbol_;
      }
      /**
       * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
       *
       * <pre>
       * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getCostCurrencySymbolOrBuilder() {
        return getCostCurrencySymbol();
      }

      public static final int SHIPPING_TYPE_ID_FIELD_NUMBER = 10019;
      private io.dstore.Values.integerValue shippingTypeId_;
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      public boolean hasShippingTypeId() {
        return shippingTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      public io.dstore.Values.integerValue getShippingTypeId() {
        return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
      }
      /**
       * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
       *
       * <pre>
       * ID einer Versandart
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
        return getShippingTypeId();
      }

      public static final int REGION_ID_FIELD_NUMBER = 10020;
      private io.dstore.Values.integerValue regionId_;
      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      public boolean hasRegionId() {
        return regionId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      public io.dstore.Values.integerValue getRegionId() {
        return regionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : regionId_;
      }
      /**
       * <code>optional .dstore.values.integerValue region_id = 10020;</code>
       *
       * <pre>
       * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getRegionIdOrBuilder() {
        return getRegionId();
      }

      public static final int SURCHARGE_TYPE_DESCRIPTION_FIELD_NUMBER = 10021;
      private io.dstore.Values.stringValue surchargeTypeDescription_;
      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public boolean hasSurchargeTypeDescription() {
        return surchargeTypeDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public io.dstore.Values.stringValue getSurchargeTypeDescription() {
        return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
       *
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
        return getSurchargeTypeDescription();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10022;
      private io.dstore.Values.integerValue surchargeTypeId_;
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      public io.dstore.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
       *
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      public static final int SURCHARGE_UNIT_ID_FIELD_NUMBER = 10023;
      private io.dstore.Values.integerValue surchargeUnitId_;
      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public boolean hasSurchargeUnitId() {
        return surchargeUnitId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public io.dstore.Values.integerValue getSurchargeUnitId() {
        return surchargeUnitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeUnitId_;
      }
      /**
       * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
       *
       * <pre>
       * ID der Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeUnitIdOrBuilder() {
        return getSurchargeUnitId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (bruttoSumTo_ != null) {
          output.writeMessage(10001, getBruttoSumTo());
        }
        if (priorityNo_ != null) {
          output.writeMessage(10002, getPriorityNo());
        }
        if (shippingTypeDescription_ != null) {
          output.writeMessage(10003, getShippingTypeDescription());
        }
        if (surchargeUnitSymbol_ != null) {
          output.writeMessage(10004, getSurchargeUnitSymbol());
        }
        if (bruttoSumFrom_ != null) {
          output.writeMessage(10005, getBruttoSumFrom());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10006, getSurchargeValue());
        }
        if (cost_ != null) {
          output.writeMessage(10007, getCost());
        }
        if (grossSumTo_ != null) {
          output.writeMessage(10008, getGrossSumTo());
        }
        if (currencyId_ != null) {
          output.writeMessage(10009, getCurrencyId());
        }
        if (currencySymbol_ != null) {
          output.writeMessage(10010, getCurrencySymbol());
        }
        if (createdAtDateAndTime_ != null) {
          output.writeMessage(10011, getCreatedAtDateAndTime());
        }
        if (active_ != null) {
          output.writeMessage(10012, getActive());
        }
        if (costCurrencyId_ != null) {
          output.writeMessage(10013, getCostCurrencyId());
        }
        if (translatedDescription_ != null) {
          output.writeMessage(10014, getTranslatedDescription());
        }
        if (grossSumFrom_ != null) {
          output.writeMessage(10015, getGrossSumFrom());
        }
        if (region_ != null) {
          output.writeMessage(10016, getRegion());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          output.writeMessage(10017, getSurchargeIsAbsoluteValue());
        }
        if (costCurrencySymbol_ != null) {
          output.writeMessage(10018, getCostCurrencySymbol());
        }
        if (shippingTypeId_ != null) {
          output.writeMessage(10019, getShippingTypeId());
        }
        if (regionId_ != null) {
          output.writeMessage(10020, getRegionId());
        }
        if (surchargeTypeDescription_ != null) {
          output.writeMessage(10021, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10022, getSurchargeTypeId());
        }
        if (surchargeUnitId_ != null) {
          output.writeMessage(10023, getSurchargeUnitId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (bruttoSumTo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getBruttoSumTo());
        }
        if (priorityNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getPriorityNo());
        }
        if (shippingTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getShippingTypeDescription());
        }
        if (surchargeUnitSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getSurchargeUnitSymbol());
        }
        if (bruttoSumFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getBruttoSumFrom());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getSurchargeValue());
        }
        if (cost_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getCost());
        }
        if (grossSumTo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getGrossSumTo());
        }
        if (currencyId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getCurrencyId());
        }
        if (currencySymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getCurrencySymbol());
        }
        if (createdAtDateAndTime_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getCreatedAtDateAndTime());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getActive());
        }
        if (costCurrencyId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getCostCurrencyId());
        }
        if (translatedDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getTranslatedDescription());
        }
        if (grossSumFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getGrossSumFrom());
        }
        if (region_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getRegion());
        }
        if (surchargeIsAbsoluteValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10017, getSurchargeIsAbsoluteValue());
        }
        if (costCurrencySymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10018, getCostCurrencySymbol());
        }
        if (shippingTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10019, getShippingTypeId());
        }
        if (regionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10020, getRegionId());
        }
        if (surchargeTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10021, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10022, getSurchargeTypeId());
        }
        if (surchargeUnitId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10023, getSurchargeUnitId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippingTypes_Ad.Response.Row)
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (bruttoSumToBuilder_ == null) {
            bruttoSumTo_ = null;
          } else {
            bruttoSumTo_ = null;
            bruttoSumToBuilder_ = null;
          }
          if (priorityNoBuilder_ == null) {
            priorityNo_ = null;
          } else {
            priorityNo_ = null;
            priorityNoBuilder_ = null;
          }
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = null;
          } else {
            shippingTypeDescription_ = null;
            shippingTypeDescriptionBuilder_ = null;
          }
          if (surchargeUnitSymbolBuilder_ == null) {
            surchargeUnitSymbol_ = null;
          } else {
            surchargeUnitSymbol_ = null;
            surchargeUnitSymbolBuilder_ = null;
          }
          if (bruttoSumFromBuilder_ == null) {
            bruttoSumFrom_ = null;
          } else {
            bruttoSumFrom_ = null;
            bruttoSumFromBuilder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (costBuilder_ == null) {
            cost_ = null;
          } else {
            cost_ = null;
            costBuilder_ = null;
          }
          if (grossSumToBuilder_ == null) {
            grossSumTo_ = null;
          } else {
            grossSumTo_ = null;
            grossSumToBuilder_ = null;
          }
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = null;
          } else {
            currencySymbol_ = null;
            currencySymbolBuilder_ = null;
          }
          if (createdAtDateAndTimeBuilder_ == null) {
            createdAtDateAndTime_ = null;
          } else {
            createdAtDateAndTime_ = null;
            createdAtDateAndTimeBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (costCurrencyIdBuilder_ == null) {
            costCurrencyId_ = null;
          } else {
            costCurrencyId_ = null;
            costCurrencyIdBuilder_ = null;
          }
          if (translatedDescriptionBuilder_ == null) {
            translatedDescription_ = null;
          } else {
            translatedDescription_ = null;
            translatedDescriptionBuilder_ = null;
          }
          if (grossSumFromBuilder_ == null) {
            grossSumFrom_ = null;
          } else {
            grossSumFrom_ = null;
            grossSumFromBuilder_ = null;
          }
          if (regionBuilder_ == null) {
            region_ = null;
          } else {
            region_ = null;
            regionBuilder_ = null;
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }
          if (costCurrencySymbolBuilder_ == null) {
            costCurrencySymbol_ = null;
          } else {
            costCurrencySymbol_ = null;
            costCurrencySymbolBuilder_ = null;
          }
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }
          if (regionIdBuilder_ == null) {
            regionId_ = null;
          } else {
            regionId_ = null;
            regionIdBuilder_ = null;
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          if (surchargeUnitIdBuilder_ == null) {
            surchargeUnitId_ = null;
          } else {
            surchargeUnitId_ = null;
            surchargeUnitIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row build() {
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row result = new io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (bruttoSumToBuilder_ == null) {
            result.bruttoSumTo_ = bruttoSumTo_;
          } else {
            result.bruttoSumTo_ = bruttoSumToBuilder_.build();
          }
          if (priorityNoBuilder_ == null) {
            result.priorityNo_ = priorityNo_;
          } else {
            result.priorityNo_ = priorityNoBuilder_.build();
          }
          if (shippingTypeDescriptionBuilder_ == null) {
            result.shippingTypeDescription_ = shippingTypeDescription_;
          } else {
            result.shippingTypeDescription_ = shippingTypeDescriptionBuilder_.build();
          }
          if (surchargeUnitSymbolBuilder_ == null) {
            result.surchargeUnitSymbol_ = surchargeUnitSymbol_;
          } else {
            result.surchargeUnitSymbol_ = surchargeUnitSymbolBuilder_.build();
          }
          if (bruttoSumFromBuilder_ == null) {
            result.bruttoSumFrom_ = bruttoSumFrom_;
          } else {
            result.bruttoSumFrom_ = bruttoSumFromBuilder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (costBuilder_ == null) {
            result.cost_ = cost_;
          } else {
            result.cost_ = costBuilder_.build();
          }
          if (grossSumToBuilder_ == null) {
            result.grossSumTo_ = grossSumTo_;
          } else {
            result.grossSumTo_ = grossSumToBuilder_.build();
          }
          if (currencyIdBuilder_ == null) {
            result.currencyId_ = currencyId_;
          } else {
            result.currencyId_ = currencyIdBuilder_.build();
          }
          if (currencySymbolBuilder_ == null) {
            result.currencySymbol_ = currencySymbol_;
          } else {
            result.currencySymbol_ = currencySymbolBuilder_.build();
          }
          if (createdAtDateAndTimeBuilder_ == null) {
            result.createdAtDateAndTime_ = createdAtDateAndTime_;
          } else {
            result.createdAtDateAndTime_ = createdAtDateAndTimeBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (costCurrencyIdBuilder_ == null) {
            result.costCurrencyId_ = costCurrencyId_;
          } else {
            result.costCurrencyId_ = costCurrencyIdBuilder_.build();
          }
          if (translatedDescriptionBuilder_ == null) {
            result.translatedDescription_ = translatedDescription_;
          } else {
            result.translatedDescription_ = translatedDescriptionBuilder_.build();
          }
          if (grossSumFromBuilder_ == null) {
            result.grossSumFrom_ = grossSumFrom_;
          } else {
            result.grossSumFrom_ = grossSumFromBuilder_.build();
          }
          if (regionBuilder_ == null) {
            result.region_ = region_;
          } else {
            result.region_ = regionBuilder_.build();
          }
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValue_;
          } else {
            result.surchargeIsAbsoluteValue_ = surchargeIsAbsoluteValueBuilder_.build();
          }
          if (costCurrencySymbolBuilder_ == null) {
            result.costCurrencySymbol_ = costCurrencySymbol_;
          } else {
            result.costCurrencySymbol_ = costCurrencySymbolBuilder_.build();
          }
          if (shippingTypeIdBuilder_ == null) {
            result.shippingTypeId_ = shippingTypeId_;
          } else {
            result.shippingTypeId_ = shippingTypeIdBuilder_.build();
          }
          if (regionIdBuilder_ == null) {
            result.regionId_ = regionId_;
          } else {
            result.regionId_ = regionIdBuilder_.build();
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            result.surchargeTypeDescription_ = surchargeTypeDescription_;
          } else {
            result.surchargeTypeDescription_ = surchargeTypeDescriptionBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          if (surchargeUnitIdBuilder_ == null) {
            result.surchargeUnitId_ = surchargeUnitId_;
          } else {
            result.surchargeUnitId_ = surchargeUnitIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasBruttoSumTo()) {
            mergeBruttoSumTo(other.getBruttoSumTo());
          }
          if (other.hasPriorityNo()) {
            mergePriorityNo(other.getPriorityNo());
          }
          if (other.hasShippingTypeDescription()) {
            mergeShippingTypeDescription(other.getShippingTypeDescription());
          }
          if (other.hasSurchargeUnitSymbol()) {
            mergeSurchargeUnitSymbol(other.getSurchargeUnitSymbol());
          }
          if (other.hasBruttoSumFrom()) {
            mergeBruttoSumFrom(other.getBruttoSumFrom());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasCost()) {
            mergeCost(other.getCost());
          }
          if (other.hasGrossSumTo()) {
            mergeGrossSumTo(other.getGrossSumTo());
          }
          if (other.hasCurrencyId()) {
            mergeCurrencyId(other.getCurrencyId());
          }
          if (other.hasCurrencySymbol()) {
            mergeCurrencySymbol(other.getCurrencySymbol());
          }
          if (other.hasCreatedAtDateAndTime()) {
            mergeCreatedAtDateAndTime(other.getCreatedAtDateAndTime());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasCostCurrencyId()) {
            mergeCostCurrencyId(other.getCostCurrencyId());
          }
          if (other.hasTranslatedDescription()) {
            mergeTranslatedDescription(other.getTranslatedDescription());
          }
          if (other.hasGrossSumFrom()) {
            mergeGrossSumFrom(other.getGrossSumFrom());
          }
          if (other.hasRegion()) {
            mergeRegion(other.getRegion());
          }
          if (other.hasSurchargeIsAbsoluteValue()) {
            mergeSurchargeIsAbsoluteValue(other.getSurchargeIsAbsoluteValue());
          }
          if (other.hasCostCurrencySymbol()) {
            mergeCostCurrencySymbol(other.getCostCurrencySymbol());
          }
          if (other.hasShippingTypeId()) {
            mergeShippingTypeId(other.getShippingTypeId());
          }
          if (other.hasRegionId()) {
            mergeRegionId(other.getRegionId());
          }
          if (other.hasSurchargeTypeDescription()) {
            mergeSurchargeTypeDescription(other.getSurchargeTypeDescription());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          if (other.hasSurchargeUnitId()) {
            mergeSurchargeUnitId(other.getSurchargeUnitId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.decimalValue bruttoSumTo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> bruttoSumToBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public boolean hasBruttoSumTo() {
          return bruttoSumToBuilder_ != null || bruttoSumTo_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public io.dstore.Values.decimalValue getBruttoSumTo() {
          if (bruttoSumToBuilder_ == null) {
            return bruttoSumTo_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumTo_;
          } else {
            return bruttoSumToBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public Builder setBruttoSumTo(io.dstore.Values.decimalValue value) {
          if (bruttoSumToBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bruttoSumTo_ = value;
            onChanged();
          } else {
            bruttoSumToBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public Builder setBruttoSumTo(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (bruttoSumToBuilder_ == null) {
            bruttoSumTo_ = builderForValue.build();
            onChanged();
          } else {
            bruttoSumToBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public Builder mergeBruttoSumTo(io.dstore.Values.decimalValue value) {
          if (bruttoSumToBuilder_ == null) {
            if (bruttoSumTo_ != null) {
              bruttoSumTo_ =
                io.dstore.Values.decimalValue.newBuilder(bruttoSumTo_).mergeFrom(value).buildPartial();
            } else {
              bruttoSumTo_ = value;
            }
            onChanged();
          } else {
            bruttoSumToBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public Builder clearBruttoSumTo() {
          if (bruttoSumToBuilder_ == null) {
            bruttoSumTo_ = null;
            onChanged();
          } else {
            bruttoSumTo_ = null;
            bruttoSumToBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getBruttoSumToBuilder() {
          
          onChanged();
          return getBruttoSumToFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getBruttoSumToOrBuilder() {
          if (bruttoSumToBuilder_ != null) {
            return bruttoSumToBuilder_.getMessageOrBuilder();
          } else {
            return bruttoSumTo_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumTo_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_to = 10001;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumTo"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getBruttoSumToFieldBuilder() {
          if (bruttoSumToBuilder_ == null) {
            bruttoSumToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getBruttoSumTo(),
                    getParentForChildren(),
                    isClean());
            bruttoSumTo_ = null;
          }
          return bruttoSumToBuilder_;
        }

        private io.dstore.Values.integerValue priorityNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> priorityNoBuilder_;
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public boolean hasPriorityNo() {
          return priorityNoBuilder_ != null || priorityNo_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public io.dstore.Values.integerValue getPriorityNo() {
          if (priorityNoBuilder_ == null) {
            return priorityNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
          } else {
            return priorityNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public Builder setPriorityNo(io.dstore.Values.integerValue value) {
          if (priorityNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            priorityNo_ = value;
            onChanged();
          } else {
            priorityNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public Builder setPriorityNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (priorityNoBuilder_ == null) {
            priorityNo_ = builderForValue.build();
            onChanged();
          } else {
            priorityNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public Builder mergePriorityNo(io.dstore.Values.integerValue value) {
          if (priorityNoBuilder_ == null) {
            if (priorityNo_ != null) {
              priorityNo_ =
                io.dstore.Values.integerValue.newBuilder(priorityNo_).mergeFrom(value).buildPartial();
            } else {
              priorityNo_ = value;
            }
            onChanged();
          } else {
            priorityNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public Builder clearPriorityNo() {
          if (priorityNoBuilder_ == null) {
            priorityNo_ = null;
            onChanged();
          } else {
            priorityNo_ = null;
            priorityNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getPriorityNoBuilder() {
          
          onChanged();
          return getPriorityNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getPriorityNoOrBuilder() {
          if (priorityNoBuilder_ != null) {
            return priorityNoBuilder_.getMessageOrBuilder();
          } else {
            return priorityNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : priorityNo_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue priority_no = 10002;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge bei der Berechnung aller "ShippingTypeID" zugeordneten "Surcharges"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPriorityNoFieldBuilder() {
          if (priorityNoBuilder_ == null) {
            priorityNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPriorityNo(),
                    getParentForChildren(),
                    isClean());
            priorityNo_ = null;
          }
          return priorityNoBuilder_;
        }

        private io.dstore.Values.stringValue shippingTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> shippingTypeDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public boolean hasShippingTypeDescription() {
          return shippingTypeDescriptionBuilder_ != null || shippingTypeDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValue getShippingTypeDescription() {
          if (shippingTypeDescriptionBuilder_ == null) {
            return shippingTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
          } else {
            return shippingTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setShippingTypeDescription(io.dstore.Values.stringValue value) {
          if (shippingTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingTypeDescription_ = value;
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder setShippingTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder mergeShippingTypeDescription(io.dstore.Values.stringValue value) {
          if (shippingTypeDescriptionBuilder_ == null) {
            if (shippingTypeDescription_ != null) {
              shippingTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(shippingTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              shippingTypeDescription_ = value;
            }
            onChanged();
          } else {
            shippingTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public Builder clearShippingTypeDescription() {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescription_ = null;
            onChanged();
          } else {
            shippingTypeDescription_ = null;
            shippingTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getShippingTypeDescriptionBuilder() {
          
          onChanged();
          return getShippingTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getShippingTypeDescriptionOrBuilder() {
          if (shippingTypeDescriptionBuilder_ != null) {
            return shippingTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return shippingTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : shippingTypeDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue shipping_type_description = 10003;</code>
         *
         * <pre>
         * Bezeichnung der Versandart "ShippingTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getShippingTypeDescriptionFieldBuilder() {
          if (shippingTypeDescriptionBuilder_ == null) {
            shippingTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getShippingTypeDescription(),
                    getParentForChildren(),
                    isClean());
            shippingTypeDescription_ = null;
          }
          return shippingTypeDescriptionBuilder_;
        }

        private io.dstore.Values.stringValue surchargeUnitSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> surchargeUnitSymbolBuilder_;
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public boolean hasSurchargeUnitSymbol() {
          return surchargeUnitSymbolBuilder_ != null || surchargeUnitSymbol_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.stringValue getSurchargeUnitSymbol() {
          if (surchargeUnitSymbolBuilder_ == null) {
            return surchargeUnitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeUnitSymbol_;
          } else {
            return surchargeUnitSymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public Builder setSurchargeUnitSymbol(io.dstore.Values.stringValue value) {
          if (surchargeUnitSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeUnitSymbol_ = value;
            onChanged();
          } else {
            surchargeUnitSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public Builder setSurchargeUnitSymbol(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (surchargeUnitSymbolBuilder_ == null) {
            surchargeUnitSymbol_ = builderForValue.build();
            onChanged();
          } else {
            surchargeUnitSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public Builder mergeSurchargeUnitSymbol(io.dstore.Values.stringValue value) {
          if (surchargeUnitSymbolBuilder_ == null) {
            if (surchargeUnitSymbol_ != null) {
              surchargeUnitSymbol_ =
                io.dstore.Values.stringValue.newBuilder(surchargeUnitSymbol_).mergeFrom(value).buildPartial();
            } else {
              surchargeUnitSymbol_ = value;
            }
            onChanged();
          } else {
            surchargeUnitSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public Builder clearSurchargeUnitSymbol() {
          if (surchargeUnitSymbolBuilder_ == null) {
            surchargeUnitSymbol_ = null;
            onChanged();
          } else {
            surchargeUnitSymbol_ = null;
            surchargeUnitSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getSurchargeUnitSymbolBuilder() {
          
          onChanged();
          return getSurchargeUnitSymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getSurchargeUnitSymbolOrBuilder() {
          if (surchargeUnitSymbolBuilder_ != null) {
            return surchargeUnitSymbolBuilder_.getMessageOrBuilder();
          } else {
            return surchargeUnitSymbol_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : surchargeUnitSymbol_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_unit_symbol = 10004;</code>
         *
         * <pre>
         * Symbol/Abkürzung der Einheit "SurchargeUnitID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSurchargeUnitSymbolFieldBuilder() {
          if (surchargeUnitSymbolBuilder_ == null) {
            surchargeUnitSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSurchargeUnitSymbol(),
                    getParentForChildren(),
                    isClean());
            surchargeUnitSymbol_ = null;
          }
          return surchargeUnitSymbolBuilder_;
        }

        private io.dstore.Values.decimalValue bruttoSumFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> bruttoSumFromBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public boolean hasBruttoSumFrom() {
          return bruttoSumFromBuilder_ != null || bruttoSumFrom_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public io.dstore.Values.decimalValue getBruttoSumFrom() {
          if (bruttoSumFromBuilder_ == null) {
            return bruttoSumFrom_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumFrom_;
          } else {
            return bruttoSumFromBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public Builder setBruttoSumFrom(io.dstore.Values.decimalValue value) {
          if (bruttoSumFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bruttoSumFrom_ = value;
            onChanged();
          } else {
            bruttoSumFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public Builder setBruttoSumFrom(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (bruttoSumFromBuilder_ == null) {
            bruttoSumFrom_ = builderForValue.build();
            onChanged();
          } else {
            bruttoSumFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public Builder mergeBruttoSumFrom(io.dstore.Values.decimalValue value) {
          if (bruttoSumFromBuilder_ == null) {
            if (bruttoSumFrom_ != null) {
              bruttoSumFrom_ =
                io.dstore.Values.decimalValue.newBuilder(bruttoSumFrom_).mergeFrom(value).buildPartial();
            } else {
              bruttoSumFrom_ = value;
            }
            onChanged();
          } else {
            bruttoSumFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public Builder clearBruttoSumFrom() {
          if (bruttoSumFromBuilder_ == null) {
            bruttoSumFrom_ = null;
            onChanged();
          } else {
            bruttoSumFrom_ = null;
            bruttoSumFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getBruttoSumFromBuilder() {
          
          onChanged();
          return getBruttoSumFromFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getBruttoSumFromOrBuilder() {
          if (bruttoSumFromBuilder_ != null) {
            return bruttoSumFromBuilder_.getMessageOrBuilder();
          } else {
            return bruttoSumFrom_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : bruttoSumFrom_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue brutto_sum_from = 10005;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "GrossSumFrom"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getBruttoSumFromFieldBuilder() {
          if (bruttoSumFromBuilder_ == null) {
            bruttoSumFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getBruttoSumFrom(),
                    getParentForChildren(),
                    isClean());
            bruttoSumFrom_ = null;
          }
          return bruttoSumFromBuilder_;
        }

        private io.dstore.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public io.dstore.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public Builder setSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public Builder setSurchargeValue(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public Builder mergeSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue surcharge_value = 10006;</code>
         *
         * <pre>
         * Aufschlag/Rabatt, der bei Wahl der "ShippingTypeID" in einem Auftrag berechnet/gewährt wird
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.Values.decimalValue cost_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> costBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public boolean hasCost() {
          return costBuilder_ != null || cost_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public io.dstore.Values.decimalValue getCost() {
          if (costBuilder_ == null) {
            return cost_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : cost_;
          } else {
            return costBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public Builder setCost(io.dstore.Values.decimalValue value) {
          if (costBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cost_ = value;
            onChanged();
          } else {
            costBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public Builder setCost(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (costBuilder_ == null) {
            cost_ = builderForValue.build();
            onChanged();
          } else {
            costBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public Builder mergeCost(io.dstore.Values.decimalValue value) {
          if (costBuilder_ == null) {
            if (cost_ != null) {
              cost_ =
                io.dstore.Values.decimalValue.newBuilder(cost_).mergeFrom(value).buildPartial();
            } else {
              cost_ = value;
            }
            onChanged();
          } else {
            costBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public Builder clearCost() {
          if (costBuilder_ == null) {
            cost_ = null;
            onChanged();
          } else {
            cost_ = null;
            costBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getCostBuilder() {
          
          onChanged();
          return getCostFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getCostOrBuilder() {
          if (costBuilder_ != null) {
            return costBuilder_.getMessageOrBuilder();
          } else {
            return cost_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : cost_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue cost = 10007;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeValue"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getCostFieldBuilder() {
          if (costBuilder_ == null) {
            costBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getCost(),
                    getParentForChildren(),
                    isClean());
            cost_ = null;
          }
          return costBuilder_;
        }

        private io.dstore.Values.decimalValue grossSumTo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> grossSumToBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public boolean hasGrossSumTo() {
          return grossSumToBuilder_ != null || grossSumTo_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValue getGrossSumTo() {
          if (grossSumToBuilder_ == null) {
            return grossSumTo_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : grossSumTo_;
          } else {
            return grossSumToBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder setGrossSumTo(io.dstore.Values.decimalValue value) {
          if (grossSumToBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossSumTo_ = value;
            onChanged();
          } else {
            grossSumToBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder setGrossSumTo(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (grossSumToBuilder_ == null) {
            grossSumTo_ = builderForValue.build();
            onChanged();
          } else {
            grossSumToBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder mergeGrossSumTo(io.dstore.Values.decimalValue value) {
          if (grossSumToBuilder_ == null) {
            if (grossSumTo_ != null) {
              grossSumTo_ =
                io.dstore.Values.decimalValue.newBuilder(grossSumTo_).mergeFrom(value).buildPartial();
            } else {
              grossSumTo_ = value;
            }
            onChanged();
          } else {
            grossSumToBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder clearGrossSumTo() {
          if (grossSumToBuilder_ == null) {
            grossSumTo_ = null;
            onChanged();
          } else {
            grossSumTo_ = null;
            grossSumToBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getGrossSumToBuilder() {
          
          onChanged();
          return getGrossSumToFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getGrossSumToOrBuilder() {
          if (grossSumToBuilder_ != null) {
            return grossSumToBuilder_.getMessageOrBuilder();
          } else {
            return grossSumTo_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : grossSumTo_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_to = 10008;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) höchstens so hoch wie dieser Betrag ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getGrossSumToFieldBuilder() {
          if (grossSumToBuilder_ == null) {
            grossSumToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getGrossSumTo(),
                    getParentForChildren(),
                    isClean());
            grossSumTo_ = null;
          }
          return grossSumToBuilder_;
        }

        private io.dstore.Values.integerValue currencyId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> currencyIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public boolean hasCurrencyId() {
          return currencyIdBuilder_ != null || currencyId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public io.dstore.Values.integerValue getCurrencyId() {
          if (currencyIdBuilder_ == null) {
            return currencyId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : currencyId_;
          } else {
            return currencyIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public Builder setCurrencyId(io.dstore.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currencyId_ = value;
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public Builder setCurrencyId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (currencyIdBuilder_ == null) {
            currencyId_ = builderForValue.build();
            onChanged();
          } else {
            currencyIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public Builder mergeCurrencyId(io.dstore.Values.integerValue value) {
          if (currencyIdBuilder_ == null) {
            if (currencyId_ != null) {
              currencyId_ =
                io.dstore.Values.integerValue.newBuilder(currencyId_).mergeFrom(value).buildPartial();
            } else {
              currencyId_ = value;
            }
            onChanged();
          } else {
            currencyIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public Builder clearCurrencyId() {
          if (currencyIdBuilder_ == null) {
            currencyId_ = null;
            onChanged();
          } else {
            currencyId_ = null;
            currencyIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getCurrencyIdBuilder() {
          
          onChanged();
          return getCurrencyIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getCurrencyIdOrBuilder() {
          if (currencyIdBuilder_ != null) {
            return currencyIdBuilder_.getMessageOrBuilder();
          } else {
            return currencyId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : currencyId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue currency_id = 10009;</code>
         *
         * <pre>
         * ID einer Währung, in der "GrossSumFrom" und "GrossSumTo" angegeben sind
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getCurrencyIdFieldBuilder() {
          if (currencyIdBuilder_ == null) {
            currencyIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getCurrencyId(),
                    getParentForChildren(),
                    isClean());
            currencyId_ = null;
          }
          return currencyIdBuilder_;
        }

        private io.dstore.Values.stringValue currencySymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> currencySymbolBuilder_;
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public boolean hasCurrencySymbol() {
          return currencySymbolBuilder_ != null || currencySymbol_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.Values.stringValue getCurrencySymbol() {
          if (currencySymbolBuilder_ == null) {
            return currencySymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : currencySymbol_;
          } else {
            return currencySymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder setCurrencySymbol(io.dstore.Values.stringValue value) {
          if (currencySymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            currencySymbol_ = value;
            onChanged();
          } else {
            currencySymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder setCurrencySymbol(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = builderForValue.build();
            onChanged();
          } else {
            currencySymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder mergeCurrencySymbol(io.dstore.Values.stringValue value) {
          if (currencySymbolBuilder_ == null) {
            if (currencySymbol_ != null) {
              currencySymbol_ =
                io.dstore.Values.stringValue.newBuilder(currencySymbol_).mergeFrom(value).buildPartial();
            } else {
              currencySymbol_ = value;
            }
            onChanged();
          } else {
            currencySymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public Builder clearCurrencySymbol() {
          if (currencySymbolBuilder_ == null) {
            currencySymbol_ = null;
            onChanged();
          } else {
            currencySymbol_ = null;
            currencySymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getCurrencySymbolBuilder() {
          
          onChanged();
          return getCurrencySymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getCurrencySymbolOrBuilder() {
          if (currencySymbolBuilder_ != null) {
            return currencySymbolBuilder_.getMessageOrBuilder();
          } else {
            return currencySymbol_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : currencySymbol_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue currency_symbol = 10010;</code>
         *
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCurrencySymbolFieldBuilder() {
          if (currencySymbolBuilder_ == null) {
            currencySymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCurrencySymbol(),
                    getParentForChildren(),
                    isClean());
            currencySymbol_ = null;
          }
          return currencySymbolBuilder_;
        }

        private io.dstore.Values.timestampValue createdAtDateAndTime_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> createdAtDateAndTimeBuilder_;
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public boolean hasCreatedAtDateAndTime() {
          return createdAtDateAndTimeBuilder_ != null || createdAtDateAndTime_ != null;
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public io.dstore.Values.timestampValue getCreatedAtDateAndTime() {
          if (createdAtDateAndTimeBuilder_ == null) {
            return createdAtDateAndTime_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : createdAtDateAndTime_;
          } else {
            return createdAtDateAndTimeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public Builder setCreatedAtDateAndTime(io.dstore.Values.timestampValue value) {
          if (createdAtDateAndTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            createdAtDateAndTime_ = value;
            onChanged();
          } else {
            createdAtDateAndTimeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public Builder setCreatedAtDateAndTime(
            io.dstore.Values.timestampValue.Builder builderForValue) {
          if (createdAtDateAndTimeBuilder_ == null) {
            createdAtDateAndTime_ = builderForValue.build();
            onChanged();
          } else {
            createdAtDateAndTimeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public Builder mergeCreatedAtDateAndTime(io.dstore.Values.timestampValue value) {
          if (createdAtDateAndTimeBuilder_ == null) {
            if (createdAtDateAndTime_ != null) {
              createdAtDateAndTime_ =
                io.dstore.Values.timestampValue.newBuilder(createdAtDateAndTime_).mergeFrom(value).buildPartial();
            } else {
              createdAtDateAndTime_ = value;
            }
            onChanged();
          } else {
            createdAtDateAndTimeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public Builder clearCreatedAtDateAndTime() {
          if (createdAtDateAndTimeBuilder_ == null) {
            createdAtDateAndTime_ = null;
            onChanged();
          } else {
            createdAtDateAndTime_ = null;
            createdAtDateAndTimeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public io.dstore.Values.timestampValue.Builder getCreatedAtDateAndTimeBuilder() {
          
          onChanged();
          return getCreatedAtDateAndTimeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        public io.dstore.Values.timestampValueOrBuilder getCreatedAtDateAndTimeOrBuilder() {
          if (createdAtDateAndTimeBuilder_ != null) {
            return createdAtDateAndTimeBuilder_.getMessageOrBuilder();
          } else {
            return createdAtDateAndTime_ == null ?
                io.dstore.Values.timestampValue.getDefaultInstance() : createdAtDateAndTime_;
          }
        }
        /**
         * <code>optional .dstore.values.timestampValue created_at_date_and_time = 10011;</code>
         *
         * <pre>
         * Wann wurde die Versandsart angelegt. Anmerkung : Kann "NULL" sein, da diese Spalte erst seit Version 5.0.2 der Tabelle "PaymentTypes" hinzugefügt wurde !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
            getCreatedAtDateAndTimeFieldBuilder() {
          if (createdAtDateAndTimeBuilder_ == null) {
            createdAtDateAndTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                    getCreatedAtDateAndTime(),
                    getParentForChildren(),
                    isClean());
            createdAtDateAndTime_ = null;
          }
          return createdAtDateAndTimeBuilder_;
        }

        private io.dstore.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public io.dstore.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public Builder setActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public Builder setActive(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public Builder mergeActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue active = 10012;</code>
         *
         * <pre>
         * "0" : Die Versandart ist nicht mehr aktiv, d.h. kann für neue Aufträge nicht mehr verwendet werden (wird aber noch in alten Aufträgen referenziert und kann daher nicht gelöscht werden)"1" : "ShippingTypeID" ist aktiv, also aktuell auswählbar
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.Values.integerValue costCurrencyId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> costCurrencyIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public boolean hasCostCurrencyId() {
          return costCurrencyIdBuilder_ != null || costCurrencyId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.integerValue getCostCurrencyId() {
          if (costCurrencyIdBuilder_ == null) {
            return costCurrencyId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : costCurrencyId_;
          } else {
            return costCurrencyIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public Builder setCostCurrencyId(io.dstore.Values.integerValue value) {
          if (costCurrencyIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            costCurrencyId_ = value;
            onChanged();
          } else {
            costCurrencyIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public Builder setCostCurrencyId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (costCurrencyIdBuilder_ == null) {
            costCurrencyId_ = builderForValue.build();
            onChanged();
          } else {
            costCurrencyIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public Builder mergeCostCurrencyId(io.dstore.Values.integerValue value) {
          if (costCurrencyIdBuilder_ == null) {
            if (costCurrencyId_ != null) {
              costCurrencyId_ =
                io.dstore.Values.integerValue.newBuilder(costCurrencyId_).mergeFrom(value).buildPartial();
            } else {
              costCurrencyId_ = value;
            }
            onChanged();
          } else {
            costCurrencyIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public Builder clearCostCurrencyId() {
          if (costCurrencyIdBuilder_ == null) {
            costCurrencyId_ = null;
            onChanged();
          } else {
            costCurrencyId_ = null;
            costCurrencyIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getCostCurrencyIdBuilder() {
          
          onChanged();
          return getCostCurrencyIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getCostCurrencyIdOrBuilder() {
          if (costCurrencyIdBuilder_ != null) {
            return costCurrencyIdBuilder_.getMessageOrBuilder();
          } else {
            return costCurrencyId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : costCurrencyId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue cost_currency_id = 10013;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getCostCurrencyIdFieldBuilder() {
          if (costCurrencyIdBuilder_ == null) {
            costCurrencyIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getCostCurrencyId(),
                    getParentForChildren(),
                    isClean());
            costCurrencyId_ = null;
          }
          return costCurrencyIdBuilder_;
        }

        private io.dstore.Values.stringValue translatedDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> translatedDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public boolean hasTranslatedDescription() {
          return translatedDescriptionBuilder_ != null || translatedDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public io.dstore.Values.stringValue getTranslatedDescription() {
          if (translatedDescriptionBuilder_ == null) {
            return translatedDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : translatedDescription_;
          } else {
            return translatedDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public Builder setTranslatedDescription(io.dstore.Values.stringValue value) {
          if (translatedDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            translatedDescription_ = value;
            onChanged();
          } else {
            translatedDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public Builder setTranslatedDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (translatedDescriptionBuilder_ == null) {
            translatedDescription_ = builderForValue.build();
            onChanged();
          } else {
            translatedDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public Builder mergeTranslatedDescription(io.dstore.Values.stringValue value) {
          if (translatedDescriptionBuilder_ == null) {
            if (translatedDescription_ != null) {
              translatedDescription_ =
                io.dstore.Values.stringValue.newBuilder(translatedDescription_).mergeFrom(value).buildPartial();
            } else {
              translatedDescription_ = value;
            }
            onChanged();
          } else {
            translatedDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public Builder clearTranslatedDescription() {
          if (translatedDescriptionBuilder_ == null) {
            translatedDescription_ = null;
            onChanged();
          } else {
            translatedDescription_ = null;
            translatedDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getTranslatedDescriptionBuilder() {
          
          onChanged();
          return getTranslatedDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getTranslatedDescriptionOrBuilder() {
          if (translatedDescriptionBuilder_ != null) {
            return translatedDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return translatedDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : translatedDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue translated_description = 10014;</code>
         *
         * <pre>
         * Übersetzung von "ShippingTypeDescription" in der durch "&#64;LanguageID" angegebenen Sprache. Immer "NULL", wenn "&#64;LanguageID" "0" oder "NULL" ist, oder ein Wert für "&#64;ValidAtDateAndTime" gesetzt ist (da es für die Übersetzungen KEINE Historie gibt) !
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getTranslatedDescriptionFieldBuilder() {
          if (translatedDescriptionBuilder_ == null) {
            translatedDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getTranslatedDescription(),
                    getParentForChildren(),
                    isClean());
            translatedDescription_ = null;
          }
          return translatedDescriptionBuilder_;
        }

        private io.dstore.Values.decimalValue grossSumFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> grossSumFromBuilder_;
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public boolean hasGrossSumFrom() {
          return grossSumFromBuilder_ != null || grossSumFrom_ != null;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValue getGrossSumFrom() {
          if (grossSumFromBuilder_ == null) {
            return grossSumFrom_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : grossSumFrom_;
          } else {
            return grossSumFromBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder setGrossSumFrom(io.dstore.Values.decimalValue value) {
          if (grossSumFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            grossSumFrom_ = value;
            onChanged();
          } else {
            grossSumFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder setGrossSumFrom(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (grossSumFromBuilder_ == null) {
            grossSumFrom_ = builderForValue.build();
            onChanged();
          } else {
            grossSumFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder mergeGrossSumFrom(io.dstore.Values.decimalValue value) {
          if (grossSumFromBuilder_ == null) {
            if (grossSumFrom_ != null) {
              grossSumFrom_ =
                io.dstore.Values.decimalValue.newBuilder(grossSumFrom_).mergeFrom(value).buildPartial();
            } else {
              grossSumFrom_ = value;
            }
            onChanged();
          } else {
            grossSumFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public Builder clearGrossSumFrom() {
          if (grossSumFromBuilder_ == null) {
            grossSumFrom_ = null;
            onChanged();
          } else {
            grossSumFrom_ = null;
            grossSumFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValue.Builder getGrossSumFromBuilder() {
          
          onChanged();
          return getGrossSumFromFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        public io.dstore.Values.decimalValueOrBuilder getGrossSumFromOrBuilder() {
          if (grossSumFromBuilder_ != null) {
            return grossSumFromBuilder_.getMessageOrBuilder();
          } else {
            return grossSumFrom_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : grossSumFrom_;
          }
        }
        /**
         * <code>optional .dstore.values.decimalValue gross_sum_from = 10015;</code>
         *
         * <pre>
         * om_GetPaymentAndShipping_Pu bietet die Versandart ShippingTypeID nur dann an, wenn der Brutto-Bestellwert (in der Einheit CurrencyID) mindestens so hoch wie dieser Betrag ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getGrossSumFromFieldBuilder() {
          if (grossSumFromBuilder_ == null) {
            grossSumFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getGrossSumFrom(),
                    getParentForChildren(),
                    isClean());
            grossSumFrom_ = null;
          }
          return grossSumFromBuilder_;
        }

        private io.dstore.Values.stringValue region_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> regionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public boolean hasRegion() {
          return regionBuilder_ != null || region_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public io.dstore.Values.stringValue getRegion() {
          if (regionBuilder_ == null) {
            return region_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : region_;
          } else {
            return regionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public Builder setRegion(io.dstore.Values.stringValue value) {
          if (regionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            region_ = value;
            onChanged();
          } else {
            regionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public Builder setRegion(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (regionBuilder_ == null) {
            region_ = builderForValue.build();
            onChanged();
          } else {
            regionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public Builder mergeRegion(io.dstore.Values.stringValue value) {
          if (regionBuilder_ == null) {
            if (region_ != null) {
              region_ =
                io.dstore.Values.stringValue.newBuilder(region_).mergeFrom(value).buildPartial();
            } else {
              region_ = value;
            }
            onChanged();
          } else {
            regionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public Builder clearRegion() {
          if (regionBuilder_ == null) {
            region_ = null;
            onChanged();
          } else {
            region_ = null;
            regionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getRegionBuilder() {
          
          onChanged();
          return getRegionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getRegionOrBuilder() {
          if (regionBuilder_ != null) {
            return regionBuilder_.getMessageOrBuilder();
          } else {
            return region_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : region_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue region = 10016;</code>
         *
         * <pre>
         * Bezeichnung der Region "RegionID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getRegionFieldBuilder() {
          if (regionBuilder_ == null) {
            regionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getRegion(),
                    getParentForChildren(),
                    isClean());
            region_ = null;
          }
          return regionBuilder_;
        }

        private io.dstore.Values.integerValue surchargeIsAbsoluteValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeIsAbsoluteValueBuilder_;
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public boolean hasSurchargeIsAbsoluteValue() {
          return surchargeIsAbsoluteValueBuilder_ != null || surchargeIsAbsoluteValue_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.Values.integerValue getSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            return surchargeIsAbsoluteValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          } else {
            return surchargeIsAbsoluteValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder setSurchargeIsAbsoluteValue(io.dstore.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeIsAbsoluteValue_ = value;
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder setSurchargeIsAbsoluteValue(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder mergeSurchargeIsAbsoluteValue(io.dstore.Values.integerValue value) {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            if (surchargeIsAbsoluteValue_ != null) {
              surchargeIsAbsoluteValue_ =
                io.dstore.Values.integerValue.newBuilder(surchargeIsAbsoluteValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeIsAbsoluteValue_ = value;
            }
            onChanged();
          } else {
            surchargeIsAbsoluteValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public Builder clearSurchargeIsAbsoluteValue() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValue_ = null;
            onChanged();
          } else {
            surchargeIsAbsoluteValue_ = null;
            surchargeIsAbsoluteValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeIsAbsoluteValueBuilder() {
          
          onChanged();
          return getSurchargeIsAbsoluteValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeIsAbsoluteValueOrBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ != null) {
            return surchargeIsAbsoluteValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeIsAbsoluteValue_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeIsAbsoluteValue_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_is_absolute_value = 10017;</code>
         *
         * <pre>
         * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : Es ist eine relative (d.h. prozentuale) Angabe"1" : Es ist eine absolute Währungs-Angabe in der Einheit SurchargeUnitID, und zwar ein als NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeIsAbsoluteValueFieldBuilder() {
          if (surchargeIsAbsoluteValueBuilder_ == null) {
            surchargeIsAbsoluteValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeIsAbsoluteValue(),
                    getParentForChildren(),
                    isClean());
            surchargeIsAbsoluteValue_ = null;
          }
          return surchargeIsAbsoluteValueBuilder_;
        }

        private io.dstore.Values.stringValue costCurrencySymbol_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> costCurrencySymbolBuilder_;
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public boolean hasCostCurrencySymbol() {
          return costCurrencySymbolBuilder_ != null || costCurrencySymbol_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public io.dstore.Values.stringValue getCostCurrencySymbol() {
          if (costCurrencySymbolBuilder_ == null) {
            return costCurrencySymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : costCurrencySymbol_;
          } else {
            return costCurrencySymbolBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public Builder setCostCurrencySymbol(io.dstore.Values.stringValue value) {
          if (costCurrencySymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            costCurrencySymbol_ = value;
            onChanged();
          } else {
            costCurrencySymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public Builder setCostCurrencySymbol(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (costCurrencySymbolBuilder_ == null) {
            costCurrencySymbol_ = builderForValue.build();
            onChanged();
          } else {
            costCurrencySymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public Builder mergeCostCurrencySymbol(io.dstore.Values.stringValue value) {
          if (costCurrencySymbolBuilder_ == null) {
            if (costCurrencySymbol_ != null) {
              costCurrencySymbol_ =
                io.dstore.Values.stringValue.newBuilder(costCurrencySymbol_).mergeFrom(value).buildPartial();
            } else {
              costCurrencySymbol_ = value;
            }
            onChanged();
          } else {
            costCurrencySymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public Builder clearCostCurrencySymbol() {
          if (costCurrencySymbolBuilder_ == null) {
            costCurrencySymbol_ = null;
            onChanged();
          } else {
            costCurrencySymbol_ = null;
            costCurrencySymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getCostCurrencySymbolBuilder() {
          
          onChanged();
          return getCostCurrencySymbolFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getCostCurrencySymbolOrBuilder() {
          if (costCurrencySymbolBuilder_ != null) {
            return costCurrencySymbolBuilder_.getMessageOrBuilder();
          } else {
            return costCurrencySymbol_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : costCurrencySymbol_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue cost_currency_symbol = 10018;</code>
         *
         * <pre>
         * Nicht verwenden, stattdessen : "SurchargeUnitSymbol"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCostCurrencySymbolFieldBuilder() {
          if (costCurrencySymbolBuilder_ == null) {
            costCurrencySymbolBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCostCurrencySymbol(),
                    getParentForChildren(),
                    isClean());
            costCurrencySymbol_ = null;
          }
          return costCurrencySymbolBuilder_;
        }

        private io.dstore.Values.integerValue shippingTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> shippingTypeIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public boolean hasShippingTypeId() {
          return shippingTypeIdBuilder_ != null || shippingTypeId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public io.dstore.Values.integerValue getShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            return shippingTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          } else {
            return shippingTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public Builder setShippingTypeId(io.dstore.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shippingTypeId_ = value;
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public Builder setShippingTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = builderForValue.build();
            onChanged();
          } else {
            shippingTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public Builder mergeShippingTypeId(io.dstore.Values.integerValue value) {
          if (shippingTypeIdBuilder_ == null) {
            if (shippingTypeId_ != null) {
              shippingTypeId_ =
                io.dstore.Values.integerValue.newBuilder(shippingTypeId_).mergeFrom(value).buildPartial();
            } else {
              shippingTypeId_ = value;
            }
            onChanged();
          } else {
            shippingTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public Builder clearShippingTypeId() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeId_ = null;
            onChanged();
          } else {
            shippingTypeId_ = null;
            shippingTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getShippingTypeIdBuilder() {
          
          onChanged();
          return getShippingTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getShippingTypeIdOrBuilder() {
          if (shippingTypeIdBuilder_ != null) {
            return shippingTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return shippingTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : shippingTypeId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue shipping_type_id = 10019;</code>
         *
         * <pre>
         * ID einer Versandart
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getShippingTypeIdFieldBuilder() {
          if (shippingTypeIdBuilder_ == null) {
            shippingTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getShippingTypeId(),
                    getParentForChildren(),
                    isClean());
            shippingTypeId_ = null;
          }
          return shippingTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue regionId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> regionIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public boolean hasRegionId() {
          return regionIdBuilder_ != null || regionId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public io.dstore.Values.integerValue getRegionId() {
          if (regionIdBuilder_ == null) {
            return regionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : regionId_;
          } else {
            return regionIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public Builder setRegionId(io.dstore.Values.integerValue value) {
          if (regionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            regionId_ = value;
            onChanged();
          } else {
            regionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public Builder setRegionId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (regionIdBuilder_ == null) {
            regionId_ = builderForValue.build();
            onChanged();
          } else {
            regionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public Builder mergeRegionId(io.dstore.Values.integerValue value) {
          if (regionIdBuilder_ == null) {
            if (regionId_ != null) {
              regionId_ =
                io.dstore.Values.integerValue.newBuilder(regionId_).mergeFrom(value).buildPartial();
            } else {
              regionId_ = value;
            }
            onChanged();
          } else {
            regionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public Builder clearRegionId() {
          if (regionIdBuilder_ == null) {
            regionId_ = null;
            onChanged();
          } else {
            regionId_ = null;
            regionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getRegionIdBuilder() {
          
          onChanged();
          return getRegionIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getRegionIdOrBuilder() {
          if (regionIdBuilder_ != null) {
            return regionIdBuilder_.getMessageOrBuilder();
          } else {
            return regionId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : regionId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue region_id = 10020;</code>
         *
         * <pre>
         * ID einer Region, die bestimmte Länder ("Countries") zusammenfaßt. "om_GetPaymentAndShipping_Pu" bietet die Versandart "ShippingTypeID" nur dann an, wenn die Person, an die die Ware geliefert werden soll, aus einem Land kommt, das dieser Region angehört.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getRegionIdFieldBuilder() {
          if (regionIdBuilder_ == null) {
            regionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getRegionId(),
                    getParentForChildren(),
                    isClean());
            regionId_ = null;
          }
          return regionIdBuilder_;
        }

        private io.dstore.Values.stringValue surchargeTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> surchargeTypeDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public boolean hasSurchargeTypeDescription() {
          return surchargeTypeDescriptionBuilder_ != null || surchargeTypeDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValue getSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          } else {
            return surchargeTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder setSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeDescription_ = value;
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder setSurchargeTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder mergeSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (surchargeTypeDescription_ != null) {
              surchargeTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(surchargeTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeDescription_ = value;
            }
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public Builder clearSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
            onChanged();
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getSurchargeTypeDescriptionBuilder() {
          
          onChanged();
          return getSurchargeTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
          if (surchargeTypeDescriptionBuilder_ != null) {
            return surchargeTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10021;</code>
         *
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSurchargeTypeDescriptionFieldBuilder() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSurchargeTypeDescription(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeDescription_ = null;
          }
          return surchargeTypeDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public io.dstore.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public Builder setSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public Builder setSurchargeTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public Builder mergeSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10022;</code>
         *
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, die bei der Versandart "ShippingTypeID" anfällt, wie z.B. "Versandkosten Inland" o.ä.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue surchargeUnitId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeUnitIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public boolean hasSurchargeUnitId() {
          return surchargeUnitIdBuilder_ != null || surchargeUnitId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.Values.integerValue getSurchargeUnitId() {
          if (surchargeUnitIdBuilder_ == null) {
            return surchargeUnitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeUnitId_;
          } else {
            return surchargeUnitIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder setSurchargeUnitId(io.dstore.Values.integerValue value) {
          if (surchargeUnitIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeUnitId_ = value;
            onChanged();
          } else {
            surchargeUnitIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder setSurchargeUnitId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeUnitIdBuilder_ == null) {
            surchargeUnitId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeUnitIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder mergeSurchargeUnitId(io.dstore.Values.integerValue value) {
          if (surchargeUnitIdBuilder_ == null) {
            if (surchargeUnitId_ != null) {
              surchargeUnitId_ =
                io.dstore.Values.integerValue.newBuilder(surchargeUnitId_).mergeFrom(value).buildPartial();
            } else {
              surchargeUnitId_ = value;
            }
            onChanged();
          } else {
            surchargeUnitIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public Builder clearSurchargeUnitId() {
          if (surchargeUnitIdBuilder_ == null) {
            surchargeUnitId_ = null;
            onChanged();
          } else {
            surchargeUnitId_ = null;
            surchargeUnitIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeUnitIdBuilder() {
          
          onChanged();
          return getSurchargeUnitIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeUnitIdOrBuilder() {
          if (surchargeUnitIdBuilder_ != null) {
            return surchargeUnitIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeUnitId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeUnitId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue surcharge_unit_id = 10023;</code>
         *
         * <pre>
         * ID der Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeUnitIdFieldBuilder() {
          if (surchargeUnitIdBuilder_ == null) {
            surchargeUnitIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeUnitId(),
                    getParentForChildren(),
                    isClean());
            surchargeUnitId_ = null;
          }
          return surchargeUnitIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippingTypes_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippingTypes_Ad.Response.Row)
      private static final io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetShippingTypesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetShippingTypes_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetShippingTypes_Ad.Response)
        io.dstore.engine.procedures.OmGetShippingTypesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetShippingTypesAd.Response.class, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetShippingTypesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetShippingTypesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response build() {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response buildPartial() {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Response result = new io.dstore.engine.procedures.OmGetShippingTypesAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetShippingTypesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.OmGetShippingTypesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetShippingTypesAd.Response other) {
        if (other == io.dstore.engine.procedures.OmGetShippingTypesAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetShippingTypesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetShippingTypesAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetShippingTypes_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetShippingTypesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetShippingTypes_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetShippingTypes_Ad.Response)
    private static final io.dstore.engine.procedures.OmGetShippingTypesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetShippingTypesAd.Response();
    }

    public static io.dstore.engine.procedures.OmGetShippingTypesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetShippingTypesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5dstore/engine/procedures/om_GetShippin" +
      "gTypes_Ad.proto\022$dstore.engine.om_GetShi" +
      "ppingTypes_Ad\032\023dstore/values.proto\032\031dsto" +
      "re/engine/error.proto\032\033dstore/engine/mes" +
      "sage.proto\032#dstore/engine/metainformatio" +
      "n.proto\"\342\002\n\nParameters\0220\n\013language_id\030\001 " +
      "\001(\0132\033.dstore.values.integerValue\022\031\n\020lang" +
      "uage_id_null\030\351\007 \001(\010\0225\n\020shipping_type_id\030" +
      "\002 \001(\0132\033.dstore.values.integerValue\022\036\n\025sh" +
      "ipping_type_id_null\030\352\007 \001(\010\0220\n\013only_activ",
      "e\030\003 \001(\0132\033.dstore.values.booleanValue\022\031\n\020" +
      "only_active_null\030\353\007 \001(\010\022=\n\026valid_at_date" +
      "_and_time\030\004 \001(\0132\035.dstore.values.timestam" +
      "pValue\022$\n\033valid_at_date_and_time_null\030\354\007" +
      " \001(\010\"\207\014\n\010Response\022)\n\005error\030\001 \001(\0132\032.dstor" +
      "e.engine.error.Error\022H\n\020meta_information" +
      "\030\002 \003(\0132..dstore.engine.metainformation.M" +
      "etaInformation\022/\n\007message\030\003 \003(\0132\036.dstore" +
      ".engine.message.Message\022?\n\003row\030\004 \003(\01322.d" +
      "store.engine.om_GetShippingTypes_Ad.Resp",
      "onse.Row\032\223\n\n\003Row\022\017\n\006row_id\030\220N \001(\005\0223\n\rbru" +
      "tto_sum_to\030\221N \001(\0132\033.dstore.values.decima" +
      "lValue\0221\n\013priority_no\030\222N \001(\0132\033.dstore.va" +
      "lues.integerValue\022>\n\031shipping_type_descr" +
      "iption\030\223N \001(\0132\032.dstore.values.stringValu" +
      "e\022:\n\025surcharge_unit_symbol\030\224N \001(\0132\032.dsto" +
      "re.values.stringValue\0225\n\017brutto_sum_from" +
      "\030\225N \001(\0132\033.dstore.values.decimalValue\0225\n\017" +
      "surcharge_value\030\226N \001(\0132\033.dstore.values.d" +
      "ecimalValue\022*\n\004cost\030\227N \001(\0132\033.dstore.valu",
      "es.decimalValue\0222\n\014gross_sum_to\030\230N \001(\0132\033" +
      ".dstore.values.decimalValue\0221\n\013currency_" +
      "id\030\231N \001(\0132\033.dstore.values.integerValue\0224" +
      "\n\017currency_symbol\030\232N \001(\0132\032.dstore.values" +
      ".stringValue\022@\n\030created_at_date_and_time" +
      "\030\233N \001(\0132\035.dstore.values.timestampValue\022," +
      "\n\006active\030\234N \001(\0132\033.dstore.values.booleanV" +
      "alue\0226\n\020cost_currency_id\030\235N \001(\0132\033.dstore" +
      ".values.integerValue\022;\n\026translated_descr" +
      "iption\030\236N \001(\0132\032.dstore.values.stringValu",
      "e\0224\n\016gross_sum_from\030\237N \001(\0132\033.dstore.valu" +
      "es.decimalValue\022+\n\006region\030\240N \001(\0132\032.dstor" +
      "e.values.stringValue\022A\n\033surcharge_is_abs" +
      "olute_value\030\241N \001(\0132\033.dstore.values.integ" +
      "erValue\0229\n\024cost_currency_symbol\030\242N \001(\0132\032" +
      ".dstore.values.stringValue\0226\n\020shipping_t" +
      "ype_id\030\243N \001(\0132\033.dstore.values.integerVal" +
      "ue\022/\n\tregion_id\030\244N \001(\0132\033.dstore.values.i" +
      "ntegerValue\022?\n\032surcharge_type_descriptio" +
      "n\030\245N \001(\0132\032.dstore.values.stringValue\0227\n\021",
      "surcharge_type_id\030\246N \001(\0132\033.dstore.values" +
      ".integerValue\0227\n\021surcharge_unit_id\030\247N \001(" +
      "\0132\033.dstore.values.integerValueB\035\n\033io.dst" +
      "ore.engine.proceduresb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippingTypes_Ad_Parameters_descriptor,
        new java.lang.String[] { "LanguageId", "LanguageIdNull", "ShippingTypeId", "ShippingTypeIdNull", "OnlyActive", "OnlyActiveNull", "ValidAtDateAndTime", "ValidAtDateAndTimeNull", });
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetShippingTypes_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "BruttoSumTo", "PriorityNo", "ShippingTypeDescription", "SurchargeUnitSymbol", "BruttoSumFrom", "SurchargeValue", "Cost", "GrossSumTo", "CurrencyId", "CurrencySymbol", "CreatedAtDateAndTime", "Active", "CostCurrencyId", "TranslatedDescription", "GrossSumFrom", "Region", "SurchargeIsAbsoluteValue", "CostCurrencySymbol", "ShippingTypeId", "RegionId", "SurchargeTypeDescription", "SurchargeTypeId", "SurchargeUnitId", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
