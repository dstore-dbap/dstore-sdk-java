// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetBinariesForValues.proto

package io.dstore.engine.procedures;

public final class ImGetBinariesForValues {
  private ImGetBinariesForValues() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetBinariesForValues.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    boolean hasValueId();
    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    io.dstore.Values.integerValue getValueId();
    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder();

    /**
     * <code>optional bool value_id_null = 1001;</code>
     */
    boolean getValueIdNull();

    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    boolean hasNodeCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    io.dstore.Values.integerValue getNodeCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

    /**
     * <code>optional bool node_characteristic_id_null = 1002;</code>
     */
    boolean getNodeCharacteristicIdNull();

    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    io.dstore.Values.stringValue getValue();
    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    io.dstore.Values.stringValueOrBuilder getValueOrBuilder();

    /**
     * <code>optional bool value_null = 1003;</code>
     */
    boolean getValueNull();

    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    boolean hasValuesInAnyValues();
    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    io.dstore.Values.booleanValue getValuesInAnyValues();
    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getValuesInAnyValuesOrBuilder();

    /**
     * <code>optional bool values_in_any_values_null = 1004;</code>
     */
    boolean getValuesInAnyValuesNull();

    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    boolean hasIncludeBinaryCode();
    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    io.dstore.Values.integerValue getIncludeBinaryCode();
    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    io.dstore.Values.integerValueOrBuilder getIncludeBinaryCodeOrBuilder();

    /**
     * <code>optional bool include_binary_code_null = 1005;</code>
     */
    boolean getIncludeBinaryCodeNull();

    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    boolean hasFilterByBinaryCharacValueId();
    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    io.dstore.Values.integerValue getFilterByBinaryCharacValueId();
    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    io.dstore.Values.integerValueOrBuilder getFilterByBinaryCharacValueIdOrBuilder();

    /**
     * <code>optional bool filter_by_binary_charac_value_id_null = 1006;</code>
     */
    boolean getFilterByBinaryCharacValueIdNull();

    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    boolean hasBinaryCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    io.dstore.Values.integerValue getBinaryCharacteristicId();
    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    io.dstore.Values.integerValueOrBuilder getBinaryCharacteristicIdOrBuilder();

    /**
     * <code>optional bool binary_characteristic_id_null = 1007;</code>
     */
    boolean getBinaryCharacteristicIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetBinariesForValues.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      valueIdNull_ = false;
      nodeCharacteristicIdNull_ = false;
      valueNull_ = false;
      valuesInAnyValuesNull_ = false;
      includeBinaryCodeNull_ = false;
      filterByBinaryCharacValueIdNull_ = false;
      binaryCharacteristicIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (valueId_ != null) {
                subBuilder = valueId_.toBuilder();
              }
              valueId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(valueId_);
                valueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId_ != null) {
                subBuilder = nodeCharacteristicId_.toBuilder();
              }
              nodeCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId_);
                nodeCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (valuesInAnyValues_ != null) {
                subBuilder = valuesInAnyValues_.toBuilder();
              }
              valuesInAnyValues_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(valuesInAnyValues_);
                valuesInAnyValues_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (includeBinaryCode_ != null) {
                subBuilder = includeBinaryCode_.toBuilder();
              }
              includeBinaryCode_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includeBinaryCode_);
                includeBinaryCode_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (filterByBinaryCharacValueId_ != null) {
                subBuilder = filterByBinaryCharacValueId_.toBuilder();
              }
              filterByBinaryCharacValueId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(filterByBinaryCharacValueId_);
                filterByBinaryCharacValueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (binaryCharacteristicId_ != null) {
                subBuilder = binaryCharacteristicId_.toBuilder();
              }
              binaryCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(binaryCharacteristicId_);
                binaryCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              valueIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              nodeCharacteristicIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              valueNull_ = input.readBool();
              break;
            }
            case 8032: {

              valuesInAnyValuesNull_ = input.readBool();
              break;
            }
            case 8040: {

              includeBinaryCodeNull_ = input.readBool();
              break;
            }
            case 8048: {

              filterByBinaryCharacValueIdNull_ = input.readBool();
              break;
            }
            case 8056: {

              binaryCharacteristicIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.class, io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.Builder.class);
    }

    public static final int VALUE_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue valueId_;
    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    public boolean hasValueId() {
      return valueId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    public io.dstore.Values.integerValue getValueId() {
      return valueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
    }
    /**
     * <code>optional .dstore.values.integerValue value_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder() {
      return getValueId();
    }

    public static final int VALUE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean valueIdNull_;
    /**
     * <code>optional bool value_id_null = 1001;</code>
     */
    public boolean getValueIdNull() {
      return valueIdNull_;
    }

    public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue nodeCharacteristicId_;
    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    public boolean hasNodeCharacteristicId() {
      return nodeCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    public io.dstore.Values.integerValue getNodeCharacteristicId() {
      return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
    }
    /**
     * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
      return getNodeCharacteristicId();
    }

    public static final int NODE_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1002;
    private boolean nodeCharacteristicIdNull_;
    /**
     * <code>optional bool node_characteristic_id_null = 1002;</code>
     */
    public boolean getNodeCharacteristicIdNull() {
      return nodeCharacteristicIdNull_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private io.dstore.Values.stringValue value_;
    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    public io.dstore.Values.stringValue getValue() {
      return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
    }
    /**
     * <code>optional .dstore.values.stringValue value = 3;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    public static final int VALUE_NULL_FIELD_NUMBER = 1003;
    private boolean valueNull_;
    /**
     * <code>optional bool value_null = 1003;</code>
     */
    public boolean getValueNull() {
      return valueNull_;
    }

    public static final int VALUES_IN_ANY_VALUES_FIELD_NUMBER = 4;
    private io.dstore.Values.booleanValue valuesInAnyValues_;
    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    public boolean hasValuesInAnyValues() {
      return valuesInAnyValues_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    public io.dstore.Values.booleanValue getValuesInAnyValues() {
      return valuesInAnyValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : valuesInAnyValues_;
    }
    /**
     * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getValuesInAnyValuesOrBuilder() {
      return getValuesInAnyValues();
    }

    public static final int VALUES_IN_ANY_VALUES_NULL_FIELD_NUMBER = 1004;
    private boolean valuesInAnyValuesNull_;
    /**
     * <code>optional bool values_in_any_values_null = 1004;</code>
     */
    public boolean getValuesInAnyValuesNull() {
      return valuesInAnyValuesNull_;
    }

    public static final int INCLUDE_BINARY_CODE_FIELD_NUMBER = 5;
    private io.dstore.Values.integerValue includeBinaryCode_;
    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    public boolean hasIncludeBinaryCode() {
      return includeBinaryCode_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    public io.dstore.Values.integerValue getIncludeBinaryCode() {
      return includeBinaryCode_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : includeBinaryCode_;
    }
    /**
     * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getIncludeBinaryCodeOrBuilder() {
      return getIncludeBinaryCode();
    }

    public static final int INCLUDE_BINARY_CODE_NULL_FIELD_NUMBER = 1005;
    private boolean includeBinaryCodeNull_;
    /**
     * <code>optional bool include_binary_code_null = 1005;</code>
     */
    public boolean getIncludeBinaryCodeNull() {
      return includeBinaryCodeNull_;
    }

    public static final int FILTER_BY_BINARY_CHARAC_VALUE_ID_FIELD_NUMBER = 6;
    private io.dstore.Values.integerValue filterByBinaryCharacValueId_;
    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    public boolean hasFilterByBinaryCharacValueId() {
      return filterByBinaryCharacValueId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    public io.dstore.Values.integerValue getFilterByBinaryCharacValueId() {
      return filterByBinaryCharacValueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : filterByBinaryCharacValueId_;
    }
    /**
     * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getFilterByBinaryCharacValueIdOrBuilder() {
      return getFilterByBinaryCharacValueId();
    }

    public static final int FILTER_BY_BINARY_CHARAC_VALUE_ID_NULL_FIELD_NUMBER = 1006;
    private boolean filterByBinaryCharacValueIdNull_;
    /**
     * <code>optional bool filter_by_binary_charac_value_id_null = 1006;</code>
     */
    public boolean getFilterByBinaryCharacValueIdNull() {
      return filterByBinaryCharacValueIdNull_;
    }

    public static final int BINARY_CHARACTERISTIC_ID_FIELD_NUMBER = 7;
    private io.dstore.Values.integerValue binaryCharacteristicId_;
    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    public boolean hasBinaryCharacteristicId() {
      return binaryCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    public io.dstore.Values.integerValue getBinaryCharacteristicId() {
      return binaryCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCharacteristicId_;
    }
    /**
     * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getBinaryCharacteristicIdOrBuilder() {
      return getBinaryCharacteristicId();
    }

    public static final int BINARY_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1007;
    private boolean binaryCharacteristicIdNull_;
    /**
     * <code>optional bool binary_characteristic_id_null = 1007;</code>
     */
    public boolean getBinaryCharacteristicIdNull() {
      return binaryCharacteristicIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueId_ != null) {
        output.writeMessage(1, getValueId());
      }
      if (nodeCharacteristicId_ != null) {
        output.writeMessage(2, getNodeCharacteristicId());
      }
      if (value_ != null) {
        output.writeMessage(3, getValue());
      }
      if (valuesInAnyValues_ != null) {
        output.writeMessage(4, getValuesInAnyValues());
      }
      if (includeBinaryCode_ != null) {
        output.writeMessage(5, getIncludeBinaryCode());
      }
      if (filterByBinaryCharacValueId_ != null) {
        output.writeMessage(6, getFilterByBinaryCharacValueId());
      }
      if (binaryCharacteristicId_ != null) {
        output.writeMessage(7, getBinaryCharacteristicId());
      }
      if (valueIdNull_ != false) {
        output.writeBool(1001, valueIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        output.writeBool(1002, nodeCharacteristicIdNull_);
      }
      if (valueNull_ != false) {
        output.writeBool(1003, valueNull_);
      }
      if (valuesInAnyValuesNull_ != false) {
        output.writeBool(1004, valuesInAnyValuesNull_);
      }
      if (includeBinaryCodeNull_ != false) {
        output.writeBool(1005, includeBinaryCodeNull_);
      }
      if (filterByBinaryCharacValueIdNull_ != false) {
        output.writeBool(1006, filterByBinaryCharacValueIdNull_);
      }
      if (binaryCharacteristicIdNull_ != false) {
        output.writeBool(1007, binaryCharacteristicIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValueId());
      }
      if (nodeCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNodeCharacteristicId());
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValue());
      }
      if (valuesInAnyValues_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValuesInAnyValues());
      }
      if (includeBinaryCode_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getIncludeBinaryCode());
      }
      if (filterByBinaryCharacValueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getFilterByBinaryCharacValueId());
      }
      if (binaryCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getBinaryCharacteristicId());
      }
      if (valueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, valueIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, nodeCharacteristicIdNull_);
      }
      if (valueNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, valueNull_);
      }
      if (valuesInAnyValuesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, valuesInAnyValuesNull_);
      }
      if (includeBinaryCodeNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, includeBinaryCodeNull_);
      }
      if (filterByBinaryCharacValueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, filterByBinaryCharacValueIdNull_);
      }
      if (binaryCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, binaryCharacteristicIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetBinariesForValues.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetBinariesForValues.Parameters)
        io.dstore.engine.procedures.ImGetBinariesForValues.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.class, io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (valueIdBuilder_ == null) {
          valueId_ = null;
        } else {
          valueId_ = null;
          valueIdBuilder_ = null;
        }
        valueIdNull_ = false;

        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }
        nodeCharacteristicIdNull_ = false;

        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        valueNull_ = false;

        if (valuesInAnyValuesBuilder_ == null) {
          valuesInAnyValues_ = null;
        } else {
          valuesInAnyValues_ = null;
          valuesInAnyValuesBuilder_ = null;
        }
        valuesInAnyValuesNull_ = false;

        if (includeBinaryCodeBuilder_ == null) {
          includeBinaryCode_ = null;
        } else {
          includeBinaryCode_ = null;
          includeBinaryCodeBuilder_ = null;
        }
        includeBinaryCodeNull_ = false;

        if (filterByBinaryCharacValueIdBuilder_ == null) {
          filterByBinaryCharacValueId_ = null;
        } else {
          filterByBinaryCharacValueId_ = null;
          filterByBinaryCharacValueIdBuilder_ = null;
        }
        filterByBinaryCharacValueIdNull_ = false;

        if (binaryCharacteristicIdBuilder_ == null) {
          binaryCharacteristicId_ = null;
        } else {
          binaryCharacteristicId_ = null;
          binaryCharacteristicIdBuilder_ = null;
        }
        binaryCharacteristicIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Parameters build() {
        io.dstore.engine.procedures.ImGetBinariesForValues.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Parameters buildPartial() {
        io.dstore.engine.procedures.ImGetBinariesForValues.Parameters result = new io.dstore.engine.procedures.ImGetBinariesForValues.Parameters(this);
        if (valueIdBuilder_ == null) {
          result.valueId_ = valueId_;
        } else {
          result.valueId_ = valueIdBuilder_.build();
        }
        result.valueIdNull_ = valueIdNull_;
        if (nodeCharacteristicIdBuilder_ == null) {
          result.nodeCharacteristicId_ = nodeCharacteristicId_;
        } else {
          result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
        }
        result.nodeCharacteristicIdNull_ = nodeCharacteristicIdNull_;
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.valueNull_ = valueNull_;
        if (valuesInAnyValuesBuilder_ == null) {
          result.valuesInAnyValues_ = valuesInAnyValues_;
        } else {
          result.valuesInAnyValues_ = valuesInAnyValuesBuilder_.build();
        }
        result.valuesInAnyValuesNull_ = valuesInAnyValuesNull_;
        if (includeBinaryCodeBuilder_ == null) {
          result.includeBinaryCode_ = includeBinaryCode_;
        } else {
          result.includeBinaryCode_ = includeBinaryCodeBuilder_.build();
        }
        result.includeBinaryCodeNull_ = includeBinaryCodeNull_;
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          result.filterByBinaryCharacValueId_ = filterByBinaryCharacValueId_;
        } else {
          result.filterByBinaryCharacValueId_ = filterByBinaryCharacValueIdBuilder_.build();
        }
        result.filterByBinaryCharacValueIdNull_ = filterByBinaryCharacValueIdNull_;
        if (binaryCharacteristicIdBuilder_ == null) {
          result.binaryCharacteristicId_ = binaryCharacteristicId_;
        } else {
          result.binaryCharacteristicId_ = binaryCharacteristicIdBuilder_.build();
        }
        result.binaryCharacteristicIdNull_ = binaryCharacteristicIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetBinariesForValues.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.ImGetBinariesForValues.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetBinariesForValues.Parameters other) {
        if (other == io.dstore.engine.procedures.ImGetBinariesForValues.Parameters.getDefaultInstance()) return this;
        if (other.hasValueId()) {
          mergeValueId(other.getValueId());
        }
        if (other.getValueIdNull() != false) {
          setValueIdNull(other.getValueIdNull());
        }
        if (other.hasNodeCharacteristicId()) {
          mergeNodeCharacteristicId(other.getNodeCharacteristicId());
        }
        if (other.getNodeCharacteristicIdNull() != false) {
          setNodeCharacteristicIdNull(other.getNodeCharacteristicIdNull());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        if (other.getValueNull() != false) {
          setValueNull(other.getValueNull());
        }
        if (other.hasValuesInAnyValues()) {
          mergeValuesInAnyValues(other.getValuesInAnyValues());
        }
        if (other.getValuesInAnyValuesNull() != false) {
          setValuesInAnyValuesNull(other.getValuesInAnyValuesNull());
        }
        if (other.hasIncludeBinaryCode()) {
          mergeIncludeBinaryCode(other.getIncludeBinaryCode());
        }
        if (other.getIncludeBinaryCodeNull() != false) {
          setIncludeBinaryCodeNull(other.getIncludeBinaryCodeNull());
        }
        if (other.hasFilterByBinaryCharacValueId()) {
          mergeFilterByBinaryCharacValueId(other.getFilterByBinaryCharacValueId());
        }
        if (other.getFilterByBinaryCharacValueIdNull() != false) {
          setFilterByBinaryCharacValueIdNull(other.getFilterByBinaryCharacValueIdNull());
        }
        if (other.hasBinaryCharacteristicId()) {
          mergeBinaryCharacteristicId(other.getBinaryCharacteristicId());
        }
        if (other.getBinaryCharacteristicIdNull() != false) {
          setBinaryCharacteristicIdNull(other.getBinaryCharacteristicIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetBinariesForValues.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetBinariesForValues.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue valueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> valueIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public boolean hasValueId() {
        return valueIdBuilder_ != null || valueId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public io.dstore.Values.integerValue getValueId() {
        if (valueIdBuilder_ == null) {
          return valueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
        } else {
          return valueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public Builder setValueId(io.dstore.Values.integerValue value) {
        if (valueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          valueId_ = value;
          onChanged();
        } else {
          valueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public Builder setValueId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (valueIdBuilder_ == null) {
          valueId_ = builderForValue.build();
          onChanged();
        } else {
          valueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public Builder mergeValueId(io.dstore.Values.integerValue value) {
        if (valueIdBuilder_ == null) {
          if (valueId_ != null) {
            valueId_ =
              io.dstore.Values.integerValue.newBuilder(valueId_).mergeFrom(value).buildPartial();
          } else {
            valueId_ = value;
          }
          onChanged();
        } else {
          valueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public Builder clearValueId() {
        if (valueIdBuilder_ == null) {
          valueId_ = null;
          onChanged();
        } else {
          valueId_ = null;
          valueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getValueIdBuilder() {
        
        onChanged();
        return getValueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder() {
        if (valueIdBuilder_ != null) {
          return valueIdBuilder_.getMessageOrBuilder();
        } else {
          return valueId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue value_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getValueIdFieldBuilder() {
        if (valueIdBuilder_ == null) {
          valueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getValueId(),
                  getParentForChildren(),
                  isClean());
          valueId_ = null;
        }
        return valueIdBuilder_;
      }

      private boolean valueIdNull_ ;
      /**
       * <code>optional bool value_id_null = 1001;</code>
       */
      public boolean getValueIdNull() {
        return valueIdNull_;
      }
      /**
       * <code>optional bool value_id_null = 1001;</code>
       */
      public Builder setValueIdNull(boolean value) {
        
        valueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool value_id_null = 1001;</code>
       */
      public Builder clearValueIdNull() {
        
        valueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue nodeCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.Values.integerValue getNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        } else {
          return nodeCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder setNodeCharacteristicId(io.dstore.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId_ = value;
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder setNodeCharacteristicId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder mergeNodeCharacteristicId(io.dstore.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (nodeCharacteristicId_ != null) {
            nodeCharacteristicId_ =
              io.dstore.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder clearNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
          onChanged();
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
        
        onChanged();
        return getNodeCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        if (nodeCharacteristicIdBuilder_ != null) {
          return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getNodeCharacteristicIdFieldBuilder() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId_ = null;
        }
        return nodeCharacteristicIdBuilder_;
      }

      private boolean nodeCharacteristicIdNull_ ;
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public boolean getNodeCharacteristicIdNull() {
        return nodeCharacteristicIdNull_;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public Builder setNodeCharacteristicIdNull(boolean value) {
        
        nodeCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public Builder clearNodeCharacteristicIdNull() {
        
        nodeCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue value_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> valueBuilder_;
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public io.dstore.Values.stringValue getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public Builder setValue(io.dstore.Values.stringValue value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public Builder setValue(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public Builder mergeValue(io.dstore.Values.stringValue value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              io.dstore.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public io.dstore.Values.stringValue.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private boolean valueNull_ ;
      /**
       * <code>optional bool value_null = 1003;</code>
       */
      public boolean getValueNull() {
        return valueNull_;
      }
      /**
       * <code>optional bool value_null = 1003;</code>
       */
      public Builder setValueNull(boolean value) {
        
        valueNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool value_null = 1003;</code>
       */
      public Builder clearValueNull() {
        
        valueNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue valuesInAnyValues_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> valuesInAnyValuesBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public boolean hasValuesInAnyValues() {
        return valuesInAnyValuesBuilder_ != null || valuesInAnyValues_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public io.dstore.Values.booleanValue getValuesInAnyValues() {
        if (valuesInAnyValuesBuilder_ == null) {
          return valuesInAnyValues_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : valuesInAnyValues_;
        } else {
          return valuesInAnyValuesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public Builder setValuesInAnyValues(io.dstore.Values.booleanValue value) {
        if (valuesInAnyValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          valuesInAnyValues_ = value;
          onChanged();
        } else {
          valuesInAnyValuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public Builder setValuesInAnyValues(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (valuesInAnyValuesBuilder_ == null) {
          valuesInAnyValues_ = builderForValue.build();
          onChanged();
        } else {
          valuesInAnyValuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public Builder mergeValuesInAnyValues(io.dstore.Values.booleanValue value) {
        if (valuesInAnyValuesBuilder_ == null) {
          if (valuesInAnyValues_ != null) {
            valuesInAnyValues_ =
              io.dstore.Values.booleanValue.newBuilder(valuesInAnyValues_).mergeFrom(value).buildPartial();
          } else {
            valuesInAnyValues_ = value;
          }
          onChanged();
        } else {
          valuesInAnyValuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public Builder clearValuesInAnyValues() {
        if (valuesInAnyValuesBuilder_ == null) {
          valuesInAnyValues_ = null;
          onChanged();
        } else {
          valuesInAnyValues_ = null;
          valuesInAnyValuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public io.dstore.Values.booleanValue.Builder getValuesInAnyValuesBuilder() {
        
        onChanged();
        return getValuesInAnyValuesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getValuesInAnyValuesOrBuilder() {
        if (valuesInAnyValuesBuilder_ != null) {
          return valuesInAnyValuesBuilder_.getMessageOrBuilder();
        } else {
          return valuesInAnyValues_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : valuesInAnyValues_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue values_in_any_values = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getValuesInAnyValuesFieldBuilder() {
        if (valuesInAnyValuesBuilder_ == null) {
          valuesInAnyValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getValuesInAnyValues(),
                  getParentForChildren(),
                  isClean());
          valuesInAnyValues_ = null;
        }
        return valuesInAnyValuesBuilder_;
      }

      private boolean valuesInAnyValuesNull_ ;
      /**
       * <code>optional bool values_in_any_values_null = 1004;</code>
       */
      public boolean getValuesInAnyValuesNull() {
        return valuesInAnyValuesNull_;
      }
      /**
       * <code>optional bool values_in_any_values_null = 1004;</code>
       */
      public Builder setValuesInAnyValuesNull(boolean value) {
        
        valuesInAnyValuesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool values_in_any_values_null = 1004;</code>
       */
      public Builder clearValuesInAnyValuesNull() {
        
        valuesInAnyValuesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue includeBinaryCode_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> includeBinaryCodeBuilder_;
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public boolean hasIncludeBinaryCode() {
        return includeBinaryCodeBuilder_ != null || includeBinaryCode_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public io.dstore.Values.integerValue getIncludeBinaryCode() {
        if (includeBinaryCodeBuilder_ == null) {
          return includeBinaryCode_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : includeBinaryCode_;
        } else {
          return includeBinaryCodeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public Builder setIncludeBinaryCode(io.dstore.Values.integerValue value) {
        if (includeBinaryCodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includeBinaryCode_ = value;
          onChanged();
        } else {
          includeBinaryCodeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public Builder setIncludeBinaryCode(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (includeBinaryCodeBuilder_ == null) {
          includeBinaryCode_ = builderForValue.build();
          onChanged();
        } else {
          includeBinaryCodeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public Builder mergeIncludeBinaryCode(io.dstore.Values.integerValue value) {
        if (includeBinaryCodeBuilder_ == null) {
          if (includeBinaryCode_ != null) {
            includeBinaryCode_ =
              io.dstore.Values.integerValue.newBuilder(includeBinaryCode_).mergeFrom(value).buildPartial();
          } else {
            includeBinaryCode_ = value;
          }
          onChanged();
        } else {
          includeBinaryCodeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public Builder clearIncludeBinaryCode() {
        if (includeBinaryCodeBuilder_ == null) {
          includeBinaryCode_ = null;
          onChanged();
        } else {
          includeBinaryCode_ = null;
          includeBinaryCodeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public io.dstore.Values.integerValue.Builder getIncludeBinaryCodeBuilder() {
        
        onChanged();
        return getIncludeBinaryCodeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getIncludeBinaryCodeOrBuilder() {
        if (includeBinaryCodeBuilder_ != null) {
          return includeBinaryCodeBuilder_.getMessageOrBuilder();
        } else {
          return includeBinaryCode_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : includeBinaryCode_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue include_binary_code = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getIncludeBinaryCodeFieldBuilder() {
        if (includeBinaryCodeBuilder_ == null) {
          includeBinaryCodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getIncludeBinaryCode(),
                  getParentForChildren(),
                  isClean());
          includeBinaryCode_ = null;
        }
        return includeBinaryCodeBuilder_;
      }

      private boolean includeBinaryCodeNull_ ;
      /**
       * <code>optional bool include_binary_code_null = 1005;</code>
       */
      public boolean getIncludeBinaryCodeNull() {
        return includeBinaryCodeNull_;
      }
      /**
       * <code>optional bool include_binary_code_null = 1005;</code>
       */
      public Builder setIncludeBinaryCodeNull(boolean value) {
        
        includeBinaryCodeNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_binary_code_null = 1005;</code>
       */
      public Builder clearIncludeBinaryCodeNull() {
        
        includeBinaryCodeNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue filterByBinaryCharacValueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> filterByBinaryCharacValueIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public boolean hasFilterByBinaryCharacValueId() {
        return filterByBinaryCharacValueIdBuilder_ != null || filterByBinaryCharacValueId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public io.dstore.Values.integerValue getFilterByBinaryCharacValueId() {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          return filterByBinaryCharacValueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : filterByBinaryCharacValueId_;
        } else {
          return filterByBinaryCharacValueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public Builder setFilterByBinaryCharacValueId(io.dstore.Values.integerValue value) {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filterByBinaryCharacValueId_ = value;
          onChanged();
        } else {
          filterByBinaryCharacValueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public Builder setFilterByBinaryCharacValueId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          filterByBinaryCharacValueId_ = builderForValue.build();
          onChanged();
        } else {
          filterByBinaryCharacValueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public Builder mergeFilterByBinaryCharacValueId(io.dstore.Values.integerValue value) {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          if (filterByBinaryCharacValueId_ != null) {
            filterByBinaryCharacValueId_ =
              io.dstore.Values.integerValue.newBuilder(filterByBinaryCharacValueId_).mergeFrom(value).buildPartial();
          } else {
            filterByBinaryCharacValueId_ = value;
          }
          onChanged();
        } else {
          filterByBinaryCharacValueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public Builder clearFilterByBinaryCharacValueId() {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          filterByBinaryCharacValueId_ = null;
          onChanged();
        } else {
          filterByBinaryCharacValueId_ = null;
          filterByBinaryCharacValueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public io.dstore.Values.integerValue.Builder getFilterByBinaryCharacValueIdBuilder() {
        
        onChanged();
        return getFilterByBinaryCharacValueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getFilterByBinaryCharacValueIdOrBuilder() {
        if (filterByBinaryCharacValueIdBuilder_ != null) {
          return filterByBinaryCharacValueIdBuilder_.getMessageOrBuilder();
        } else {
          return filterByBinaryCharacValueId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : filterByBinaryCharacValueId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue filter_by_binary_charac_value_id = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getFilterByBinaryCharacValueIdFieldBuilder() {
        if (filterByBinaryCharacValueIdBuilder_ == null) {
          filterByBinaryCharacValueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getFilterByBinaryCharacValueId(),
                  getParentForChildren(),
                  isClean());
          filterByBinaryCharacValueId_ = null;
        }
        return filterByBinaryCharacValueIdBuilder_;
      }

      private boolean filterByBinaryCharacValueIdNull_ ;
      /**
       * <code>optional bool filter_by_binary_charac_value_id_null = 1006;</code>
       */
      public boolean getFilterByBinaryCharacValueIdNull() {
        return filterByBinaryCharacValueIdNull_;
      }
      /**
       * <code>optional bool filter_by_binary_charac_value_id_null = 1006;</code>
       */
      public Builder setFilterByBinaryCharacValueIdNull(boolean value) {
        
        filterByBinaryCharacValueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool filter_by_binary_charac_value_id_null = 1006;</code>
       */
      public Builder clearFilterByBinaryCharacValueIdNull() {
        
        filterByBinaryCharacValueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue binaryCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> binaryCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public boolean hasBinaryCharacteristicId() {
        return binaryCharacteristicIdBuilder_ != null || binaryCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public io.dstore.Values.integerValue getBinaryCharacteristicId() {
        if (binaryCharacteristicIdBuilder_ == null) {
          return binaryCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCharacteristicId_;
        } else {
          return binaryCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public Builder setBinaryCharacteristicId(io.dstore.Values.integerValue value) {
        if (binaryCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binaryCharacteristicId_ = value;
          onChanged();
        } else {
          binaryCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public Builder setBinaryCharacteristicId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (binaryCharacteristicIdBuilder_ == null) {
          binaryCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          binaryCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public Builder mergeBinaryCharacteristicId(io.dstore.Values.integerValue value) {
        if (binaryCharacteristicIdBuilder_ == null) {
          if (binaryCharacteristicId_ != null) {
            binaryCharacteristicId_ =
              io.dstore.Values.integerValue.newBuilder(binaryCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            binaryCharacteristicId_ = value;
          }
          onChanged();
        } else {
          binaryCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public Builder clearBinaryCharacteristicId() {
        if (binaryCharacteristicIdBuilder_ == null) {
          binaryCharacteristicId_ = null;
          onChanged();
        } else {
          binaryCharacteristicId_ = null;
          binaryCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public io.dstore.Values.integerValue.Builder getBinaryCharacteristicIdBuilder() {
        
        onChanged();
        return getBinaryCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBinaryCharacteristicIdOrBuilder() {
        if (binaryCharacteristicIdBuilder_ != null) {
          return binaryCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return binaryCharacteristicId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : binaryCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue binary_characteristic_id = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getBinaryCharacteristicIdFieldBuilder() {
        if (binaryCharacteristicIdBuilder_ == null) {
          binaryCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getBinaryCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          binaryCharacteristicId_ = null;
        }
        return binaryCharacteristicIdBuilder_;
      }

      private boolean binaryCharacteristicIdNull_ ;
      /**
       * <code>optional bool binary_characteristic_id_null = 1007;</code>
       */
      public boolean getBinaryCharacteristicIdNull() {
        return binaryCharacteristicIdNull_;
      }
      /**
       * <code>optional bool binary_characteristic_id_null = 1007;</code>
       */
      public Builder setBinaryCharacteristicIdNull(boolean value) {
        
        binaryCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool binary_characteristic_id_null = 1007;</code>
       */
      public Builder clearBinaryCharacteristicIdNull() {
        
        binaryCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetBinariesForValues.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetBinariesForValues.Parameters)
    private static final io.dstore.engine.procedures.ImGetBinariesForValues.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetBinariesForValues.Parameters();
    }

    public static io.dstore.engine.procedures.ImGetBinariesForValues.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetBinariesForValues.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetBinariesForValues.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetBinariesForValues.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetBinariesForValues.Response.class, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetBinariesForValues.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      boolean hasBinaryValueId();
      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      io.dstore.Values.integerValue getBinaryValueId();
      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      io.dstore.Values.integerValueOrBuilder getBinaryValueIdOrBuilder();

      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      boolean hasBinaryCharacValue();
      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      io.dstore.Values.stringValue getBinaryCharacValue();
      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      io.dstore.Values.stringValueOrBuilder getBinaryCharacValueOrBuilder();

      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      boolean hasBinaryCodeId();
      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      io.dstore.Values.integerValue getBinaryCodeId();
      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder();

      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      io.dstore.Values.integerValue getNodeCharacteristicId();
      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      boolean hasValue();
      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      io.dstore.Values.stringValue getValue();
      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      io.dstore.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      boolean hasValueId();
      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      io.dstore.Values.integerValue getValueId();
      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder();

      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      boolean hasThumbnailCode();
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      io.dstore.Values.bytesValue getThumbnailCode();
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      io.dstore.Values.bytesValueOrBuilder getThumbnailCodeOrBuilder();

      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      boolean hasBinaryCode();
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      io.dstore.Values.bytesValue getBinaryCode();
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      io.dstore.Values.bytesValueOrBuilder getBinaryCodeOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetBinariesForValues.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (binaryValueId_ != null) {
                  subBuilder = binaryValueId_.toBuilder();
                }
                binaryValueId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryValueId_);
                  binaryValueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (binaryCharacValue_ != null) {
                  subBuilder = binaryCharacValue_.toBuilder();
                }
                binaryCharacValue_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryCharacValue_);
                  binaryCharacValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (binaryCodeId_ != null) {
                  subBuilder = binaryCodeId_.toBuilder();
                }
                binaryCodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryCodeId_);
                  binaryCodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (valueId_ != null) {
                  subBuilder = valueId_.toBuilder();
                }
                valueId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueId_);
                  valueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.bytesValue.Builder subBuilder = null;
                if (thumbnailCode_ != null) {
                  subBuilder = thumbnailCode_.toBuilder();
                }
                thumbnailCode_ = input.readMessage(io.dstore.Values.bytesValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(thumbnailCode_);
                  thumbnailCode_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.bytesValue.Builder subBuilder = null;
                if (binaryCode_ != null) {
                  subBuilder = binaryCode_.toBuilder();
                }
                binaryCode_ = input.readMessage(io.dstore.Values.bytesValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(binaryCode_);
                  binaryCode_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.class, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int BINARY_VALUE_ID_FIELD_NUMBER = 10001;
      private io.dstore.Values.integerValue binaryValueId_;
      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      public boolean hasBinaryValueId() {
        return binaryValueId_ != null;
      }
      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      public io.dstore.Values.integerValue getBinaryValueId() {
        return binaryValueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryValueId_;
      }
      /**
       * <pre>
       * ID der Eigenschaft "BinaryCharacValue"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBinaryValueIdOrBuilder() {
        return getBinaryValueId();
      }

      public static final int BINARY_CHARAC_VALUE_FIELD_NUMBER = 10002;
      private io.dstore.Values.stringValue binaryCharacValue_;
      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      public boolean hasBinaryCharacValue() {
        return binaryCharacValue_ != null;
      }
      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      public io.dstore.Values.stringValue getBinaryCharacValue() {
        return binaryCharacValue_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : binaryCharacValue_;
      }
      /**
       * <pre>
       * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getBinaryCharacValueOrBuilder() {
        return getBinaryCharacValue();
      }

      public static final int BINARY_CODE_ID_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue binaryCodeId_;
      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public boolean hasBinaryCodeId() {
        return binaryCodeId_ != null;
      }
      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public io.dstore.Values.integerValue getBinaryCodeId() {
        return binaryCodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
      }
      /**
       * <pre>
       * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
        return getBinaryCodeId();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue nodeCharacteristicId_;
      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      public io.dstore.Values.integerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <pre>
       * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int VALUE_FIELD_NUMBER = 10005;
      private io.dstore.Values.stringValue value_;
      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      public io.dstore.Values.stringValue getValue() {
        return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue value = 10005;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int VALUE_ID_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue valueId_;
      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      public boolean hasValueId() {
        return valueId_ != null;
      }
      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      public io.dstore.Values.integerValue getValueId() {
        return valueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
      }
      /**
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue value_id = 10006;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder() {
        return getValueId();
      }

      public static final int THUMBNAIL_CODE_FIELD_NUMBER = 10007;
      private io.dstore.Values.bytesValue thumbnailCode_;
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      public boolean hasThumbnailCode() {
        return thumbnailCode_ != null;
      }
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      public io.dstore.Values.bytesValue getThumbnailCode() {
        return thumbnailCode_ == null ? io.dstore.Values.bytesValue.getDefaultInstance() : thumbnailCode_;
      }
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
       */
      public io.dstore.Values.bytesValueOrBuilder getThumbnailCodeOrBuilder() {
        return getThumbnailCode();
      }

      public static final int BINARY_CODE_FIELD_NUMBER = 10008;
      private io.dstore.Values.bytesValue binaryCode_;
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      public boolean hasBinaryCode() {
        return binaryCode_ != null;
      }
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      public io.dstore.Values.bytesValue getBinaryCode() {
        return binaryCode_ == null ? io.dstore.Values.bytesValue.getDefaultInstance() : binaryCode_;
      }
      /**
       * <pre>
       * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
       * </pre>
       *
       * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
       */
      public io.dstore.Values.bytesValueOrBuilder getBinaryCodeOrBuilder() {
        return getBinaryCode();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (binaryValueId_ != null) {
          output.writeMessage(10001, getBinaryValueId());
        }
        if (binaryCharacValue_ != null) {
          output.writeMessage(10002, getBinaryCharacValue());
        }
        if (binaryCodeId_ != null) {
          output.writeMessage(10003, getBinaryCodeId());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(10004, getNodeCharacteristicId());
        }
        if (value_ != null) {
          output.writeMessage(10005, getValue());
        }
        if (valueId_ != null) {
          output.writeMessage(10006, getValueId());
        }
        if (thumbnailCode_ != null) {
          output.writeMessage(10007, getThumbnailCode());
        }
        if (binaryCode_ != null) {
          output.writeMessage(10008, getBinaryCode());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (binaryValueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getBinaryValueId());
        }
        if (binaryCharacValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getBinaryCharacValue());
        }
        if (binaryCodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getBinaryCodeId());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getNodeCharacteristicId());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValue());
        }
        if (valueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getValueId());
        }
        if (thumbnailCode_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getThumbnailCode());
        }
        if (binaryCode_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getBinaryCode());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetBinariesForValues.Response.Row)
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.class, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (binaryValueIdBuilder_ == null) {
            binaryValueId_ = null;
          } else {
            binaryValueId_ = null;
            binaryValueIdBuilder_ = null;
          }
          if (binaryCharacValueBuilder_ == null) {
            binaryCharacValue_ = null;
          } else {
            binaryCharacValue_ = null;
            binaryCharacValueBuilder_ = null;
          }
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (valueIdBuilder_ == null) {
            valueId_ = null;
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }
          if (thumbnailCodeBuilder_ == null) {
            thumbnailCode_ = null;
          } else {
            thumbnailCode_ = null;
            thumbnailCodeBuilder_ = null;
          }
          if (binaryCodeBuilder_ == null) {
            binaryCode_ = null;
          } else {
            binaryCode_ = null;
            binaryCodeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row build() {
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row buildPartial() {
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row result = new io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row(this);
          result.rowId_ = rowId_;
          if (binaryValueIdBuilder_ == null) {
            result.binaryValueId_ = binaryValueId_;
          } else {
            result.binaryValueId_ = binaryValueIdBuilder_.build();
          }
          if (binaryCharacValueBuilder_ == null) {
            result.binaryCharacValue_ = binaryCharacValue_;
          } else {
            result.binaryCharacValue_ = binaryCharacValueBuilder_.build();
          }
          if (binaryCodeIdBuilder_ == null) {
            result.binaryCodeId_ = binaryCodeId_;
          } else {
            result.binaryCodeId_ = binaryCodeIdBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (valueIdBuilder_ == null) {
            result.valueId_ = valueId_;
          } else {
            result.valueId_ = valueIdBuilder_.build();
          }
          if (thumbnailCodeBuilder_ == null) {
            result.thumbnailCode_ = thumbnailCode_;
          } else {
            result.thumbnailCode_ = thumbnailCodeBuilder_.build();
          }
          if (binaryCodeBuilder_ == null) {
            result.binaryCode_ = binaryCode_;
          } else {
            result.binaryCode_ = binaryCodeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row other) {
          if (other == io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasBinaryValueId()) {
            mergeBinaryValueId(other.getBinaryValueId());
          }
          if (other.hasBinaryCharacValue()) {
            mergeBinaryCharacValue(other.getBinaryCharacValue());
          }
          if (other.hasBinaryCodeId()) {
            mergeBinaryCodeId(other.getBinaryCodeId());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasValueId()) {
            mergeValueId(other.getValueId());
          }
          if (other.hasThumbnailCode()) {
            mergeThumbnailCode(other.getThumbnailCode());
          }
          if (other.hasBinaryCode()) {
            mergeBinaryCode(other.getBinaryCode());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.integerValue binaryValueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> binaryValueIdBuilder_;
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public boolean hasBinaryValueId() {
          return binaryValueIdBuilder_ != null || binaryValueId_ != null;
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public io.dstore.Values.integerValue getBinaryValueId() {
          if (binaryValueIdBuilder_ == null) {
            return binaryValueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryValueId_;
          } else {
            return binaryValueIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public Builder setBinaryValueId(io.dstore.Values.integerValue value) {
          if (binaryValueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryValueId_ = value;
            onChanged();
          } else {
            binaryValueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public Builder setBinaryValueId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (binaryValueIdBuilder_ == null) {
            binaryValueId_ = builderForValue.build();
            onChanged();
          } else {
            binaryValueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public Builder mergeBinaryValueId(io.dstore.Values.integerValue value) {
          if (binaryValueIdBuilder_ == null) {
            if (binaryValueId_ != null) {
              binaryValueId_ =
                io.dstore.Values.integerValue.newBuilder(binaryValueId_).mergeFrom(value).buildPartial();
            } else {
              binaryValueId_ = value;
            }
            onChanged();
          } else {
            binaryValueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public Builder clearBinaryValueId() {
          if (binaryValueIdBuilder_ == null) {
            binaryValueId_ = null;
            onChanged();
          } else {
            binaryValueId_ = null;
            binaryValueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public io.dstore.Values.integerValue.Builder getBinaryValueIdBuilder() {
          
          onChanged();
          return getBinaryValueIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getBinaryValueIdOrBuilder() {
          if (binaryValueIdBuilder_ != null) {
            return binaryValueIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryValueId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : binaryValueId_;
          }
        }
        /**
         * <pre>
         * ID der Eigenschaft "BinaryCharacValue"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_value_id = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getBinaryValueIdFieldBuilder() {
          if (binaryValueIdBuilder_ == null) {
            binaryValueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getBinaryValueId(),
                    getParentForChildren(),
                    isClean());
            binaryValueId_ = null;
          }
          return binaryValueIdBuilder_;
        }

        private io.dstore.Values.stringValue binaryCharacValue_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> binaryCharacValueBuilder_;
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public boolean hasBinaryCharacValue() {
          return binaryCharacValueBuilder_ != null || binaryCharacValue_ != null;
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public io.dstore.Values.stringValue getBinaryCharacValue() {
          if (binaryCharacValueBuilder_ == null) {
            return binaryCharacValue_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : binaryCharacValue_;
          } else {
            return binaryCharacValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public Builder setBinaryCharacValue(io.dstore.Values.stringValue value) {
          if (binaryCharacValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryCharacValue_ = value;
            onChanged();
          } else {
            binaryCharacValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public Builder setBinaryCharacValue(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (binaryCharacValueBuilder_ == null) {
            binaryCharacValue_ = builderForValue.build();
            onChanged();
          } else {
            binaryCharacValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public Builder mergeBinaryCharacValue(io.dstore.Values.stringValue value) {
          if (binaryCharacValueBuilder_ == null) {
            if (binaryCharacValue_ != null) {
              binaryCharacValue_ =
                io.dstore.Values.stringValue.newBuilder(binaryCharacValue_).mergeFrom(value).buildPartial();
            } else {
              binaryCharacValue_ = value;
            }
            onChanged();
          } else {
            binaryCharacValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public Builder clearBinaryCharacValue() {
          if (binaryCharacValueBuilder_ == null) {
            binaryCharacValue_ = null;
            onChanged();
          } else {
            binaryCharacValue_ = null;
            binaryCharacValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public io.dstore.Values.stringValue.Builder getBinaryCharacValueBuilder() {
          
          onChanged();
          return getBinaryCharacValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getBinaryCharacValueOrBuilder() {
          if (binaryCharacValueBuilder_ != null) {
            return binaryCharacValueBuilder_.getMessageOrBuilder();
          } else {
            return binaryCharacValue_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : binaryCharacValue_;
          }
        }
        /**
         * <pre>
         * Eine Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID" (falls dieser Parameter angegeben wurde)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue binary_charac_value = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getBinaryCharacValueFieldBuilder() {
          if (binaryCharacValueBuilder_ == null) {
            binaryCharacValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getBinaryCharacValue(),
                    getParentForChildren(),
                    isClean());
            binaryCharacValue_ = null;
          }
          return binaryCharacValueBuilder_;
        }

        private io.dstore.Values.integerValue binaryCodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> binaryCodeIdBuilder_;
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public boolean hasBinaryCodeId() {
          return binaryCodeIdBuilder_ != null || binaryCodeId_ != null;
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValue getBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            return binaryCodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          } else {
            return binaryCodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder setBinaryCodeId(io.dstore.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryCodeId_ = value;
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder setBinaryCodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = builderForValue.build();
            onChanged();
          } else {
            binaryCodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder mergeBinaryCodeId(io.dstore.Values.integerValue value) {
          if (binaryCodeIdBuilder_ == null) {
            if (binaryCodeId_ != null) {
              binaryCodeId_ =
                io.dstore.Values.integerValue.newBuilder(binaryCodeId_).mergeFrom(value).buildPartial();
            } else {
              binaryCodeId_ = value;
            }
            onChanged();
          } else {
            binaryCodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public Builder clearBinaryCodeId() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeId_ = null;
            onChanged();
          } else {
            binaryCodeId_ = null;
            binaryCodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getBinaryCodeIdBuilder() {
          
          onChanged();
          return getBinaryCodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getBinaryCodeIdOrBuilder() {
          if (binaryCodeIdBuilder_ != null) {
            return binaryCodeIdBuilder_.getMessageOrBuilder();
          } else {
            return binaryCodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : binaryCodeId_;
          }
        }
        /**
         * <pre>
         * ID eines "Binaries", das der Eigenschaft "ValueID" zugeordnet ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue binary_code_id = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getBinaryCodeIdFieldBuilder() {
          if (binaryCodeIdBuilder_ == null) {
            binaryCodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getBinaryCodeId(),
                    getParentForChildren(),
                    isClean());
            binaryCodeId_ = null;
          }
          return binaryCodeIdBuilder_;
        }

        private io.dstore.Values.integerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public io.dstore.Values.integerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public Builder setNodeCharacteristicId(io.dstore.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public io.dstore.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <pre>
         * ID eines Merkmals, zu dem Artikel-Elemente Eigenschaften haben können
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_characteristic_id = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public io.dstore.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public Builder setValue(io.dstore.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public Builder setValue(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public Builder mergeValue(io.dstore.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public io.dstore.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue value = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.Values.integerValue valueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> valueIdBuilder_;
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public boolean hasValueId() {
          return valueIdBuilder_ != null || valueId_ != null;
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public io.dstore.Values.integerValue getValueId() {
          if (valueIdBuilder_ == null) {
            return valueId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
          } else {
            return valueIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public Builder setValueId(io.dstore.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueId_ = value;
            onChanged();
          } else {
            valueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public Builder setValueId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (valueIdBuilder_ == null) {
            valueId_ = builderForValue.build();
            onChanged();
          } else {
            valueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public Builder mergeValueId(io.dstore.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (valueId_ != null) {
              valueId_ =
                io.dstore.Values.integerValue.newBuilder(valueId_).mergeFrom(value).buildPartial();
            } else {
              valueId_ = value;
            }
            onChanged();
          } else {
            valueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public Builder clearValueId() {
          if (valueIdBuilder_ == null) {
            valueId_ = null;
            onChanged();
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public io.dstore.Values.integerValue.Builder getValueIdBuilder() {
          
          onChanged();
          return getValueIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getValueIdOrBuilder() {
          if (valueIdBuilder_ != null) {
            return valueIdBuilder_.getMessageOrBuilder();
          } else {
            return valueId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : valueId_;
          }
        }
        /**
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue value_id = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getValueIdFieldBuilder() {
          if (valueIdBuilder_ == null) {
            valueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getValueId(),
                    getParentForChildren(),
                    isClean());
            valueId_ = null;
          }
          return valueIdBuilder_;
        }

        private io.dstore.Values.bytesValue thumbnailCode_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder> thumbnailCodeBuilder_;
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public boolean hasThumbnailCode() {
          return thumbnailCodeBuilder_ != null || thumbnailCode_ != null;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public io.dstore.Values.bytesValue getThumbnailCode() {
          if (thumbnailCodeBuilder_ == null) {
            return thumbnailCode_ == null ? io.dstore.Values.bytesValue.getDefaultInstance() : thumbnailCode_;
          } else {
            return thumbnailCodeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public Builder setThumbnailCode(io.dstore.Values.bytesValue value) {
          if (thumbnailCodeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            thumbnailCode_ = value;
            onChanged();
          } else {
            thumbnailCodeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public Builder setThumbnailCode(
            io.dstore.Values.bytesValue.Builder builderForValue) {
          if (thumbnailCodeBuilder_ == null) {
            thumbnailCode_ = builderForValue.build();
            onChanged();
          } else {
            thumbnailCodeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public Builder mergeThumbnailCode(io.dstore.Values.bytesValue value) {
          if (thumbnailCodeBuilder_ == null) {
            if (thumbnailCode_ != null) {
              thumbnailCode_ =
                io.dstore.Values.bytesValue.newBuilder(thumbnailCode_).mergeFrom(value).buildPartial();
            } else {
              thumbnailCode_ = value;
            }
            onChanged();
          } else {
            thumbnailCodeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public Builder clearThumbnailCode() {
          if (thumbnailCodeBuilder_ == null) {
            thumbnailCode_ = null;
            onChanged();
          } else {
            thumbnailCode_ = null;
            thumbnailCodeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public io.dstore.Values.bytesValue.Builder getThumbnailCodeBuilder() {
          
          onChanged();
          return getThumbnailCodeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        public io.dstore.Values.bytesValueOrBuilder getThumbnailCodeOrBuilder() {
          if (thumbnailCodeBuilder_ != null) {
            return thumbnailCodeBuilder_.getMessageOrBuilder();
          } else {
            return thumbnailCode_ == null ?
                io.dstore.Values.bytesValue.getDefaultInstance() : thumbnailCode_;
          }
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code des "Thumbnails" (ein kleines Bild, das das eigentliche Binärobjekt symbolisieren soll). Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "2" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue thumbnail_code = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder> 
            getThumbnailCodeFieldBuilder() {
          if (thumbnailCodeBuilder_ == null) {
            thumbnailCodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder>(
                    getThumbnailCode(),
                    getParentForChildren(),
                    isClean());
            thumbnailCode_ = null;
          }
          return thumbnailCodeBuilder_;
        }

        private io.dstore.Values.bytesValue binaryCode_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder> binaryCodeBuilder_;
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public boolean hasBinaryCode() {
          return binaryCodeBuilder_ != null || binaryCode_ != null;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public io.dstore.Values.bytesValue getBinaryCode() {
          if (binaryCodeBuilder_ == null) {
            return binaryCode_ == null ? io.dstore.Values.bytesValue.getDefaultInstance() : binaryCode_;
          } else {
            return binaryCodeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public Builder setBinaryCode(io.dstore.Values.bytesValue value) {
          if (binaryCodeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            binaryCode_ = value;
            onChanged();
          } else {
            binaryCodeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public Builder setBinaryCode(
            io.dstore.Values.bytesValue.Builder builderForValue) {
          if (binaryCodeBuilder_ == null) {
            binaryCode_ = builderForValue.build();
            onChanged();
          } else {
            binaryCodeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public Builder mergeBinaryCode(io.dstore.Values.bytesValue value) {
          if (binaryCodeBuilder_ == null) {
            if (binaryCode_ != null) {
              binaryCode_ =
                io.dstore.Values.bytesValue.newBuilder(binaryCode_).mergeFrom(value).buildPartial();
            } else {
              binaryCode_ = value;
            }
            onChanged();
          } else {
            binaryCodeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public Builder clearBinaryCode() {
          if (binaryCodeBuilder_ == null) {
            binaryCode_ = null;
            onChanged();
          } else {
            binaryCode_ = null;
            binaryCodeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public io.dstore.Values.bytesValue.Builder getBinaryCodeBuilder() {
          
          onChanged();
          return getBinaryCodeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        public io.dstore.Values.bytesValueOrBuilder getBinaryCodeOrBuilder() {
          if (binaryCodeBuilder_ != null) {
            return binaryCodeBuilder_.getMessageOrBuilder();
          } else {
            return binaryCode_ == null ?
                io.dstore.Values.bytesValue.getDefaultInstance() : binaryCode_;
          }
        }
        /**
         * <pre>
         * Der zur "BinaryCodeID" zugehörige Code, also quasi das Binärobjekt selbst. Standardmäßig "NULL", es wird hier nur etwas zurückgegeben, wenn "&#64;IncludeBinaryCode" den Wert "1" oder "3" hat.
         * </pre>
         *
         * <code>optional .dstore.values.bytesValue binary_code = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder> 
            getBinaryCodeFieldBuilder() {
          if (binaryCodeBuilder_ == null) {
            binaryCodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.bytesValue, io.dstore.Values.bytesValue.Builder, io.dstore.Values.bytesValueOrBuilder>(
                    getBinaryCode(),
                    getParentForChildren(),
                    isClean());
            binaryCode_ = null;
          }
          return binaryCodeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetBinariesForValues.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetBinariesForValues.Response.Row)
      private static final io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row();
      }

      public static io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetBinariesForValues.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetBinariesForValues.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetBinariesForValues.Response)
        io.dstore.engine.procedures.ImGetBinariesForValues.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetBinariesForValues.Response.class, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetBinariesForValues.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor;
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetBinariesForValues.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Response build() {
        io.dstore.engine.procedures.ImGetBinariesForValues.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetBinariesForValues.Response buildPartial() {
        io.dstore.engine.procedures.ImGetBinariesForValues.Response result = new io.dstore.engine.procedures.ImGetBinariesForValues.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetBinariesForValues.Response) {
          return mergeFrom((io.dstore.engine.procedures.ImGetBinariesForValues.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetBinariesForValues.Response other) {
        if (other == io.dstore.engine.procedures.ImGetBinariesForValues.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetBinariesForValues.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetBinariesForValues.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder, io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetBinariesForValues.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder, io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row, io.dstore.engine.procedures.ImGetBinariesForValues.Response.Row.Builder, io.dstore.engine.procedures.ImGetBinariesForValues.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetBinariesForValues.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetBinariesForValues.Response)
    private static final io.dstore.engine.procedures.ImGetBinariesForValues.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetBinariesForValues.Response();
    }

    public static io.dstore.engine.procedures.ImGetBinariesForValues.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetBinariesForValues.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetBinariesForValues_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetBinariesForValues_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6dstore/engine/procedures/im_GetBinarie" +
      "sForValues.proto\022%dstore.engine.im_GetBi" +
      "nariesForValues\032\023dstore/values.proto\032\033ds" +
      "tore/engine/message.proto\032#dstore/engine" +
      "/metainformation.proto\"\220\005\n\nParameters\022-\n" +
      "\010value_id\030\001 \001(\0132\033.dstore.values.integerV" +
      "alue\022\026\n\rvalue_id_null\030\351\007 \001(\010\022;\n\026node_cha" +
      "racteristic_id\030\002 \001(\0132\033.dstore.values.int" +
      "egerValue\022$\n\033node_characteristic_id_null" +
      "\030\352\007 \001(\010\022)\n\005value\030\003 \001(\0132\032.dstore.values.s",
      "tringValue\022\023\n\nvalue_null\030\353\007 \001(\010\0229\n\024value" +
      "s_in_any_values\030\004 \001(\0132\033.dstore.values.bo" +
      "oleanValue\022\"\n\031values_in_any_values_null\030" +
      "\354\007 \001(\010\0228\n\023include_binary_code\030\005 \001(\0132\033.ds" +
      "tore.values.integerValue\022!\n\030include_bina" +
      "ry_code_null\030\355\007 \001(\010\022E\n filter_by_binary_" +
      "charac_value_id\030\006 \001(\0132\033.dstore.values.in" +
      "tegerValue\022.\n%filter_by_binary_charac_va" +
      "lue_id_null\030\356\007 \001(\010\022=\n\030binary_characteris" +
      "tic_id\030\007 \001(\0132\033.dstore.values.integerValu",
      "e\022&\n\035binary_characteristic_id_null\030\357\007 \001(" +
      "\010\"\206\005\n\010Response\022H\n\020meta_information\030\002 \003(\013" +
      "2..dstore.engine.metainformation.MetaInf" +
      "ormation\022/\n\007message\030\003 \003(\0132\036.dstore.engin" +
      "e.message.Message\022@\n\003row\030\004 \003(\01323.dstore." +
      "engine.im_GetBinariesForValues.Response." +
      "Row\032\274\003\n\003Row\022\017\n\006row_id\030\220N \001(\005\0225\n\017binary_v" +
      "alue_id\030\221N \001(\0132\033.dstore.values.integerVa" +
      "lue\0228\n\023binary_charac_value\030\222N \001(\0132\032.dsto" +
      "re.values.stringValue\0224\n\016binary_code_id\030",
      "\223N \001(\0132\033.dstore.values.integerValue\022<\n\026n" +
      "ode_characteristic_id\030\224N \001(\0132\033.dstore.va" +
      "lues.integerValue\022*\n\005value\030\225N \001(\0132\032.dsto" +
      "re.values.stringValue\022.\n\010value_id\030\226N \001(\013" +
      "2\033.dstore.values.integerValue\0222\n\016thumbna" +
      "il_code\030\227N \001(\0132\031.dstore.values.bytesValu" +
      "e\022/\n\013binary_code\030\230N \001(\0132\031.dstore.values." +
      "bytesValueBX\n\033io.dstore.engine.procedure" +
      "sZ9gosdk.dstore.de/engine/procedures/im_" +
      "GetBinariesForValuesb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetBinariesForValues_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetBinariesForValues_Parameters_descriptor,
        new java.lang.String[] { "ValueId", "ValueIdNull", "NodeCharacteristicId", "NodeCharacteristicIdNull", "Value", "ValueNull", "ValuesInAnyValues", "ValuesInAnyValuesNull", "IncludeBinaryCode", "IncludeBinaryCodeNull", "FilterByBinaryCharacValueId", "FilterByBinaryCharacValueIdNull", "BinaryCharacteristicId", "BinaryCharacteristicIdNull", });
    internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetBinariesForValues_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetBinariesForValues_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetBinariesForValues_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "BinaryValueId", "BinaryCharacValue", "BinaryCodeId", "NodeCharacteristicId", "Value", "ValueId", "ThumbnailCode", "BinaryCode", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
