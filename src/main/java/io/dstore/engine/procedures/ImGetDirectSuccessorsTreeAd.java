// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetDirectSuccessors_Tree_Ad.proto

package io.dstore.engine.procedures;

public final class ImGetDirectSuccessorsTreeAd {
  private ImGetDirectSuccessorsTreeAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    boolean hasTreeNodeId();
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    io.dstore.Values.integerValue getTreeNodeId();
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

    /**
     * <code>optional bool tree_node_id_null = 1001;</code>
     */
    boolean getTreeNodeIdNull();

    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    boolean hasLanguageId();
    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    io.dstore.Values.integerValue getLanguageId();
    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder();

    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    boolean getLanguageIdNull();

    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    boolean hasOnlyActive();
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    io.dstore.Values.booleanValue getOnlyActive();
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder();

    /**
     * <code>optional bool only_active_null = 1003;</code>
     */
    boolean getOnlyActiveNull();

    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    boolean hasOnlyNotDeleted();
    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    io.dstore.Values.booleanValue getOnlyNotDeleted();
    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getOnlyNotDeletedOrBuilder();

    /**
     * <code>optional bool only_not_deleted_null = 1004;</code>
     */
    boolean getOnlyNotDeletedNull();

    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    boolean hasIncludeColumnLocked();
    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    io.dstore.Values.booleanValue getIncludeColumnLocked();
    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getIncludeColumnLockedOrBuilder();

    /**
     * <code>optional bool include_column_locked_null = 1005;</code>
     */
    boolean getIncludeColumnLockedNull();

    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    boolean hasCheckLockedTreeNodesForUserId();
    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    io.dstore.Values.integerValue getCheckLockedTreeNodesForUserId();
    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    io.dstore.Values.integerValueOrBuilder getCheckLockedTreeNodesForUserIdOrBuilder();

    /**
     * <code>optional bool check_locked_tree_nodes_for_user_id_null = 1006;</code>
     */
    boolean getCheckLockedTreeNodesForUserIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      treeNodeIdNull_ = false;
      languageIdNull_ = false;
      onlyActiveNull_ = false;
      onlyNotDeletedNull_ = false;
      includeColumnLockedNull_ = false;
      checkLockedTreeNodesForUserIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (treeNodeId_ != null) {
                subBuilder = treeNodeId_.toBuilder();
              }
              treeNodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treeNodeId_);
                treeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (languageId_ != null) {
                subBuilder = languageId_.toBuilder();
              }
              languageId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(languageId_);
                languageId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (onlyActive_ != null) {
                subBuilder = onlyActive_.toBuilder();
              }
              onlyActive_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyActive_);
                onlyActive_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (onlyNotDeleted_ != null) {
                subBuilder = onlyNotDeleted_.toBuilder();
              }
              onlyNotDeleted_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyNotDeleted_);
                onlyNotDeleted_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (includeColumnLocked_ != null) {
                subBuilder = includeColumnLocked_.toBuilder();
              }
              includeColumnLocked_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(includeColumnLocked_);
                includeColumnLocked_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (checkLockedTreeNodesForUserId_ != null) {
                subBuilder = checkLockedTreeNodesForUserId_.toBuilder();
              }
              checkLockedTreeNodesForUserId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(checkLockedTreeNodesForUserId_);
                checkLockedTreeNodesForUserId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              treeNodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              languageIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              onlyActiveNull_ = input.readBool();
              break;
            }
            case 8032: {

              onlyNotDeletedNull_ = input.readBool();
              break;
            }
            case 8040: {

              includeColumnLockedNull_ = input.readBool();
              break;
            }
            case 8048: {

              checkLockedTreeNodesForUserIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.Builder.class);
    }

    public static final int TREE_NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue treeNodeId_;
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    public boolean hasTreeNodeId() {
      return treeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    public io.dstore.Values.integerValue getTreeNodeId() {
      return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
      return getTreeNodeId();
    }

    public static final int TREE_NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean treeNodeIdNull_;
    /**
     * <code>optional bool tree_node_id_null = 1001;</code>
     */
    public boolean getTreeNodeIdNull() {
      return treeNodeIdNull_;
    }

    public static final int LANGUAGE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue languageId_;
    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    public boolean hasLanguageId() {
      return languageId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    public io.dstore.Values.integerValue getLanguageId() {
      return languageId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
    }
    /**
     * <code>optional .dstore.values.integerValue language_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
      return getLanguageId();
    }

    public static final int LANGUAGE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean languageIdNull_;
    /**
     * <code>optional bool language_id_null = 1002;</code>
     */
    public boolean getLanguageIdNull() {
      return languageIdNull_;
    }

    public static final int ONLY_ACTIVE_FIELD_NUMBER = 3;
    private io.dstore.Values.booleanValue onlyActive_;
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public boolean hasOnlyActive() {
      return onlyActive_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public io.dstore.Values.booleanValue getOnlyActive() {
      return onlyActive_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_active = 3;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder() {
      return getOnlyActive();
    }

    public static final int ONLY_ACTIVE_NULL_FIELD_NUMBER = 1003;
    private boolean onlyActiveNull_;
    /**
     * <code>optional bool only_active_null = 1003;</code>
     */
    public boolean getOnlyActiveNull() {
      return onlyActiveNull_;
    }

    public static final int ONLY_NOT_DELETED_FIELD_NUMBER = 4;
    private io.dstore.Values.booleanValue onlyNotDeleted_;
    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    public boolean hasOnlyNotDeleted() {
      return onlyNotDeleted_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    public io.dstore.Values.booleanValue getOnlyNotDeleted() {
      return onlyNotDeleted_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyNotDeleted_;
    }
    /**
     * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getOnlyNotDeletedOrBuilder() {
      return getOnlyNotDeleted();
    }

    public static final int ONLY_NOT_DELETED_NULL_FIELD_NUMBER = 1004;
    private boolean onlyNotDeletedNull_;
    /**
     * <code>optional bool only_not_deleted_null = 1004;</code>
     */
    public boolean getOnlyNotDeletedNull() {
      return onlyNotDeletedNull_;
    }

    public static final int INCLUDE_COLUMN_LOCKED_FIELD_NUMBER = 5;
    private io.dstore.Values.booleanValue includeColumnLocked_;
    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    public boolean hasIncludeColumnLocked() {
      return includeColumnLocked_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    public io.dstore.Values.booleanValue getIncludeColumnLocked() {
      return includeColumnLocked_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : includeColumnLocked_;
    }
    /**
     * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getIncludeColumnLockedOrBuilder() {
      return getIncludeColumnLocked();
    }

    public static final int INCLUDE_COLUMN_LOCKED_NULL_FIELD_NUMBER = 1005;
    private boolean includeColumnLockedNull_;
    /**
     * <code>optional bool include_column_locked_null = 1005;</code>
     */
    public boolean getIncludeColumnLockedNull() {
      return includeColumnLockedNull_;
    }

    public static final int CHECK_LOCKED_TREE_NODES_FOR_USER_ID_FIELD_NUMBER = 6;
    private io.dstore.Values.integerValue checkLockedTreeNodesForUserId_;
    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    public boolean hasCheckLockedTreeNodesForUserId() {
      return checkLockedTreeNodesForUserId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    public io.dstore.Values.integerValue getCheckLockedTreeNodesForUserId() {
      return checkLockedTreeNodesForUserId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : checkLockedTreeNodesForUserId_;
    }
    /**
     * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getCheckLockedTreeNodesForUserIdOrBuilder() {
      return getCheckLockedTreeNodesForUserId();
    }

    public static final int CHECK_LOCKED_TREE_NODES_FOR_USER_ID_NULL_FIELD_NUMBER = 1006;
    private boolean checkLockedTreeNodesForUserIdNull_;
    /**
     * <code>optional bool check_locked_tree_nodes_for_user_id_null = 1006;</code>
     */
    public boolean getCheckLockedTreeNodesForUserIdNull() {
      return checkLockedTreeNodesForUserIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (treeNodeId_ != null) {
        output.writeMessage(1, getTreeNodeId());
      }
      if (languageId_ != null) {
        output.writeMessage(2, getLanguageId());
      }
      if (onlyActive_ != null) {
        output.writeMessage(3, getOnlyActive());
      }
      if (onlyNotDeleted_ != null) {
        output.writeMessage(4, getOnlyNotDeleted());
      }
      if (includeColumnLocked_ != null) {
        output.writeMessage(5, getIncludeColumnLocked());
      }
      if (checkLockedTreeNodesForUserId_ != null) {
        output.writeMessage(6, getCheckLockedTreeNodesForUserId());
      }
      if (treeNodeIdNull_ != false) {
        output.writeBool(1001, treeNodeIdNull_);
      }
      if (languageIdNull_ != false) {
        output.writeBool(1002, languageIdNull_);
      }
      if (onlyActiveNull_ != false) {
        output.writeBool(1003, onlyActiveNull_);
      }
      if (onlyNotDeletedNull_ != false) {
        output.writeBool(1004, onlyNotDeletedNull_);
      }
      if (includeColumnLockedNull_ != false) {
        output.writeBool(1005, includeColumnLockedNull_);
      }
      if (checkLockedTreeNodesForUserIdNull_ != false) {
        output.writeBool(1006, checkLockedTreeNodesForUserIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (treeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTreeNodeId());
      }
      if (languageId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLanguageId());
      }
      if (onlyActive_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOnlyActive());
      }
      if (onlyNotDeleted_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOnlyNotDeleted());
      }
      if (includeColumnLocked_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getIncludeColumnLocked());
      }
      if (checkLockedTreeNodesForUserId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getCheckLockedTreeNodesForUserId());
      }
      if (treeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, treeNodeIdNull_);
      }
      if (languageIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, languageIdNull_);
      }
      if (onlyActiveNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, onlyActiveNull_);
      }
      if (onlyNotDeletedNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, onlyNotDeletedNull_);
      }
      if (includeColumnLockedNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, includeColumnLockedNull_);
      }
      if (checkLockedTreeNodesForUserIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, checkLockedTreeNodesForUserIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters)
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }
        treeNodeIdNull_ = false;

        if (languageIdBuilder_ == null) {
          languageId_ = null;
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }
        languageIdNull_ = false;

        if (onlyActiveBuilder_ == null) {
          onlyActive_ = null;
        } else {
          onlyActive_ = null;
          onlyActiveBuilder_ = null;
        }
        onlyActiveNull_ = false;

        if (onlyNotDeletedBuilder_ == null) {
          onlyNotDeleted_ = null;
        } else {
          onlyNotDeleted_ = null;
          onlyNotDeletedBuilder_ = null;
        }
        onlyNotDeletedNull_ = false;

        if (includeColumnLockedBuilder_ == null) {
          includeColumnLocked_ = null;
        } else {
          includeColumnLocked_ = null;
          includeColumnLockedBuilder_ = null;
        }
        includeColumnLockedNull_ = false;

        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          checkLockedTreeNodesForUserId_ = null;
        } else {
          checkLockedTreeNodesForUserId_ = null;
          checkLockedTreeNodesForUserIdBuilder_ = null;
        }
        checkLockedTreeNodesForUserIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters build() {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters buildPartial() {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters result = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters(this);
        if (treeNodeIdBuilder_ == null) {
          result.treeNodeId_ = treeNodeId_;
        } else {
          result.treeNodeId_ = treeNodeIdBuilder_.build();
        }
        result.treeNodeIdNull_ = treeNodeIdNull_;
        if (languageIdBuilder_ == null) {
          result.languageId_ = languageId_;
        } else {
          result.languageId_ = languageIdBuilder_.build();
        }
        result.languageIdNull_ = languageIdNull_;
        if (onlyActiveBuilder_ == null) {
          result.onlyActive_ = onlyActive_;
        } else {
          result.onlyActive_ = onlyActiveBuilder_.build();
        }
        result.onlyActiveNull_ = onlyActiveNull_;
        if (onlyNotDeletedBuilder_ == null) {
          result.onlyNotDeleted_ = onlyNotDeleted_;
        } else {
          result.onlyNotDeleted_ = onlyNotDeletedBuilder_.build();
        }
        result.onlyNotDeletedNull_ = onlyNotDeletedNull_;
        if (includeColumnLockedBuilder_ == null) {
          result.includeColumnLocked_ = includeColumnLocked_;
        } else {
          result.includeColumnLocked_ = includeColumnLockedBuilder_.build();
        }
        result.includeColumnLockedNull_ = includeColumnLockedNull_;
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          result.checkLockedTreeNodesForUserId_ = checkLockedTreeNodesForUserId_;
        } else {
          result.checkLockedTreeNodesForUserId_ = checkLockedTreeNodesForUserIdBuilder_.build();
        }
        result.checkLockedTreeNodesForUserIdNull_ = checkLockedTreeNodesForUserIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters other) {
        if (other == io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters.getDefaultInstance()) return this;
        if (other.hasTreeNodeId()) {
          mergeTreeNodeId(other.getTreeNodeId());
        }
        if (other.getTreeNodeIdNull() != false) {
          setTreeNodeIdNull(other.getTreeNodeIdNull());
        }
        if (other.hasLanguageId()) {
          mergeLanguageId(other.getLanguageId());
        }
        if (other.getLanguageIdNull() != false) {
          setLanguageIdNull(other.getLanguageIdNull());
        }
        if (other.hasOnlyActive()) {
          mergeOnlyActive(other.getOnlyActive());
        }
        if (other.getOnlyActiveNull() != false) {
          setOnlyActiveNull(other.getOnlyActiveNull());
        }
        if (other.hasOnlyNotDeleted()) {
          mergeOnlyNotDeleted(other.getOnlyNotDeleted());
        }
        if (other.getOnlyNotDeletedNull() != false) {
          setOnlyNotDeletedNull(other.getOnlyNotDeletedNull());
        }
        if (other.hasIncludeColumnLocked()) {
          mergeIncludeColumnLocked(other.getIncludeColumnLocked());
        }
        if (other.getIncludeColumnLockedNull() != false) {
          setIncludeColumnLockedNull(other.getIncludeColumnLockedNull());
        }
        if (other.hasCheckLockedTreeNodesForUserId()) {
          mergeCheckLockedTreeNodesForUserId(other.getCheckLockedTreeNodesForUserId());
        }
        if (other.getCheckLockedTreeNodesForUserIdNull() != false) {
          setCheckLockedTreeNodesForUserIdNull(other.getCheckLockedTreeNodesForUserIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue treeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeNodeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeIdBuilder_ != null || treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.Values.integerValue getTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
        } else {
          return treeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public Builder setTreeNodeId(io.dstore.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treeNodeId_ = value;
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public Builder setTreeNodeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public Builder mergeTreeNodeId(io.dstore.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (treeNodeId_ != null) {
            treeNodeId_ =
              io.dstore.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
          } else {
            treeNodeId_ = value;
          }
          onChanged();
        } else {
          treeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public Builder clearTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
          onChanged();
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getTreeNodeIdBuilder() {
        
        onChanged();
        return getTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        if (treeNodeIdBuilder_ != null) {
          return treeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return treeNodeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getTreeNodeIdFieldBuilder() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          treeNodeId_ = null;
        }
        return treeNodeIdBuilder_;
      }

      private boolean treeNodeIdNull_ ;
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public boolean getTreeNodeIdNull() {
        return treeNodeIdNull_;
      }
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public Builder setTreeNodeIdNull(boolean value) {
        
        treeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tree_node_id_null = 1001;</code>
       */
      public Builder clearTreeNodeIdNull() {
        
        treeNodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue languageId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> languageIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public boolean hasLanguageId() {
        return languageIdBuilder_ != null || languageId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public io.dstore.Values.integerValue getLanguageId() {
        if (languageIdBuilder_ == null) {
          return languageId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
        } else {
          return languageIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(io.dstore.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          languageId_ = value;
          onChanged();
        } else {
          languageIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public Builder setLanguageId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (languageIdBuilder_ == null) {
          languageId_ = builderForValue.build();
          onChanged();
        } else {
          languageIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public Builder mergeLanguageId(io.dstore.Values.integerValue value) {
        if (languageIdBuilder_ == null) {
          if (languageId_ != null) {
            languageId_ =
              io.dstore.Values.integerValue.newBuilder(languageId_).mergeFrom(value).buildPartial();
          } else {
            languageId_ = value;
          }
          onChanged();
        } else {
          languageIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public Builder clearLanguageId() {
        if (languageIdBuilder_ == null) {
          languageId_ = null;
          onChanged();
        } else {
          languageId_ = null;
          languageIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getLanguageIdBuilder() {
        
        onChanged();
        return getLanguageIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getLanguageIdOrBuilder() {
        if (languageIdBuilder_ != null) {
          return languageIdBuilder_.getMessageOrBuilder();
        } else {
          return languageId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : languageId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue language_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getLanguageIdFieldBuilder() {
        if (languageIdBuilder_ == null) {
          languageIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getLanguageId(),
                  getParentForChildren(),
                  isClean());
          languageId_ = null;
        }
        return languageIdBuilder_;
      }

      private boolean languageIdNull_ ;
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public boolean getLanguageIdNull() {
        return languageIdNull_;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder setLanguageIdNull(boolean value) {
        
        languageIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool language_id_null = 1002;</code>
       */
      public Builder clearLanguageIdNull() {
        
        languageIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue onlyActive_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> onlyActiveBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public boolean hasOnlyActive() {
        return onlyActiveBuilder_ != null || onlyActive_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValue getOnlyActive() {
        if (onlyActiveBuilder_ == null) {
          return onlyActive_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
        } else {
          return onlyActiveBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder setOnlyActive(io.dstore.Values.booleanValue value) {
        if (onlyActiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyActive_ = value;
          onChanged();
        } else {
          onlyActiveBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder setOnlyActive(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (onlyActiveBuilder_ == null) {
          onlyActive_ = builderForValue.build();
          onChanged();
        } else {
          onlyActiveBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder mergeOnlyActive(io.dstore.Values.booleanValue value) {
        if (onlyActiveBuilder_ == null) {
          if (onlyActive_ != null) {
            onlyActive_ =
              io.dstore.Values.booleanValue.newBuilder(onlyActive_).mergeFrom(value).buildPartial();
          } else {
            onlyActive_ = value;
          }
          onChanged();
        } else {
          onlyActiveBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public Builder clearOnlyActive() {
        if (onlyActiveBuilder_ == null) {
          onlyActive_ = null;
          onChanged();
        } else {
          onlyActive_ = null;
          onlyActiveBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValue.Builder getOnlyActiveBuilder() {
        
        onChanged();
        return getOnlyActiveFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getOnlyActiveOrBuilder() {
        if (onlyActiveBuilder_ != null) {
          return onlyActiveBuilder_.getMessageOrBuilder();
        } else {
          return onlyActive_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : onlyActive_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_active = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getOnlyActiveFieldBuilder() {
        if (onlyActiveBuilder_ == null) {
          onlyActiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getOnlyActive(),
                  getParentForChildren(),
                  isClean());
          onlyActive_ = null;
        }
        return onlyActiveBuilder_;
      }

      private boolean onlyActiveNull_ ;
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public boolean getOnlyActiveNull() {
        return onlyActiveNull_;
      }
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public Builder setOnlyActiveNull(boolean value) {
        
        onlyActiveNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_active_null = 1003;</code>
       */
      public Builder clearOnlyActiveNull() {
        
        onlyActiveNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue onlyNotDeleted_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> onlyNotDeletedBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public boolean hasOnlyNotDeleted() {
        return onlyNotDeletedBuilder_ != null || onlyNotDeleted_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public io.dstore.Values.booleanValue getOnlyNotDeleted() {
        if (onlyNotDeletedBuilder_ == null) {
          return onlyNotDeleted_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : onlyNotDeleted_;
        } else {
          return onlyNotDeletedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public Builder setOnlyNotDeleted(io.dstore.Values.booleanValue value) {
        if (onlyNotDeletedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyNotDeleted_ = value;
          onChanged();
        } else {
          onlyNotDeletedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public Builder setOnlyNotDeleted(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (onlyNotDeletedBuilder_ == null) {
          onlyNotDeleted_ = builderForValue.build();
          onChanged();
        } else {
          onlyNotDeletedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public Builder mergeOnlyNotDeleted(io.dstore.Values.booleanValue value) {
        if (onlyNotDeletedBuilder_ == null) {
          if (onlyNotDeleted_ != null) {
            onlyNotDeleted_ =
              io.dstore.Values.booleanValue.newBuilder(onlyNotDeleted_).mergeFrom(value).buildPartial();
          } else {
            onlyNotDeleted_ = value;
          }
          onChanged();
        } else {
          onlyNotDeletedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public Builder clearOnlyNotDeleted() {
        if (onlyNotDeletedBuilder_ == null) {
          onlyNotDeleted_ = null;
          onChanged();
        } else {
          onlyNotDeleted_ = null;
          onlyNotDeletedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public io.dstore.Values.booleanValue.Builder getOnlyNotDeletedBuilder() {
        
        onChanged();
        return getOnlyNotDeletedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getOnlyNotDeletedOrBuilder() {
        if (onlyNotDeletedBuilder_ != null) {
          return onlyNotDeletedBuilder_.getMessageOrBuilder();
        } else {
          return onlyNotDeleted_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : onlyNotDeleted_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue only_not_deleted = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getOnlyNotDeletedFieldBuilder() {
        if (onlyNotDeletedBuilder_ == null) {
          onlyNotDeletedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getOnlyNotDeleted(),
                  getParentForChildren(),
                  isClean());
          onlyNotDeleted_ = null;
        }
        return onlyNotDeletedBuilder_;
      }

      private boolean onlyNotDeletedNull_ ;
      /**
       * <code>optional bool only_not_deleted_null = 1004;</code>
       */
      public boolean getOnlyNotDeletedNull() {
        return onlyNotDeletedNull_;
      }
      /**
       * <code>optional bool only_not_deleted_null = 1004;</code>
       */
      public Builder setOnlyNotDeletedNull(boolean value) {
        
        onlyNotDeletedNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_not_deleted_null = 1004;</code>
       */
      public Builder clearOnlyNotDeletedNull() {
        
        onlyNotDeletedNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue includeColumnLocked_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> includeColumnLockedBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public boolean hasIncludeColumnLocked() {
        return includeColumnLockedBuilder_ != null || includeColumnLocked_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public io.dstore.Values.booleanValue getIncludeColumnLocked() {
        if (includeColumnLockedBuilder_ == null) {
          return includeColumnLocked_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : includeColumnLocked_;
        } else {
          return includeColumnLockedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public Builder setIncludeColumnLocked(io.dstore.Values.booleanValue value) {
        if (includeColumnLockedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          includeColumnLocked_ = value;
          onChanged();
        } else {
          includeColumnLockedBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public Builder setIncludeColumnLocked(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (includeColumnLockedBuilder_ == null) {
          includeColumnLocked_ = builderForValue.build();
          onChanged();
        } else {
          includeColumnLockedBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public Builder mergeIncludeColumnLocked(io.dstore.Values.booleanValue value) {
        if (includeColumnLockedBuilder_ == null) {
          if (includeColumnLocked_ != null) {
            includeColumnLocked_ =
              io.dstore.Values.booleanValue.newBuilder(includeColumnLocked_).mergeFrom(value).buildPartial();
          } else {
            includeColumnLocked_ = value;
          }
          onChanged();
        } else {
          includeColumnLockedBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public Builder clearIncludeColumnLocked() {
        if (includeColumnLockedBuilder_ == null) {
          includeColumnLocked_ = null;
          onChanged();
        } else {
          includeColumnLocked_ = null;
          includeColumnLockedBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public io.dstore.Values.booleanValue.Builder getIncludeColumnLockedBuilder() {
        
        onChanged();
        return getIncludeColumnLockedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getIncludeColumnLockedOrBuilder() {
        if (includeColumnLockedBuilder_ != null) {
          return includeColumnLockedBuilder_.getMessageOrBuilder();
        } else {
          return includeColumnLocked_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : includeColumnLocked_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue include_column_locked = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getIncludeColumnLockedFieldBuilder() {
        if (includeColumnLockedBuilder_ == null) {
          includeColumnLockedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getIncludeColumnLocked(),
                  getParentForChildren(),
                  isClean());
          includeColumnLocked_ = null;
        }
        return includeColumnLockedBuilder_;
      }

      private boolean includeColumnLockedNull_ ;
      /**
       * <code>optional bool include_column_locked_null = 1005;</code>
       */
      public boolean getIncludeColumnLockedNull() {
        return includeColumnLockedNull_;
      }
      /**
       * <code>optional bool include_column_locked_null = 1005;</code>
       */
      public Builder setIncludeColumnLockedNull(boolean value) {
        
        includeColumnLockedNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_column_locked_null = 1005;</code>
       */
      public Builder clearIncludeColumnLockedNull() {
        
        includeColumnLockedNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue checkLockedTreeNodesForUserId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> checkLockedTreeNodesForUserIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public boolean hasCheckLockedTreeNodesForUserId() {
        return checkLockedTreeNodesForUserIdBuilder_ != null || checkLockedTreeNodesForUserId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public io.dstore.Values.integerValue getCheckLockedTreeNodesForUserId() {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          return checkLockedTreeNodesForUserId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : checkLockedTreeNodesForUserId_;
        } else {
          return checkLockedTreeNodesForUserIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public Builder setCheckLockedTreeNodesForUserId(io.dstore.Values.integerValue value) {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkLockedTreeNodesForUserId_ = value;
          onChanged();
        } else {
          checkLockedTreeNodesForUserIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public Builder setCheckLockedTreeNodesForUserId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          checkLockedTreeNodesForUserId_ = builderForValue.build();
          onChanged();
        } else {
          checkLockedTreeNodesForUserIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public Builder mergeCheckLockedTreeNodesForUserId(io.dstore.Values.integerValue value) {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          if (checkLockedTreeNodesForUserId_ != null) {
            checkLockedTreeNodesForUserId_ =
              io.dstore.Values.integerValue.newBuilder(checkLockedTreeNodesForUserId_).mergeFrom(value).buildPartial();
          } else {
            checkLockedTreeNodesForUserId_ = value;
          }
          onChanged();
        } else {
          checkLockedTreeNodesForUserIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public Builder clearCheckLockedTreeNodesForUserId() {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          checkLockedTreeNodesForUserId_ = null;
          onChanged();
        } else {
          checkLockedTreeNodesForUserId_ = null;
          checkLockedTreeNodesForUserIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public io.dstore.Values.integerValue.Builder getCheckLockedTreeNodesForUserIdBuilder() {
        
        onChanged();
        return getCheckLockedTreeNodesForUserIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getCheckLockedTreeNodesForUserIdOrBuilder() {
        if (checkLockedTreeNodesForUserIdBuilder_ != null) {
          return checkLockedTreeNodesForUserIdBuilder_.getMessageOrBuilder();
        } else {
          return checkLockedTreeNodesForUserId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : checkLockedTreeNodesForUserId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue check_locked_tree_nodes_for_user_id = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getCheckLockedTreeNodesForUserIdFieldBuilder() {
        if (checkLockedTreeNodesForUserIdBuilder_ == null) {
          checkLockedTreeNodesForUserIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getCheckLockedTreeNodesForUserId(),
                  getParentForChildren(),
                  isClean());
          checkLockedTreeNodesForUserId_ = null;
        }
        return checkLockedTreeNodesForUserIdBuilder_;
      }

      private boolean checkLockedTreeNodesForUserIdNull_ ;
      /**
       * <code>optional bool check_locked_tree_nodes_for_user_id_null = 1006;</code>
       */
      public boolean getCheckLockedTreeNodesForUserIdNull() {
        return checkLockedTreeNodesForUserIdNull_;
      }
      /**
       * <code>optional bool check_locked_tree_nodes_for_user_id_null = 1006;</code>
       */
      public Builder setCheckLockedTreeNodesForUserIdNull(boolean value) {
        
        checkLockedTreeNodesForUserIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool check_locked_tree_nodes_for_user_id_null = 1006;</code>
       */
      public Builder clearCheckLockedTreeNodesForUserIdNull() {
        
        checkLockedTreeNodesForUserIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Parameters)
    private static final io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters();
    }

    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      boolean hasTreeLevel();
      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      io.dstore.Values.integerValue getTreeLevel();
      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      io.dstore.Values.integerValueOrBuilder getTreeLevelOrBuilder();

      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      boolean hasNodeDescription();
      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      io.dstore.Values.stringValue getNodeDescription();
      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      boolean hasPredecessor();
      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      io.dstore.Values.integerValue getPredecessor();
      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPredecessorOrBuilder();

      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      boolean hasActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      io.dstore.Values.booleanValue getActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      boolean hasLevelNo();
      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      io.dstore.Values.integerValue getLevelNo();
      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      io.dstore.Values.integerValueOrBuilder getLevelNoOrBuilder();

      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      boolean hasHasNextSibling();
      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      io.dstore.Values.booleanValue getHasNextSibling();
      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder();

      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      boolean hasLockedForUserId();
      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      io.dstore.Values.booleanValue getLockedForUserId();
      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getLockedForUserIdOrBuilder();

      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      boolean hasTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      io.dstore.Values.integerValue getTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      io.dstore.Values.integerValue getNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      boolean hasHasSuccessors();
      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      io.dstore.Values.booleanValue getHasSuccessors();
      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder();

      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      boolean hasDeleted();
      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      io.dstore.Values.booleanValue getDeleted();
      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getDeletedOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (treeLevel_ != null) {
                  subBuilder = treeLevel_.toBuilder();
                }
                treeLevel_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeLevel_);
                  treeLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (predecessor_ != null) {
                  subBuilder = predecessor_.toBuilder();
                }
                predecessor_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(predecessor_);
                  predecessor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (levelNo_ != null) {
                  subBuilder = levelNo_.toBuilder();
                }
                levelNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelNo_);
                  levelNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (hasNextSibling_ != null) {
                  subBuilder = hasNextSibling_.toBuilder();
                }
                hasNextSibling_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasNextSibling_);
                  hasNextSibling_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (lockedForUserId_ != null) {
                  subBuilder = lockedForUserId_.toBuilder();
                }
                lockedForUserId_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lockedForUserId_);
                  lockedForUserId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (hasSuccessors_ != null) {
                  subBuilder = hasSuccessors_.toBuilder();
                }
                hasSuccessors_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasSuccessors_);
                  hasSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (deleted_ != null) {
                  subBuilder = deleted_.toBuilder();
                }
                deleted_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(deleted_);
                  deleted_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int TREE_LEVEL_FIELD_NUMBER = 10001;
      private io.dstore.Values.integerValue treeLevel_;
      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      public boolean hasTreeLevel() {
        return treeLevel_ != null;
      }
      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      public io.dstore.Values.integerValue getTreeLevel() {
        return treeLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeLevel_;
      }
      /**
       * <pre>
       * Anzahl Vorgänger von "TreeNodeID" plus 1
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeLevelOrBuilder() {
        return getTreeLevel();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10002;
      private io.dstore.Values.stringValue nodeDescription_;
      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      public io.dstore.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10002;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int PREDECESSOR_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue predecessor_;
      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      public boolean hasPredecessor() {
        return predecessor_ != null;
      }
      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      public io.dstore.Values.integerValue getPredecessor() {
        return predecessor_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : predecessor_;
      }
      /**
       * <pre>
       * ID des Vorgängers von "TreeNodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPredecessorOrBuilder() {
        return getPredecessor();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10004;
      private io.dstore.Values.booleanValue active_;
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      public io.dstore.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10004;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int LEVEL_NO_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue levelNo_;
      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      public boolean hasLevelNo() {
        return levelNo_ != null;
      }
      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      public io.dstore.Values.integerValue getLevelNo() {
        return levelNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : levelNo_;
      }
      /**
       * <pre>
       * Nummer der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_no = 10005;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getLevelNoOrBuilder() {
        return getLevelNo();
      }

      public static final int HAS_NEXT_SIBLING_FIELD_NUMBER = 10006;
      private io.dstore.Values.booleanValue hasNextSibling_;
      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      public boolean hasHasNextSibling() {
        return hasNextSibling_ != null;
      }
      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      public io.dstore.Values.booleanValue getHasNextSibling() {
        return hasNextSibling_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
      }
      /**
       * <pre>
       * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder() {
        return getHasNextSibling();
      }

      public static final int LOCKED_FOR_USER_ID_FIELD_NUMBER = 10007;
      private io.dstore.Values.booleanValue lockedForUserId_;
      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      public boolean hasLockedForUserId() {
        return lockedForUserId_ != null;
      }
      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      public io.dstore.Values.booleanValue getLockedForUserId() {
        return lockedForUserId_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : lockedForUserId_;
      }
      /**
       * <pre>
       * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getLockedForUserIdOrBuilder() {
        return getLockedForUserId();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10008;
      private io.dstore.Values.integerValue treeNodeId_;
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      public io.dstore.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10009;
      private io.dstore.Values.integerValue nodeId_;
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      public io.dstore.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikelelementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10009;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int HAS_SUCCESSORS_FIELD_NUMBER = 10010;
      private io.dstore.Values.booleanValue hasSuccessors_;
      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      public boolean hasHasSuccessors() {
        return hasSuccessors_ != null;
      }
      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      public io.dstore.Values.booleanValue getHasSuccessors() {
        return hasSuccessors_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
      }
      /**
       * <pre>
       * Hat "TreeNodeID" selbst Nachfolger ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
        return getHasSuccessors();
      }

      public static final int DELETED_FIELD_NUMBER = 10011;
      private io.dstore.Values.booleanValue deleted_;
      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      public boolean hasDeleted() {
        return deleted_ != null;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      public io.dstore.Values.booleanValue getDeleted() {
        return deleted_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : deleted_;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getDeletedOrBuilder() {
        return getDeleted();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (treeLevel_ != null) {
          output.writeMessage(10001, getTreeLevel());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10002, getNodeDescription());
        }
        if (predecessor_ != null) {
          output.writeMessage(10003, getPredecessor());
        }
        if (active_ != null) {
          output.writeMessage(10004, getActive());
        }
        if (levelNo_ != null) {
          output.writeMessage(10005, getLevelNo());
        }
        if (hasNextSibling_ != null) {
          output.writeMessage(10006, getHasNextSibling());
        }
        if (lockedForUserId_ != null) {
          output.writeMessage(10007, getLockedForUserId());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10008, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10009, getNodeId());
        }
        if (hasSuccessors_ != null) {
          output.writeMessage(10010, getHasSuccessors());
        }
        if (deleted_ != null) {
          output.writeMessage(10011, getDeleted());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (treeLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getTreeLevel());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getNodeDescription());
        }
        if (predecessor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPredecessor());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getActive());
        }
        if (levelNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getLevelNo());
        }
        if (hasNextSibling_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getHasNextSibling());
        }
        if (lockedForUserId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getLockedForUserId());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getNodeId());
        }
        if (hasSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getHasSuccessors());
        }
        if (deleted_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getDeleted());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row)
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (treeLevelBuilder_ == null) {
            treeLevel_ = null;
          } else {
            treeLevel_ = null;
            treeLevelBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (predecessorBuilder_ == null) {
            predecessor_ = null;
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = null;
          } else {
            hasNextSibling_ = null;
            hasNextSiblingBuilder_ = null;
          }
          if (lockedForUserIdBuilder_ == null) {
            lockedForUserId_ = null;
          } else {
            lockedForUserId_ = null;
            lockedForUserIdBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }
          if (deletedBuilder_ == null) {
            deleted_ = null;
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row build() {
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row result = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (treeLevelBuilder_ == null) {
            result.treeLevel_ = treeLevel_;
          } else {
            result.treeLevel_ = treeLevelBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (predecessorBuilder_ == null) {
            result.predecessor_ = predecessor_;
          } else {
            result.predecessor_ = predecessorBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (levelNoBuilder_ == null) {
            result.levelNo_ = levelNo_;
          } else {
            result.levelNo_ = levelNoBuilder_.build();
          }
          if (hasNextSiblingBuilder_ == null) {
            result.hasNextSibling_ = hasNextSibling_;
          } else {
            result.hasNextSibling_ = hasNextSiblingBuilder_.build();
          }
          if (lockedForUserIdBuilder_ == null) {
            result.lockedForUserId_ = lockedForUserId_;
          } else {
            result.lockedForUserId_ = lockedForUserIdBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (hasSuccessorsBuilder_ == null) {
            result.hasSuccessors_ = hasSuccessors_;
          } else {
            result.hasSuccessors_ = hasSuccessorsBuilder_.build();
          }
          if (deletedBuilder_ == null) {
            result.deleted_ = deleted_;
          } else {
            result.deleted_ = deletedBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasTreeLevel()) {
            mergeTreeLevel(other.getTreeLevel());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasPredecessor()) {
            mergePredecessor(other.getPredecessor());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasLevelNo()) {
            mergeLevelNo(other.getLevelNo());
          }
          if (other.hasHasNextSibling()) {
            mergeHasNextSibling(other.getHasNextSibling());
          }
          if (other.hasLockedForUserId()) {
            mergeLockedForUserId(other.getLockedForUserId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasHasSuccessors()) {
            mergeHasSuccessors(other.getHasSuccessors());
          }
          if (other.hasDeleted()) {
            mergeDeleted(other.getDeleted());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.integerValue treeLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeLevelBuilder_;
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public boolean hasTreeLevel() {
          return treeLevelBuilder_ != null || treeLevel_ != null;
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public io.dstore.Values.integerValue getTreeLevel() {
          if (treeLevelBuilder_ == null) {
            return treeLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeLevel_;
          } else {
            return treeLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public Builder setTreeLevel(io.dstore.Values.integerValue value) {
          if (treeLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeLevel_ = value;
            onChanged();
          } else {
            treeLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public Builder setTreeLevel(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (treeLevelBuilder_ == null) {
            treeLevel_ = builderForValue.build();
            onChanged();
          } else {
            treeLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public Builder mergeTreeLevel(io.dstore.Values.integerValue value) {
          if (treeLevelBuilder_ == null) {
            if (treeLevel_ != null) {
              treeLevel_ =
                io.dstore.Values.integerValue.newBuilder(treeLevel_).mergeFrom(value).buildPartial();
            } else {
              treeLevel_ = value;
            }
            onChanged();
          } else {
            treeLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public Builder clearTreeLevel() {
          if (treeLevelBuilder_ == null) {
            treeLevel_ = null;
            onChanged();
          } else {
            treeLevel_ = null;
            treeLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public io.dstore.Values.integerValue.Builder getTreeLevelBuilder() {
          
          onChanged();
          return getTreeLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getTreeLevelOrBuilder() {
          if (treeLevelBuilder_ != null) {
            return treeLevelBuilder_.getMessageOrBuilder();
          } else {
            return treeLevel_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : treeLevel_;
          }
        }
        /**
         * <pre>
         * Anzahl Vorgänger von "TreeNodeID" plus 1
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_level = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getTreeLevelFieldBuilder() {
          if (treeLevelBuilder_ == null) {
            treeLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getTreeLevel(),
                    getParentForChildren(),
                    isClean());
            treeLevel_ = null;
          }
          return treeLevelBuilder_;
        }

        private io.dstore.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public io.dstore.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public Builder setNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public Builder setNodeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public Builder mergeNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public io.dstore.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue predecessor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> predecessorBuilder_;
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public boolean hasPredecessor() {
          return predecessorBuilder_ != null || predecessor_ != null;
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public io.dstore.Values.integerValue getPredecessor() {
          if (predecessorBuilder_ == null) {
            return predecessor_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : predecessor_;
          } else {
            return predecessorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public Builder setPredecessor(io.dstore.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            predecessor_ = value;
            onChanged();
          } else {
            predecessorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public Builder setPredecessor(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (predecessorBuilder_ == null) {
            predecessor_ = builderForValue.build();
            onChanged();
          } else {
            predecessorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public Builder mergePredecessor(io.dstore.Values.integerValue value) {
          if (predecessorBuilder_ == null) {
            if (predecessor_ != null) {
              predecessor_ =
                io.dstore.Values.integerValue.newBuilder(predecessor_).mergeFrom(value).buildPartial();
            } else {
              predecessor_ = value;
            }
            onChanged();
          } else {
            predecessorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public Builder clearPredecessor() {
          if (predecessorBuilder_ == null) {
            predecessor_ = null;
            onChanged();
          } else {
            predecessor_ = null;
            predecessorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getPredecessorBuilder() {
          
          onChanged();
          return getPredecessorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPredecessorOrBuilder() {
          if (predecessorBuilder_ != null) {
            return predecessorBuilder_.getMessageOrBuilder();
          } else {
            return predecessor_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : predecessor_;
          }
        }
        /**
         * <pre>
         * ID des Vorgängers von "TreeNodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue predecessor = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPredecessorFieldBuilder() {
          if (predecessorBuilder_ == null) {
            predecessorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPredecessor(),
                    getParentForChildren(),
                    isClean());
            predecessor_ = null;
          }
          return predecessorBuilder_;
        }

        private io.dstore.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public io.dstore.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public Builder setActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public Builder setActive(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public Builder mergeActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public io.dstore.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.Values.integerValue levelNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> levelNoBuilder_;
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public boolean hasLevelNo() {
          return levelNoBuilder_ != null || levelNo_ != null;
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public io.dstore.Values.integerValue getLevelNo() {
          if (levelNoBuilder_ == null) {
            return levelNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : levelNo_;
          } else {
            return levelNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public Builder setLevelNo(io.dstore.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelNo_ = value;
            onChanged();
          } else {
            levelNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public Builder setLevelNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (levelNoBuilder_ == null) {
            levelNo_ = builderForValue.build();
            onChanged();
          } else {
            levelNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public Builder mergeLevelNo(io.dstore.Values.integerValue value) {
          if (levelNoBuilder_ == null) {
            if (levelNo_ != null) {
              levelNo_ =
                io.dstore.Values.integerValue.newBuilder(levelNo_).mergeFrom(value).buildPartial();
            } else {
              levelNo_ = value;
            }
            onChanged();
          } else {
            levelNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public Builder clearLevelNo() {
          if (levelNoBuilder_ == null) {
            levelNo_ = null;
            onChanged();
          } else {
            levelNo_ = null;
            levelNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public io.dstore.Values.integerValue.Builder getLevelNoBuilder() {
          
          onChanged();
          return getLevelNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getLevelNoOrBuilder() {
          if (levelNoBuilder_ != null) {
            return levelNoBuilder_.getMessageOrBuilder();
          } else {
            return levelNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : levelNo_;
          }
        }
        /**
         * <pre>
         * Nummer der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_no = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getLevelNoFieldBuilder() {
          if (levelNoBuilder_ == null) {
            levelNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getLevelNo(),
                    getParentForChildren(),
                    isClean());
            levelNo_ = null;
          }
          return levelNoBuilder_;
        }

        private io.dstore.Values.booleanValue hasNextSibling_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> hasNextSiblingBuilder_;
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public boolean hasHasNextSibling() {
          return hasNextSiblingBuilder_ != null || hasNextSibling_ != null;
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public io.dstore.Values.booleanValue getHasNextSibling() {
          if (hasNextSiblingBuilder_ == null) {
            return hasNextSibling_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
          } else {
            return hasNextSiblingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public Builder setHasNextSibling(io.dstore.Values.booleanValue value) {
          if (hasNextSiblingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasNextSibling_ = value;
            onChanged();
          } else {
            hasNextSiblingBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public Builder setHasNextSibling(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = builderForValue.build();
            onChanged();
          } else {
            hasNextSiblingBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public Builder mergeHasNextSibling(io.dstore.Values.booleanValue value) {
          if (hasNextSiblingBuilder_ == null) {
            if (hasNextSibling_ != null) {
              hasNextSibling_ =
                io.dstore.Values.booleanValue.newBuilder(hasNextSibling_).mergeFrom(value).buildPartial();
            } else {
              hasNextSibling_ = value;
            }
            onChanged();
          } else {
            hasNextSiblingBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public Builder clearHasNextSibling() {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSibling_ = null;
            onChanged();
          } else {
            hasNextSibling_ = null;
            hasNextSiblingBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public io.dstore.Values.booleanValue.Builder getHasNextSiblingBuilder() {
          
          onChanged();
          return getHasNextSiblingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getHasNextSiblingOrBuilder() {
          if (hasNextSiblingBuilder_ != null) {
            return hasNextSiblingBuilder_.getMessageOrBuilder();
          } else {
            return hasNextSibling_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : hasNextSibling_;
          }
        }
        /**
         * <pre>
         * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_next_sibling = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getHasNextSiblingFieldBuilder() {
          if (hasNextSiblingBuilder_ == null) {
            hasNextSiblingBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getHasNextSibling(),
                    getParentForChildren(),
                    isClean());
            hasNextSibling_ = null;
          }
          return hasNextSiblingBuilder_;
        }

        private io.dstore.Values.booleanValue lockedForUserId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> lockedForUserIdBuilder_;
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public boolean hasLockedForUserId() {
          return lockedForUserIdBuilder_ != null || lockedForUserId_ != null;
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public io.dstore.Values.booleanValue getLockedForUserId() {
          if (lockedForUserIdBuilder_ == null) {
            return lockedForUserId_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : lockedForUserId_;
          } else {
            return lockedForUserIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public Builder setLockedForUserId(io.dstore.Values.booleanValue value) {
          if (lockedForUserIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lockedForUserId_ = value;
            onChanged();
          } else {
            lockedForUserIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public Builder setLockedForUserId(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (lockedForUserIdBuilder_ == null) {
            lockedForUserId_ = builderForValue.build();
            onChanged();
          } else {
            lockedForUserIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public Builder mergeLockedForUserId(io.dstore.Values.booleanValue value) {
          if (lockedForUserIdBuilder_ == null) {
            if (lockedForUserId_ != null) {
              lockedForUserId_ =
                io.dstore.Values.booleanValue.newBuilder(lockedForUserId_).mergeFrom(value).buildPartial();
            } else {
              lockedForUserId_ = value;
            }
            onChanged();
          } else {
            lockedForUserIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public Builder clearLockedForUserId() {
          if (lockedForUserIdBuilder_ == null) {
            lockedForUserId_ = null;
            onChanged();
          } else {
            lockedForUserId_ = null;
            lockedForUserIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public io.dstore.Values.booleanValue.Builder getLockedForUserIdBuilder() {
          
          onChanged();
          return getLockedForUserIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getLockedForUserIdOrBuilder() {
          if (lockedForUserIdBuilder_ != null) {
            return lockedForUserIdBuilder_.getMessageOrBuilder();
          } else {
            return lockedForUserId_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : lockedForUserId_;
          }
        }
        /**
         * <pre>
         * Ist dieses Element für den Benutzer "&#64;CheckLockedTreeNodesForUserID" gesperrt ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue locked_for_user_id = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getLockedForUserIdFieldBuilder() {
          if (lockedForUserIdBuilder_ == null) {
            lockedForUserIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getLockedForUserId(),
                    getParentForChildren(),
                    isClean());
            lockedForUserId_ = null;
          }
          return lockedForUserIdBuilder_;
        }

        private io.dstore.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public io.dstore.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public Builder setTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public Builder setTreeNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public Builder mergeTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public io.dstore.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public io.dstore.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public Builder setNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public Builder setNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public Builder mergeNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public io.dstore.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikelelementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.Values.booleanValue hasSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> hasSuccessorsBuilder_;
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public boolean hasHasSuccessors() {
          return hasSuccessorsBuilder_ != null || hasSuccessors_ != null;
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public io.dstore.Values.booleanValue getHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            return hasSuccessors_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          } else {
            return hasSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public Builder setHasSuccessors(io.dstore.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasSuccessors_ = value;
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public Builder setHasSuccessors(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public Builder mergeHasSuccessors(io.dstore.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (hasSuccessors_ != null) {
              hasSuccessors_ =
                io.dstore.Values.booleanValue.newBuilder(hasSuccessors_).mergeFrom(value).buildPartial();
            } else {
              hasSuccessors_ = value;
            }
            onChanged();
          } else {
            hasSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public Builder clearHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
            onChanged();
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public io.dstore.Values.booleanValue.Builder getHasSuccessorsBuilder() {
          
          onChanged();
          return getHasSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
          if (hasSuccessorsBuilder_ != null) {
            return hasSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return hasSuccessors_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          }
        }
        /**
         * <pre>
         * Hat "TreeNodeID" selbst Nachfolger ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue has_successors = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getHasSuccessorsFieldBuilder() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getHasSuccessors(),
                    getParentForChildren(),
                    isClean());
            hasSuccessors_ = null;
          }
          return hasSuccessorsBuilder_;
        }

        private io.dstore.Values.booleanValue deleted_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> deletedBuilder_;
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public boolean hasDeleted() {
          return deletedBuilder_ != null || deleted_ != null;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public io.dstore.Values.booleanValue getDeleted() {
          if (deletedBuilder_ == null) {
            return deleted_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : deleted_;
          } else {
            return deletedBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public Builder setDeleted(io.dstore.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            deleted_ = value;
            onChanged();
          } else {
            deletedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public Builder setDeleted(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (deletedBuilder_ == null) {
            deleted_ = builderForValue.build();
            onChanged();
          } else {
            deletedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public Builder mergeDeleted(io.dstore.Values.booleanValue value) {
          if (deletedBuilder_ == null) {
            if (deleted_ != null) {
              deleted_ =
                io.dstore.Values.booleanValue.newBuilder(deleted_).mergeFrom(value).buildPartial();
            } else {
              deleted_ = value;
            }
            onChanged();
          } else {
            deletedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public Builder clearDeleted() {
          if (deletedBuilder_ == null) {
            deleted_ = null;
            onChanged();
          } else {
            deleted_ = null;
            deletedBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public io.dstore.Values.booleanValue.Builder getDeletedBuilder() {
          
          onChanged();
          return getDeletedFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getDeletedOrBuilder() {
          if (deletedBuilder_ != null) {
            return deletedBuilder_.getMessageOrBuilder();
          } else {
            return deleted_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : deleted_;
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue deleted = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getDeletedFieldBuilder() {
          if (deletedBuilder_ == null) {
            deletedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getDeleted(),
                    getParentForChildren(),
                    isClean());
            deleted_ = null;
          }
          return deletedBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row)
      private static final io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row();
      }

      public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response)
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.class, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response build() {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response buildPartial() {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response result = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response other) {
        if (other == io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetDirectSuccessors_Tree_Ad.Response)
    private static final io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response();
    }

    public static io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetDirectSuccessorsTreeAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/im_GetDirectS" +
      "uccessors_Tree_Ad.proto\022,dstore.engine.i" +
      "m_GetDirectSuccessors_Tree_Ad\032\023dstore/va" +
      "lues.proto\032\033dstore/engine/message.proto\032" +
      "#dstore/engine/metainformation.proto\"\252\004\n" +
      "\nParameters\0221\n\014tree_node_id\030\001 \001(\0132\033.dsto" +
      "re.values.integerValue\022\032\n\021tree_node_id_n" +
      "ull\030\351\007 \001(\010\0220\n\013language_id\030\002 \001(\0132\033.dstore" +
      ".values.integerValue\022\031\n\020language_id_null" +
      "\030\352\007 \001(\010\0220\n\013only_active\030\003 \001(\0132\033.dstore.va",
      "lues.booleanValue\022\031\n\020only_active_null\030\353\007" +
      " \001(\010\0225\n\020only_not_deleted\030\004 \001(\0132\033.dstore." +
      "values.booleanValue\022\036\n\025only_not_deleted_" +
      "null\030\354\007 \001(\010\022:\n\025include_column_locked\030\005 \001" +
      "(\0132\033.dstore.values.booleanValue\022#\n\032inclu" +
      "de_column_locked_null\030\355\007 \001(\010\022H\n#check_lo" +
      "cked_tree_nodes_for_user_id\030\006 \001(\0132\033.dsto" +
      "re.values.integerValue\0221\n(check_locked_t" +
      "ree_nodes_for_user_id_null\030\356\007 \001(\010\"\233\006\n\010Re" +
      "sponse\022H\n\020meta_information\030\002 \003(\0132..dstor",
      "e.engine.metainformation.MetaInformation" +
      "\022/\n\007message\030\003 \003(\0132\036.dstore.engine.messag" +
      "e.Message\022G\n\003row\030\004 \003(\0132:.dstore.engine.i" +
      "m_GetDirectSuccessors_Tree_Ad.Response.R" +
      "ow\032\312\004\n\003Row\022\017\n\006row_id\030\220N \001(\005\0220\n\ntree_leve" +
      "l\030\221N \001(\0132\033.dstore.values.integerValue\0225\n" +
      "\020node_description\030\222N \001(\0132\032.dstore.values" +
      ".stringValue\0221\n\013predecessor\030\223N \001(\0132\033.dst" +
      "ore.values.integerValue\022,\n\006active\030\224N \001(\013" +
      "2\033.dstore.values.booleanValue\022.\n\010level_n",
      "o\030\225N \001(\0132\033.dstore.values.integerValue\0226\n" +
      "\020has_next_sibling\030\226N \001(\0132\033.dstore.values" +
      ".booleanValue\0228\n\022locked_for_user_id\030\227N \001" +
      "(\0132\033.dstore.values.booleanValue\0222\n\014tree_" +
      "node_id\030\230N \001(\0132\033.dstore.values.integerVa" +
      "lue\022-\n\007node_id\030\231N \001(\0132\033.dstore.values.in" +
      "tegerValue\0224\n\016has_successors\030\232N \001(\0132\033.ds" +
      "tore.values.booleanValue\022-\n\007deleted\030\233N \001" +
      "(\0132\033.dstore.values.booleanValueB_\n\033io.ds" +
      "tore.engine.proceduresZ@gosdk.dstore.de/",
      "engine/procedures/im_GetDirectSuccessors" +
      "_Tree_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Parameters_descriptor,
        new java.lang.String[] { "TreeNodeId", "TreeNodeIdNull", "LanguageId", "LanguageIdNull", "OnlyActive", "OnlyActiveNull", "OnlyNotDeleted", "OnlyNotDeletedNull", "IncludeColumnLocked", "IncludeColumnLockedNull", "CheckLockedTreeNodesForUserId", "CheckLockedTreeNodesForUserIdNull", });
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetDirectSuccessors_Tree_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "TreeLevel", "NodeDescription", "Predecessor", "Active", "LevelNo", "HasNextSibling", "LockedForUserId", "TreeNodeId", "NodeId", "HasSuccessors", "Deleted", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
