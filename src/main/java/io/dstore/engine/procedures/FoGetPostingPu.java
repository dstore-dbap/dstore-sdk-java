// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/fo_GetPosting_Pu.proto

package io.dstore.engine.procedures;

public final class FoGetPostingPu {
  private FoGetPostingPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPosting_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    boolean hasPersonIdentificationValues();
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.Values.stringValue getPersonIdentificationValues();
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder();

    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    boolean getPersonIdentificationValuesNull();

    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    boolean hasPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.Values.integerValue getPersonTypeId();
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder();

    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    boolean getPersonTypeIdNull();

    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    boolean hasUniqueId();
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    io.dstore.Values.stringValue getUniqueId();
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder();

    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    boolean getUniqueIdNull();

    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    boolean hasPostingId();
    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    io.dstore.Values.integerValue getPostingId();
    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    io.dstore.Values.integerValueOrBuilder getPostingIdOrBuilder();

    /**
     * <code>optional bool posting_id_null = 1004;</code>
     */
    boolean getPostingIdNull();

    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    boolean hasAdditionalInfos();
    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    io.dstore.Values.booleanValue getAdditionalInfos();
    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getAdditionalInfosOrBuilder();

    /**
     * <code>optional bool additional_infos_null = 1005;</code>
     */
    boolean getAdditionalInfosNull();

    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    boolean hasSeparatorInIdentVals();
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    io.dstore.Values.stringValue getSeparatorInIdentVals();
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder();

    /**
     * <code>optional bool separator_in_ident_vals_null = 1006;</code>
     */
    boolean getSeparatorInIdentValsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPosting_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      personIdentificationValuesNull_ = false;
      personTypeIdNull_ = false;
      uniqueIdNull_ = false;
      postingIdNull_ = false;
      additionalInfosNull_ = false;
      separatorInIdentValsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (personIdentificationValues_ != null) {
                subBuilder = personIdentificationValues_.toBuilder();
              }
              personIdentificationValues_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personIdentificationValues_);
                personIdentificationValues_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (personTypeId_ != null) {
                subBuilder = personTypeId_.toBuilder();
              }
              personTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(personTypeId_);
                personTypeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (uniqueId_ != null) {
                subBuilder = uniqueId_.toBuilder();
              }
              uniqueId_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(uniqueId_);
                uniqueId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (postingId_ != null) {
                subBuilder = postingId_.toBuilder();
              }
              postingId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(postingId_);
                postingId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (additionalInfos_ != null) {
                subBuilder = additionalInfos_.toBuilder();
              }
              additionalInfos_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(additionalInfos_);
                additionalInfos_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (separatorInIdentVals_ != null) {
                subBuilder = separatorInIdentVals_.toBuilder();
              }
              separatorInIdentVals_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(separatorInIdentVals_);
                separatorInIdentVals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              personIdentificationValuesNull_ = input.readBool();
              break;
            }
            case 8016: {

              personTypeIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              uniqueIdNull_ = input.readBool();
              break;
            }
            case 8032: {

              postingIdNull_ = input.readBool();
              break;
            }
            case 8040: {

              additionalInfosNull_ = input.readBool();
              break;
            }
            case 8048: {

              separatorInIdentValsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.FoGetPostingPu.Parameters.class, io.dstore.engine.procedures.FoGetPostingPu.Parameters.Builder.class);
    }

    public static final int PERSON_IDENTIFICATION_VALUES_FIELD_NUMBER = 1;
    private io.dstore.Values.stringValue personIdentificationValues_;
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public boolean hasPersonIdentificationValues() {
      return personIdentificationValues_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.Values.stringValue getPersonIdentificationValues() {
      return personIdentificationValues_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
    }
    /**
     * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
      return getPersonIdentificationValues();
    }

    public static final int PERSON_IDENTIFICATION_VALUES_NULL_FIELD_NUMBER = 1001;
    private boolean personIdentificationValuesNull_;
    /**
     * <code>optional bool person_identification_values_null = 1001;</code>
     */
    public boolean getPersonIdentificationValuesNull() {
      return personIdentificationValuesNull_;
    }

    public static final int PERSON_TYPE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue personTypeId_;
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public boolean hasPersonTypeId() {
      return personTypeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.Values.integerValue getPersonTypeId() {
      return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
      return getPersonTypeId();
    }

    public static final int PERSON_TYPE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean personTypeIdNull_;
    /**
     * <code>optional bool person_type_id_null = 1002;</code>
     */
    public boolean getPersonTypeIdNull() {
      return personTypeIdNull_;
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 3;
    private io.dstore.Values.stringValue uniqueId_;
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public boolean hasUniqueId() {
      return uniqueId_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.Values.stringValue getUniqueId() {
      return uniqueId_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
    }
    /**
     * <code>optional .dstore.values.stringValue unique_id = 3;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
      return getUniqueId();
    }

    public static final int UNIQUE_ID_NULL_FIELD_NUMBER = 1003;
    private boolean uniqueIdNull_;
    /**
     * <code>optional bool unique_id_null = 1003;</code>
     */
    public boolean getUniqueIdNull() {
      return uniqueIdNull_;
    }

    public static final int POSTING_ID_FIELD_NUMBER = 4;
    private io.dstore.Values.integerValue postingId_;
    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    public boolean hasPostingId() {
      return postingId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    public io.dstore.Values.integerValue getPostingId() {
      return postingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : postingId_;
    }
    /**
     * <code>optional .dstore.values.integerValue posting_id = 4;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getPostingIdOrBuilder() {
      return getPostingId();
    }

    public static final int POSTING_ID_NULL_FIELD_NUMBER = 1004;
    private boolean postingIdNull_;
    /**
     * <code>optional bool posting_id_null = 1004;</code>
     */
    public boolean getPostingIdNull() {
      return postingIdNull_;
    }

    public static final int ADDITIONAL_INFOS_FIELD_NUMBER = 5;
    private io.dstore.Values.booleanValue additionalInfos_;
    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    public boolean hasAdditionalInfos() {
      return additionalInfos_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    public io.dstore.Values.booleanValue getAdditionalInfos() {
      return additionalInfos_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : additionalInfos_;
    }
    /**
     * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getAdditionalInfosOrBuilder() {
      return getAdditionalInfos();
    }

    public static final int ADDITIONAL_INFOS_NULL_FIELD_NUMBER = 1005;
    private boolean additionalInfosNull_;
    /**
     * <code>optional bool additional_infos_null = 1005;</code>
     */
    public boolean getAdditionalInfosNull() {
      return additionalInfosNull_;
    }

    public static final int SEPARATOR_IN_IDENT_VALS_FIELD_NUMBER = 6;
    private io.dstore.Values.stringValue separatorInIdentVals_;
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public boolean hasSeparatorInIdentVals() {
      return separatorInIdentVals_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public io.dstore.Values.stringValue getSeparatorInIdentVals() {
      return separatorInIdentVals_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
    }
    /**
     * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
      return getSeparatorInIdentVals();
    }

    public static final int SEPARATOR_IN_IDENT_VALS_NULL_FIELD_NUMBER = 1006;
    private boolean separatorInIdentValsNull_;
    /**
     * <code>optional bool separator_in_ident_vals_null = 1006;</code>
     */
    public boolean getSeparatorInIdentValsNull() {
      return separatorInIdentValsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (personIdentificationValues_ != null) {
        output.writeMessage(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        output.writeMessage(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        output.writeMessage(3, getUniqueId());
      }
      if (postingId_ != null) {
        output.writeMessage(4, getPostingId());
      }
      if (additionalInfos_ != null) {
        output.writeMessage(5, getAdditionalInfos());
      }
      if (separatorInIdentVals_ != null) {
        output.writeMessage(6, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        output.writeBool(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        output.writeBool(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        output.writeBool(1003, uniqueIdNull_);
      }
      if (postingIdNull_ != false) {
        output.writeBool(1004, postingIdNull_);
      }
      if (additionalInfosNull_ != false) {
        output.writeBool(1005, additionalInfosNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        output.writeBool(1006, separatorInIdentValsNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (personIdentificationValues_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPersonIdentificationValues());
      }
      if (personTypeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPersonTypeId());
      }
      if (uniqueId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUniqueId());
      }
      if (postingId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPostingId());
      }
      if (additionalInfos_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAdditionalInfos());
      }
      if (separatorInIdentVals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSeparatorInIdentVals());
      }
      if (personIdentificationValuesNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, personIdentificationValuesNull_);
      }
      if (personTypeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, personTypeIdNull_);
      }
      if (uniqueIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, uniqueIdNull_);
      }
      if (postingIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, postingIdNull_);
      }
      if (additionalInfosNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, additionalInfosNull_);
      }
      if (separatorInIdentValsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, separatorInIdentValsNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPosting_Pu.Parameters)
        io.dstore.engine.procedures.FoGetPostingPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingPu.Parameters.class, io.dstore.engine.procedures.FoGetPostingPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.FoGetPostingPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }
        personIdentificationValuesNull_ = false;

        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }
        personTypeIdNull_ = false;

        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }
        uniqueIdNull_ = false;

        if (postingIdBuilder_ == null) {
          postingId_ = null;
        } else {
          postingId_ = null;
          postingIdBuilder_ = null;
        }
        postingIdNull_ = false;

        if (additionalInfosBuilder_ == null) {
          additionalInfos_ = null;
        } else {
          additionalInfos_ = null;
          additionalInfosBuilder_ = null;
        }
        additionalInfosNull_ = false;

        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }
        separatorInIdentValsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.FoGetPostingPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Parameters build() {
        io.dstore.engine.procedures.FoGetPostingPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Parameters buildPartial() {
        io.dstore.engine.procedures.FoGetPostingPu.Parameters result = new io.dstore.engine.procedures.FoGetPostingPu.Parameters(this);
        if (personIdentificationValuesBuilder_ == null) {
          result.personIdentificationValues_ = personIdentificationValues_;
        } else {
          result.personIdentificationValues_ = personIdentificationValuesBuilder_.build();
        }
        result.personIdentificationValuesNull_ = personIdentificationValuesNull_;
        if (personTypeIdBuilder_ == null) {
          result.personTypeId_ = personTypeId_;
        } else {
          result.personTypeId_ = personTypeIdBuilder_.build();
        }
        result.personTypeIdNull_ = personTypeIdNull_;
        if (uniqueIdBuilder_ == null) {
          result.uniqueId_ = uniqueId_;
        } else {
          result.uniqueId_ = uniqueIdBuilder_.build();
        }
        result.uniqueIdNull_ = uniqueIdNull_;
        if (postingIdBuilder_ == null) {
          result.postingId_ = postingId_;
        } else {
          result.postingId_ = postingIdBuilder_.build();
        }
        result.postingIdNull_ = postingIdNull_;
        if (additionalInfosBuilder_ == null) {
          result.additionalInfos_ = additionalInfos_;
        } else {
          result.additionalInfos_ = additionalInfosBuilder_.build();
        }
        result.additionalInfosNull_ = additionalInfosNull_;
        if (separatorInIdentValsBuilder_ == null) {
          result.separatorInIdentVals_ = separatorInIdentVals_;
        } else {
          result.separatorInIdentVals_ = separatorInIdentValsBuilder_.build();
        }
        result.separatorInIdentValsNull_ = separatorInIdentValsNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.FoGetPostingPu.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.FoGetPostingPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingPu.Parameters other) {
        if (other == io.dstore.engine.procedures.FoGetPostingPu.Parameters.getDefaultInstance()) return this;
        if (other.hasPersonIdentificationValues()) {
          mergePersonIdentificationValues(other.getPersonIdentificationValues());
        }
        if (other.getPersonIdentificationValuesNull() != false) {
          setPersonIdentificationValuesNull(other.getPersonIdentificationValuesNull());
        }
        if (other.hasPersonTypeId()) {
          mergePersonTypeId(other.getPersonTypeId());
        }
        if (other.getPersonTypeIdNull() != false) {
          setPersonTypeIdNull(other.getPersonTypeIdNull());
        }
        if (other.hasUniqueId()) {
          mergeUniqueId(other.getUniqueId());
        }
        if (other.getUniqueIdNull() != false) {
          setUniqueIdNull(other.getUniqueIdNull());
        }
        if (other.hasPostingId()) {
          mergePostingId(other.getPostingId());
        }
        if (other.getPostingIdNull() != false) {
          setPostingIdNull(other.getPostingIdNull());
        }
        if (other.hasAdditionalInfos()) {
          mergeAdditionalInfos(other.getAdditionalInfos());
        }
        if (other.getAdditionalInfosNull() != false) {
          setAdditionalInfosNull(other.getAdditionalInfosNull());
        }
        if (other.hasSeparatorInIdentVals()) {
          mergeSeparatorInIdentVals(other.getSeparatorInIdentVals());
        }
        if (other.getSeparatorInIdentValsNull() != false) {
          setSeparatorInIdentValsNull(other.getSeparatorInIdentValsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.FoGetPostingPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.FoGetPostingPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.stringValue personIdentificationValues_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> personIdentificationValuesBuilder_;
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public boolean hasPersonIdentificationValues() {
        return personIdentificationValuesBuilder_ != null || personIdentificationValues_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValue getPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          return personIdentificationValues_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        } else {
          return personIdentificationValuesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(io.dstore.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personIdentificationValues_ = value;
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder setPersonIdentificationValues(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = builderForValue.build();
          onChanged();
        } else {
          personIdentificationValuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder mergePersonIdentificationValues(io.dstore.Values.stringValue value) {
        if (personIdentificationValuesBuilder_ == null) {
          if (personIdentificationValues_ != null) {
            personIdentificationValues_ =
              io.dstore.Values.stringValue.newBuilder(personIdentificationValues_).mergeFrom(value).buildPartial();
          } else {
            personIdentificationValues_ = value;
          }
          onChanged();
        } else {
          personIdentificationValuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public Builder clearPersonIdentificationValues() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValues_ = null;
          onChanged();
        } else {
          personIdentificationValues_ = null;
          personIdentificationValuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValue.Builder getPersonIdentificationValuesBuilder() {
        
        onChanged();
        return getPersonIdentificationValuesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getPersonIdentificationValuesOrBuilder() {
        if (personIdentificationValuesBuilder_ != null) {
          return personIdentificationValuesBuilder_.getMessageOrBuilder();
        } else {
          return personIdentificationValues_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : personIdentificationValues_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue person_identification_values = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getPersonIdentificationValuesFieldBuilder() {
        if (personIdentificationValuesBuilder_ == null) {
          personIdentificationValuesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getPersonIdentificationValues(),
                  getParentForChildren(),
                  isClean());
          personIdentificationValues_ = null;
        }
        return personIdentificationValuesBuilder_;
      }

      private boolean personIdentificationValuesNull_ ;
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public boolean getPersonIdentificationValuesNull() {
        return personIdentificationValuesNull_;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder setPersonIdentificationValuesNull(boolean value) {
        
        personIdentificationValuesNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_identification_values_null = 1001;</code>
       */
      public Builder clearPersonIdentificationValuesNull() {
        
        personIdentificationValuesNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue personTypeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> personTypeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public boolean hasPersonTypeId() {
        return personTypeIdBuilder_ != null || personTypeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue getPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          return personTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        } else {
          return personTypeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          personTypeId_ = value;
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder setPersonTypeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = builderForValue.build();
          onChanged();
        } else {
          personTypeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder mergePersonTypeId(io.dstore.Values.integerValue value) {
        if (personTypeIdBuilder_ == null) {
          if (personTypeId_ != null) {
            personTypeId_ =
              io.dstore.Values.integerValue.newBuilder(personTypeId_).mergeFrom(value).buildPartial();
          } else {
            personTypeId_ = value;
          }
          onChanged();
        } else {
          personTypeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public Builder clearPersonTypeId() {
        if (personTypeIdBuilder_ == null) {
          personTypeId_ = null;
          onChanged();
        } else {
          personTypeId_ = null;
          personTypeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getPersonTypeIdBuilder() {
        
        onChanged();
        return getPersonTypeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPersonTypeIdOrBuilder() {
        if (personTypeIdBuilder_ != null) {
          return personTypeIdBuilder_.getMessageOrBuilder();
        } else {
          return personTypeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : personTypeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue person_type_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPersonTypeIdFieldBuilder() {
        if (personTypeIdBuilder_ == null) {
          personTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPersonTypeId(),
                  getParentForChildren(),
                  isClean());
          personTypeId_ = null;
        }
        return personTypeIdBuilder_;
      }

      private boolean personTypeIdNull_ ;
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public boolean getPersonTypeIdNull() {
        return personTypeIdNull_;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder setPersonTypeIdNull(boolean value) {
        
        personTypeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool person_type_id_null = 1002;</code>
       */
      public Builder clearPersonTypeIdNull() {
        
        personTypeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue uniqueId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> uniqueIdBuilder_;
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public boolean hasUniqueId() {
        return uniqueIdBuilder_ != null || uniqueId_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValue getUniqueId() {
        if (uniqueIdBuilder_ == null) {
          return uniqueId_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
        } else {
          return uniqueIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(io.dstore.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uniqueId_ = value;
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder setUniqueId(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = builderForValue.build();
          onChanged();
        } else {
          uniqueIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder mergeUniqueId(io.dstore.Values.stringValue value) {
        if (uniqueIdBuilder_ == null) {
          if (uniqueId_ != null) {
            uniqueId_ =
              io.dstore.Values.stringValue.newBuilder(uniqueId_).mergeFrom(value).buildPartial();
          } else {
            uniqueId_ = value;
          }
          onChanged();
        } else {
          uniqueIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public Builder clearUniqueId() {
        if (uniqueIdBuilder_ == null) {
          uniqueId_ = null;
          onChanged();
        } else {
          uniqueId_ = null;
          uniqueIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValue.Builder getUniqueIdBuilder() {
        
        onChanged();
        return getUniqueIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getUniqueIdOrBuilder() {
        if (uniqueIdBuilder_ != null) {
          return uniqueIdBuilder_.getMessageOrBuilder();
        } else {
          return uniqueId_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : uniqueId_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue unique_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getUniqueIdFieldBuilder() {
        if (uniqueIdBuilder_ == null) {
          uniqueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getUniqueId(),
                  getParentForChildren(),
                  isClean());
          uniqueId_ = null;
        }
        return uniqueIdBuilder_;
      }

      private boolean uniqueIdNull_ ;
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public boolean getUniqueIdNull() {
        return uniqueIdNull_;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder setUniqueIdNull(boolean value) {
        
        uniqueIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool unique_id_null = 1003;</code>
       */
      public Builder clearUniqueIdNull() {
        
        uniqueIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue postingId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> postingIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public boolean hasPostingId() {
        return postingIdBuilder_ != null || postingId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public io.dstore.Values.integerValue getPostingId() {
        if (postingIdBuilder_ == null) {
          return postingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : postingId_;
        } else {
          return postingIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public Builder setPostingId(io.dstore.Values.integerValue value) {
        if (postingIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          postingId_ = value;
          onChanged();
        } else {
          postingIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public Builder setPostingId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (postingIdBuilder_ == null) {
          postingId_ = builderForValue.build();
          onChanged();
        } else {
          postingIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public Builder mergePostingId(io.dstore.Values.integerValue value) {
        if (postingIdBuilder_ == null) {
          if (postingId_ != null) {
            postingId_ =
              io.dstore.Values.integerValue.newBuilder(postingId_).mergeFrom(value).buildPartial();
          } else {
            postingId_ = value;
          }
          onChanged();
        } else {
          postingIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public Builder clearPostingId() {
        if (postingIdBuilder_ == null) {
          postingId_ = null;
          onChanged();
        } else {
          postingId_ = null;
          postingIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public io.dstore.Values.integerValue.Builder getPostingIdBuilder() {
        
        onChanged();
        return getPostingIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPostingIdOrBuilder() {
        if (postingIdBuilder_ != null) {
          return postingIdBuilder_.getMessageOrBuilder();
        } else {
          return postingId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : postingId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue posting_id = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getPostingIdFieldBuilder() {
        if (postingIdBuilder_ == null) {
          postingIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getPostingId(),
                  getParentForChildren(),
                  isClean());
          postingId_ = null;
        }
        return postingIdBuilder_;
      }

      private boolean postingIdNull_ ;
      /**
       * <code>optional bool posting_id_null = 1004;</code>
       */
      public boolean getPostingIdNull() {
        return postingIdNull_;
      }
      /**
       * <code>optional bool posting_id_null = 1004;</code>
       */
      public Builder setPostingIdNull(boolean value) {
        
        postingIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool posting_id_null = 1004;</code>
       */
      public Builder clearPostingIdNull() {
        
        postingIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue additionalInfos_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> additionalInfosBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public boolean hasAdditionalInfos() {
        return additionalInfosBuilder_ != null || additionalInfos_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public io.dstore.Values.booleanValue getAdditionalInfos() {
        if (additionalInfosBuilder_ == null) {
          return additionalInfos_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : additionalInfos_;
        } else {
          return additionalInfosBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public Builder setAdditionalInfos(io.dstore.Values.booleanValue value) {
        if (additionalInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          additionalInfos_ = value;
          onChanged();
        } else {
          additionalInfosBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public Builder setAdditionalInfos(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (additionalInfosBuilder_ == null) {
          additionalInfos_ = builderForValue.build();
          onChanged();
        } else {
          additionalInfosBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public Builder mergeAdditionalInfos(io.dstore.Values.booleanValue value) {
        if (additionalInfosBuilder_ == null) {
          if (additionalInfos_ != null) {
            additionalInfos_ =
              io.dstore.Values.booleanValue.newBuilder(additionalInfos_).mergeFrom(value).buildPartial();
          } else {
            additionalInfos_ = value;
          }
          onChanged();
        } else {
          additionalInfosBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public Builder clearAdditionalInfos() {
        if (additionalInfosBuilder_ == null) {
          additionalInfos_ = null;
          onChanged();
        } else {
          additionalInfos_ = null;
          additionalInfosBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public io.dstore.Values.booleanValue.Builder getAdditionalInfosBuilder() {
        
        onChanged();
        return getAdditionalInfosFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getAdditionalInfosOrBuilder() {
        if (additionalInfosBuilder_ != null) {
          return additionalInfosBuilder_.getMessageOrBuilder();
        } else {
          return additionalInfos_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : additionalInfos_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue additional_infos = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getAdditionalInfosFieldBuilder() {
        if (additionalInfosBuilder_ == null) {
          additionalInfosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getAdditionalInfos(),
                  getParentForChildren(),
                  isClean());
          additionalInfos_ = null;
        }
        return additionalInfosBuilder_;
      }

      private boolean additionalInfosNull_ ;
      /**
       * <code>optional bool additional_infos_null = 1005;</code>
       */
      public boolean getAdditionalInfosNull() {
        return additionalInfosNull_;
      }
      /**
       * <code>optional bool additional_infos_null = 1005;</code>
       */
      public Builder setAdditionalInfosNull(boolean value) {
        
        additionalInfosNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool additional_infos_null = 1005;</code>
       */
      public Builder clearAdditionalInfosNull() {
        
        additionalInfosNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue separatorInIdentVals_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> separatorInIdentValsBuilder_;
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public boolean hasSeparatorInIdentVals() {
        return separatorInIdentValsBuilder_ != null || separatorInIdentVals_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValue getSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          return separatorInIdentVals_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        } else {
          return separatorInIdentValsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder setSeparatorInIdentVals(io.dstore.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          separatorInIdentVals_ = value;
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder setSeparatorInIdentVals(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = builderForValue.build();
          onChanged();
        } else {
          separatorInIdentValsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder mergeSeparatorInIdentVals(io.dstore.Values.stringValue value) {
        if (separatorInIdentValsBuilder_ == null) {
          if (separatorInIdentVals_ != null) {
            separatorInIdentVals_ =
              io.dstore.Values.stringValue.newBuilder(separatorInIdentVals_).mergeFrom(value).buildPartial();
          } else {
            separatorInIdentVals_ = value;
          }
          onChanged();
        } else {
          separatorInIdentValsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public Builder clearSeparatorInIdentVals() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentVals_ = null;
          onChanged();
        } else {
          separatorInIdentVals_ = null;
          separatorInIdentValsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValue.Builder getSeparatorInIdentValsBuilder() {
        
        onChanged();
        return getSeparatorInIdentValsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSeparatorInIdentValsOrBuilder() {
        if (separatorInIdentValsBuilder_ != null) {
          return separatorInIdentValsBuilder_.getMessageOrBuilder();
        } else {
          return separatorInIdentVals_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : separatorInIdentVals_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue separator_in_ident_vals = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getSeparatorInIdentValsFieldBuilder() {
        if (separatorInIdentValsBuilder_ == null) {
          separatorInIdentValsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getSeparatorInIdentVals(),
                  getParentForChildren(),
                  isClean());
          separatorInIdentVals_ = null;
        }
        return separatorInIdentValsBuilder_;
      }

      private boolean separatorInIdentValsNull_ ;
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public boolean getSeparatorInIdentValsNull() {
        return separatorInIdentValsNull_;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public Builder setSeparatorInIdentValsNull(boolean value) {
        
        separatorInIdentValsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool separator_in_ident_vals_null = 1006;</code>
       */
      public Builder clearSeparatorInIdentValsNull() {
        
        separatorInIdentValsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPosting_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPosting_Pu.Parameters)
    private static final io.dstore.engine.procedures.FoGetPostingPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingPu.Parameters();
    }

    public static io.dstore.engine.procedures.FoGetPostingPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.FoGetPostingPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPosting_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.FoGetPostingPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPosting_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.FoGetPostingPu.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.FoGetPostingPu.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.FoGetPostingPu.Response.class, io.dstore.engine.procedures.FoGetPostingPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.fo_GetPosting_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      boolean hasSmallBody();
      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      io.dstore.Values.stringValue getSmallBody();
      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getSmallBodyOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      boolean hasForumId();
      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      io.dstore.Values.integerValue getForumId();
      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      boolean hasValue3();
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValue getValue3();
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue3OrBuilder();

      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      boolean hasReplyToPostingId();
      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      io.dstore.Values.integerValue getReplyToPostingId();
      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getReplyToPostingIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      boolean hasValue1();
      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValue getValue1();
      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue1OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      boolean hasValue2();
      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValue getValue2();
      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue2OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      boolean hasSubject();
      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      io.dstore.Values.stringValue getSubject();
      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getSubjectOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      boolean hasEMailOfAuthor();
      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      io.dstore.Values.stringValue getEMailOfAuthor();
      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      boolean hasAuthorPersonId();
      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      io.dstore.Values.integerValue getAuthorPersonId();
      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      boolean hasMainPostingId();
      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      io.dstore.Values.integerValue getMainPostingId();
      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getMainPostingIdOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      boolean hasHasBinaries();
      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      io.dstore.Values.booleanValue getHasBinaries();
      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getHasBinariesOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      boolean hasVisible();
      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      io.dstore.Values.integerValue getVisible();
      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getVisibleOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      boolean hasAuthor();
      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      io.dstore.Values.stringValue getAuthor();
      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getAuthorOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      boolean hasHasSuccessors();
      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      io.dstore.Values.booleanValue getHasSuccessors();
      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      boolean hasPostDate();
      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      io.dstore.Values.stringValue getPostDate();
      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getPostDateOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      boolean hasBody();
      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      io.dstore.Values.stringValue getBody();
      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getBodyOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.fo_GetPosting_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (smallBody_ != null) {
                  subBuilder = smallBody_.toBuilder();
                }
                smallBody_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(smallBody_);
                  smallBody_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (forumId_ != null) {
                  subBuilder = forumId_.toBuilder();
                }
                forumId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(forumId_);
                  forumId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value3_ != null) {
                  subBuilder = value3_.toBuilder();
                }
                value3_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3_);
                  value3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (replyToPostingId_ != null) {
                  subBuilder = replyToPostingId_.toBuilder();
                }
                replyToPostingId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(replyToPostingId_);
                  replyToPostingId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value1_ != null) {
                  subBuilder = value1_.toBuilder();
                }
                value1_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1_);
                  value1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value2_ != null) {
                  subBuilder = value2_.toBuilder();
                }
                value2_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2_);
                  value2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (subject_ != null) {
                  subBuilder = subject_.toBuilder();
                }
                subject_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(subject_);
                  subject_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (eMailOfAuthor_ != null) {
                  subBuilder = eMailOfAuthor_.toBuilder();
                }
                eMailOfAuthor_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(eMailOfAuthor_);
                  eMailOfAuthor_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (authorPersonId_ != null) {
                  subBuilder = authorPersonId_.toBuilder();
                }
                authorPersonId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(authorPersonId_);
                  authorPersonId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (mainPostingId_ != null) {
                  subBuilder = mainPostingId_.toBuilder();
                }
                mainPostingId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(mainPostingId_);
                  mainPostingId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (hasBinaries_ != null) {
                  subBuilder = hasBinaries_.toBuilder();
                }
                hasBinaries_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasBinaries_);
                  hasBinaries_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (visible_ != null) {
                  subBuilder = visible_.toBuilder();
                }
                visible_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(visible_);
                  visible_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (author_ != null) {
                  subBuilder = author_.toBuilder();
                }
                author_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(author_);
                  author_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (hasSuccessors_ != null) {
                  subBuilder = hasSuccessors_.toBuilder();
                }
                hasSuccessors_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hasSuccessors_);
                  hasSuccessors_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80122: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (postDate_ != null) {
                  subBuilder = postDate_.toBuilder();
                }
                postDate_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(postDate_);
                  postDate_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80130: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (body_ != null) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingPu.Response.Row.class, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int SMALL_BODY_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue smallBody_;
      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public boolean hasSmallBody() {
        return smallBody_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public io.dstore.Values.stringValue getSmallBody() {
        return smallBody_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : smallBody_;
      }
      /**
       * <code>optional .dstore.values.stringValue small_body = 10001;</code>
       *
       * <pre>
       * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getSmallBodyOrBuilder() {
        return getSmallBody();
      }

      public static final int FORUM_ID_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue forumId_;
      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      public boolean hasForumId() {
        return forumId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      public io.dstore.Values.integerValue getForumId() {
        return forumId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
      }
      /**
       * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
       *
       * <pre>
       * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder() {
        return getForumId();
      }

      public static final int VALUE3_FIELD_NUMBER = 10003;
      private io.dstore.Values.stringValue value3_;
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public boolean hasValue3() {
        return value3_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValue getValue3() {
        return value3_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value3_;
      }
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue3OrBuilder() {
        return getValue3();
      }

      public static final int REPLY_TO_POSTING_ID_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue replyToPostingId_;
      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      public boolean hasReplyToPostingId() {
        return replyToPostingId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      public io.dstore.Values.integerValue getReplyToPostingId() {
        return replyToPostingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : replyToPostingId_;
      }
      /**
       * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
       *
       * <pre>
       * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getReplyToPostingIdOrBuilder() {
        return getReplyToPostingId();
      }

      public static final int VALUE1_FIELD_NUMBER = 10005;
      private io.dstore.Values.stringValue value1_;
      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public boolean hasValue1() {
        return value1_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValue getValue1() {
        return value1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value1_;
      }
      /**
       * <code>optional .dstore.values.stringValue value1 = 10005;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue1OrBuilder() {
        return getValue1();
      }

      public static final int VALUE2_FIELD_NUMBER = 10006;
      private io.dstore.Values.stringValue value2_;
      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public boolean hasValue2() {
        return value2_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValue getValue2() {
        return value2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value2_;
      }
      /**
       * <code>optional .dstore.values.stringValue value2 = 10006;</code>
       *
       * <pre>
       * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue2OrBuilder() {
        return getValue2();
      }

      public static final int SUBJECT_FIELD_NUMBER = 10007;
      private io.dstore.Values.stringValue subject_;
      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      public boolean hasSubject() {
        return subject_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      public io.dstore.Values.stringValue getSubject() {
        return subject_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : subject_;
      }
      /**
       * <code>optional .dstore.values.stringValue subject = 10007;</code>
       *
       * <pre>
       * Der Titel des Beitrags "&#64;PostingID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getSubjectOrBuilder() {
        return getSubject();
      }

      public static final int E_MAIL_OF_AUTHOR_FIELD_NUMBER = 10008;
      private io.dstore.Values.stringValue eMailOfAuthor_;
      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public boolean hasEMailOfAuthor() {
        return eMailOfAuthor_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public io.dstore.Values.stringValue getEMailOfAuthor() {
        return eMailOfAuthor_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
      }
      /**
       * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
       *
       * <pre>
       * eMail des Verfassers "Author"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder() {
        return getEMailOfAuthor();
      }

      public static final int AUTHOR_PERSON_ID_FIELD_NUMBER = 10009;
      private io.dstore.Values.integerValue authorPersonId_;
      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public boolean hasAuthorPersonId() {
        return authorPersonId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public io.dstore.Values.integerValue getAuthorPersonId() {
        return authorPersonId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : authorPersonId_;
      }
      /**
       * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
       *
       * <pre>
       * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder() {
        return getAuthorPersonId();
      }

      public static final int MAIN_POSTING_ID_FIELD_NUMBER = 10010;
      private io.dstore.Values.integerValue mainPostingId_;
      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      public boolean hasMainPostingId() {
        return mainPostingId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      public io.dstore.Values.integerValue getMainPostingId() {
        return mainPostingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : mainPostingId_;
      }
      /**
       * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
       *
       * <pre>
       * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getMainPostingIdOrBuilder() {
        return getMainPostingId();
      }

      public static final int HAS_BINARIES_FIELD_NUMBER = 10011;
      private io.dstore.Values.booleanValue hasBinaries_;
      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      public boolean hasHasBinaries() {
        return hasBinaries_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      public io.dstore.Values.booleanValue getHasBinaries() {
        return hasBinaries_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasBinaries_;
      }
      /**
       * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
       *
       * <pre>
       * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getHasBinariesOrBuilder() {
        return getHasBinaries();
      }

      public static final int VISIBLE_FIELD_NUMBER = 10012;
      private io.dstore.Values.integerValue visible_;
      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public boolean hasVisible() {
        return visible_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public io.dstore.Values.integerValue getVisible() {
        return visible_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : visible_;
      }
      /**
       * <code>optional .dstore.values.integerValue visible = 10012;</code>
       *
       * <pre>
       * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getVisibleOrBuilder() {
        return getVisible();
      }

      public static final int AUTHOR_FIELD_NUMBER = 10013;
      private io.dstore.Values.stringValue author_;
      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      public boolean hasAuthor() {
        return author_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      public io.dstore.Values.stringValue getAuthor() {
        return author_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : author_;
      }
      /**
       * <code>optional .dstore.values.stringValue author = 10013;</code>
       *
       * <pre>
       * Name des Verfassers des Beitrags "&#64;PostingID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getAuthorOrBuilder() {
        return getAuthor();
      }

      public static final int HAS_SUCCESSORS_FIELD_NUMBER = 10014;
      private io.dstore.Values.booleanValue hasSuccessors_;
      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      public boolean hasHasSuccessors() {
        return hasSuccessors_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      public io.dstore.Values.booleanValue getHasSuccessors() {
        return hasSuccessors_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
      }
      /**
       * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
       *
       * <pre>
       * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
        return getHasSuccessors();
      }

      public static final int POST_DATE_FIELD_NUMBER = 10015;
      private io.dstore.Values.stringValue postDate_;
      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      public boolean hasPostDate() {
        return postDate_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      public io.dstore.Values.stringValue getPostDate() {
        return postDate_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : postDate_;
      }
      /**
       * <code>optional .dstore.values.stringValue post_date = 10015;</code>
       *
       * <pre>
       * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getPostDateOrBuilder() {
        return getPostDate();
      }

      public static final int BODY_FIELD_NUMBER = 10016;
      private io.dstore.Values.stringValue body_;
      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public boolean hasBody() {
        return body_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public io.dstore.Values.stringValue getBody() {
        return body_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : body_;
      }
      /**
       * <code>optional .dstore.values.stringValue body = 10016;</code>
       *
       * <pre>
       * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getBodyOrBuilder() {
        return getBody();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (smallBody_ != null) {
          output.writeMessage(10001, getSmallBody());
        }
        if (forumId_ != null) {
          output.writeMessage(10002, getForumId());
        }
        if (value3_ != null) {
          output.writeMessage(10003, getValue3());
        }
        if (replyToPostingId_ != null) {
          output.writeMessage(10004, getReplyToPostingId());
        }
        if (value1_ != null) {
          output.writeMessage(10005, getValue1());
        }
        if (value2_ != null) {
          output.writeMessage(10006, getValue2());
        }
        if (subject_ != null) {
          output.writeMessage(10007, getSubject());
        }
        if (eMailOfAuthor_ != null) {
          output.writeMessage(10008, getEMailOfAuthor());
        }
        if (authorPersonId_ != null) {
          output.writeMessage(10009, getAuthorPersonId());
        }
        if (mainPostingId_ != null) {
          output.writeMessage(10010, getMainPostingId());
        }
        if (hasBinaries_ != null) {
          output.writeMessage(10011, getHasBinaries());
        }
        if (visible_ != null) {
          output.writeMessage(10012, getVisible());
        }
        if (author_ != null) {
          output.writeMessage(10013, getAuthor());
        }
        if (hasSuccessors_ != null) {
          output.writeMessage(10014, getHasSuccessors());
        }
        if (postDate_ != null) {
          output.writeMessage(10015, getPostDate());
        }
        if (body_ != null) {
          output.writeMessage(10016, getBody());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (smallBody_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getSmallBody());
        }
        if (forumId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getForumId());
        }
        if (value3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getValue3());
        }
        if (replyToPostingId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getReplyToPostingId());
        }
        if (value1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValue1());
        }
        if (value2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getValue2());
        }
        if (subject_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getSubject());
        }
        if (eMailOfAuthor_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getEMailOfAuthor());
        }
        if (authorPersonId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getAuthorPersonId());
        }
        if (mainPostingId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getMainPostingId());
        }
        if (hasBinaries_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getHasBinaries());
        }
        if (visible_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getVisible());
        }
        if (author_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getAuthor());
        }
        if (hasSuccessors_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getHasSuccessors());
        }
        if (postDate_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10015, getPostDate());
        }
        if (body_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10016, getBody());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPosting_Pu.Response.Row)
          io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.FoGetPostingPu.Response.Row.class, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.FoGetPostingPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (smallBodyBuilder_ == null) {
            smallBody_ = null;
          } else {
            smallBody_ = null;
            smallBodyBuilder_ = null;
          }
          if (forumIdBuilder_ == null) {
            forumId_ = null;
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }
          if (value3Builder_ == null) {
            value3_ = null;
          } else {
            value3_ = null;
            value3Builder_ = null;
          }
          if (replyToPostingIdBuilder_ == null) {
            replyToPostingId_ = null;
          } else {
            replyToPostingId_ = null;
            replyToPostingIdBuilder_ = null;
          }
          if (value1Builder_ == null) {
            value1_ = null;
          } else {
            value1_ = null;
            value1Builder_ = null;
          }
          if (value2Builder_ == null) {
            value2_ = null;
          } else {
            value2_ = null;
            value2Builder_ = null;
          }
          if (subjectBuilder_ == null) {
            subject_ = null;
          } else {
            subject_ = null;
            subjectBuilder_ = null;
          }
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = null;
          } else {
            eMailOfAuthor_ = null;
            eMailOfAuthorBuilder_ = null;
          }
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = null;
          } else {
            authorPersonId_ = null;
            authorPersonIdBuilder_ = null;
          }
          if (mainPostingIdBuilder_ == null) {
            mainPostingId_ = null;
          } else {
            mainPostingId_ = null;
            mainPostingIdBuilder_ = null;
          }
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = null;
          } else {
            hasBinaries_ = null;
            hasBinariesBuilder_ = null;
          }
          if (visibleBuilder_ == null) {
            visible_ = null;
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }
          if (authorBuilder_ == null) {
            author_ = null;
          } else {
            author_ = null;
            authorBuilder_ = null;
          }
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }
          if (postDateBuilder_ == null) {
            postDate_ = null;
          } else {
            postDate_ = null;
            postDateBuilder_ = null;
          }
          if (bodyBuilder_ == null) {
            body_ = null;
          } else {
            body_ = null;
            bodyBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.FoGetPostingPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.FoGetPostingPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.FoGetPostingPu.Response.Row build() {
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.FoGetPostingPu.Response.Row buildPartial() {
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row result = new io.dstore.engine.procedures.FoGetPostingPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (smallBodyBuilder_ == null) {
            result.smallBody_ = smallBody_;
          } else {
            result.smallBody_ = smallBodyBuilder_.build();
          }
          if (forumIdBuilder_ == null) {
            result.forumId_ = forumId_;
          } else {
            result.forumId_ = forumIdBuilder_.build();
          }
          if (value3Builder_ == null) {
            result.value3_ = value3_;
          } else {
            result.value3_ = value3Builder_.build();
          }
          if (replyToPostingIdBuilder_ == null) {
            result.replyToPostingId_ = replyToPostingId_;
          } else {
            result.replyToPostingId_ = replyToPostingIdBuilder_.build();
          }
          if (value1Builder_ == null) {
            result.value1_ = value1_;
          } else {
            result.value1_ = value1Builder_.build();
          }
          if (value2Builder_ == null) {
            result.value2_ = value2_;
          } else {
            result.value2_ = value2Builder_.build();
          }
          if (subjectBuilder_ == null) {
            result.subject_ = subject_;
          } else {
            result.subject_ = subjectBuilder_.build();
          }
          if (eMailOfAuthorBuilder_ == null) {
            result.eMailOfAuthor_ = eMailOfAuthor_;
          } else {
            result.eMailOfAuthor_ = eMailOfAuthorBuilder_.build();
          }
          if (authorPersonIdBuilder_ == null) {
            result.authorPersonId_ = authorPersonId_;
          } else {
            result.authorPersonId_ = authorPersonIdBuilder_.build();
          }
          if (mainPostingIdBuilder_ == null) {
            result.mainPostingId_ = mainPostingId_;
          } else {
            result.mainPostingId_ = mainPostingIdBuilder_.build();
          }
          if (hasBinariesBuilder_ == null) {
            result.hasBinaries_ = hasBinaries_;
          } else {
            result.hasBinaries_ = hasBinariesBuilder_.build();
          }
          if (visibleBuilder_ == null) {
            result.visible_ = visible_;
          } else {
            result.visible_ = visibleBuilder_.build();
          }
          if (authorBuilder_ == null) {
            result.author_ = author_;
          } else {
            result.author_ = authorBuilder_.build();
          }
          if (hasSuccessorsBuilder_ == null) {
            result.hasSuccessors_ = hasSuccessors_;
          } else {
            result.hasSuccessors_ = hasSuccessorsBuilder_.build();
          }
          if (postDateBuilder_ == null) {
            result.postDate_ = postDate_;
          } else {
            result.postDate_ = postDateBuilder_.build();
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.FoGetPostingPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.FoGetPostingPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingPu.Response.Row other) {
          if (other == io.dstore.engine.procedures.FoGetPostingPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasSmallBody()) {
            mergeSmallBody(other.getSmallBody());
          }
          if (other.hasForumId()) {
            mergeForumId(other.getForumId());
          }
          if (other.hasValue3()) {
            mergeValue3(other.getValue3());
          }
          if (other.hasReplyToPostingId()) {
            mergeReplyToPostingId(other.getReplyToPostingId());
          }
          if (other.hasValue1()) {
            mergeValue1(other.getValue1());
          }
          if (other.hasValue2()) {
            mergeValue2(other.getValue2());
          }
          if (other.hasSubject()) {
            mergeSubject(other.getSubject());
          }
          if (other.hasEMailOfAuthor()) {
            mergeEMailOfAuthor(other.getEMailOfAuthor());
          }
          if (other.hasAuthorPersonId()) {
            mergeAuthorPersonId(other.getAuthorPersonId());
          }
          if (other.hasMainPostingId()) {
            mergeMainPostingId(other.getMainPostingId());
          }
          if (other.hasHasBinaries()) {
            mergeHasBinaries(other.getHasBinaries());
          }
          if (other.hasVisible()) {
            mergeVisible(other.getVisible());
          }
          if (other.hasAuthor()) {
            mergeAuthor(other.getAuthor());
          }
          if (other.hasHasSuccessors()) {
            mergeHasSuccessors(other.getHasSuccessors());
          }
          if (other.hasPostDate()) {
            mergePostDate(other.getPostDate());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.FoGetPostingPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue smallBody_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> smallBodyBuilder_;
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public boolean hasSmallBody() {
          return smallBodyBuilder_ != null || smallBody_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.Values.stringValue getSmallBody() {
          if (smallBodyBuilder_ == null) {
            return smallBody_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : smallBody_;
          } else {
            return smallBodyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder setSmallBody(io.dstore.Values.stringValue value) {
          if (smallBodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            smallBody_ = value;
            onChanged();
          } else {
            smallBodyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder setSmallBody(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (smallBodyBuilder_ == null) {
            smallBody_ = builderForValue.build();
            onChanged();
          } else {
            smallBodyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder mergeSmallBody(io.dstore.Values.stringValue value) {
          if (smallBodyBuilder_ == null) {
            if (smallBody_ != null) {
              smallBody_ =
                io.dstore.Values.stringValue.newBuilder(smallBody_).mergeFrom(value).buildPartial();
            } else {
              smallBody_ = value;
            }
            onChanged();
          } else {
            smallBodyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public Builder clearSmallBody() {
          if (smallBodyBuilder_ == null) {
            smallBody_ = null;
            onChanged();
          } else {
            smallBody_ = null;
            smallBodyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getSmallBodyBuilder() {
          
          onChanged();
          return getSmallBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getSmallBodyOrBuilder() {
          if (smallBodyBuilder_ != null) {
            return smallBodyBuilder_.getMessageOrBuilder();
          } else {
            return smallBody_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : smallBody_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue small_body = 10001;</code>
         *
         * <pre>
         * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSmallBodyFieldBuilder() {
          if (smallBodyBuilder_ == null) {
            smallBodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSmallBody(),
                    getParentForChildren(),
                    isClean());
            smallBody_ = null;
          }
          return smallBodyBuilder_;
        }

        private io.dstore.Values.integerValue forumId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> forumIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public boolean hasForumId() {
          return forumIdBuilder_ != null || forumId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public io.dstore.Values.integerValue getForumId() {
          if (forumIdBuilder_ == null) {
            return forumId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
          } else {
            return forumIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public Builder setForumId(io.dstore.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            forumId_ = value;
            onChanged();
          } else {
            forumIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public Builder setForumId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (forumIdBuilder_ == null) {
            forumId_ = builderForValue.build();
            onChanged();
          } else {
            forumIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public Builder mergeForumId(io.dstore.Values.integerValue value) {
          if (forumIdBuilder_ == null) {
            if (forumId_ != null) {
              forumId_ =
                io.dstore.Values.integerValue.newBuilder(forumId_).mergeFrom(value).buildPartial();
            } else {
              forumId_ = value;
            }
            onChanged();
          } else {
            forumIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public Builder clearForumId() {
          if (forumIdBuilder_ == null) {
            forumId_ = null;
            onChanged();
          } else {
            forumId_ = null;
            forumIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getForumIdBuilder() {
          
          onChanged();
          return getForumIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getForumIdOrBuilder() {
          if (forumIdBuilder_ != null) {
            return forumIdBuilder_.getMessageOrBuilder();
          } else {
            return forumId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : forumId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue forum_id = 10002;</code>
         *
         * <pre>
         * ID des Forums zu dem der Beitrag "&#64;PostingID" gehört
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getForumIdFieldBuilder() {
          if (forumIdBuilder_ == null) {
            forumIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getForumId(),
                    getParentForChildren(),
                    isClean());
            forumId_ = null;
          }
          return forumIdBuilder_;
        }

        private io.dstore.Values.stringValue value3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value3Builder_;
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public boolean hasValue3() {
          return value3Builder_ != null || value3_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue getValue3() {
          if (value3Builder_ == null) {
            return value3_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value3_;
          } else {
            return value3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue3(io.dstore.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3_ = value;
            onChanged();
          } else {
            value3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue3(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value3Builder_ == null) {
            value3_ = builderForValue.build();
            onChanged();
          } else {
            value3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder mergeValue3(io.dstore.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value3_ != null) {
              value3_ =
                io.dstore.Values.stringValue.newBuilder(value3_).mergeFrom(value).buildPartial();
            } else {
              value3_ = value;
            }
            onChanged();
          } else {
            value3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder clearValue3() {
          if (value3Builder_ == null) {
            value3_ = null;
            onChanged();
          } else {
            value3_ = null;
            value3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue3Builder() {
          
          onChanged();
          return getValue3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue3OrBuilder() {
          if (value3Builder_ != null) {
            return value3Builder_.getMessageOrBuilder();
          } else {
            return value3_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value3_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur dritten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue3FieldBuilder() {
          if (value3Builder_ == null) {
            value3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue3(),
                    getParentForChildren(),
                    isClean());
            value3_ = null;
          }
          return value3Builder_;
        }

        private io.dstore.Values.integerValue replyToPostingId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> replyToPostingIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public boolean hasReplyToPostingId() {
          return replyToPostingIdBuilder_ != null || replyToPostingId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public io.dstore.Values.integerValue getReplyToPostingId() {
          if (replyToPostingIdBuilder_ == null) {
            return replyToPostingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : replyToPostingId_;
          } else {
            return replyToPostingIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public Builder setReplyToPostingId(io.dstore.Values.integerValue value) {
          if (replyToPostingIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            replyToPostingId_ = value;
            onChanged();
          } else {
            replyToPostingIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public Builder setReplyToPostingId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (replyToPostingIdBuilder_ == null) {
            replyToPostingId_ = builderForValue.build();
            onChanged();
          } else {
            replyToPostingIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public Builder mergeReplyToPostingId(io.dstore.Values.integerValue value) {
          if (replyToPostingIdBuilder_ == null) {
            if (replyToPostingId_ != null) {
              replyToPostingId_ =
                io.dstore.Values.integerValue.newBuilder(replyToPostingId_).mergeFrom(value).buildPartial();
            } else {
              replyToPostingId_ = value;
            }
            onChanged();
          } else {
            replyToPostingIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public Builder clearReplyToPostingId() {
          if (replyToPostingIdBuilder_ == null) {
            replyToPostingId_ = null;
            onChanged();
          } else {
            replyToPostingId_ = null;
            replyToPostingIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getReplyToPostingIdBuilder() {
          
          onChanged();
          return getReplyToPostingIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getReplyToPostingIdOrBuilder() {
          if (replyToPostingIdBuilder_ != null) {
            return replyToPostingIdBuilder_.getMessageOrBuilder();
          } else {
            return replyToPostingId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : replyToPostingId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue reply_to_posting_id = 10004;</code>
         *
         * <pre>
         * ID des Postings, auf das "&#64;PostingID" eine Antwort darstellt. Falls gleich "&#64;PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getReplyToPostingIdFieldBuilder() {
          if (replyToPostingIdBuilder_ == null) {
            replyToPostingIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getReplyToPostingId(),
                    getParentForChildren(),
                    isClean());
            replyToPostingId_ = null;
          }
          return replyToPostingIdBuilder_;
        }

        private io.dstore.Values.stringValue value1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value1Builder_;
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public boolean hasValue1() {
          return value1Builder_ != null || value1_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue getValue1() {
          if (value1Builder_ == null) {
            return value1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value1_;
          } else {
            return value1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue1(io.dstore.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1_ = value;
            onChanged();
          } else {
            value1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue1(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value1Builder_ == null) {
            value1_ = builderForValue.build();
            onChanged();
          } else {
            value1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder mergeValue1(io.dstore.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value1_ != null) {
              value1_ =
                io.dstore.Values.stringValue.newBuilder(value1_).mergeFrom(value).buildPartial();
            } else {
              value1_ = value;
            }
            onChanged();
          } else {
            value1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder clearValue1() {
          if (value1Builder_ == null) {
            value1_ = null;
            onChanged();
          } else {
            value1_ = null;
            value1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue1Builder() {
          
          onChanged();
          return getValue1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue1OrBuilder() {
          if (value1Builder_ != null) {
            return value1Builder_.getMessageOrBuilder();
          } else {
            return value1_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value1_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10005;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur ersten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue1FieldBuilder() {
          if (value1Builder_ == null) {
            value1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue1(),
                    getParentForChildren(),
                    isClean());
            value1_ = null;
          }
          return value1Builder_;
        }

        private io.dstore.Values.stringValue value2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value2Builder_;
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public boolean hasValue2() {
          return value2Builder_ != null || value2_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue getValue2() {
          if (value2Builder_ == null) {
            return value2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value2_;
          } else {
            return value2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue2(io.dstore.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2_ = value;
            onChanged();
          } else {
            value2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder setValue2(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value2Builder_ == null) {
            value2_ = builderForValue.build();
            onChanged();
          } else {
            value2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder mergeValue2(io.dstore.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value2_ != null) {
              value2_ =
                io.dstore.Values.stringValue.newBuilder(value2_).mergeFrom(value).buildPartial();
            } else {
              value2_ = value;
            }
            onChanged();
          } else {
            value2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public Builder clearValue2() {
          if (value2Builder_ == null) {
            value2_ = null;
            onChanged();
          } else {
            value2_ = null;
            value2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue2Builder() {
          
          onChanged();
          return getValue2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue2OrBuilder() {
          if (value2Builder_ != null) {
            return value2Builder_.getMessageOrBuilder();
          } else {
            return value2_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value2_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10006;</code>
         *
         * <pre>
         * Falls "&#64;AdditionalInfos = 1" ist, steht hier die Eigenschaft von "AuthorPersonID" zur zweiten Merkmal-ID, die in "ForumSettings" zum Schlüssel "AllowedCharacteristicsForAdditionalInformation_&lt;PersonTypeID von AuthorPersonID&gt;" hinterlegt ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue2FieldBuilder() {
          if (value2Builder_ == null) {
            value2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue2(),
                    getParentForChildren(),
                    isClean());
            value2_ = null;
          }
          return value2Builder_;
        }

        private io.dstore.Values.stringValue subject_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> subjectBuilder_;
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public boolean hasSubject() {
          return subjectBuilder_ != null || subject_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValue getSubject() {
          if (subjectBuilder_ == null) {
            return subject_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : subject_;
          } else {
            return subjectBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder setSubject(io.dstore.Values.stringValue value) {
          if (subjectBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            subject_ = value;
            onChanged();
          } else {
            subjectBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder setSubject(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (subjectBuilder_ == null) {
            subject_ = builderForValue.build();
            onChanged();
          } else {
            subjectBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder mergeSubject(io.dstore.Values.stringValue value) {
          if (subjectBuilder_ == null) {
            if (subject_ != null) {
              subject_ =
                io.dstore.Values.stringValue.newBuilder(subject_).mergeFrom(value).buildPartial();
            } else {
              subject_ = value;
            }
            onChanged();
          } else {
            subjectBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder clearSubject() {
          if (subjectBuilder_ == null) {
            subject_ = null;
            onChanged();
          } else {
            subject_ = null;
            subjectBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getSubjectBuilder() {
          
          onChanged();
          return getSubjectFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getSubjectOrBuilder() {
          if (subjectBuilder_ != null) {
            return subjectBuilder_.getMessageOrBuilder();
          } else {
            return subject_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : subject_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue subject = 10007;</code>
         *
         * <pre>
         * Der Titel des Beitrags "&#64;PostingID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSubjectFieldBuilder() {
          if (subjectBuilder_ == null) {
            subjectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSubject(),
                    getParentForChildren(),
                    isClean());
            subject_ = null;
          }
          return subjectBuilder_;
        }

        private io.dstore.Values.stringValue eMailOfAuthor_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> eMailOfAuthorBuilder_;
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public boolean hasEMailOfAuthor() {
          return eMailOfAuthorBuilder_ != null || eMailOfAuthor_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.Values.stringValue getEMailOfAuthor() {
          if (eMailOfAuthorBuilder_ == null) {
            return eMailOfAuthor_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
          } else {
            return eMailOfAuthorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder setEMailOfAuthor(io.dstore.Values.stringValue value) {
          if (eMailOfAuthorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eMailOfAuthor_ = value;
            onChanged();
          } else {
            eMailOfAuthorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder setEMailOfAuthor(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = builderForValue.build();
            onChanged();
          } else {
            eMailOfAuthorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder mergeEMailOfAuthor(io.dstore.Values.stringValue value) {
          if (eMailOfAuthorBuilder_ == null) {
            if (eMailOfAuthor_ != null) {
              eMailOfAuthor_ =
                io.dstore.Values.stringValue.newBuilder(eMailOfAuthor_).mergeFrom(value).buildPartial();
            } else {
              eMailOfAuthor_ = value;
            }
            onChanged();
          } else {
            eMailOfAuthorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public Builder clearEMailOfAuthor() {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthor_ = null;
            onChanged();
          } else {
            eMailOfAuthor_ = null;
            eMailOfAuthorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getEMailOfAuthorBuilder() {
          
          onChanged();
          return getEMailOfAuthorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getEMailOfAuthorOrBuilder() {
          if (eMailOfAuthorBuilder_ != null) {
            return eMailOfAuthorBuilder_.getMessageOrBuilder();
          } else {
            return eMailOfAuthor_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : eMailOfAuthor_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue e_mail_of_author = 10008;</code>
         *
         * <pre>
         * eMail des Verfassers "Author"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getEMailOfAuthorFieldBuilder() {
          if (eMailOfAuthorBuilder_ == null) {
            eMailOfAuthorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getEMailOfAuthor(),
                    getParentForChildren(),
                    isClean());
            eMailOfAuthor_ = null;
          }
          return eMailOfAuthorBuilder_;
        }

        private io.dstore.Values.integerValue authorPersonId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> authorPersonIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public boolean hasAuthorPersonId() {
          return authorPersonIdBuilder_ != null || authorPersonId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.Values.integerValue getAuthorPersonId() {
          if (authorPersonIdBuilder_ == null) {
            return authorPersonId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : authorPersonId_;
          } else {
            return authorPersonIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder setAuthorPersonId(io.dstore.Values.integerValue value) {
          if (authorPersonIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            authorPersonId_ = value;
            onChanged();
          } else {
            authorPersonIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder setAuthorPersonId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = builderForValue.build();
            onChanged();
          } else {
            authorPersonIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder mergeAuthorPersonId(io.dstore.Values.integerValue value) {
          if (authorPersonIdBuilder_ == null) {
            if (authorPersonId_ != null) {
              authorPersonId_ =
                io.dstore.Values.integerValue.newBuilder(authorPersonId_).mergeFrom(value).buildPartial();
            } else {
              authorPersonId_ = value;
            }
            onChanged();
          } else {
            authorPersonIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public Builder clearAuthorPersonId() {
          if (authorPersonIdBuilder_ == null) {
            authorPersonId_ = null;
            onChanged();
          } else {
            authorPersonId_ = null;
            authorPersonIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getAuthorPersonIdBuilder() {
          
          onChanged();
          return getAuthorPersonIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getAuthorPersonIdOrBuilder() {
          if (authorPersonIdBuilder_ != null) {
            return authorPersonIdBuilder_.getMessageOrBuilder();
          } else {
            return authorPersonId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : authorPersonId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue author_person_id = 10009;</code>
         *
         * <pre>
         * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getAuthorPersonIdFieldBuilder() {
          if (authorPersonIdBuilder_ == null) {
            authorPersonIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getAuthorPersonId(),
                    getParentForChildren(),
                    isClean());
            authorPersonId_ = null;
          }
          return authorPersonIdBuilder_;
        }

        private io.dstore.Values.integerValue mainPostingId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> mainPostingIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public boolean hasMainPostingId() {
          return mainPostingIdBuilder_ != null || mainPostingId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public io.dstore.Values.integerValue getMainPostingId() {
          if (mainPostingIdBuilder_ == null) {
            return mainPostingId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : mainPostingId_;
          } else {
            return mainPostingIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public Builder setMainPostingId(io.dstore.Values.integerValue value) {
          if (mainPostingIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mainPostingId_ = value;
            onChanged();
          } else {
            mainPostingIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public Builder setMainPostingId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (mainPostingIdBuilder_ == null) {
            mainPostingId_ = builderForValue.build();
            onChanged();
          } else {
            mainPostingIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public Builder mergeMainPostingId(io.dstore.Values.integerValue value) {
          if (mainPostingIdBuilder_ == null) {
            if (mainPostingId_ != null) {
              mainPostingId_ =
                io.dstore.Values.integerValue.newBuilder(mainPostingId_).mergeFrom(value).buildPartial();
            } else {
              mainPostingId_ = value;
            }
            onChanged();
          } else {
            mainPostingIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public Builder clearMainPostingId() {
          if (mainPostingIdBuilder_ == null) {
            mainPostingId_ = null;
            onChanged();
          } else {
            mainPostingId_ = null;
            mainPostingIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getMainPostingIdBuilder() {
          
          onChanged();
          return getMainPostingIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getMainPostingIdOrBuilder() {
          if (mainPostingIdBuilder_ != null) {
            return mainPostingIdBuilder_.getMessageOrBuilder();
          } else {
            return mainPostingId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : mainPostingId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue main_posting_id = 10010;</code>
         *
         * <pre>
         * ID des Haupt-Beitrages zu "&#64;PostingID" (also sozusagen das Wurzel-Element des gesamten "Threads" zu dem "&#64;PostingID" gehört)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getMainPostingIdFieldBuilder() {
          if (mainPostingIdBuilder_ == null) {
            mainPostingIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getMainPostingId(),
                    getParentForChildren(),
                    isClean());
            mainPostingId_ = null;
          }
          return mainPostingIdBuilder_;
        }

        private io.dstore.Values.booleanValue hasBinaries_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> hasBinariesBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public boolean hasHasBinaries() {
          return hasBinariesBuilder_ != null || hasBinaries_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.Values.booleanValue getHasBinaries() {
          if (hasBinariesBuilder_ == null) {
            return hasBinaries_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasBinaries_;
          } else {
            return hasBinariesBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public Builder setHasBinaries(io.dstore.Values.booleanValue value) {
          if (hasBinariesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasBinaries_ = value;
            onChanged();
          } else {
            hasBinariesBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public Builder setHasBinaries(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = builderForValue.build();
            onChanged();
          } else {
            hasBinariesBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public Builder mergeHasBinaries(io.dstore.Values.booleanValue value) {
          if (hasBinariesBuilder_ == null) {
            if (hasBinaries_ != null) {
              hasBinaries_ =
                io.dstore.Values.booleanValue.newBuilder(hasBinaries_).mergeFrom(value).buildPartial();
            } else {
              hasBinaries_ = value;
            }
            onChanged();
          } else {
            hasBinariesBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public Builder clearHasBinaries() {
          if (hasBinariesBuilder_ == null) {
            hasBinaries_ = null;
            onChanged();
          } else {
            hasBinaries_ = null;
            hasBinariesBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getHasBinariesBuilder() {
          
          onChanged();
          return getHasBinariesFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getHasBinariesOrBuilder() {
          if (hasBinariesBuilder_ != null) {
            return hasBinariesBuilder_.getMessageOrBuilder();
          } else {
            return hasBinaries_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : hasBinaries_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue has_binaries = 10011;</code>
         *
         * <pre>
         * Sind "Binaries" zu dem Posting "&#64;PostingID" vorhanden ?
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getHasBinariesFieldBuilder() {
          if (hasBinariesBuilder_ == null) {
            hasBinariesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getHasBinaries(),
                    getParentForChildren(),
                    isClean());
            hasBinaries_ = null;
          }
          return hasBinariesBuilder_;
        }

        private io.dstore.Values.integerValue visible_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> visibleBuilder_;
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public boolean hasVisible() {
          return visibleBuilder_ != null || visible_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.Values.integerValue getVisible() {
          if (visibleBuilder_ == null) {
            return visible_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : visible_;
          } else {
            return visibleBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder setVisible(io.dstore.Values.integerValue value) {
          if (visibleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            visible_ = value;
            onChanged();
          } else {
            visibleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder setVisible(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (visibleBuilder_ == null) {
            visible_ = builderForValue.build();
            onChanged();
          } else {
            visibleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder mergeVisible(io.dstore.Values.integerValue value) {
          if (visibleBuilder_ == null) {
            if (visible_ != null) {
              visible_ =
                io.dstore.Values.integerValue.newBuilder(visible_).mergeFrom(value).buildPartial();
            } else {
              visible_ = value;
            }
            onChanged();
          } else {
            visibleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public Builder clearVisible() {
          if (visibleBuilder_ == null) {
            visible_ = null;
            onChanged();
          } else {
            visible_ = null;
            visibleBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getVisibleBuilder() {
          
          onChanged();
          return getVisibleFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getVisibleOrBuilder() {
          if (visibleBuilder_ != null) {
            return visibleBuilder_.getMessageOrBuilder();
          } else {
            return visible_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : visible_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue visible = 10012;</code>
         *
         * <pre>
         * Sichtbarkeits-Status des Postings "&#64;PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getVisibleFieldBuilder() {
          if (visibleBuilder_ == null) {
            visibleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getVisible(),
                    getParentForChildren(),
                    isClean());
            visible_ = null;
          }
          return visibleBuilder_;
        }

        private io.dstore.Values.stringValue author_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> authorBuilder_;
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public boolean hasAuthor() {
          return authorBuilder_ != null || author_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValue getAuthor() {
          if (authorBuilder_ == null) {
            return author_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : author_;
          } else {
            return authorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder setAuthor(io.dstore.Values.stringValue value) {
          if (authorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            author_ = value;
            onChanged();
          } else {
            authorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder setAuthor(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (authorBuilder_ == null) {
            author_ = builderForValue.build();
            onChanged();
          } else {
            authorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder mergeAuthor(io.dstore.Values.stringValue value) {
          if (authorBuilder_ == null) {
            if (author_ != null) {
              author_ =
                io.dstore.Values.stringValue.newBuilder(author_).mergeFrom(value).buildPartial();
            } else {
              author_ = value;
            }
            onChanged();
          } else {
            authorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public Builder clearAuthor() {
          if (authorBuilder_ == null) {
            author_ = null;
            onChanged();
          } else {
            author_ = null;
            authorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getAuthorBuilder() {
          
          onChanged();
          return getAuthorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getAuthorOrBuilder() {
          if (authorBuilder_ != null) {
            return authorBuilder_.getMessageOrBuilder();
          } else {
            return author_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : author_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue author = 10013;</code>
         *
         * <pre>
         * Name des Verfassers des Beitrags "&#64;PostingID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getAuthorFieldBuilder() {
          if (authorBuilder_ == null) {
            authorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getAuthor(),
                    getParentForChildren(),
                    isClean());
            author_ = null;
          }
          return authorBuilder_;
        }

        private io.dstore.Values.booleanValue hasSuccessors_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> hasSuccessorsBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public boolean hasHasSuccessors() {
          return hasSuccessorsBuilder_ != null || hasSuccessors_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public io.dstore.Values.booleanValue getHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            return hasSuccessors_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          } else {
            return hasSuccessorsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public Builder setHasSuccessors(io.dstore.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hasSuccessors_ = value;
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public Builder setHasSuccessors(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = builderForValue.build();
            onChanged();
          } else {
            hasSuccessorsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public Builder mergeHasSuccessors(io.dstore.Values.booleanValue value) {
          if (hasSuccessorsBuilder_ == null) {
            if (hasSuccessors_ != null) {
              hasSuccessors_ =
                io.dstore.Values.booleanValue.newBuilder(hasSuccessors_).mergeFrom(value).buildPartial();
            } else {
              hasSuccessors_ = value;
            }
            onChanged();
          } else {
            hasSuccessorsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public Builder clearHasSuccessors() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessors_ = null;
            onChanged();
          } else {
            hasSuccessors_ = null;
            hasSuccessorsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getHasSuccessorsBuilder() {
          
          onChanged();
          return getHasSuccessorsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getHasSuccessorsOrBuilder() {
          if (hasSuccessorsBuilder_ != null) {
            return hasSuccessorsBuilder_.getMessageOrBuilder();
          } else {
            return hasSuccessors_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : hasSuccessors_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue has_successors = 10014;</code>
         *
         * <pre>
         * Gibt es wenigstens eine Antwort auf "&#64;PostingID" ? ACHTUNG : Es wird hierbei NICHT nach dem Sichtbarkeit-Status ("Visible") eingeschränkt (d.h. unter Umständen steht hier z.B. der Wert "1", aber es gibt nur "gelöschte" Antworten)!
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getHasSuccessorsFieldBuilder() {
          if (hasSuccessorsBuilder_ == null) {
            hasSuccessorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getHasSuccessors(),
                    getParentForChildren(),
                    isClean());
            hasSuccessors_ = null;
          }
          return hasSuccessorsBuilder_;
        }

        private io.dstore.Values.stringValue postDate_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> postDateBuilder_;
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public boolean hasPostDate() {
          return postDateBuilder_ != null || postDate_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public io.dstore.Values.stringValue getPostDate() {
          if (postDateBuilder_ == null) {
            return postDate_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : postDate_;
          } else {
            return postDateBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public Builder setPostDate(io.dstore.Values.stringValue value) {
          if (postDateBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            postDate_ = value;
            onChanged();
          } else {
            postDateBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public Builder setPostDate(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (postDateBuilder_ == null) {
            postDate_ = builderForValue.build();
            onChanged();
          } else {
            postDateBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public Builder mergePostDate(io.dstore.Values.stringValue value) {
          if (postDateBuilder_ == null) {
            if (postDate_ != null) {
              postDate_ =
                io.dstore.Values.stringValue.newBuilder(postDate_).mergeFrom(value).buildPartial();
            } else {
              postDate_ = value;
            }
            onChanged();
          } else {
            postDateBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public Builder clearPostDate() {
          if (postDateBuilder_ == null) {
            postDate_ = null;
            onChanged();
          } else {
            postDate_ = null;
            postDateBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getPostDateBuilder() {
          
          onChanged();
          return getPostDateFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getPostDateOrBuilder() {
          if (postDateBuilder_ != null) {
            return postDateBuilder_.getMessageOrBuilder();
          } else {
            return postDate_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : postDate_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue post_date = 10015;</code>
         *
         * <pre>
         * Datum des Beitrags "&#64;PostingID" (Format : "15.03.2001 20:48:13")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getPostDateFieldBuilder() {
          if (postDateBuilder_ == null) {
            postDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getPostDate(),
                    getParentForChildren(),
                    isClean());
            postDate_ = null;
          }
          return postDateBuilder_;
        }

        private io.dstore.Values.stringValue body_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> bodyBuilder_;
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public boolean hasBody() {
          return bodyBuilder_ != null || body_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.Values.stringValue getBody() {
          if (bodyBuilder_ == null) {
            return body_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder setBody(io.dstore.Values.stringValue value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder setBody(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder mergeBody(io.dstore.Values.stringValue value) {
          if (bodyBuilder_ == null) {
            if (body_ != null) {
              body_ =
                io.dstore.Values.stringValue.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = null;
            onChanged();
          } else {
            body_ = null;
            bodyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getBodyBuilder() {
          
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : body_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue body = 10016;</code>
         *
         * <pre>
         * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getBody(),
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPosting_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPosting_Pu.Response.Row)
      private static final io.dstore.engine.procedures.FoGetPostingPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingPu.Response.Row();
      }

      public static io.dstore.engine.procedures.FoGetPostingPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.FoGetPostingPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.FoGetPostingPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.FoGetPostingPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.fo_GetPosting_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.fo_GetPosting_Pu.Response)
        io.dstore.engine.procedures.FoGetPostingPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.FoGetPostingPu.Response.class, io.dstore.engine.procedures.FoGetPostingPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.FoGetPostingPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.FoGetPostingPu.internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor;
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.FoGetPostingPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Response build() {
        io.dstore.engine.procedures.FoGetPostingPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.FoGetPostingPu.Response buildPartial() {
        io.dstore.engine.procedures.FoGetPostingPu.Response result = new io.dstore.engine.procedures.FoGetPostingPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.FoGetPostingPu.Response) {
          return mergeFrom((io.dstore.engine.procedures.FoGetPostingPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.FoGetPostingPu.Response other) {
        if (other == io.dstore.engine.procedures.FoGetPostingPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.FoGetPostingPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.FoGetPostingPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.FoGetPostingPu.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.FoGetPostingPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.FoGetPostingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.FoGetPostingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.FoGetPostingPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.FoGetPostingPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.FoGetPostingPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.fo_GetPosting_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.FoGetPostingPu.Response.Row, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.FoGetPostingPu.Response.Row, io.dstore.engine.procedures.FoGetPostingPu.Response.Row.Builder, io.dstore.engine.procedures.FoGetPostingPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.fo_GetPosting_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.fo_GetPosting_Pu.Response)
    private static final io.dstore.engine.procedures.FoGetPostingPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.FoGetPostingPu.Response();
    }

    public static io.dstore.engine.procedures.FoGetPostingPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.FoGetPostingPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPosting_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/dstore/engine/procedures/fo_GetPosting" +
      "_Pu.proto\022\036dstore.engine.fo_GetPosting_P" +
      "u\032\023dstore/values.proto\032\031dstore/engine/er" +
      "ror.proto\032\033dstore/engine/message.proto\032#" +
      "dstore/engine/metainformation.proto\"\233\004\n\n" +
      "Parameters\022@\n\034person_identification_valu" +
      "es\030\001 \001(\0132\032.dstore.values.stringValue\022*\n!" +
      "person_identification_values_null\030\351\007 \001(\010" +
      "\0223\n\016person_type_id\030\002 \001(\0132\033.dstore.values" +
      ".integerValue\022\034\n\023person_type_id_null\030\352\007 ",
      "\001(\010\022-\n\tunique_id\030\003 \001(\0132\032.dstore.values.s" +
      "tringValue\022\027\n\016unique_id_null\030\353\007 \001(\010\022/\n\np" +
      "osting_id\030\004 \001(\0132\033.dstore.values.integerV" +
      "alue\022\030\n\017posting_id_null\030\354\007 \001(\010\0225\n\020additi" +
      "onal_infos\030\005 \001(\0132\033.dstore.values.boolean" +
      "Value\022\036\n\025additional_infos_null\030\355\007 \001(\010\022;\n" +
      "\027separator_in_ident_vals\030\006 \001(\0132\032.dstore." +
      "values.stringValue\022%\n\034separator_in_ident" +
      "_vals_null\030\356\007 \001(\010\"\234\010\n\010Response\022)\n\005error\030" +
      "\001 \001(\0132\032.dstore.engine.error.Error\022H\n\020met",
      "a_information\030\002 \003(\0132..dstore.engine.meta" +
      "information.MetaInformation\022/\n\007message\030\003" +
      " \003(\0132\036.dstore.engine.message.Message\0229\n\003" +
      "row\030\004 \003(\0132,.dstore.engine.fo_GetPosting_" +
      "Pu.Response.Row\032\256\006\n\003Row\022\017\n\006row_id\030\220N \001(\005" +
      "\022/\n\nsmall_body\030\221N \001(\0132\032.dstore.values.st" +
      "ringValue\022.\n\010forum_id\030\222N \001(\0132\033.dstore.va" +
      "lues.integerValue\022+\n\006value3\030\223N \001(\0132\032.dst" +
      "ore.values.stringValue\0229\n\023reply_to_posti" +
      "ng_id\030\224N \001(\0132\033.dstore.values.integerValu",
      "e\022+\n\006value1\030\225N \001(\0132\032.dstore.values.strin" +
      "gValue\022+\n\006value2\030\226N \001(\0132\032.dstore.values." +
      "stringValue\022,\n\007subject\030\227N \001(\0132\032.dstore.v" +
      "alues.stringValue\0225\n\020e_mail_of_author\030\230N" +
      " \001(\0132\032.dstore.values.stringValue\0226\n\020auth" +
      "or_person_id\030\231N \001(\0132\033.dstore.values.inte" +
      "gerValue\0225\n\017main_posting_id\030\232N \001(\0132\033.dst" +
      "ore.values.integerValue\0222\n\014has_binaries\030" +
      "\233N \001(\0132\033.dstore.values.booleanValue\022-\n\007v" +
      "isible\030\234N \001(\0132\033.dstore.values.integerVal",
      "ue\022+\n\006author\030\235N \001(\0132\032.dstore.values.stri" +
      "ngValue\0224\n\016has_successors\030\236N \001(\0132\033.dstor" +
      "e.values.booleanValue\022.\n\tpost_date\030\237N \001(" +
      "\0132\032.dstore.values.stringValue\022)\n\004body\030\240N" +
      " \001(\0132\032.dstore.values.stringValueB\035\n\033io.d" +
      "store.engine.proceduresb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPosting_Pu_Parameters_descriptor,
        new java.lang.String[] { "PersonIdentificationValues", "PersonIdentificationValuesNull", "PersonTypeId", "PersonTypeIdNull", "UniqueId", "UniqueIdNull", "PostingId", "PostingIdNull", "AdditionalInfos", "AdditionalInfosNull", "SeparatorInIdentVals", "SeparatorInIdentValsNull", });
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_fo_GetPosting_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_fo_GetPosting_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "SmallBody", "ForumId", "Value3", "ReplyToPostingId", "Value1", "Value2", "Subject", "EMailOfAuthor", "AuthorPersonId", "MainPostingId", "HasBinaries", "Visible", "Author", "HasSuccessors", "PostDate", "Body", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
