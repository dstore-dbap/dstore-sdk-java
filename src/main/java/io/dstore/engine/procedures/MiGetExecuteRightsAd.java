// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetExecuteRights_Ad.proto

package io.dstore.engine.procedures;

public final class MiGetExecuteRightsAd {
  private MiGetExecuteRightsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetExecuteRights_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    boolean hasProcedureName();
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.Values.stringValue getProcedureName();
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder();

    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    boolean getProcedureNameNull();

    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    boolean hasGetAdminProceduresForUserId();
    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    io.dstore.Values.integerValue getGetAdminProceduresForUserId();
    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getGetAdminProceduresForUserIdOrBuilder();

    /**
     * <code>optional bool get_admin_procedures_for_user_id_null = 1002;</code>
     */
    boolean getGetAdminProceduresForUserIdNull();

    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    boolean hasProcedureCategoryId();
    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    io.dstore.Values.integerValue getProcedureCategoryId();
    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    io.dstore.Values.integerValueOrBuilder getProcedureCategoryIdOrBuilder();

    /**
     * <code>optional bool procedure_category_id_null = 1003;</code>
     */
    boolean getProcedureCategoryIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetExecuteRights_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      procedureNameNull_ = false;
      getAdminProceduresForUserIdNull_ = false;
      procedureCategoryIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (procedureName_ != null) {
                subBuilder = procedureName_.toBuilder();
              }
              procedureName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureName_);
                procedureName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (getAdminProceduresForUserId_ != null) {
                subBuilder = getAdminProceduresForUserId_.toBuilder();
              }
              getAdminProceduresForUserId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAdminProceduresForUserId_);
                getAdminProceduresForUserId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (procedureCategoryId_ != null) {
                subBuilder = procedureCategoryId_.toBuilder();
              }
              procedureCategoryId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureCategoryId_);
                procedureCategoryId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureNameNull_ = input.readBool();
              break;
            }
            case 8016: {

              getAdminProceduresForUserIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              procedureCategoryIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.Builder.class);
    }

    public static final int PROCEDURE_NAME_FIELD_NUMBER = 1;
    private io.dstore.Values.stringValue procedureName_;
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public boolean hasProcedureName() {
      return procedureName_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.Values.stringValue getProcedureName() {
      return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
    }
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
      return getProcedureName();
    }

    public static final int PROCEDURE_NAME_NULL_FIELD_NUMBER = 1001;
    private boolean procedureNameNull_;
    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    public boolean getProcedureNameNull() {
      return procedureNameNull_;
    }

    public static final int GET_ADMIN_PROCEDURES_FOR_USER_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue getAdminProceduresForUserId_;
    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    public boolean hasGetAdminProceduresForUserId() {
      return getAdminProceduresForUserId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    public io.dstore.Values.integerValue getGetAdminProceduresForUserId() {
      return getAdminProceduresForUserId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : getAdminProceduresForUserId_;
    }
    /**
     * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getGetAdminProceduresForUserIdOrBuilder() {
      return getGetAdminProceduresForUserId();
    }

    public static final int GET_ADMIN_PROCEDURES_FOR_USER_ID_NULL_FIELD_NUMBER = 1002;
    private boolean getAdminProceduresForUserIdNull_;
    /**
     * <code>optional bool get_admin_procedures_for_user_id_null = 1002;</code>
     */
    public boolean getGetAdminProceduresForUserIdNull() {
      return getAdminProceduresForUserIdNull_;
    }

    public static final int PROCEDURE_CATEGORY_ID_FIELD_NUMBER = 3;
    private io.dstore.Values.integerValue procedureCategoryId_;
    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    public boolean hasProcedureCategoryId() {
      return procedureCategoryId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    public io.dstore.Values.integerValue getProcedureCategoryId() {
      return procedureCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureCategoryId_;
    }
    /**
     * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getProcedureCategoryIdOrBuilder() {
      return getProcedureCategoryId();
    }

    public static final int PROCEDURE_CATEGORY_ID_NULL_FIELD_NUMBER = 1003;
    private boolean procedureCategoryIdNull_;
    /**
     * <code>optional bool procedure_category_id_null = 1003;</code>
     */
    public boolean getProcedureCategoryIdNull() {
      return procedureCategoryIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureName_ != null) {
        output.writeMessage(1, getProcedureName());
      }
      if (getAdminProceduresForUserId_ != null) {
        output.writeMessage(2, getGetAdminProceduresForUserId());
      }
      if (procedureCategoryId_ != null) {
        output.writeMessage(3, getProcedureCategoryId());
      }
      if (procedureNameNull_ != false) {
        output.writeBool(1001, procedureNameNull_);
      }
      if (getAdminProceduresForUserIdNull_ != false) {
        output.writeBool(1002, getAdminProceduresForUserIdNull_);
      }
      if (procedureCategoryIdNull_ != false) {
        output.writeBool(1003, procedureCategoryIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureName());
      }
      if (getAdminProceduresForUserId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGetAdminProceduresForUserId());
      }
      if (procedureCategoryId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getProcedureCategoryId());
      }
      if (procedureNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureNameNull_);
      }
      if (getAdminProceduresForUserIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, getAdminProceduresForUserIdNull_);
      }
      if (procedureCategoryIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, procedureCategoryIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetExecuteRights_Ad.Parameters)
        io.dstore.engine.procedures.MiGetExecuteRightsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }
        procedureNameNull_ = false;

        if (getAdminProceduresForUserIdBuilder_ == null) {
          getAdminProceduresForUserId_ = null;
        } else {
          getAdminProceduresForUserId_ = null;
          getAdminProceduresForUserIdBuilder_ = null;
        }
        getAdminProceduresForUserIdNull_ = false;

        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = null;
        } else {
          procedureCategoryId_ = null;
          procedureCategoryIdBuilder_ = null;
        }
        procedureCategoryIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters build() {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters buildPartial() {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters result = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters(this);
        if (procedureNameBuilder_ == null) {
          result.procedureName_ = procedureName_;
        } else {
          result.procedureName_ = procedureNameBuilder_.build();
        }
        result.procedureNameNull_ = procedureNameNull_;
        if (getAdminProceduresForUserIdBuilder_ == null) {
          result.getAdminProceduresForUserId_ = getAdminProceduresForUserId_;
        } else {
          result.getAdminProceduresForUserId_ = getAdminProceduresForUserIdBuilder_.build();
        }
        result.getAdminProceduresForUserIdNull_ = getAdminProceduresForUserIdNull_;
        if (procedureCategoryIdBuilder_ == null) {
          result.procedureCategoryId_ = procedureCategoryId_;
        } else {
          result.procedureCategoryId_ = procedureCategoryIdBuilder_.build();
        }
        result.procedureCategoryIdNull_ = procedureCategoryIdNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters other) {
        if (other == io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureName()) {
          mergeProcedureName(other.getProcedureName());
        }
        if (other.getProcedureNameNull() != false) {
          setProcedureNameNull(other.getProcedureNameNull());
        }
        if (other.hasGetAdminProceduresForUserId()) {
          mergeGetAdminProceduresForUserId(other.getGetAdminProceduresForUserId());
        }
        if (other.getGetAdminProceduresForUserIdNull() != false) {
          setGetAdminProceduresForUserIdNull(other.getGetAdminProceduresForUserIdNull());
        }
        if (other.hasProcedureCategoryId()) {
          mergeProcedureCategoryId(other.getProcedureCategoryId());
        }
        if (other.getProcedureCategoryIdNull() != false) {
          setProcedureCategoryIdNull(other.getProcedureCategoryIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.stringValue procedureName_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> procedureNameBuilder_;
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public boolean hasProcedureName() {
        return procedureNameBuilder_ != null || procedureName_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValue getProcedureName() {
        if (procedureNameBuilder_ == null) {
          return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
        } else {
          return procedureNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(io.dstore.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureName_ = value;
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (procedureNameBuilder_ == null) {
          procedureName_ = builderForValue.build();
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder mergeProcedureName(io.dstore.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (procedureName_ != null) {
            procedureName_ =
              io.dstore.Values.stringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
          } else {
            procedureName_ = value;
          }
          onChanged();
        } else {
          procedureNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder clearProcedureName() {
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
          onChanged();
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValue.Builder getProcedureNameBuilder() {
        
        onChanged();
        return getProcedureNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
        if (procedureNameBuilder_ != null) {
          return procedureNameBuilder_.getMessageOrBuilder();
        } else {
          return procedureName_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getProcedureNameFieldBuilder() {
        if (procedureNameBuilder_ == null) {
          procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getProcedureName(),
                  getParentForChildren(),
                  isClean());
          procedureName_ = null;
        }
        return procedureNameBuilder_;
      }

      private boolean procedureNameNull_ ;
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public boolean getProcedureNameNull() {
        return procedureNameNull_;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder setProcedureNameNull(boolean value) {
        
        procedureNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder clearProcedureNameNull() {
        
        procedureNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue getAdminProceduresForUserId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> getAdminProceduresForUserIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public boolean hasGetAdminProceduresForUserId() {
        return getAdminProceduresForUserIdBuilder_ != null || getAdminProceduresForUserId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public io.dstore.Values.integerValue getGetAdminProceduresForUserId() {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          return getAdminProceduresForUserId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : getAdminProceduresForUserId_;
        } else {
          return getAdminProceduresForUserIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public Builder setGetAdminProceduresForUserId(io.dstore.Values.integerValue value) {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAdminProceduresForUserId_ = value;
          onChanged();
        } else {
          getAdminProceduresForUserIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public Builder setGetAdminProceduresForUserId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          getAdminProceduresForUserId_ = builderForValue.build();
          onChanged();
        } else {
          getAdminProceduresForUserIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public Builder mergeGetAdminProceduresForUserId(io.dstore.Values.integerValue value) {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          if (getAdminProceduresForUserId_ != null) {
            getAdminProceduresForUserId_ =
              io.dstore.Values.integerValue.newBuilder(getAdminProceduresForUserId_).mergeFrom(value).buildPartial();
          } else {
            getAdminProceduresForUserId_ = value;
          }
          onChanged();
        } else {
          getAdminProceduresForUserIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public Builder clearGetAdminProceduresForUserId() {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          getAdminProceduresForUserId_ = null;
          onChanged();
        } else {
          getAdminProceduresForUserId_ = null;
          getAdminProceduresForUserIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getGetAdminProceduresForUserIdBuilder() {
        
        onChanged();
        return getGetAdminProceduresForUserIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getGetAdminProceduresForUserIdOrBuilder() {
        if (getAdminProceduresForUserIdBuilder_ != null) {
          return getAdminProceduresForUserIdBuilder_.getMessageOrBuilder();
        } else {
          return getAdminProceduresForUserId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : getAdminProceduresForUserId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue get_admin_procedures_for_user_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getGetAdminProceduresForUserIdFieldBuilder() {
        if (getAdminProceduresForUserIdBuilder_ == null) {
          getAdminProceduresForUserIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getGetAdminProceduresForUserId(),
                  getParentForChildren(),
                  isClean());
          getAdminProceduresForUserId_ = null;
        }
        return getAdminProceduresForUserIdBuilder_;
      }

      private boolean getAdminProceduresForUserIdNull_ ;
      /**
       * <code>optional bool get_admin_procedures_for_user_id_null = 1002;</code>
       */
      public boolean getGetAdminProceduresForUserIdNull() {
        return getAdminProceduresForUserIdNull_;
      }
      /**
       * <code>optional bool get_admin_procedures_for_user_id_null = 1002;</code>
       */
      public Builder setGetAdminProceduresForUserIdNull(boolean value) {
        
        getAdminProceduresForUserIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_admin_procedures_for_user_id_null = 1002;</code>
       */
      public Builder clearGetAdminProceduresForUserIdNull() {
        
        getAdminProceduresForUserIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue procedureCategoryId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> procedureCategoryIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public boolean hasProcedureCategoryId() {
        return procedureCategoryIdBuilder_ != null || procedureCategoryId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public io.dstore.Values.integerValue getProcedureCategoryId() {
        if (procedureCategoryIdBuilder_ == null) {
          return procedureCategoryId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureCategoryId_;
        } else {
          return procedureCategoryIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public Builder setProcedureCategoryId(io.dstore.Values.integerValue value) {
        if (procedureCategoryIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureCategoryId_ = value;
          onChanged();
        } else {
          procedureCategoryIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public Builder setProcedureCategoryId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = builderForValue.build();
          onChanged();
        } else {
          procedureCategoryIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public Builder mergeProcedureCategoryId(io.dstore.Values.integerValue value) {
        if (procedureCategoryIdBuilder_ == null) {
          if (procedureCategoryId_ != null) {
            procedureCategoryId_ =
              io.dstore.Values.integerValue.newBuilder(procedureCategoryId_).mergeFrom(value).buildPartial();
          } else {
            procedureCategoryId_ = value;
          }
          onChanged();
        } else {
          procedureCategoryIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public Builder clearProcedureCategoryId() {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryId_ = null;
          onChanged();
        } else {
          procedureCategoryId_ = null;
          procedureCategoryIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public io.dstore.Values.integerValue.Builder getProcedureCategoryIdBuilder() {
        
        onChanged();
        return getProcedureCategoryIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getProcedureCategoryIdOrBuilder() {
        if (procedureCategoryIdBuilder_ != null) {
          return procedureCategoryIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureCategoryId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : procedureCategoryId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_category_id = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getProcedureCategoryIdFieldBuilder() {
        if (procedureCategoryIdBuilder_ == null) {
          procedureCategoryIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getProcedureCategoryId(),
                  getParentForChildren(),
                  isClean());
          procedureCategoryId_ = null;
        }
        return procedureCategoryIdBuilder_;
      }

      private boolean procedureCategoryIdNull_ ;
      /**
       * <code>optional bool procedure_category_id_null = 1003;</code>
       */
      public boolean getProcedureCategoryIdNull() {
        return procedureCategoryIdNull_;
      }
      /**
       * <code>optional bool procedure_category_id_null = 1003;</code>
       */
      public Builder setProcedureCategoryIdNull(boolean value) {
        
        procedureCategoryIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_category_id_null = 1003;</code>
       */
      public Builder clearProcedureCategoryIdNull() {
        
        procedureCategoryIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetExecuteRights_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetExecuteRights_Ad.Parameters)
    private static final io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters();
    }

    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetExecuteRightsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetExecuteRights_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetExecuteRights_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetExecuteRights_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      boolean hasProcedureExists();
      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      io.dstore.Values.booleanValue getProcedureExists();
      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getProcedureExistsOrBuilder();

      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      boolean hasUserExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      io.dstore.Values.integerValue getUserExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      io.dstore.Values.integerValueOrBuilder getUserExecRightOnDatabaseLevelOrBuilder();

      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      boolean hasPublicExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      io.dstore.Values.integerValue getPublicExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPublicExecRightOnDatabaseLevelOrBuilder();

      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      boolean hasProcedureId();
      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      io.dstore.Values.integerValue getProcedureId();
      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      io.dstore.Values.integerValueOrBuilder getProcedureIdOrBuilder();

      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      boolean hasUserName();
      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      io.dstore.Values.stringValue getUserName();
      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      io.dstore.Values.stringValueOrBuilder getUserNameOrBuilder();

      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      boolean hasGroupExecRightOndstoreLevel();
      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      io.dstore.Values.booleanValue getGroupExecRightOndstoreLevel();
      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getGroupExecRightOndstoreLevelOrBuilder();

      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      boolean hasProcedureName();
      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      io.dstore.Values.stringValue getProcedureName();
      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder();

      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      boolean hasUserId();
      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      io.dstore.Values.integerValue getUserId();
      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      io.dstore.Values.integerValueOrBuilder getUserIdOrBuilder();

      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      boolean hasExecuteRight();
      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      io.dstore.Values.booleanValue getExecuteRight();
      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getExecuteRightOrBuilder();

      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      boolean hasProcedureFunction();
      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      io.dstore.Values.stringValue getProcedureFunction();
      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      io.dstore.Values.stringValueOrBuilder getProcedureFunctionOrBuilder();

      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      boolean hasUserExecRightOndstoreLevel();
      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      io.dstore.Values.integerValue getUserExecRightOndstoreLevel();
      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      io.dstore.Values.integerValueOrBuilder getUserExecRightOndstoreLevelOrBuilder();

      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      boolean hasGroupExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      io.dstore.Values.integerValue getGroupExecRightOnDatabaseLevel();
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      io.dstore.Values.integerValueOrBuilder getGroupExecRightOnDatabaseLevelOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetExecuteRights_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (procedureExists_ != null) {
                  subBuilder = procedureExists_.toBuilder();
                }
                procedureExists_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureExists_);
                  procedureExists_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (userExecRightOnDatabaseLevel_ != null) {
                  subBuilder = userExecRightOnDatabaseLevel_.toBuilder();
                }
                userExecRightOnDatabaseLevel_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(userExecRightOnDatabaseLevel_);
                  userExecRightOnDatabaseLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (publicExecRightOnDatabaseLevel_ != null) {
                  subBuilder = publicExecRightOnDatabaseLevel_.toBuilder();
                }
                publicExecRightOnDatabaseLevel_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(publicExecRightOnDatabaseLevel_);
                  publicExecRightOnDatabaseLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (procedureId_ != null) {
                  subBuilder = procedureId_.toBuilder();
                }
                procedureId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureId_);
                  procedureId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (userName_ != null) {
                  subBuilder = userName_.toBuilder();
                }
                userName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(userName_);
                  userName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (groupExecRightOndstoreLevel_ != null) {
                  subBuilder = groupExecRightOndstoreLevel_.toBuilder();
                }
                groupExecRightOndstoreLevel_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupExecRightOndstoreLevel_);
                  groupExecRightOndstoreLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (procedureName_ != null) {
                  subBuilder = procedureName_.toBuilder();
                }
                procedureName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureName_);
                  procedureName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (userId_ != null) {
                  subBuilder = userId_.toBuilder();
                }
                userId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(userId_);
                  userId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (executeRight_ != null) {
                  subBuilder = executeRight_.toBuilder();
                }
                executeRight_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(executeRight_);
                  executeRight_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (procedureFunction_ != null) {
                  subBuilder = procedureFunction_.toBuilder();
                }
                procedureFunction_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureFunction_);
                  procedureFunction_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (userExecRightOndstoreLevel_ != null) {
                  subBuilder = userExecRightOndstoreLevel_.toBuilder();
                }
                userExecRightOndstoreLevel_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(userExecRightOndstoreLevel_);
                  userExecRightOndstoreLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (groupExecRightOnDatabaseLevel_ != null) {
                  subBuilder = groupExecRightOnDatabaseLevel_.toBuilder();
                }
                groupExecRightOnDatabaseLevel_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupExecRightOnDatabaseLevel_);
                  groupExecRightOnDatabaseLevel_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int PROCEDURE_EXISTS_FIELD_NUMBER = 10001;
      private io.dstore.Values.booleanValue procedureExists_;
      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      public boolean hasProcedureExists() {
        return procedureExists_ != null;
      }
      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      public io.dstore.Values.booleanValue getProcedureExists() {
        return procedureExists_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : procedureExists_;
      }
      /**
       * <pre>
       * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getProcedureExistsOrBuilder() {
        return getProcedureExists();
      }

      public static final int USER_EXEC_RIGHT_ON_DATABASE_LEVEL_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue userExecRightOnDatabaseLevel_;
      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      public boolean hasUserExecRightOnDatabaseLevel() {
        return userExecRightOnDatabaseLevel_ != null;
      }
      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      public io.dstore.Values.integerValue getUserExecRightOnDatabaseLevel() {
        return userExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOnDatabaseLevel_;
      }
      /**
       * <pre>
       * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getUserExecRightOnDatabaseLevelOrBuilder() {
        return getUserExecRightOnDatabaseLevel();
      }

      public static final int PUBLIC_EXEC_RIGHT_ON_DATABASE_LEVEL_FIELD_NUMBER = 10003;
      private io.dstore.Values.integerValue publicExecRightOnDatabaseLevel_;
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      public boolean hasPublicExecRightOnDatabaseLevel() {
        return publicExecRightOnDatabaseLevel_ != null;
      }
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      public io.dstore.Values.integerValue getPublicExecRightOnDatabaseLevel() {
        return publicExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : publicExecRightOnDatabaseLevel_;
      }
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPublicExecRightOnDatabaseLevelOrBuilder() {
        return getPublicExecRightOnDatabaseLevel();
      }

      public static final int PROCEDURE_ID_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue procedureId_;
      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      public boolean hasProcedureId() {
        return procedureId_ != null;
      }
      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      public io.dstore.Values.integerValue getProcedureId() {
        return procedureId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureId_;
      }
      /**
       * <pre>
       * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getProcedureIdOrBuilder() {
        return getProcedureId();
      }

      public static final int USER_NAME_FIELD_NUMBER = 10005;
      private io.dstore.Values.stringValue userName_;
      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      public boolean hasUserName() {
        return userName_ != null;
      }
      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      public io.dstore.Values.stringValue getUserName() {
        return userName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : userName_;
      }
      /**
       * <pre>
       * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
       * </pre>
       *
       * <code>optional .dstore.values.stringValue user_name = 10005;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getUserNameOrBuilder() {
        return getUserName();
      }

      public static final int GROUP_EXEC_RIGHT_ONDSTORE_LEVEL_FIELD_NUMBER = 10006;
      private io.dstore.Values.booleanValue groupExecRightOndstoreLevel_;
      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      public boolean hasGroupExecRightOndstoreLevel() {
        return groupExecRightOndstoreLevel_ != null;
      }
      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      public io.dstore.Values.booleanValue getGroupExecRightOndstoreLevel() {
        return groupExecRightOndstoreLevel_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : groupExecRightOndstoreLevel_;
      }
      /**
       * <pre>
       * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getGroupExecRightOndstoreLevelOrBuilder() {
        return getGroupExecRightOndstoreLevel();
      }

      public static final int PROCEDURE_NAME_FIELD_NUMBER = 10007;
      private io.dstore.Values.stringValue procedureName_;
      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      public boolean hasProcedureName() {
        return procedureName_ != null;
      }
      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      public io.dstore.Values.stringValue getProcedureName() {
        return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
      }
      /**
       * <pre>
       * Name einer Prozedur
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
        return getProcedureName();
      }

      public static final int USER_ID_FIELD_NUMBER = 10008;
      private io.dstore.Values.integerValue userId_;
      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      public boolean hasUserId() {
        return userId_ != null;
      }
      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      public io.dstore.Values.integerValue getUserId() {
        return userId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userId_;
      }
      /**
       * <pre>
       * ID des Benutzers "UserName" aus "UserInfo"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_id = 10008;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getUserIdOrBuilder() {
        return getUserId();
      }

      public static final int EXECUTE_RIGHT_FIELD_NUMBER = 10009;
      private io.dstore.Values.booleanValue executeRight_;
      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      public boolean hasExecuteRight() {
        return executeRight_ != null;
      }
      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      public io.dstore.Values.booleanValue getExecuteRight() {
        return executeRight_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : executeRight_;
      }
      /**
       * <pre>
       * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getExecuteRightOrBuilder() {
        return getExecuteRight();
      }

      public static final int PROCEDURE_FUNCTION_FIELD_NUMBER = 10010;
      private io.dstore.Values.stringValue procedureFunction_;
      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      public boolean hasProcedureFunction() {
        return procedureFunction_ != null;
      }
      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      public io.dstore.Values.stringValue getProcedureFunction() {
        return procedureFunction_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureFunction_;
      }
      /**
       * <pre>
       * Kurz-Beschreibung der Prozedur "ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getProcedureFunctionOrBuilder() {
        return getProcedureFunction();
      }

      public static final int USER_EXEC_RIGHT_ONDSTORE_LEVEL_FIELD_NUMBER = 10011;
      private io.dstore.Values.integerValue userExecRightOndstoreLevel_;
      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      public boolean hasUserExecRightOndstoreLevel() {
        return userExecRightOndstoreLevel_ != null;
      }
      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      public io.dstore.Values.integerValue getUserExecRightOndstoreLevel() {
        return userExecRightOndstoreLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOndstoreLevel_;
      }
      /**
       * <pre>
       * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
       * </pre>
       *
       * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getUserExecRightOndstoreLevelOrBuilder() {
        return getUserExecRightOndstoreLevel();
      }

      public static final int GROUP_EXEC_RIGHT_ON_DATABASE_LEVEL_FIELD_NUMBER = 10012;
      private io.dstore.Values.integerValue groupExecRightOnDatabaseLevel_;
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      public boolean hasGroupExecRightOnDatabaseLevel() {
        return groupExecRightOnDatabaseLevel_ != null;
      }
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      public io.dstore.Values.integerValue getGroupExecRightOnDatabaseLevel() {
        return groupExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupExecRightOnDatabaseLevel_;
      }
      /**
       * <pre>
       * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getGroupExecRightOnDatabaseLevelOrBuilder() {
        return getGroupExecRightOnDatabaseLevel();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (procedureExists_ != null) {
          output.writeMessage(10001, getProcedureExists());
        }
        if (userExecRightOnDatabaseLevel_ != null) {
          output.writeMessage(10002, getUserExecRightOnDatabaseLevel());
        }
        if (publicExecRightOnDatabaseLevel_ != null) {
          output.writeMessage(10003, getPublicExecRightOnDatabaseLevel());
        }
        if (procedureId_ != null) {
          output.writeMessage(10004, getProcedureId());
        }
        if (userName_ != null) {
          output.writeMessage(10005, getUserName());
        }
        if (groupExecRightOndstoreLevel_ != null) {
          output.writeMessage(10006, getGroupExecRightOndstoreLevel());
        }
        if (procedureName_ != null) {
          output.writeMessage(10007, getProcedureName());
        }
        if (userId_ != null) {
          output.writeMessage(10008, getUserId());
        }
        if (executeRight_ != null) {
          output.writeMessage(10009, getExecuteRight());
        }
        if (procedureFunction_ != null) {
          output.writeMessage(10010, getProcedureFunction());
        }
        if (userExecRightOndstoreLevel_ != null) {
          output.writeMessage(10011, getUserExecRightOndstoreLevel());
        }
        if (groupExecRightOnDatabaseLevel_ != null) {
          output.writeMessage(10012, getGroupExecRightOnDatabaseLevel());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (procedureExists_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getProcedureExists());
        }
        if (userExecRightOnDatabaseLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getUserExecRightOnDatabaseLevel());
        }
        if (publicExecRightOnDatabaseLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getPublicExecRightOnDatabaseLevel());
        }
        if (procedureId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getProcedureId());
        }
        if (userName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getUserName());
        }
        if (groupExecRightOndstoreLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getGroupExecRightOndstoreLevel());
        }
        if (procedureName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getProcedureName());
        }
        if (userId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getUserId());
        }
        if (executeRight_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getExecuteRight());
        }
        if (procedureFunction_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getProcedureFunction());
        }
        if (userExecRightOndstoreLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getUserExecRightOndstoreLevel());
        }
        if (groupExecRightOnDatabaseLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getGroupExecRightOnDatabaseLevel());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetExecuteRights_Ad.Response.Row)
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (procedureExistsBuilder_ == null) {
            procedureExists_ = null;
          } else {
            procedureExists_ = null;
            procedureExistsBuilder_ = null;
          }
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            userExecRightOnDatabaseLevel_ = null;
          } else {
            userExecRightOnDatabaseLevel_ = null;
            userExecRightOnDatabaseLevelBuilder_ = null;
          }
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            publicExecRightOnDatabaseLevel_ = null;
          } else {
            publicExecRightOnDatabaseLevel_ = null;
            publicExecRightOnDatabaseLevelBuilder_ = null;
          }
          if (procedureIdBuilder_ == null) {
            procedureId_ = null;
          } else {
            procedureId_ = null;
            procedureIdBuilder_ = null;
          }
          if (userNameBuilder_ == null) {
            userName_ = null;
          } else {
            userName_ = null;
            userNameBuilder_ = null;
          }
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            groupExecRightOndstoreLevel_ = null;
          } else {
            groupExecRightOndstoreLevel_ = null;
            groupExecRightOndstoreLevelBuilder_ = null;
          }
          if (procedureNameBuilder_ == null) {
            procedureName_ = null;
          } else {
            procedureName_ = null;
            procedureNameBuilder_ = null;
          }
          if (userIdBuilder_ == null) {
            userId_ = null;
          } else {
            userId_ = null;
            userIdBuilder_ = null;
          }
          if (executeRightBuilder_ == null) {
            executeRight_ = null;
          } else {
            executeRight_ = null;
            executeRightBuilder_ = null;
          }
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = null;
          } else {
            procedureFunction_ = null;
            procedureFunctionBuilder_ = null;
          }
          if (userExecRightOndstoreLevelBuilder_ == null) {
            userExecRightOndstoreLevel_ = null;
          } else {
            userExecRightOndstoreLevel_ = null;
            userExecRightOndstoreLevelBuilder_ = null;
          }
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            groupExecRightOnDatabaseLevel_ = null;
          } else {
            groupExecRightOnDatabaseLevel_ = null;
            groupExecRightOnDatabaseLevelBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row build() {
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row result = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (procedureExistsBuilder_ == null) {
            result.procedureExists_ = procedureExists_;
          } else {
            result.procedureExists_ = procedureExistsBuilder_.build();
          }
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            result.userExecRightOnDatabaseLevel_ = userExecRightOnDatabaseLevel_;
          } else {
            result.userExecRightOnDatabaseLevel_ = userExecRightOnDatabaseLevelBuilder_.build();
          }
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            result.publicExecRightOnDatabaseLevel_ = publicExecRightOnDatabaseLevel_;
          } else {
            result.publicExecRightOnDatabaseLevel_ = publicExecRightOnDatabaseLevelBuilder_.build();
          }
          if (procedureIdBuilder_ == null) {
            result.procedureId_ = procedureId_;
          } else {
            result.procedureId_ = procedureIdBuilder_.build();
          }
          if (userNameBuilder_ == null) {
            result.userName_ = userName_;
          } else {
            result.userName_ = userNameBuilder_.build();
          }
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            result.groupExecRightOndstoreLevel_ = groupExecRightOndstoreLevel_;
          } else {
            result.groupExecRightOndstoreLevel_ = groupExecRightOndstoreLevelBuilder_.build();
          }
          if (procedureNameBuilder_ == null) {
            result.procedureName_ = procedureName_;
          } else {
            result.procedureName_ = procedureNameBuilder_.build();
          }
          if (userIdBuilder_ == null) {
            result.userId_ = userId_;
          } else {
            result.userId_ = userIdBuilder_.build();
          }
          if (executeRightBuilder_ == null) {
            result.executeRight_ = executeRight_;
          } else {
            result.executeRight_ = executeRightBuilder_.build();
          }
          if (procedureFunctionBuilder_ == null) {
            result.procedureFunction_ = procedureFunction_;
          } else {
            result.procedureFunction_ = procedureFunctionBuilder_.build();
          }
          if (userExecRightOndstoreLevelBuilder_ == null) {
            result.userExecRightOndstoreLevel_ = userExecRightOndstoreLevel_;
          } else {
            result.userExecRightOndstoreLevel_ = userExecRightOndstoreLevelBuilder_.build();
          }
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            result.groupExecRightOnDatabaseLevel_ = groupExecRightOnDatabaseLevel_;
          } else {
            result.groupExecRightOnDatabaseLevel_ = groupExecRightOnDatabaseLevelBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasProcedureExists()) {
            mergeProcedureExists(other.getProcedureExists());
          }
          if (other.hasUserExecRightOnDatabaseLevel()) {
            mergeUserExecRightOnDatabaseLevel(other.getUserExecRightOnDatabaseLevel());
          }
          if (other.hasPublicExecRightOnDatabaseLevel()) {
            mergePublicExecRightOnDatabaseLevel(other.getPublicExecRightOnDatabaseLevel());
          }
          if (other.hasProcedureId()) {
            mergeProcedureId(other.getProcedureId());
          }
          if (other.hasUserName()) {
            mergeUserName(other.getUserName());
          }
          if (other.hasGroupExecRightOndstoreLevel()) {
            mergeGroupExecRightOndstoreLevel(other.getGroupExecRightOndstoreLevel());
          }
          if (other.hasProcedureName()) {
            mergeProcedureName(other.getProcedureName());
          }
          if (other.hasUserId()) {
            mergeUserId(other.getUserId());
          }
          if (other.hasExecuteRight()) {
            mergeExecuteRight(other.getExecuteRight());
          }
          if (other.hasProcedureFunction()) {
            mergeProcedureFunction(other.getProcedureFunction());
          }
          if (other.hasUserExecRightOndstoreLevel()) {
            mergeUserExecRightOndstoreLevel(other.getUserExecRightOndstoreLevel());
          }
          if (other.hasGroupExecRightOnDatabaseLevel()) {
            mergeGroupExecRightOnDatabaseLevel(other.getGroupExecRightOnDatabaseLevel());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.booleanValue procedureExists_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> procedureExistsBuilder_;
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public boolean hasProcedureExists() {
          return procedureExistsBuilder_ != null || procedureExists_ != null;
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public io.dstore.Values.booleanValue getProcedureExists() {
          if (procedureExistsBuilder_ == null) {
            return procedureExists_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : procedureExists_;
          } else {
            return procedureExistsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public Builder setProcedureExists(io.dstore.Values.booleanValue value) {
          if (procedureExistsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureExists_ = value;
            onChanged();
          } else {
            procedureExistsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public Builder setProcedureExists(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (procedureExistsBuilder_ == null) {
            procedureExists_ = builderForValue.build();
            onChanged();
          } else {
            procedureExistsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public Builder mergeProcedureExists(io.dstore.Values.booleanValue value) {
          if (procedureExistsBuilder_ == null) {
            if (procedureExists_ != null) {
              procedureExists_ =
                io.dstore.Values.booleanValue.newBuilder(procedureExists_).mergeFrom(value).buildPartial();
            } else {
              procedureExists_ = value;
            }
            onChanged();
          } else {
            procedureExistsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public Builder clearProcedureExists() {
          if (procedureExistsBuilder_ == null) {
            procedureExists_ = null;
            onChanged();
          } else {
            procedureExists_ = null;
            procedureExistsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public io.dstore.Values.booleanValue.Builder getProcedureExistsBuilder() {
          
          onChanged();
          return getProcedureExistsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getProcedureExistsOrBuilder() {
          if (procedureExistsBuilder_ != null) {
            return procedureExistsBuilder_.getMessageOrBuilder();
          } else {
            return procedureExists_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : procedureExists_;
          }
        }
        /**
         * <pre>
         * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue procedure_exists = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getProcedureExistsFieldBuilder() {
          if (procedureExistsBuilder_ == null) {
            procedureExistsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getProcedureExists(),
                    getParentForChildren(),
                    isClean());
            procedureExists_ = null;
          }
          return procedureExistsBuilder_;
        }

        private io.dstore.Values.integerValue userExecRightOnDatabaseLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> userExecRightOnDatabaseLevelBuilder_;
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public boolean hasUserExecRightOnDatabaseLevel() {
          return userExecRightOnDatabaseLevelBuilder_ != null || userExecRightOnDatabaseLevel_ != null;
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public io.dstore.Values.integerValue getUserExecRightOnDatabaseLevel() {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            return userExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOnDatabaseLevel_;
          } else {
            return userExecRightOnDatabaseLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public Builder setUserExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            userExecRightOnDatabaseLevel_ = value;
            onChanged();
          } else {
            userExecRightOnDatabaseLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public Builder setUserExecRightOnDatabaseLevel(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            userExecRightOnDatabaseLevel_ = builderForValue.build();
            onChanged();
          } else {
            userExecRightOnDatabaseLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public Builder mergeUserExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            if (userExecRightOnDatabaseLevel_ != null) {
              userExecRightOnDatabaseLevel_ =
                io.dstore.Values.integerValue.newBuilder(userExecRightOnDatabaseLevel_).mergeFrom(value).buildPartial();
            } else {
              userExecRightOnDatabaseLevel_ = value;
            }
            onChanged();
          } else {
            userExecRightOnDatabaseLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public Builder clearUserExecRightOnDatabaseLevel() {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            userExecRightOnDatabaseLevel_ = null;
            onChanged();
          } else {
            userExecRightOnDatabaseLevel_ = null;
            userExecRightOnDatabaseLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public io.dstore.Values.integerValue.Builder getUserExecRightOnDatabaseLevelBuilder() {
          
          onChanged();
          return getUserExecRightOnDatabaseLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getUserExecRightOnDatabaseLevelOrBuilder() {
          if (userExecRightOnDatabaseLevelBuilder_ != null) {
            return userExecRightOnDatabaseLevelBuilder_.getMessageOrBuilder();
          } else {
            return userExecRightOnDatabaseLevel_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOnDatabaseLevel_;
          }
        }
        /**
         * <pre>
         * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_on_database_level = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getUserExecRightOnDatabaseLevelFieldBuilder() {
          if (userExecRightOnDatabaseLevelBuilder_ == null) {
            userExecRightOnDatabaseLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getUserExecRightOnDatabaseLevel(),
                    getParentForChildren(),
                    isClean());
            userExecRightOnDatabaseLevel_ = null;
          }
          return userExecRightOnDatabaseLevelBuilder_;
        }

        private io.dstore.Values.integerValue publicExecRightOnDatabaseLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> publicExecRightOnDatabaseLevelBuilder_;
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public boolean hasPublicExecRightOnDatabaseLevel() {
          return publicExecRightOnDatabaseLevelBuilder_ != null || publicExecRightOnDatabaseLevel_ != null;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public io.dstore.Values.integerValue getPublicExecRightOnDatabaseLevel() {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            return publicExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : publicExecRightOnDatabaseLevel_;
          } else {
            return publicExecRightOnDatabaseLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public Builder setPublicExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            publicExecRightOnDatabaseLevel_ = value;
            onChanged();
          } else {
            publicExecRightOnDatabaseLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public Builder setPublicExecRightOnDatabaseLevel(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            publicExecRightOnDatabaseLevel_ = builderForValue.build();
            onChanged();
          } else {
            publicExecRightOnDatabaseLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public Builder mergePublicExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            if (publicExecRightOnDatabaseLevel_ != null) {
              publicExecRightOnDatabaseLevel_ =
                io.dstore.Values.integerValue.newBuilder(publicExecRightOnDatabaseLevel_).mergeFrom(value).buildPartial();
            } else {
              publicExecRightOnDatabaseLevel_ = value;
            }
            onChanged();
          } else {
            publicExecRightOnDatabaseLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public Builder clearPublicExecRightOnDatabaseLevel() {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            publicExecRightOnDatabaseLevel_ = null;
            onChanged();
          } else {
            publicExecRightOnDatabaseLevel_ = null;
            publicExecRightOnDatabaseLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public io.dstore.Values.integerValue.Builder getPublicExecRightOnDatabaseLevelBuilder() {
          
          onChanged();
          return getPublicExecRightOnDatabaseLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPublicExecRightOnDatabaseLevelOrBuilder() {
          if (publicExecRightOnDatabaseLevelBuilder_ != null) {
            return publicExecRightOnDatabaseLevelBuilder_.getMessageOrBuilder();
          } else {
            return publicExecRightOnDatabaseLevel_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : publicExecRightOnDatabaseLevel_;
          }
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue public_exec_right_on_database_level = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPublicExecRightOnDatabaseLevelFieldBuilder() {
          if (publicExecRightOnDatabaseLevelBuilder_ == null) {
            publicExecRightOnDatabaseLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPublicExecRightOnDatabaseLevel(),
                    getParentForChildren(),
                    isClean());
            publicExecRightOnDatabaseLevel_ = null;
          }
          return publicExecRightOnDatabaseLevelBuilder_;
        }

        private io.dstore.Values.integerValue procedureId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> procedureIdBuilder_;
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public boolean hasProcedureId() {
          return procedureIdBuilder_ != null || procedureId_ != null;
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public io.dstore.Values.integerValue getProcedureId() {
          if (procedureIdBuilder_ == null) {
            return procedureId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureId_;
          } else {
            return procedureIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public Builder setProcedureId(io.dstore.Values.integerValue value) {
          if (procedureIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureId_ = value;
            onChanged();
          } else {
            procedureIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public Builder setProcedureId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (procedureIdBuilder_ == null) {
            procedureId_ = builderForValue.build();
            onChanged();
          } else {
            procedureIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public Builder mergeProcedureId(io.dstore.Values.integerValue value) {
          if (procedureIdBuilder_ == null) {
            if (procedureId_ != null) {
              procedureId_ =
                io.dstore.Values.integerValue.newBuilder(procedureId_).mergeFrom(value).buildPartial();
            } else {
              procedureId_ = value;
            }
            onChanged();
          } else {
            procedureIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public Builder clearProcedureId() {
          if (procedureIdBuilder_ == null) {
            procedureId_ = null;
            onChanged();
          } else {
            procedureId_ = null;
            procedureIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public io.dstore.Values.integerValue.Builder getProcedureIdBuilder() {
          
          onChanged();
          return getProcedureIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getProcedureIdOrBuilder() {
          if (procedureIdBuilder_ != null) {
            return procedureIdBuilder_.getMessageOrBuilder();
          } else {
            return procedureId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : procedureId_;
          }
        }
        /**
         * <pre>
         * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_id = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getProcedureIdFieldBuilder() {
          if (procedureIdBuilder_ == null) {
            procedureIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getProcedureId(),
                    getParentForChildren(),
                    isClean());
            procedureId_ = null;
          }
          return procedureIdBuilder_;
        }

        private io.dstore.Values.stringValue userName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> userNameBuilder_;
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public boolean hasUserName() {
          return userNameBuilder_ != null || userName_ != null;
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public io.dstore.Values.stringValue getUserName() {
          if (userNameBuilder_ == null) {
            return userName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : userName_;
          } else {
            return userNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public Builder setUserName(io.dstore.Values.stringValue value) {
          if (userNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            userName_ = value;
            onChanged();
          } else {
            userNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public Builder setUserName(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (userNameBuilder_ == null) {
            userName_ = builderForValue.build();
            onChanged();
          } else {
            userNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public Builder mergeUserName(io.dstore.Values.stringValue value) {
          if (userNameBuilder_ == null) {
            if (userName_ != null) {
              userName_ =
                io.dstore.Values.stringValue.newBuilder(userName_).mergeFrom(value).buildPartial();
            } else {
              userName_ = value;
            }
            onChanged();
          } else {
            userNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public Builder clearUserName() {
          if (userNameBuilder_ == null) {
            userName_ = null;
            onChanged();
          } else {
            userName_ = null;
            userNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public io.dstore.Values.stringValue.Builder getUserNameBuilder() {
          
          onChanged();
          return getUserNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getUserNameOrBuilder() {
          if (userNameBuilder_ != null) {
            return userNameBuilder_.getMessageOrBuilder();
          } else {
            return userName_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : userName_;
          }
        }
        /**
         * <pre>
         * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
         * </pre>
         *
         * <code>optional .dstore.values.stringValue user_name = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getUserNameFieldBuilder() {
          if (userNameBuilder_ == null) {
            userNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getUserName(),
                    getParentForChildren(),
                    isClean());
            userName_ = null;
          }
          return userNameBuilder_;
        }

        private io.dstore.Values.booleanValue groupExecRightOndstoreLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> groupExecRightOndstoreLevelBuilder_;
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public boolean hasGroupExecRightOndstoreLevel() {
          return groupExecRightOndstoreLevelBuilder_ != null || groupExecRightOndstoreLevel_ != null;
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public io.dstore.Values.booleanValue getGroupExecRightOndstoreLevel() {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            return groupExecRightOndstoreLevel_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : groupExecRightOndstoreLevel_;
          } else {
            return groupExecRightOndstoreLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public Builder setGroupExecRightOndstoreLevel(io.dstore.Values.booleanValue value) {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupExecRightOndstoreLevel_ = value;
            onChanged();
          } else {
            groupExecRightOndstoreLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public Builder setGroupExecRightOndstoreLevel(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            groupExecRightOndstoreLevel_ = builderForValue.build();
            onChanged();
          } else {
            groupExecRightOndstoreLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public Builder mergeGroupExecRightOndstoreLevel(io.dstore.Values.booleanValue value) {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            if (groupExecRightOndstoreLevel_ != null) {
              groupExecRightOndstoreLevel_ =
                io.dstore.Values.booleanValue.newBuilder(groupExecRightOndstoreLevel_).mergeFrom(value).buildPartial();
            } else {
              groupExecRightOndstoreLevel_ = value;
            }
            onChanged();
          } else {
            groupExecRightOndstoreLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public Builder clearGroupExecRightOndstoreLevel() {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            groupExecRightOndstoreLevel_ = null;
            onChanged();
          } else {
            groupExecRightOndstoreLevel_ = null;
            groupExecRightOndstoreLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public io.dstore.Values.booleanValue.Builder getGroupExecRightOndstoreLevelBuilder() {
          
          onChanged();
          return getGroupExecRightOndstoreLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getGroupExecRightOndstoreLevelOrBuilder() {
          if (groupExecRightOndstoreLevelBuilder_ != null) {
            return groupExecRightOndstoreLevelBuilder_.getMessageOrBuilder();
          } else {
            return groupExecRightOndstoreLevel_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : groupExecRightOndstoreLevel_;
          }
        }
        /**
         * <pre>
         * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue group_exec_right_ondstore_level = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getGroupExecRightOndstoreLevelFieldBuilder() {
          if (groupExecRightOndstoreLevelBuilder_ == null) {
            groupExecRightOndstoreLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getGroupExecRightOndstoreLevel(),
                    getParentForChildren(),
                    isClean());
            groupExecRightOndstoreLevel_ = null;
          }
          return groupExecRightOndstoreLevelBuilder_;
        }

        private io.dstore.Values.stringValue procedureName_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> procedureNameBuilder_;
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public boolean hasProcedureName() {
          return procedureNameBuilder_ != null || procedureName_ != null;
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public io.dstore.Values.stringValue getProcedureName() {
          if (procedureNameBuilder_ == null) {
            return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
          } else {
            return procedureNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public Builder setProcedureName(io.dstore.Values.stringValue value) {
          if (procedureNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureName_ = value;
            onChanged();
          } else {
            procedureNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public Builder setProcedureName(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (procedureNameBuilder_ == null) {
            procedureName_ = builderForValue.build();
            onChanged();
          } else {
            procedureNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public Builder mergeProcedureName(io.dstore.Values.stringValue value) {
          if (procedureNameBuilder_ == null) {
            if (procedureName_ != null) {
              procedureName_ =
                io.dstore.Values.stringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
            } else {
              procedureName_ = value;
            }
            onChanged();
          } else {
            procedureNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public Builder clearProcedureName() {
          if (procedureNameBuilder_ == null) {
            procedureName_ = null;
            onChanged();
          } else {
            procedureName_ = null;
            procedureNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public io.dstore.Values.stringValue.Builder getProcedureNameBuilder() {
          
          onChanged();
          return getProcedureNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
          if (procedureNameBuilder_ != null) {
            return procedureNameBuilder_.getMessageOrBuilder();
          } else {
            return procedureName_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
          }
        }
        /**
         * <pre>
         * Name einer Prozedur
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_name = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getProcedureNameFieldBuilder() {
          if (procedureNameBuilder_ == null) {
            procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getProcedureName(),
                    getParentForChildren(),
                    isClean());
            procedureName_ = null;
          }
          return procedureNameBuilder_;
        }

        private io.dstore.Values.integerValue userId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> userIdBuilder_;
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public boolean hasUserId() {
          return userIdBuilder_ != null || userId_ != null;
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public io.dstore.Values.integerValue getUserId() {
          if (userIdBuilder_ == null) {
            return userId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userId_;
          } else {
            return userIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public Builder setUserId(io.dstore.Values.integerValue value) {
          if (userIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            userId_ = value;
            onChanged();
          } else {
            userIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public Builder setUserId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (userIdBuilder_ == null) {
            userId_ = builderForValue.build();
            onChanged();
          } else {
            userIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public Builder mergeUserId(io.dstore.Values.integerValue value) {
          if (userIdBuilder_ == null) {
            if (userId_ != null) {
              userId_ =
                io.dstore.Values.integerValue.newBuilder(userId_).mergeFrom(value).buildPartial();
            } else {
              userId_ = value;
            }
            onChanged();
          } else {
            userIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public Builder clearUserId() {
          if (userIdBuilder_ == null) {
            userId_ = null;
            onChanged();
          } else {
            userId_ = null;
            userIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public io.dstore.Values.integerValue.Builder getUserIdBuilder() {
          
          onChanged();
          return getUserIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getUserIdOrBuilder() {
          if (userIdBuilder_ != null) {
            return userIdBuilder_.getMessageOrBuilder();
          } else {
            return userId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : userId_;
          }
        }
        /**
         * <pre>
         * ID des Benutzers "UserName" aus "UserInfo"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_id = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getUserIdFieldBuilder() {
          if (userIdBuilder_ == null) {
            userIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getUserId(),
                    getParentForChildren(),
                    isClean());
            userId_ = null;
          }
          return userIdBuilder_;
        }

        private io.dstore.Values.booleanValue executeRight_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> executeRightBuilder_;
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public boolean hasExecuteRight() {
          return executeRightBuilder_ != null || executeRight_ != null;
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public io.dstore.Values.booleanValue getExecuteRight() {
          if (executeRightBuilder_ == null) {
            return executeRight_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : executeRight_;
          } else {
            return executeRightBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public Builder setExecuteRight(io.dstore.Values.booleanValue value) {
          if (executeRightBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            executeRight_ = value;
            onChanged();
          } else {
            executeRightBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public Builder setExecuteRight(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (executeRightBuilder_ == null) {
            executeRight_ = builderForValue.build();
            onChanged();
          } else {
            executeRightBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public Builder mergeExecuteRight(io.dstore.Values.booleanValue value) {
          if (executeRightBuilder_ == null) {
            if (executeRight_ != null) {
              executeRight_ =
                io.dstore.Values.booleanValue.newBuilder(executeRight_).mergeFrom(value).buildPartial();
            } else {
              executeRight_ = value;
            }
            onChanged();
          } else {
            executeRightBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public Builder clearExecuteRight() {
          if (executeRightBuilder_ == null) {
            executeRight_ = null;
            onChanged();
          } else {
            executeRight_ = null;
            executeRightBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public io.dstore.Values.booleanValue.Builder getExecuteRightBuilder() {
          
          onChanged();
          return getExecuteRightFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getExecuteRightOrBuilder() {
          if (executeRightBuilder_ != null) {
            return executeRightBuilder_.getMessageOrBuilder();
          } else {
            return executeRight_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : executeRight_;
          }
        }
        /**
         * <pre>
         * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue execute_right = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getExecuteRightFieldBuilder() {
          if (executeRightBuilder_ == null) {
            executeRightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getExecuteRight(),
                    getParentForChildren(),
                    isClean());
            executeRight_ = null;
          }
          return executeRightBuilder_;
        }

        private io.dstore.Values.stringValue procedureFunction_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> procedureFunctionBuilder_;
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public boolean hasProcedureFunction() {
          return procedureFunctionBuilder_ != null || procedureFunction_ != null;
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public io.dstore.Values.stringValue getProcedureFunction() {
          if (procedureFunctionBuilder_ == null) {
            return procedureFunction_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureFunction_;
          } else {
            return procedureFunctionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public Builder setProcedureFunction(io.dstore.Values.stringValue value) {
          if (procedureFunctionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureFunction_ = value;
            onChanged();
          } else {
            procedureFunctionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public Builder setProcedureFunction(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = builderForValue.build();
            onChanged();
          } else {
            procedureFunctionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public Builder mergeProcedureFunction(io.dstore.Values.stringValue value) {
          if (procedureFunctionBuilder_ == null) {
            if (procedureFunction_ != null) {
              procedureFunction_ =
                io.dstore.Values.stringValue.newBuilder(procedureFunction_).mergeFrom(value).buildPartial();
            } else {
              procedureFunction_ = value;
            }
            onChanged();
          } else {
            procedureFunctionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public Builder clearProcedureFunction() {
          if (procedureFunctionBuilder_ == null) {
            procedureFunction_ = null;
            onChanged();
          } else {
            procedureFunction_ = null;
            procedureFunctionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public io.dstore.Values.stringValue.Builder getProcedureFunctionBuilder() {
          
          onChanged();
          return getProcedureFunctionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getProcedureFunctionOrBuilder() {
          if (procedureFunctionBuilder_ != null) {
            return procedureFunctionBuilder_.getMessageOrBuilder();
          } else {
            return procedureFunction_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : procedureFunction_;
          }
        }
        /**
         * <pre>
         * Kurz-Beschreibung der Prozedur "ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue procedure_function = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getProcedureFunctionFieldBuilder() {
          if (procedureFunctionBuilder_ == null) {
            procedureFunctionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getProcedureFunction(),
                    getParentForChildren(),
                    isClean());
            procedureFunction_ = null;
          }
          return procedureFunctionBuilder_;
        }

        private io.dstore.Values.integerValue userExecRightOndstoreLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> userExecRightOndstoreLevelBuilder_;
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public boolean hasUserExecRightOndstoreLevel() {
          return userExecRightOndstoreLevelBuilder_ != null || userExecRightOndstoreLevel_ != null;
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public io.dstore.Values.integerValue getUserExecRightOndstoreLevel() {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            return userExecRightOndstoreLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOndstoreLevel_;
          } else {
            return userExecRightOndstoreLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public Builder setUserExecRightOndstoreLevel(io.dstore.Values.integerValue value) {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            userExecRightOndstoreLevel_ = value;
            onChanged();
          } else {
            userExecRightOndstoreLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public Builder setUserExecRightOndstoreLevel(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            userExecRightOndstoreLevel_ = builderForValue.build();
            onChanged();
          } else {
            userExecRightOndstoreLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public Builder mergeUserExecRightOndstoreLevel(io.dstore.Values.integerValue value) {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            if (userExecRightOndstoreLevel_ != null) {
              userExecRightOndstoreLevel_ =
                io.dstore.Values.integerValue.newBuilder(userExecRightOndstoreLevel_).mergeFrom(value).buildPartial();
            } else {
              userExecRightOndstoreLevel_ = value;
            }
            onChanged();
          } else {
            userExecRightOndstoreLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public Builder clearUserExecRightOndstoreLevel() {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            userExecRightOndstoreLevel_ = null;
            onChanged();
          } else {
            userExecRightOndstoreLevel_ = null;
            userExecRightOndstoreLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public io.dstore.Values.integerValue.Builder getUserExecRightOndstoreLevelBuilder() {
          
          onChanged();
          return getUserExecRightOndstoreLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getUserExecRightOndstoreLevelOrBuilder() {
          if (userExecRightOndstoreLevelBuilder_ != null) {
            return userExecRightOndstoreLevelBuilder_.getMessageOrBuilder();
          } else {
            return userExecRightOndstoreLevel_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : userExecRightOndstoreLevel_;
          }
        }
        /**
         * <pre>
         * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
         * </pre>
         *
         * <code>optional .dstore.values.integerValue user_exec_right_ondstore_level = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getUserExecRightOndstoreLevelFieldBuilder() {
          if (userExecRightOndstoreLevelBuilder_ == null) {
            userExecRightOndstoreLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getUserExecRightOndstoreLevel(),
                    getParentForChildren(),
                    isClean());
            userExecRightOndstoreLevel_ = null;
          }
          return userExecRightOndstoreLevelBuilder_;
        }

        private io.dstore.Values.integerValue groupExecRightOnDatabaseLevel_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> groupExecRightOnDatabaseLevelBuilder_;
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public boolean hasGroupExecRightOnDatabaseLevel() {
          return groupExecRightOnDatabaseLevelBuilder_ != null || groupExecRightOnDatabaseLevel_ != null;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public io.dstore.Values.integerValue getGroupExecRightOnDatabaseLevel() {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            return groupExecRightOnDatabaseLevel_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupExecRightOnDatabaseLevel_;
          } else {
            return groupExecRightOnDatabaseLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public Builder setGroupExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupExecRightOnDatabaseLevel_ = value;
            onChanged();
          } else {
            groupExecRightOnDatabaseLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public Builder setGroupExecRightOnDatabaseLevel(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            groupExecRightOnDatabaseLevel_ = builderForValue.build();
            onChanged();
          } else {
            groupExecRightOnDatabaseLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public Builder mergeGroupExecRightOnDatabaseLevel(io.dstore.Values.integerValue value) {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            if (groupExecRightOnDatabaseLevel_ != null) {
              groupExecRightOnDatabaseLevel_ =
                io.dstore.Values.integerValue.newBuilder(groupExecRightOnDatabaseLevel_).mergeFrom(value).buildPartial();
            } else {
              groupExecRightOnDatabaseLevel_ = value;
            }
            onChanged();
          } else {
            groupExecRightOnDatabaseLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public Builder clearGroupExecRightOnDatabaseLevel() {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            groupExecRightOnDatabaseLevel_ = null;
            onChanged();
          } else {
            groupExecRightOnDatabaseLevel_ = null;
            groupExecRightOnDatabaseLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public io.dstore.Values.integerValue.Builder getGroupExecRightOnDatabaseLevelBuilder() {
          
          onChanged();
          return getGroupExecRightOnDatabaseLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getGroupExecRightOnDatabaseLevelOrBuilder() {
          if (groupExecRightOnDatabaseLevelBuilder_ != null) {
            return groupExecRightOnDatabaseLevelBuilder_.getMessageOrBuilder();
          } else {
            return groupExecRightOnDatabaseLevel_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : groupExecRightOnDatabaseLevel_;
          }
        }
        /**
         * <pre>
         * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_exec_right_on_database_level = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getGroupExecRightOnDatabaseLevelFieldBuilder() {
          if (groupExecRightOnDatabaseLevelBuilder_ == null) {
            groupExecRightOnDatabaseLevelBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getGroupExecRightOnDatabaseLevel(),
                    getParentForChildren(),
                    isClean());
            groupExecRightOnDatabaseLevel_ = null;
          }
          return groupExecRightOnDatabaseLevelBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetExecuteRights_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetExecuteRights_Ad.Response.Row)
      private static final io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row();
      }

      public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetExecuteRights_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetExecuteRights_Ad.Response)
        io.dstore.engine.procedures.MiGetExecuteRightsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.class, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response build() {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response buildPartial() {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Response result = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetExecuteRightsAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.MiGetExecuteRightsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response other) {
        if (other == io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetExecuteRightsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetExecuteRightsAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetExecuteRights_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetExecuteRightsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetExecuteRights_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetExecuteRights_Ad.Response)
    private static final io.dstore.engine.procedures.MiGetExecuteRightsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetExecuteRightsAd.Response();
    }

    public static io.dstore.engine.procedures.MiGetExecuteRightsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetExecuteRightsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5dstore/engine/procedures/mi_GetExecute" +
      "Rights_Ad.proto\022$dstore.engine.mi_GetExe" +
      "cuteRights_Ad\032\023dstore/values.proto\032\033dsto" +
      "re/engine/message.proto\032#dstore/engine/m" +
      "etainformation.proto\"\266\002\n\nParameters\0222\n\016p" +
      "rocedure_name\030\001 \001(\0132\032.dstore.values.stri" +
      "ngValue\022\034\n\023procedure_name_null\030\351\007 \001(\010\022E\n" +
      " get_admin_procedures_for_user_id\030\002 \001(\0132" +
      "\033.dstore.values.integerValue\022.\n%get_admi" +
      "n_procedures_for_user_id_null\030\352\007 \001(\010\022:\n\025",
      "procedure_category_id\030\003 \001(\0132\033.dstore.val" +
      "ues.integerValue\022#\n\032procedure_category_i" +
      "d_null\030\353\007 \001(\010\"\270\007\n\010Response\022H\n\020meta_infor" +
      "mation\030\002 \003(\0132..dstore.engine.metainforma" +
      "tion.MetaInformation\022/\n\007message\030\003 \003(\0132\036." +
      "dstore.engine.message.Message\022?\n\003row\030\004 \003" +
      "(\01322.dstore.engine.mi_GetExecuteRights_A" +
      "d.Response.Row\032\357\005\n\003Row\022\017\n\006row_id\030\220N \001(\005\022" +
      "6\n\020procedure_exists\030\221N \001(\0132\033.dstore.valu" +
      "es.booleanValue\022G\n!user_exec_right_on_da",
      "tabase_level\030\222N \001(\0132\033.dstore.values.inte" +
      "gerValue\022I\n#public_exec_right_on_databas" +
      "e_level\030\223N \001(\0132\033.dstore.values.integerVa" +
      "lue\0222\n\014procedure_id\030\224N \001(\0132\033.dstore.valu" +
      "es.integerValue\022.\n\tuser_name\030\225N \001(\0132\032.ds" +
      "tore.values.stringValue\022E\n\037group_exec_ri" +
      "ght_ondstore_level\030\226N \001(\0132\033.dstore.value" +
      "s.booleanValue\0223\n\016procedure_name\030\227N \001(\0132" +
      "\032.dstore.values.stringValue\022-\n\007user_id\030\230" +
      "N \001(\0132\033.dstore.values.integerValue\0223\n\rex",
      "ecute_right\030\231N \001(\0132\033.dstore.values.boole" +
      "anValue\0227\n\022procedure_function\030\232N \001(\0132\032.d" +
      "store.values.stringValue\022D\n\036user_exec_ri" +
      "ght_ondstore_level\030\233N \001(\0132\033.dstore.value" +
      "s.integerValue\022H\n\"group_exec_right_on_da" +
      "tabase_level\030\234N \001(\0132\033.dstore.values.inte" +
      "gerValueBW\n\033io.dstore.engine.proceduresZ" +
      "8gosdk.dstore.de/engine/procedures/mi_Ge" +
      "tExecuteRights_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetExecuteRights_Ad_Parameters_descriptor,
        new java.lang.String[] { "ProcedureName", "ProcedureNameNull", "GetAdminProceduresForUserId", "GetAdminProceduresForUserIdNull", "ProcedureCategoryId", "ProcedureCategoryIdNull", });
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetExecuteRights_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ProcedureExists", "UserExecRightOnDatabaseLevel", "PublicExecRightOnDatabaseLevel", "ProcedureId", "UserName", "GroupExecRightOndstoreLevel", "ProcedureName", "UserId", "ExecuteRight", "ProcedureFunction", "UserExecRightOndstoreLevel", "GroupExecRightOnDatabaseLevel", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
