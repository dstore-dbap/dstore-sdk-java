// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetProcExecRestrForUsers_Ad.proto

package io.dstore.engine.procedures;

public final class MiGetProcExecRestrForUsersAd {
  private MiGetProcExecRestrForUsersAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    boolean hasProcedureId();
    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    io.dstore.values.IntegerValue getProcedureId();
    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getProcedureIdOrBuilder();

    /**
     * <code>bool procedure_id_null = 1001;</code>
     */
    boolean getProcedureIdNull();

    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    boolean hasRestrictionForUserId();
    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    io.dstore.values.IntegerValue getRestrictionForUserId();
    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder();

    /**
     * <code>bool restriction_for_user_id_null = 1002;</code>
     */
    boolean getRestrictionForUserIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      procedureIdNull_ = false;
      restrictionForUserIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (procedureId_ != null) {
                subBuilder = procedureId_.toBuilder();
              }
              procedureId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureId_);
                procedureId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.values.IntegerValue.Builder subBuilder = null;
              if (restrictionForUserId_ != null) {
                subBuilder = restrictionForUserId_.toBuilder();
              }
              restrictionForUserId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(restrictionForUserId_);
                restrictionForUserId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              restrictionForUserIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.Builder.class);
    }

    public static final int PROCEDURE_ID_FIELD_NUMBER = 1;
    private io.dstore.values.IntegerValue procedureId_;
    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    public boolean hasProcedureId() {
      return procedureId_ != null;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    public io.dstore.values.IntegerValue getProcedureId() {
      return procedureId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureId_;
    }
    /**
     * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getProcedureIdOrBuilder() {
      return getProcedureId();
    }

    public static final int PROCEDURE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean procedureIdNull_;
    /**
     * <code>bool procedure_id_null = 1001;</code>
     */
    public boolean getProcedureIdNull() {
      return procedureIdNull_;
    }

    public static final int RESTRICTION_FOR_USER_ID_FIELD_NUMBER = 2;
    private io.dstore.values.IntegerValue restrictionForUserId_;
    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    public boolean hasRestrictionForUserId() {
      return restrictionForUserId_ != null;
    }
    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    public io.dstore.values.IntegerValue getRestrictionForUserId() {
      return restrictionForUserId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
    }
    /**
     * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
     */
    public io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder() {
      return getRestrictionForUserId();
    }

    public static final int RESTRICTION_FOR_USER_ID_NULL_FIELD_NUMBER = 1002;
    private boolean restrictionForUserIdNull_;
    /**
     * <code>bool restriction_for_user_id_null = 1002;</code>
     */
    public boolean getRestrictionForUserIdNull() {
      return restrictionForUserIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureId_ != null) {
        output.writeMessage(1, getProcedureId());
      }
      if (restrictionForUserId_ != null) {
        output.writeMessage(2, getRestrictionForUserId());
      }
      if (procedureIdNull_ != false) {
        output.writeBool(1001, procedureIdNull_);
      }
      if (restrictionForUserIdNull_ != false) {
        output.writeBool(1002, restrictionForUserIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureId());
      }
      if (restrictionForUserId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRestrictionForUserId());
      }
      if (procedureIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureIdNull_);
      }
      if (restrictionForUserIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, restrictionForUserIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters other = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters) obj;

      boolean result = true;
      result = result && (hasProcedureId() == other.hasProcedureId());
      if (hasProcedureId()) {
        result = result && getProcedureId()
            .equals(other.getProcedureId());
      }
      result = result && (getProcedureIdNull()
          == other.getProcedureIdNull());
      result = result && (hasRestrictionForUserId() == other.hasRestrictionForUserId());
      if (hasRestrictionForUserId()) {
        result = result && getRestrictionForUserId()
            .equals(other.getRestrictionForUserId());
      }
      result = result && (getRestrictionForUserIdNull()
          == other.getRestrictionForUserIdNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProcedureId()) {
        hash = (37 * hash) + PROCEDURE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureId().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureIdNull());
      if (hasRestrictionForUserId()) {
        hash = (37 * hash) + RESTRICTION_FOR_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRestrictionForUserId().hashCode();
      }
      hash = (37 * hash) + RESTRICTION_FOR_USER_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRestrictionForUserIdNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters)
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureIdBuilder_ == null) {
          procedureId_ = null;
        } else {
          procedureId_ = null;
          procedureIdBuilder_ = null;
        }
        procedureIdNull_ = false;

        if (restrictionForUserIdBuilder_ == null) {
          restrictionForUserId_ = null;
        } else {
          restrictionForUserId_ = null;
          restrictionForUserIdBuilder_ = null;
        }
        restrictionForUserIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters build() {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters buildPartial() {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters result = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters(this);
        if (procedureIdBuilder_ == null) {
          result.procedureId_ = procedureId_;
        } else {
          result.procedureId_ = procedureIdBuilder_.build();
        }
        result.procedureIdNull_ = procedureIdNull_;
        if (restrictionForUserIdBuilder_ == null) {
          result.restrictionForUserId_ = restrictionForUserId_;
        } else {
          result.restrictionForUserId_ = restrictionForUserIdBuilder_.build();
        }
        result.restrictionForUserIdNull_ = restrictionForUserIdNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters other) {
        if (other == io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureId()) {
          mergeProcedureId(other.getProcedureId());
        }
        if (other.getProcedureIdNull() != false) {
          setProcedureIdNull(other.getProcedureIdNull());
        }
        if (other.hasRestrictionForUserId()) {
          mergeRestrictionForUserId(other.getRestrictionForUserId());
        }
        if (other.getRestrictionForUserIdNull() != false) {
          setRestrictionForUserIdNull(other.getRestrictionForUserIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.IntegerValue procedureId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> procedureIdBuilder_;
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public boolean hasProcedureId() {
        return procedureIdBuilder_ != null || procedureId_ != null;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public io.dstore.values.IntegerValue getProcedureId() {
        if (procedureIdBuilder_ == null) {
          return procedureId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : procedureId_;
        } else {
          return procedureIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public Builder setProcedureId(io.dstore.values.IntegerValue value) {
        if (procedureIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureId_ = value;
          onChanged();
        } else {
          procedureIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public Builder setProcedureId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (procedureIdBuilder_ == null) {
          procedureId_ = builderForValue.build();
          onChanged();
        } else {
          procedureIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public Builder mergeProcedureId(io.dstore.values.IntegerValue value) {
        if (procedureIdBuilder_ == null) {
          if (procedureId_ != null) {
            procedureId_ =
              io.dstore.values.IntegerValue.newBuilder(procedureId_).mergeFrom(value).buildPartial();
          } else {
            procedureId_ = value;
          }
          onChanged();
        } else {
          procedureIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public Builder clearProcedureId() {
        if (procedureIdBuilder_ == null) {
          procedureId_ = null;
          onChanged();
        } else {
          procedureId_ = null;
          procedureIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public io.dstore.values.IntegerValue.Builder getProcedureIdBuilder() {
        
        onChanged();
        return getProcedureIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getProcedureIdOrBuilder() {
        if (procedureIdBuilder_ != null) {
          return procedureIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : procedureId_;
        }
      }
      /**
       * <code>.dstore.values.IntegerValue procedure_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getProcedureIdFieldBuilder() {
        if (procedureIdBuilder_ == null) {
          procedureIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getProcedureId(),
                  getParentForChildren(),
                  isClean());
          procedureId_ = null;
        }
        return procedureIdBuilder_;
      }

      private boolean procedureIdNull_ ;
      /**
       * <code>bool procedure_id_null = 1001;</code>
       */
      public boolean getProcedureIdNull() {
        return procedureIdNull_;
      }
      /**
       * <code>bool procedure_id_null = 1001;</code>
       */
      public Builder setProcedureIdNull(boolean value) {
        
        procedureIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool procedure_id_null = 1001;</code>
       */
      public Builder clearProcedureIdNull() {
        
        procedureIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.IntegerValue restrictionForUserId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> restrictionForUserIdBuilder_;
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public boolean hasRestrictionForUserId() {
        return restrictionForUserIdBuilder_ != null || restrictionForUserId_ != null;
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public io.dstore.values.IntegerValue getRestrictionForUserId() {
        if (restrictionForUserIdBuilder_ == null) {
          return restrictionForUserId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
        } else {
          return restrictionForUserIdBuilder_.getMessage();
        }
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public Builder setRestrictionForUserId(io.dstore.values.IntegerValue value) {
        if (restrictionForUserIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          restrictionForUserId_ = value;
          onChanged();
        } else {
          restrictionForUserIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public Builder setRestrictionForUserId(
          io.dstore.values.IntegerValue.Builder builderForValue) {
        if (restrictionForUserIdBuilder_ == null) {
          restrictionForUserId_ = builderForValue.build();
          onChanged();
        } else {
          restrictionForUserIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public Builder mergeRestrictionForUserId(io.dstore.values.IntegerValue value) {
        if (restrictionForUserIdBuilder_ == null) {
          if (restrictionForUserId_ != null) {
            restrictionForUserId_ =
              io.dstore.values.IntegerValue.newBuilder(restrictionForUserId_).mergeFrom(value).buildPartial();
          } else {
            restrictionForUserId_ = value;
          }
          onChanged();
        } else {
          restrictionForUserIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public Builder clearRestrictionForUserId() {
        if (restrictionForUserIdBuilder_ == null) {
          restrictionForUserId_ = null;
          onChanged();
        } else {
          restrictionForUserId_ = null;
          restrictionForUserIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public io.dstore.values.IntegerValue.Builder getRestrictionForUserIdBuilder() {
        
        onChanged();
        return getRestrictionForUserIdFieldBuilder().getBuilder();
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder() {
        if (restrictionForUserIdBuilder_ != null) {
          return restrictionForUserIdBuilder_.getMessageOrBuilder();
        } else {
          return restrictionForUserId_ == null ?
              io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
        }
      }
      /**
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
          getRestrictionForUserIdFieldBuilder() {
        if (restrictionForUserIdBuilder_ == null) {
          restrictionForUserIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                  getRestrictionForUserId(),
                  getParentForChildren(),
                  isClean());
          restrictionForUserId_ = null;
        }
        return restrictionForUserIdBuilder_;
      }

      private boolean restrictionForUserIdNull_ ;
      /**
       * <code>bool restriction_for_user_id_null = 1002;</code>
       */
      public boolean getRestrictionForUserIdNull() {
        return restrictionForUserIdNull_;
      }
      /**
       * <code>bool restriction_for_user_id_null = 1002;</code>
       */
      public Builder setRestrictionForUserIdNull(boolean value) {
        
        restrictionForUserIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool restriction_for_user_id_null = 1002;</code>
       */
      public Builder clearRestrictionForUserIdNull() {
        
        restrictionForUserIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Parameters)
    private static final io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters();
    }

    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      boolean hasOperator();
      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      io.dstore.values.StringValue getOperator();
      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      io.dstore.values.StringValueOrBuilder getOperatorOrBuilder();

      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      boolean hasCondition();
      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      io.dstore.values.StringValue getCondition();
      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      io.dstore.values.StringValueOrBuilder getConditionOrBuilder();

      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      boolean hasFromNestingLevel();
      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      io.dstore.values.IntegerValue getFromNestingLevel();
      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getFromNestingLevelOrBuilder();

      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      boolean hasRestrictionForUserId();
      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      io.dstore.values.IntegerValue getRestrictionForUserId();
      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder();

      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      boolean hasConditionNumber();
      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      io.dstore.values.IntegerValue getConditionNumber();
      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getConditionNumberOrBuilder();

      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      boolean hasRestrictionIsActive();
      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      io.dstore.values.BooleanValue getRestrictionIsActive();
      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getRestrictionIsActiveOrBuilder();

      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      boolean hasConditionId();
      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      io.dstore.values.IntegerValue getConditionId();
      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getConditionIdOrBuilder();

      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      boolean hasParameterName();
      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      io.dstore.values.StringValue getParameterName();
      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (operator_ != null) {
                  subBuilder = operator_.toBuilder();
                }
                operator_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator_);
                  operator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (condition_ != null) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (fromNestingLevel_ != null) {
                  subBuilder = fromNestingLevel_.toBuilder();
                }
                fromNestingLevel_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(fromNestingLevel_);
                  fromNestingLevel_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (restrictionForUserId_ != null) {
                  subBuilder = restrictionForUserId_.toBuilder();
                }
                restrictionForUserId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(restrictionForUserId_);
                  restrictionForUserId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (conditionNumber_ != null) {
                  subBuilder = conditionNumber_.toBuilder();
                }
                conditionNumber_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(conditionNumber_);
                  conditionNumber_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (restrictionIsActive_ != null) {
                  subBuilder = restrictionIsActive_.toBuilder();
                }
                restrictionIsActive_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(restrictionIsActive_);
                  restrictionIsActive_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (conditionId_ != null) {
                  subBuilder = conditionId_.toBuilder();
                }
                conditionId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(conditionId_);
                  conditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (parameterName_ != null) {
                  subBuilder = parameterName_.toBuilder();
                }
                parameterName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(parameterName_);
                  parameterName_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int OPERATOR_FIELD_NUMBER = 10001;
      private io.dstore.values.StringValue operator_;
      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      public boolean hasOperator() {
        return operator_ != null;
      }
      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      public io.dstore.values.StringValue getOperator() {
        return operator_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator_;
      }
      /**
       * <pre>
       * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
       * </pre>
       *
       * <code>.dstore.values.StringValue operator = 10001;</code>
       */
      public io.dstore.values.StringValueOrBuilder getOperatorOrBuilder() {
        return getOperator();
      }

      public static final int CONDITION_FIELD_NUMBER = 10002;
      private io.dstore.values.StringValue condition_;
      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      public boolean hasCondition() {
        return condition_ != null;
      }
      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      public io.dstore.values.StringValue getCondition() {
        return condition_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition_;
      }
      /**
       * <pre>
       * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
       * </pre>
       *
       * <code>.dstore.values.StringValue condition = 10002;</code>
       */
      public io.dstore.values.StringValueOrBuilder getConditionOrBuilder() {
        return getCondition();
      }

      public static final int FROM_NESTING_LEVEL_FIELD_NUMBER = 10003;
      private io.dstore.values.IntegerValue fromNestingLevel_;
      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      public boolean hasFromNestingLevel() {
        return fromNestingLevel_ != null;
      }
      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      public io.dstore.values.IntegerValue getFromNestingLevel() {
        return fromNestingLevel_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : fromNestingLevel_;
      }
      /**
       * <pre>
       * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getFromNestingLevelOrBuilder() {
        return getFromNestingLevel();
      }

      public static final int RESTRICTION_FOR_USER_ID_FIELD_NUMBER = 10004;
      private io.dstore.values.IntegerValue restrictionForUserId_;
      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      public boolean hasRestrictionForUserId() {
        return restrictionForUserId_ != null;
      }
      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      public io.dstore.values.IntegerValue getRestrictionForUserId() {
        return restrictionForUserId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
      }
      /**
       * <pre>
       * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
       * </pre>
       *
       * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder() {
        return getRestrictionForUserId();
      }

      public static final int CONDITION_NUMBER_FIELD_NUMBER = 10005;
      private io.dstore.values.IntegerValue conditionNumber_;
      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      public boolean hasConditionNumber() {
        return conditionNumber_ != null;
      }
      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      public io.dstore.values.IntegerValue getConditionNumber() {
        return conditionNumber_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : conditionNumber_;
      }
      /**
       * <pre>
       * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getConditionNumberOrBuilder() {
        return getConditionNumber();
      }

      public static final int RESTRICTION_IS_ACTIVE_FIELD_NUMBER = 10006;
      private io.dstore.values.BooleanValue restrictionIsActive_;
      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      public boolean hasRestrictionIsActive() {
        return restrictionIsActive_ != null;
      }
      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      public io.dstore.values.BooleanValue getRestrictionIsActive() {
        return restrictionIsActive_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : restrictionIsActive_;
      }
      /**
       * <pre>
       * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
       * </pre>
       *
       * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getRestrictionIsActiveOrBuilder() {
        return getRestrictionIsActive();
      }

      public static final int CONDITION_ID_FIELD_NUMBER = 10007;
      private io.dstore.values.IntegerValue conditionId_;
      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      public boolean hasConditionId() {
        return conditionId_ != null;
      }
      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      public io.dstore.values.IntegerValue getConditionId() {
        return conditionId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : conditionId_;
      }
      /**
       * <pre>
       * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
       * </pre>
       *
       * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getConditionIdOrBuilder() {
        return getConditionId();
      }

      public static final int PARAMETER_NAME_FIELD_NUMBER = 10008;
      private io.dstore.values.StringValue parameterName_;
      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      public boolean hasParameterName() {
        return parameterName_ != null;
      }
      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      public io.dstore.values.StringValue getParameterName() {
        return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
      }
      /**
       * <pre>
       * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
       * </pre>
       *
       * <code>.dstore.values.StringValue parameter_name = 10008;</code>
       */
      public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
        return getParameterName();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (operator_ != null) {
          output.writeMessage(10001, getOperator());
        }
        if (condition_ != null) {
          output.writeMessage(10002, getCondition());
        }
        if (fromNestingLevel_ != null) {
          output.writeMessage(10003, getFromNestingLevel());
        }
        if (restrictionForUserId_ != null) {
          output.writeMessage(10004, getRestrictionForUserId());
        }
        if (conditionNumber_ != null) {
          output.writeMessage(10005, getConditionNumber());
        }
        if (restrictionIsActive_ != null) {
          output.writeMessage(10006, getRestrictionIsActive());
        }
        if (conditionId_ != null) {
          output.writeMessage(10007, getConditionId());
        }
        if (parameterName_ != null) {
          output.writeMessage(10008, getParameterName());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (operator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getOperator());
        }
        if (condition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getCondition());
        }
        if (fromNestingLevel_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getFromNestingLevel());
        }
        if (restrictionForUserId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getRestrictionForUserId());
        }
        if (conditionNumber_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getConditionNumber());
        }
        if (restrictionIsActive_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getRestrictionIsActive());
        }
        if (conditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getConditionId());
        }
        if (parameterName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getParameterName());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row other = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasOperator() == other.hasOperator());
        if (hasOperator()) {
          result = result && getOperator()
              .equals(other.getOperator());
        }
        result = result && (hasCondition() == other.hasCondition());
        if (hasCondition()) {
          result = result && getCondition()
              .equals(other.getCondition());
        }
        result = result && (hasFromNestingLevel() == other.hasFromNestingLevel());
        if (hasFromNestingLevel()) {
          result = result && getFromNestingLevel()
              .equals(other.getFromNestingLevel());
        }
        result = result && (hasRestrictionForUserId() == other.hasRestrictionForUserId());
        if (hasRestrictionForUserId()) {
          result = result && getRestrictionForUserId()
              .equals(other.getRestrictionForUserId());
        }
        result = result && (hasConditionNumber() == other.hasConditionNumber());
        if (hasConditionNumber()) {
          result = result && getConditionNumber()
              .equals(other.getConditionNumber());
        }
        result = result && (hasRestrictionIsActive() == other.hasRestrictionIsActive());
        if (hasRestrictionIsActive()) {
          result = result && getRestrictionIsActive()
              .equals(other.getRestrictionIsActive());
        }
        result = result && (hasConditionId() == other.hasConditionId());
        if (hasConditionId()) {
          result = result && getConditionId()
              .equals(other.getConditionId());
        }
        result = result && (hasParameterName() == other.hasParameterName());
        if (hasParameterName()) {
          result = result && getParameterName()
              .equals(other.getParameterName());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasOperator()) {
          hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
          hash = (53 * hash) + getOperator().hashCode();
        }
        if (hasCondition()) {
          hash = (37 * hash) + CONDITION_FIELD_NUMBER;
          hash = (53 * hash) + getCondition().hashCode();
        }
        if (hasFromNestingLevel()) {
          hash = (37 * hash) + FROM_NESTING_LEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getFromNestingLevel().hashCode();
        }
        if (hasRestrictionForUserId()) {
          hash = (37 * hash) + RESTRICTION_FOR_USER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getRestrictionForUserId().hashCode();
        }
        if (hasConditionNumber()) {
          hash = (37 * hash) + CONDITION_NUMBER_FIELD_NUMBER;
          hash = (53 * hash) + getConditionNumber().hashCode();
        }
        if (hasRestrictionIsActive()) {
          hash = (37 * hash) + RESTRICTION_IS_ACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + getRestrictionIsActive().hashCode();
        }
        if (hasConditionId()) {
          hash = (37 * hash) + CONDITION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getConditionId().hashCode();
        }
        if (hasParameterName()) {
          hash = (37 * hash) + PARAMETER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getParameterName().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row)
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (operatorBuilder_ == null) {
            operator_ = null;
          } else {
            operator_ = null;
            operatorBuilder_ = null;
          }
          if (conditionBuilder_ == null) {
            condition_ = null;
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }
          if (fromNestingLevelBuilder_ == null) {
            fromNestingLevel_ = null;
          } else {
            fromNestingLevel_ = null;
            fromNestingLevelBuilder_ = null;
          }
          if (restrictionForUserIdBuilder_ == null) {
            restrictionForUserId_ = null;
          } else {
            restrictionForUserId_ = null;
            restrictionForUserIdBuilder_ = null;
          }
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = null;
          } else {
            conditionNumber_ = null;
            conditionNumberBuilder_ = null;
          }
          if (restrictionIsActiveBuilder_ == null) {
            restrictionIsActive_ = null;
          } else {
            restrictionIsActive_ = null;
            restrictionIsActiveBuilder_ = null;
          }
          if (conditionIdBuilder_ == null) {
            conditionId_ = null;
          } else {
            conditionId_ = null;
            conditionIdBuilder_ = null;
          }
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row build() {
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row result = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (operatorBuilder_ == null) {
            result.operator_ = operator_;
          } else {
            result.operator_ = operatorBuilder_.build();
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (fromNestingLevelBuilder_ == null) {
            result.fromNestingLevel_ = fromNestingLevel_;
          } else {
            result.fromNestingLevel_ = fromNestingLevelBuilder_.build();
          }
          if (restrictionForUserIdBuilder_ == null) {
            result.restrictionForUserId_ = restrictionForUserId_;
          } else {
            result.restrictionForUserId_ = restrictionForUserIdBuilder_.build();
          }
          if (conditionNumberBuilder_ == null) {
            result.conditionNumber_ = conditionNumber_;
          } else {
            result.conditionNumber_ = conditionNumberBuilder_.build();
          }
          if (restrictionIsActiveBuilder_ == null) {
            result.restrictionIsActive_ = restrictionIsActive_;
          } else {
            result.restrictionIsActive_ = restrictionIsActiveBuilder_.build();
          }
          if (conditionIdBuilder_ == null) {
            result.conditionId_ = conditionId_;
          } else {
            result.conditionId_ = conditionIdBuilder_.build();
          }
          if (parameterNameBuilder_ == null) {
            result.parameterName_ = parameterName_;
          } else {
            result.parameterName_ = parameterNameBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasOperator()) {
            mergeOperator(other.getOperator());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasFromNestingLevel()) {
            mergeFromNestingLevel(other.getFromNestingLevel());
          }
          if (other.hasRestrictionForUserId()) {
            mergeRestrictionForUserId(other.getRestrictionForUserId());
          }
          if (other.hasConditionNumber()) {
            mergeConditionNumber(other.getConditionNumber());
          }
          if (other.hasRestrictionIsActive()) {
            mergeRestrictionIsActive(other.getRestrictionIsActive());
          }
          if (other.hasConditionId()) {
            mergeConditionId(other.getConditionId());
          }
          if (other.hasParameterName()) {
            mergeParameterName(other.getParameterName());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.StringValue operator_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> operatorBuilder_;
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public boolean hasOperator() {
          return operatorBuilder_ != null || operator_ != null;
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public io.dstore.values.StringValue getOperator() {
          if (operatorBuilder_ == null) {
            return operator_ == null ? io.dstore.values.StringValue.getDefaultInstance() : operator_;
          } else {
            return operatorBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public Builder setOperator(io.dstore.values.StringValue value) {
          if (operatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator_ = value;
            onChanged();
          } else {
            operatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public Builder setOperator(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (operatorBuilder_ == null) {
            operator_ = builderForValue.build();
            onChanged();
          } else {
            operatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public Builder mergeOperator(io.dstore.values.StringValue value) {
          if (operatorBuilder_ == null) {
            if (operator_ != null) {
              operator_ =
                io.dstore.values.StringValue.newBuilder(operator_).mergeFrom(value).buildPartial();
            } else {
              operator_ = value;
            }
            onChanged();
          } else {
            operatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public Builder clearOperator() {
          if (operatorBuilder_ == null) {
            operator_ = null;
            onChanged();
          } else {
            operator_ = null;
            operatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public io.dstore.values.StringValue.Builder getOperatorBuilder() {
          
          onChanged();
          return getOperatorFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        public io.dstore.values.StringValueOrBuilder getOperatorOrBuilder() {
          if (operatorBuilder_ != null) {
            return operatorBuilder_.getMessageOrBuilder();
          } else {
            return operator_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : operator_;
          }
        }
        /**
         * <pre>
         * Gibt an, wie der Wert zum Parameter "ParameterName" beim Aufruf mit "Condition" verglichen wird
         * </pre>
         *
         * <code>.dstore.values.StringValue operator = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getOperatorFieldBuilder() {
          if (operatorBuilder_ == null) {
            operatorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getOperator(),
                    getParentForChildren(),
                    isClean());
            operator_ = null;
          }
          return operatorBuilder_;
        }

        private io.dstore.values.StringValue condition_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> conditionBuilder_;
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public boolean hasCondition() {
          return conditionBuilder_ != null || condition_ != null;
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public io.dstore.values.StringValue getCondition() {
          if (conditionBuilder_ == null) {
            return condition_ == null ? io.dstore.values.StringValue.getDefaultInstance() : condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public Builder setCondition(io.dstore.values.StringValue value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public Builder setCondition(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public Builder mergeCondition(io.dstore.values.StringValue value) {
          if (conditionBuilder_ == null) {
            if (condition_ != null) {
              condition_ =
                io.dstore.values.StringValue.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = null;
            onChanged();
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public io.dstore.values.StringValue.Builder getConditionBuilder() {
          
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        public io.dstore.values.StringValueOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : condition_;
          }
        }
        /**
         * <pre>
         * Die eigentlich Einschränkung/Bedingung selbst : der Wert beim Aufruf der Prozedur zum Parameter "ParameterName" wird anhand des Operators "Operator" mit diesem Wert verglichen
         * </pre>
         *
         * <code>.dstore.values.StringValue condition = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getCondition(),
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        private io.dstore.values.IntegerValue fromNestingLevel_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> fromNestingLevelBuilder_;
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public boolean hasFromNestingLevel() {
          return fromNestingLevelBuilder_ != null || fromNestingLevel_ != null;
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public io.dstore.values.IntegerValue getFromNestingLevel() {
          if (fromNestingLevelBuilder_ == null) {
            return fromNestingLevel_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : fromNestingLevel_;
          } else {
            return fromNestingLevelBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public Builder setFromNestingLevel(io.dstore.values.IntegerValue value) {
          if (fromNestingLevelBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fromNestingLevel_ = value;
            onChanged();
          } else {
            fromNestingLevelBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public Builder setFromNestingLevel(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (fromNestingLevelBuilder_ == null) {
            fromNestingLevel_ = builderForValue.build();
            onChanged();
          } else {
            fromNestingLevelBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public Builder mergeFromNestingLevel(io.dstore.values.IntegerValue value) {
          if (fromNestingLevelBuilder_ == null) {
            if (fromNestingLevel_ != null) {
              fromNestingLevel_ =
                io.dstore.values.IntegerValue.newBuilder(fromNestingLevel_).mergeFrom(value).buildPartial();
            } else {
              fromNestingLevel_ = value;
            }
            onChanged();
          } else {
            fromNestingLevelBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public Builder clearFromNestingLevel() {
          if (fromNestingLevelBuilder_ == null) {
            fromNestingLevel_ = null;
            onChanged();
          } else {
            fromNestingLevel_ = null;
            fromNestingLevelBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public io.dstore.values.IntegerValue.Builder getFromNestingLevelBuilder() {
          
          onChanged();
          return getFromNestingLevelFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getFromNestingLevelOrBuilder() {
          if (fromNestingLevelBuilder_ != null) {
            return fromNestingLevelBuilder_.getMessageOrBuilder();
          } else {
            return fromNestingLevel_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : fromNestingLevel_;
          }
        }
        /**
         * <pre>
         * Die Einschränkung gilt für Aufrufe der Prozedur auf diesem oder einem höheren "NestingLevel" ("NestingLevel = 1" : direkter Aufruf der Prozedur, "NestingLevel = 2" : Aufruf innerhalb einer anderen Prozedur, usw.)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue from_nesting_level = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getFromNestingLevelFieldBuilder() {
          if (fromNestingLevelBuilder_ == null) {
            fromNestingLevelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getFromNestingLevel(),
                    getParentForChildren(),
                    isClean());
            fromNestingLevel_ = null;
          }
          return fromNestingLevelBuilder_;
        }

        private io.dstore.values.IntegerValue restrictionForUserId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> restrictionForUserIdBuilder_;
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public boolean hasRestrictionForUserId() {
          return restrictionForUserIdBuilder_ != null || restrictionForUserId_ != null;
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public io.dstore.values.IntegerValue getRestrictionForUserId() {
          if (restrictionForUserIdBuilder_ == null) {
            return restrictionForUserId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
          } else {
            return restrictionForUserIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public Builder setRestrictionForUserId(io.dstore.values.IntegerValue value) {
          if (restrictionForUserIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            restrictionForUserId_ = value;
            onChanged();
          } else {
            restrictionForUserIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public Builder setRestrictionForUserId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (restrictionForUserIdBuilder_ == null) {
            restrictionForUserId_ = builderForValue.build();
            onChanged();
          } else {
            restrictionForUserIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public Builder mergeRestrictionForUserId(io.dstore.values.IntegerValue value) {
          if (restrictionForUserIdBuilder_ == null) {
            if (restrictionForUserId_ != null) {
              restrictionForUserId_ =
                io.dstore.values.IntegerValue.newBuilder(restrictionForUserId_).mergeFrom(value).buildPartial();
            } else {
              restrictionForUserId_ = value;
            }
            onChanged();
          } else {
            restrictionForUserIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public Builder clearRestrictionForUserId() {
          if (restrictionForUserIdBuilder_ == null) {
            restrictionForUserId_ = null;
            onChanged();
          } else {
            restrictionForUserId_ = null;
            restrictionForUserIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public io.dstore.values.IntegerValue.Builder getRestrictionForUserIdBuilder() {
          
          onChanged();
          return getRestrictionForUserIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getRestrictionForUserIdOrBuilder() {
          if (restrictionForUserIdBuilder_ != null) {
            return restrictionForUserIdBuilder_.getMessageOrBuilder();
          } else {
            return restrictionForUserId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : restrictionForUserId_;
          }
        }
        /**
         * <pre>
         * ID eines "dStore"-Benutzers, der in "UserInfo" registriert ist (siehe "mi_GetUserInfo_Ad"), für den die Einschränkung gilt. "-1" bedeutet, daß die Einschränkung für alle Benutzer (für die nicht explizit andere Einschränkungen konfiguriert sind) gilt.
         * </pre>
         *
         * <code>.dstore.values.IntegerValue restriction_for_user_id = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getRestrictionForUserIdFieldBuilder() {
          if (restrictionForUserIdBuilder_ == null) {
            restrictionForUserIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getRestrictionForUserId(),
                    getParentForChildren(),
                    isClean());
            restrictionForUserId_ = null;
          }
          return restrictionForUserIdBuilder_;
        }

        private io.dstore.values.IntegerValue conditionNumber_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> conditionNumberBuilder_;
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public boolean hasConditionNumber() {
          return conditionNumberBuilder_ != null || conditionNumber_ != null;
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public io.dstore.values.IntegerValue getConditionNumber() {
          if (conditionNumberBuilder_ == null) {
            return conditionNumber_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : conditionNumber_;
          } else {
            return conditionNumberBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public Builder setConditionNumber(io.dstore.values.IntegerValue value) {
          if (conditionNumberBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            conditionNumber_ = value;
            onChanged();
          } else {
            conditionNumberBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public Builder setConditionNumber(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = builderForValue.build();
            onChanged();
          } else {
            conditionNumberBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public Builder mergeConditionNumber(io.dstore.values.IntegerValue value) {
          if (conditionNumberBuilder_ == null) {
            if (conditionNumber_ != null) {
              conditionNumber_ =
                io.dstore.values.IntegerValue.newBuilder(conditionNumber_).mergeFrom(value).buildPartial();
            } else {
              conditionNumber_ = value;
            }
            onChanged();
          } else {
            conditionNumberBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public Builder clearConditionNumber() {
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = null;
            onChanged();
          } else {
            conditionNumber_ = null;
            conditionNumberBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public io.dstore.values.IntegerValue.Builder getConditionNumberBuilder() {
          
          onChanged();
          return getConditionNumberFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getConditionNumberOrBuilder() {
          if (conditionNumberBuilder_ != null) {
            return conditionNumberBuilder_.getMessageOrBuilder();
          } else {
            return conditionNumber_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : conditionNumber_;
          }
        }
        /**
         * <pre>
         * Um die wievielte Bedingung (sprich Einschränkung) innerhalb des Bedingungs-Blocks "ConditionID" handelt es sich ? (Im Prinzip eine willkürliche Zahl, die eigentlich nur dazu dient, den Datensatz in der Tabelle, also die Bedingung, EINDEUTIG zu machen...)
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_number = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getConditionNumberFieldBuilder() {
          if (conditionNumberBuilder_ == null) {
            conditionNumberBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getConditionNumber(),
                    getParentForChildren(),
                    isClean());
            conditionNumber_ = null;
          }
          return conditionNumberBuilder_;
        }

        private io.dstore.values.BooleanValue restrictionIsActive_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> restrictionIsActiveBuilder_;
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public boolean hasRestrictionIsActive() {
          return restrictionIsActiveBuilder_ != null || restrictionIsActive_ != null;
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public io.dstore.values.BooleanValue getRestrictionIsActive() {
          if (restrictionIsActiveBuilder_ == null) {
            return restrictionIsActive_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : restrictionIsActive_;
          } else {
            return restrictionIsActiveBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public Builder setRestrictionIsActive(io.dstore.values.BooleanValue value) {
          if (restrictionIsActiveBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            restrictionIsActive_ = value;
            onChanged();
          } else {
            restrictionIsActiveBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public Builder setRestrictionIsActive(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (restrictionIsActiveBuilder_ == null) {
            restrictionIsActive_ = builderForValue.build();
            onChanged();
          } else {
            restrictionIsActiveBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public Builder mergeRestrictionIsActive(io.dstore.values.BooleanValue value) {
          if (restrictionIsActiveBuilder_ == null) {
            if (restrictionIsActive_ != null) {
              restrictionIsActive_ =
                io.dstore.values.BooleanValue.newBuilder(restrictionIsActive_).mergeFrom(value).buildPartial();
            } else {
              restrictionIsActive_ = value;
            }
            onChanged();
          } else {
            restrictionIsActiveBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public Builder clearRestrictionIsActive() {
          if (restrictionIsActiveBuilder_ == null) {
            restrictionIsActive_ = null;
            onChanged();
          } else {
            restrictionIsActive_ = null;
            restrictionIsActiveBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public io.dstore.values.BooleanValue.Builder getRestrictionIsActiveBuilder() {
          
          onChanged();
          return getRestrictionIsActiveFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getRestrictionIsActiveOrBuilder() {
          if (restrictionIsActiveBuilder_ != null) {
            return restrictionIsActiveBuilder_.getMessageOrBuilder();
          } else {
            return restrictionIsActive_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : restrictionIsActive_;
          }
        }
        /**
         * <pre>
         * "0" : Die Einschränkung wird bei der Überprüfung nicht beachtet"1" : Die Einschränkung ist aktiv, d.h. diese Bedingung und alle anderen Bedingungen der gleichen "ConditionID" müssen erfüllt sein (oder alle Bedingungen einer anderen "ConditionID")
         * </pre>
         *
         * <code>.dstore.values.BooleanValue restriction_is_active = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getRestrictionIsActiveFieldBuilder() {
          if (restrictionIsActiveBuilder_ == null) {
            restrictionIsActiveBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getRestrictionIsActive(),
                    getParentForChildren(),
                    isClean());
            restrictionIsActive_ = null;
          }
          return restrictionIsActiveBuilder_;
        }

        private io.dstore.values.IntegerValue conditionId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> conditionIdBuilder_;
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public boolean hasConditionId() {
          return conditionIdBuilder_ != null || conditionId_ != null;
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue getConditionId() {
          if (conditionIdBuilder_ == null) {
            return conditionId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : conditionId_;
          } else {
            return conditionIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public Builder setConditionId(io.dstore.values.IntegerValue value) {
          if (conditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            conditionId_ = value;
            onChanged();
          } else {
            conditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public Builder setConditionId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (conditionIdBuilder_ == null) {
            conditionId_ = builderForValue.build();
            onChanged();
          } else {
            conditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public Builder mergeConditionId(io.dstore.values.IntegerValue value) {
          if (conditionIdBuilder_ == null) {
            if (conditionId_ != null) {
              conditionId_ =
                io.dstore.values.IntegerValue.newBuilder(conditionId_).mergeFrom(value).buildPartial();
            } else {
              conditionId_ = value;
            }
            onChanged();
          } else {
            conditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public Builder clearConditionId() {
          if (conditionIdBuilder_ == null) {
            conditionId_ = null;
            onChanged();
          } else {
            conditionId_ = null;
            conditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getConditionIdBuilder() {
          
          onChanged();
          return getConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getConditionIdOrBuilder() {
          if (conditionIdBuilder_ != null) {
            return conditionIdBuilder_.getMessageOrBuilder();
          } else {
            return conditionId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : conditionId_;
          }
        }
        /**
         * <pre>
         * Nummer des "Bedingungs-Blocks", zu dem die Einschränkung gehört. Ist die Überprüfung von Ausführungsbeschränkungen konfiguriert und aktiv, müssen ALLE Bedingungen mindestens EINES Bedingungs-Blocks erfüllt sein, damit der Aufruf "durchgeht".
         * </pre>
         *
         * <code>.dstore.values.IntegerValue condition_id = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getConditionIdFieldBuilder() {
          if (conditionIdBuilder_ == null) {
            conditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getConditionId(),
                    getParentForChildren(),
                    isClean());
            conditionId_ = null;
          }
          return conditionIdBuilder_;
        }

        private io.dstore.values.StringValue parameterName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> parameterNameBuilder_;
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public boolean hasParameterName() {
          return parameterNameBuilder_ != null || parameterName_ != null;
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public io.dstore.values.StringValue getParameterName() {
          if (parameterNameBuilder_ == null) {
            return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
          } else {
            return parameterNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public Builder setParameterName(io.dstore.values.StringValue value) {
          if (parameterNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            parameterName_ = value;
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public Builder setParameterName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (parameterNameBuilder_ == null) {
            parameterName_ = builderForValue.build();
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public Builder mergeParameterName(io.dstore.values.StringValue value) {
          if (parameterNameBuilder_ == null) {
            if (parameterName_ != null) {
              parameterName_ =
                io.dstore.values.StringValue.newBuilder(parameterName_).mergeFrom(value).buildPartial();
            } else {
              parameterName_ = value;
            }
            onChanged();
          } else {
            parameterNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public Builder clearParameterName() {
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
            onChanged();
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public io.dstore.values.StringValue.Builder getParameterNameBuilder() {
          
          onChanged();
          return getParameterNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
          if (parameterNameBuilder_ != null) {
            return parameterNameBuilder_.getMessageOrBuilder();
          } else {
            return parameterName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
          }
        }
        /**
         * <pre>
         * Parameter, für den die Einschränkung gilt. Der Wert zu diesem Parameter beim Aufruf der Prozedur wird anhand des Operators "Operator" mit "Condition" verglichen.
         * </pre>
         *
         * <code>.dstore.values.StringValue parameter_name = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getParameterNameFieldBuilder() {
          if (parameterNameBuilder_ == null) {
            parameterNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getParameterName(),
                    getParentForChildren(),
                    isClean());
            parameterName_ = null;
          }
          return parameterNameBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row)
      private static final io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row();
      }

      public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response other = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response)
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.class, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response build() {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response buildPartial() {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response result = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response other) {
        if (other == io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcExecRestrForUsers_Ad.Response)
    private static final io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response();
    }

    public static io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetProcExecRestrForUsersAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/mi_GetProcExe" +
      "cRestrForUsers_Ad.proto\022,dstore.engine.m" +
      "i_GetProcExecRestrForUsers_Ad\032\023dstore/va" +
      "lues.proto\032\032dstore/engine/engine.proto\"\300" +
      "\001\n\nParameters\0221\n\014procedure_id\030\001 \001(\0132\033.ds" +
      "tore.values.IntegerValue\022\032\n\021procedure_id" +
      "_null\030\351\007 \001(\010\022<\n\027restriction_for_user_id\030" +
      "\002 \001(\0132\033.dstore.values.IntegerValue\022%\n\034re" +
      "striction_for_user_id_null\030\352\007 \001(\010\"\205\005\n\010Re" +
      "sponse\0228\n\020meta_information\030\002 \003(\0132\036.dstor",
      "e.engine.MetaInformation\022\'\n\007message\030\003 \003(" +
      "\0132\026.dstore.engine.Message\022G\n\003row\030\004 \003(\0132:" +
      ".dstore.engine.mi_GetProcExecRestrForUse" +
      "rs_Ad.Response.Row\032\314\003\n\003Row\022\017\n\006row_id\030\220N " +
      "\001(\005\022-\n\010operator\030\221N \001(\0132\032.dstore.values.S" +
      "tringValue\022.\n\tcondition\030\222N \001(\0132\032.dstore." +
      "values.StringValue\0228\n\022from_nesting_level" +
      "\030\223N \001(\0132\033.dstore.values.IntegerValue\022=\n\027" +
      "restriction_for_user_id\030\224N \001(\0132\033.dstore." +
      "values.IntegerValue\0226\n\020condition_number\030",
      "\225N \001(\0132\033.dstore.values.IntegerValue\022;\n\025r" +
      "estriction_is_active\030\226N \001(\0132\033.dstore.val" +
      "ues.BooleanValue\0222\n\014condition_id\030\227N \001(\0132" +
      "\033.dstore.values.IntegerValue\0223\n\016paramete" +
      "r_name\030\230N \001(\0132\032.dstore.values.StringValu" +
      "eB_\n\033io.dstore.engine.proceduresZ@gosdk." +
      "dstore.de/engine/procedures/mi_GetProcEx" +
      "ecRestrForUsers_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Parameters_descriptor,
        new java.lang.String[] { "ProcedureId", "ProcedureIdNull", "RestrictionForUserId", "RestrictionForUserIdNull", });
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcExecRestrForUsers_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Operator", "Condition", "FromNestingLevel", "RestrictionForUserId", "ConditionNumber", "RestrictionIsActive", "ConditionId", "ParameterName", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
