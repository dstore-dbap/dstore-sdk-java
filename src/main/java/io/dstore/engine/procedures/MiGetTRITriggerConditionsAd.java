// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetTRITriggerConditions_Ad.proto

package io.dstore.engine.procedures;

public final class MiGetTRITriggerConditionsAd {
  private MiGetTRITriggerConditionsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    boolean hasTriggerId();
    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    io.dstore.Values.integerValue getTriggerId();
    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getTriggerIdOrBuilder();

    /**
     * <code>optional bool trigger_id_null = 1001;</code>
     */
    boolean getTriggerIdNull();

    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    boolean hasWorkStepNo();
    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    io.dstore.Values.integerValue getWorkStepNo();
    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getWorkStepNoOrBuilder();

    /**
     * <code>optional bool work_step_no_null = 1002;</code>
     */
    boolean getWorkStepNoNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      triggerIdNull_ = false;
      workStepNoNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (triggerId_ != null) {
                subBuilder = triggerId_.toBuilder();
              }
              triggerId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(triggerId_);
                triggerId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (workStepNo_ != null) {
                subBuilder = workStepNo_.toBuilder();
              }
              workStepNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workStepNo_);
                workStepNo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              triggerIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              workStepNoNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.Builder.class);
    }

    public static final int TRIGGER_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue triggerId_;
    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    public boolean hasTriggerId() {
      return triggerId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    public io.dstore.Values.integerValue getTriggerId() {
      return triggerId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : triggerId_;
    }
    /**
     * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getTriggerIdOrBuilder() {
      return getTriggerId();
    }

    public static final int TRIGGER_ID_NULL_FIELD_NUMBER = 1001;
    private boolean triggerIdNull_;
    /**
     * <code>optional bool trigger_id_null = 1001;</code>
     */
    public boolean getTriggerIdNull() {
      return triggerIdNull_;
    }

    public static final int WORK_STEP_NO_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue workStepNo_;
    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    public boolean hasWorkStepNo() {
      return workStepNo_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    public io.dstore.Values.integerValue getWorkStepNo() {
      return workStepNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : workStepNo_;
    }
    /**
     * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getWorkStepNoOrBuilder() {
      return getWorkStepNo();
    }

    public static final int WORK_STEP_NO_NULL_FIELD_NUMBER = 1002;
    private boolean workStepNoNull_;
    /**
     * <code>optional bool work_step_no_null = 1002;</code>
     */
    public boolean getWorkStepNoNull() {
      return workStepNoNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (triggerId_ != null) {
        output.writeMessage(1, getTriggerId());
      }
      if (workStepNo_ != null) {
        output.writeMessage(2, getWorkStepNo());
      }
      if (triggerIdNull_ != false) {
        output.writeBool(1001, triggerIdNull_);
      }
      if (workStepNoNull_ != false) {
        output.writeBool(1002, workStepNoNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (triggerId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTriggerId());
      }
      if (workStepNo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getWorkStepNo());
      }
      if (triggerIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, triggerIdNull_);
      }
      if (workStepNoNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, workStepNoNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters)
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (triggerIdBuilder_ == null) {
          triggerId_ = null;
        } else {
          triggerId_ = null;
          triggerIdBuilder_ = null;
        }
        triggerIdNull_ = false;

        if (workStepNoBuilder_ == null) {
          workStepNo_ = null;
        } else {
          workStepNo_ = null;
          workStepNoBuilder_ = null;
        }
        workStepNoNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters build() {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters buildPartial() {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters result = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters(this);
        if (triggerIdBuilder_ == null) {
          result.triggerId_ = triggerId_;
        } else {
          result.triggerId_ = triggerIdBuilder_.build();
        }
        result.triggerIdNull_ = triggerIdNull_;
        if (workStepNoBuilder_ == null) {
          result.workStepNo_ = workStepNo_;
        } else {
          result.workStepNo_ = workStepNoBuilder_.build();
        }
        result.workStepNoNull_ = workStepNoNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters other) {
        if (other == io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasTriggerId()) {
          mergeTriggerId(other.getTriggerId());
        }
        if (other.getTriggerIdNull() != false) {
          setTriggerIdNull(other.getTriggerIdNull());
        }
        if (other.hasWorkStepNo()) {
          mergeWorkStepNo(other.getWorkStepNo());
        }
        if (other.getWorkStepNoNull() != false) {
          setWorkStepNoNull(other.getWorkStepNoNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue triggerId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> triggerIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public boolean hasTriggerId() {
        return triggerIdBuilder_ != null || triggerId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public io.dstore.Values.integerValue getTriggerId() {
        if (triggerIdBuilder_ == null) {
          return triggerId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : triggerId_;
        } else {
          return triggerIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public Builder setTriggerId(io.dstore.Values.integerValue value) {
        if (triggerIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          triggerId_ = value;
          onChanged();
        } else {
          triggerIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public Builder setTriggerId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (triggerIdBuilder_ == null) {
          triggerId_ = builderForValue.build();
          onChanged();
        } else {
          triggerIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public Builder mergeTriggerId(io.dstore.Values.integerValue value) {
        if (triggerIdBuilder_ == null) {
          if (triggerId_ != null) {
            triggerId_ =
              io.dstore.Values.integerValue.newBuilder(triggerId_).mergeFrom(value).buildPartial();
          } else {
            triggerId_ = value;
          }
          onChanged();
        } else {
          triggerIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public Builder clearTriggerId() {
        if (triggerIdBuilder_ == null) {
          triggerId_ = null;
          onChanged();
        } else {
          triggerId_ = null;
          triggerIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getTriggerIdBuilder() {
        
        onChanged();
        return getTriggerIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTriggerIdOrBuilder() {
        if (triggerIdBuilder_ != null) {
          return triggerIdBuilder_.getMessageOrBuilder();
        } else {
          return triggerId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : triggerId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue trigger_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getTriggerIdFieldBuilder() {
        if (triggerIdBuilder_ == null) {
          triggerIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getTriggerId(),
                  getParentForChildren(),
                  isClean());
          triggerId_ = null;
        }
        return triggerIdBuilder_;
      }

      private boolean triggerIdNull_ ;
      /**
       * <code>optional bool trigger_id_null = 1001;</code>
       */
      public boolean getTriggerIdNull() {
        return triggerIdNull_;
      }
      /**
       * <code>optional bool trigger_id_null = 1001;</code>
       */
      public Builder setTriggerIdNull(boolean value) {
        
        triggerIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool trigger_id_null = 1001;</code>
       */
      public Builder clearTriggerIdNull() {
        
        triggerIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue workStepNo_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> workStepNoBuilder_;
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public boolean hasWorkStepNo() {
        return workStepNoBuilder_ != null || workStepNo_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public io.dstore.Values.integerValue getWorkStepNo() {
        if (workStepNoBuilder_ == null) {
          return workStepNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : workStepNo_;
        } else {
          return workStepNoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public Builder setWorkStepNo(io.dstore.Values.integerValue value) {
        if (workStepNoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workStepNo_ = value;
          onChanged();
        } else {
          workStepNoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public Builder setWorkStepNo(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (workStepNoBuilder_ == null) {
          workStepNo_ = builderForValue.build();
          onChanged();
        } else {
          workStepNoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public Builder mergeWorkStepNo(io.dstore.Values.integerValue value) {
        if (workStepNoBuilder_ == null) {
          if (workStepNo_ != null) {
            workStepNo_ =
              io.dstore.Values.integerValue.newBuilder(workStepNo_).mergeFrom(value).buildPartial();
          } else {
            workStepNo_ = value;
          }
          onChanged();
        } else {
          workStepNoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public Builder clearWorkStepNo() {
        if (workStepNoBuilder_ == null) {
          workStepNo_ = null;
          onChanged();
        } else {
          workStepNo_ = null;
          workStepNoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getWorkStepNoBuilder() {
        
        onChanged();
        return getWorkStepNoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getWorkStepNoOrBuilder() {
        if (workStepNoBuilder_ != null) {
          return workStepNoBuilder_.getMessageOrBuilder();
        } else {
          return workStepNo_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : workStepNo_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue work_step_no = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getWorkStepNoFieldBuilder() {
        if (workStepNoBuilder_ == null) {
          workStepNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getWorkStepNo(),
                  getParentForChildren(),
                  isClean());
          workStepNo_ = null;
        }
        return workStepNoBuilder_;
      }

      private boolean workStepNoNull_ ;
      /**
       * <code>optional bool work_step_no_null = 1002;</code>
       */
      public boolean getWorkStepNoNull() {
        return workStepNoNull_;
      }
      /**
       * <code>optional bool work_step_no_null = 1002;</code>
       */
      public Builder setWorkStepNoNull(boolean value) {
        
        workStepNoNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool work_step_no_null = 1002;</code>
       */
      public Builder clearWorkStepNoNull() {
        
        workStepNoNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Parameters)
    private static final io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters();
    }

    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetTRITriggerConditions_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      boolean hasOperator();
      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      io.dstore.Values.stringValue getOperator();
      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getOperatorOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      boolean hasCondition();
      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      io.dstore.Values.stringValue getCondition();
      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getConditionOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      boolean hasNegateCondition();
      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      io.dstore.Values.booleanValue getNegateCondition();
      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getNegateConditionOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      boolean hasCheckEachAffectedId();
      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      io.dstore.Values.booleanValue getCheckEachAffectedId();
      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getCheckEachAffectedIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      boolean hasConditionNumber();
      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      io.dstore.Values.integerValue getConditionNumber();
      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getConditionNumberOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      boolean hasStrToCompare();
      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      io.dstore.Values.stringValue getStrToCompare();
      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getStrToCompareOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (operator_ != null) {
                  subBuilder = operator_.toBuilder();
                }
                operator_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator_);
                  operator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (condition_ != null) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (negateCondition_ != null) {
                  subBuilder = negateCondition_.toBuilder();
                }
                negateCondition_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(negateCondition_);
                  negateCondition_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (checkEachAffectedId_ != null) {
                  subBuilder = checkEachAffectedId_.toBuilder();
                }
                checkEachAffectedId_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(checkEachAffectedId_);
                  checkEachAffectedId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (conditionNumber_ != null) {
                  subBuilder = conditionNumber_.toBuilder();
                }
                conditionNumber_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(conditionNumber_);
                  conditionNumber_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (strToCompare_ != null) {
                  subBuilder = strToCompare_.toBuilder();
                }
                strToCompare_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(strToCompare_);
                  strToCompare_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int OPERATOR_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue operator_;
      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      public boolean hasOperator() {
        return operator_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      public io.dstore.Values.stringValue getOperator() {
        return operator_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator_;
      }
      /**
       * <code>optional .dstore.values.stringValue operator = 10001;</code>
       *
       * <pre>
       * Wie "StrToCompare" und "Condition" verglichen werden sollen
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getOperatorOrBuilder() {
        return getOperator();
      }

      public static final int CONDITION_FIELD_NUMBER = 10002;
      private io.dstore.Values.stringValue condition_;
      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      public boolean hasCondition() {
        return condition_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      public io.dstore.Values.stringValue getCondition() {
        return condition_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition_;
      }
      /**
       * <code>optional .dstore.values.stringValue condition = 10002;</code>
       *
       * <pre>
       * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getConditionOrBuilder() {
        return getCondition();
      }

      public static final int NEGATE_CONDITION_FIELD_NUMBER = 10003;
      private io.dstore.Values.booleanValue negateCondition_;
      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      public boolean hasNegateCondition() {
        return negateCondition_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      public io.dstore.Values.booleanValue getNegateCondition() {
        return negateCondition_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : negateCondition_;
      }
      /**
       * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
       *
       * <pre>
       * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getNegateConditionOrBuilder() {
        return getNegateCondition();
      }

      public static final int CHECK_EACH_AFFECTED_ID_FIELD_NUMBER = 10004;
      private io.dstore.Values.booleanValue checkEachAffectedId_;
      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      public boolean hasCheckEachAffectedId() {
        return checkEachAffectedId_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      public io.dstore.Values.booleanValue getCheckEachAffectedId() {
        return checkEachAffectedId_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : checkEachAffectedId_;
      }
      /**
       * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
       *
       * <pre>
       * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getCheckEachAffectedIdOrBuilder() {
        return getCheckEachAffectedId();
      }

      public static final int CONDITION_NUMBER_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue conditionNumber_;
      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      public boolean hasConditionNumber() {
        return conditionNumber_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      public io.dstore.Values.integerValue getConditionNumber() {
        return conditionNumber_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : conditionNumber_;
      }
      /**
       * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
       *
       * <pre>
       * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getConditionNumberOrBuilder() {
        return getConditionNumber();
      }

      public static final int STR_TO_COMPARE_FIELD_NUMBER = 10006;
      private io.dstore.Values.stringValue strToCompare_;
      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      public boolean hasStrToCompare() {
        return strToCompare_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      public io.dstore.Values.stringValue getStrToCompare() {
        return strToCompare_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : strToCompare_;
      }
      /**
       * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
       *
       * <pre>
       * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getStrToCompareOrBuilder() {
        return getStrToCompare();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (operator_ != null) {
          output.writeMessage(10001, getOperator());
        }
        if (condition_ != null) {
          output.writeMessage(10002, getCondition());
        }
        if (negateCondition_ != null) {
          output.writeMessage(10003, getNegateCondition());
        }
        if (checkEachAffectedId_ != null) {
          output.writeMessage(10004, getCheckEachAffectedId());
        }
        if (conditionNumber_ != null) {
          output.writeMessage(10005, getConditionNumber());
        }
        if (strToCompare_ != null) {
          output.writeMessage(10006, getStrToCompare());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (operator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getOperator());
        }
        if (condition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getCondition());
        }
        if (negateCondition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getNegateCondition());
        }
        if (checkEachAffectedId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getCheckEachAffectedId());
        }
        if (conditionNumber_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getConditionNumber());
        }
        if (strToCompare_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getStrToCompare());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row)
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (operatorBuilder_ == null) {
            operator_ = null;
          } else {
            operator_ = null;
            operatorBuilder_ = null;
          }
          if (conditionBuilder_ == null) {
            condition_ = null;
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }
          if (negateConditionBuilder_ == null) {
            negateCondition_ = null;
          } else {
            negateCondition_ = null;
            negateConditionBuilder_ = null;
          }
          if (checkEachAffectedIdBuilder_ == null) {
            checkEachAffectedId_ = null;
          } else {
            checkEachAffectedId_ = null;
            checkEachAffectedIdBuilder_ = null;
          }
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = null;
          } else {
            conditionNumber_ = null;
            conditionNumberBuilder_ = null;
          }
          if (strToCompareBuilder_ == null) {
            strToCompare_ = null;
          } else {
            strToCompare_ = null;
            strToCompareBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row build() {
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row result = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (operatorBuilder_ == null) {
            result.operator_ = operator_;
          } else {
            result.operator_ = operatorBuilder_.build();
          }
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (negateConditionBuilder_ == null) {
            result.negateCondition_ = negateCondition_;
          } else {
            result.negateCondition_ = negateConditionBuilder_.build();
          }
          if (checkEachAffectedIdBuilder_ == null) {
            result.checkEachAffectedId_ = checkEachAffectedId_;
          } else {
            result.checkEachAffectedId_ = checkEachAffectedIdBuilder_.build();
          }
          if (conditionNumberBuilder_ == null) {
            result.conditionNumber_ = conditionNumber_;
          } else {
            result.conditionNumber_ = conditionNumberBuilder_.build();
          }
          if (strToCompareBuilder_ == null) {
            result.strToCompare_ = strToCompare_;
          } else {
            result.strToCompare_ = strToCompareBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasOperator()) {
            mergeOperator(other.getOperator());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasNegateCondition()) {
            mergeNegateCondition(other.getNegateCondition());
          }
          if (other.hasCheckEachAffectedId()) {
            mergeCheckEachAffectedId(other.getCheckEachAffectedId());
          }
          if (other.hasConditionNumber()) {
            mergeConditionNumber(other.getConditionNumber());
          }
          if (other.hasStrToCompare()) {
            mergeStrToCompare(other.getStrToCompare());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue operator_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> operatorBuilder_;
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public boolean hasOperator() {
          return operatorBuilder_ != null || operator_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public io.dstore.Values.stringValue getOperator() {
          if (operatorBuilder_ == null) {
            return operator_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator_;
          } else {
            return operatorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public Builder setOperator(io.dstore.Values.stringValue value) {
          if (operatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator_ = value;
            onChanged();
          } else {
            operatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public Builder setOperator(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (operatorBuilder_ == null) {
            operator_ = builderForValue.build();
            onChanged();
          } else {
            operatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public Builder mergeOperator(io.dstore.Values.stringValue value) {
          if (operatorBuilder_ == null) {
            if (operator_ != null) {
              operator_ =
                io.dstore.Values.stringValue.newBuilder(operator_).mergeFrom(value).buildPartial();
            } else {
              operator_ = value;
            }
            onChanged();
          } else {
            operatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public Builder clearOperator() {
          if (operatorBuilder_ == null) {
            operator_ = null;
            onChanged();
          } else {
            operator_ = null;
            operatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getOperatorBuilder() {
          
          onChanged();
          return getOperatorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getOperatorOrBuilder() {
          if (operatorBuilder_ != null) {
            return operatorBuilder_.getMessageOrBuilder();
          } else {
            return operator_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : operator_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator = 10001;</code>
         *
         * <pre>
         * Wie "StrToCompare" und "Condition" verglichen werden sollen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getOperatorFieldBuilder() {
          if (operatorBuilder_ == null) {
            operatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getOperator(),
                    getParentForChildren(),
                    isClean());
            operator_ = null;
          }
          return operatorBuilder_;
        }

        private io.dstore.Values.stringValue condition_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> conditionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public boolean hasCondition() {
          return conditionBuilder_ != null || condition_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValue getCondition() {
          if (conditionBuilder_ == null) {
            return condition_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public Builder setCondition(io.dstore.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public Builder setCondition(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public Builder mergeCondition(io.dstore.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (condition_ != null) {
              condition_ =
                io.dstore.Values.stringValue.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = null;
            onChanged();
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getConditionBuilder() {
          
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : condition_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition = 10002;</code>
         *
         * <pre>
         * "TRI-Ausdruck" mit dem "StrToCompare" anhand des in "Operator" angegebenen Operators verglichen wird
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCondition(),
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        private io.dstore.Values.booleanValue negateCondition_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> negateConditionBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public boolean hasNegateCondition() {
          return negateConditionBuilder_ != null || negateCondition_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public io.dstore.Values.booleanValue getNegateCondition() {
          if (negateConditionBuilder_ == null) {
            return negateCondition_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : negateCondition_;
          } else {
            return negateConditionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public Builder setNegateCondition(io.dstore.Values.booleanValue value) {
          if (negateConditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            negateCondition_ = value;
            onChanged();
          } else {
            negateConditionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public Builder setNegateCondition(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (negateConditionBuilder_ == null) {
            negateCondition_ = builderForValue.build();
            onChanged();
          } else {
            negateConditionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public Builder mergeNegateCondition(io.dstore.Values.booleanValue value) {
          if (negateConditionBuilder_ == null) {
            if (negateCondition_ != null) {
              negateCondition_ =
                io.dstore.Values.booleanValue.newBuilder(negateCondition_).mergeFrom(value).buildPartial();
            } else {
              negateCondition_ = value;
            }
            onChanged();
          } else {
            negateConditionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public Builder clearNegateCondition() {
          if (negateConditionBuilder_ == null) {
            negateCondition_ = null;
            onChanged();
          } else {
            negateCondition_ = null;
            negateConditionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getNegateConditionBuilder() {
          
          onChanged();
          return getNegateConditionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getNegateConditionOrBuilder() {
          if (negateConditionBuilder_ != null) {
            return negateConditionBuilder_.getMessageOrBuilder();
          } else {
            return negateCondition_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : negateCondition_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue negate_condition = 10003;</code>
         *
         * <pre>
         * Gibt an, ob der Vergleich von "StrToCompare" und "Condition" wahr sein muß ("0") oder nicht ("1"), damit die Bedingung "ConditionNumber" als erfüllt gilt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getNegateConditionFieldBuilder() {
          if (negateConditionBuilder_ == null) {
            negateConditionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getNegateCondition(),
                    getParentForChildren(),
                    isClean());
            negateCondition_ = null;
          }
          return negateConditionBuilder_;
        }

        private io.dstore.Values.booleanValue checkEachAffectedId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> checkEachAffectedIdBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public boolean hasCheckEachAffectedId() {
          return checkEachAffectedIdBuilder_ != null || checkEachAffectedId_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public io.dstore.Values.booleanValue getCheckEachAffectedId() {
          if (checkEachAffectedIdBuilder_ == null) {
            return checkEachAffectedId_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : checkEachAffectedId_;
          } else {
            return checkEachAffectedIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public Builder setCheckEachAffectedId(io.dstore.Values.booleanValue value) {
          if (checkEachAffectedIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            checkEachAffectedId_ = value;
            onChanged();
          } else {
            checkEachAffectedIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public Builder setCheckEachAffectedId(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (checkEachAffectedIdBuilder_ == null) {
            checkEachAffectedId_ = builderForValue.build();
            onChanged();
          } else {
            checkEachAffectedIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public Builder mergeCheckEachAffectedId(io.dstore.Values.booleanValue value) {
          if (checkEachAffectedIdBuilder_ == null) {
            if (checkEachAffectedId_ != null) {
              checkEachAffectedId_ =
                io.dstore.Values.booleanValue.newBuilder(checkEachAffectedId_).mergeFrom(value).buildPartial();
            } else {
              checkEachAffectedId_ = value;
            }
            onChanged();
          } else {
            checkEachAffectedIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public Builder clearCheckEachAffectedId() {
          if (checkEachAffectedIdBuilder_ == null) {
            checkEachAffectedId_ = null;
            onChanged();
          } else {
            checkEachAffectedId_ = null;
            checkEachAffectedIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getCheckEachAffectedIdBuilder() {
          
          onChanged();
          return getCheckEachAffectedIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getCheckEachAffectedIdOrBuilder() {
          if (checkEachAffectedIdBuilder_ != null) {
            return checkEachAffectedIdBuilder_.getMessageOrBuilder();
          } else {
            return checkEachAffectedId_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : checkEachAffectedId_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue check_each_affected_id = 10004;</code>
         *
         * <pre>
         * Soll die Bedingung für ALLE IDs, die vom Trigger betroffen sind, geprüft werden ("1") oder sollen die IDs durchlaufen werden, bis bei einer die Bedingung erfüllt ist ("0").
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getCheckEachAffectedIdFieldBuilder() {
          if (checkEachAffectedIdBuilder_ == null) {
            checkEachAffectedIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getCheckEachAffectedId(),
                    getParentForChildren(),
                    isClean());
            checkEachAffectedId_ = null;
          }
          return checkEachAffectedIdBuilder_;
        }

        private io.dstore.Values.integerValue conditionNumber_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> conditionNumberBuilder_;
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public boolean hasConditionNumber() {
          return conditionNumberBuilder_ != null || conditionNumber_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public io.dstore.Values.integerValue getConditionNumber() {
          if (conditionNumberBuilder_ == null) {
            return conditionNumber_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : conditionNumber_;
          } else {
            return conditionNumberBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public Builder setConditionNumber(io.dstore.Values.integerValue value) {
          if (conditionNumberBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            conditionNumber_ = value;
            onChanged();
          } else {
            conditionNumberBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public Builder setConditionNumber(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = builderForValue.build();
            onChanged();
          } else {
            conditionNumberBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public Builder mergeConditionNumber(io.dstore.Values.integerValue value) {
          if (conditionNumberBuilder_ == null) {
            if (conditionNumber_ != null) {
              conditionNumber_ =
                io.dstore.Values.integerValue.newBuilder(conditionNumber_).mergeFrom(value).buildPartial();
            } else {
              conditionNumber_ = value;
            }
            onChanged();
          } else {
            conditionNumberBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public Builder clearConditionNumber() {
          if (conditionNumberBuilder_ == null) {
            conditionNumber_ = null;
            onChanged();
          } else {
            conditionNumber_ = null;
            conditionNumberBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getConditionNumberBuilder() {
          
          onChanged();
          return getConditionNumberFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getConditionNumberOrBuilder() {
          if (conditionNumberBuilder_ != null) {
            return conditionNumberBuilder_.getMessageOrBuilder();
          } else {
            return conditionNumber_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : conditionNumber_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue condition_number = 10005;</code>
         *
         * <pre>
         * X-te Bedingung (bei "1" angefangen, maximal "255"). Bedingungen zur gleichen "WorkStepNo" werden mit "AND" verknüpft. Die Nummer bestimmt die Reihenfolge, in der die Bedingung innerhalb aller Bedingungen zum Arbeitsschritt ausgewertet wird.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getConditionNumberFieldBuilder() {
          if (conditionNumberBuilder_ == null) {
            conditionNumberBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getConditionNumber(),
                    getParentForChildren(),
                    isClean());
            conditionNumber_ = null;
          }
          return conditionNumberBuilder_;
        }

        private io.dstore.Values.stringValue strToCompare_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> strToCompareBuilder_;
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public boolean hasStrToCompare() {
          return strToCompareBuilder_ != null || strToCompare_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValue getStrToCompare() {
          if (strToCompareBuilder_ == null) {
            return strToCompare_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : strToCompare_;
          } else {
            return strToCompareBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public Builder setStrToCompare(io.dstore.Values.stringValue value) {
          if (strToCompareBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            strToCompare_ = value;
            onChanged();
          } else {
            strToCompareBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public Builder setStrToCompare(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (strToCompareBuilder_ == null) {
            strToCompare_ = builderForValue.build();
            onChanged();
          } else {
            strToCompareBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public Builder mergeStrToCompare(io.dstore.Values.stringValue value) {
          if (strToCompareBuilder_ == null) {
            if (strToCompare_ != null) {
              strToCompare_ =
                io.dstore.Values.stringValue.newBuilder(strToCompare_).mergeFrom(value).buildPartial();
            } else {
              strToCompare_ = value;
            }
            onChanged();
          } else {
            strToCompareBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public Builder clearStrToCompare() {
          if (strToCompareBuilder_ == null) {
            strToCompare_ = null;
            onChanged();
          } else {
            strToCompare_ = null;
            strToCompareBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getStrToCompareBuilder() {
          
          onChanged();
          return getStrToCompareFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getStrToCompareOrBuilder() {
          if (strToCompareBuilder_ != null) {
            return strToCompareBuilder_.getMessageOrBuilder();
          } else {
            return strToCompare_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : strToCompare_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue str_to_compare = 10006;</code>
         *
         * <pre>
         * "TRI-Ausdruck", der anhand des in "Operator" angegebenen Operators mit "Condition" verglichen wird
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getStrToCompareFieldBuilder() {
          if (strToCompareBuilder_ == null) {
            strToCompareBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getStrToCompare(),
                    getParentForChildren(),
                    isClean());
            strToCompare_ = null;
          }
          return strToCompareBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row)
      private static final io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row();
      }

      public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetTRITriggerConditions_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetTRITriggerConditions_Ad.Response)
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.class, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response build() {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response buildPartial() {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response result = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response other) {
        if (other == io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.mi_GetTRITriggerConditions_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.Row.Builder, io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetTRITriggerConditions_Ad.Response)
    private static final io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response();
    }

    public static io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetTRITriggerConditionsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n<dstore/engine/procedures/mi_GetTRITrig" +
      "gerConditions_Ad.proto\022+dstore.engine.mi" +
      "_GetTRITriggerConditions_Ad\032\023dstore/valu" +
      "es.proto\032\031dstore/engine/error.proto\032\033dst" +
      "ore/engine/message.proto\032#dstore/engine/" +
      "metainformation.proto\"\246\001\n\nParameters\022/\n\n" +
      "trigger_id\030\001 \001(\0132\033.dstore.values.integer" +
      "Value\022\030\n\017trigger_id_null\030\351\007 \001(\010\0221\n\014work_" +
      "step_no\030\002 \001(\0132\033.dstore.values.integerVal" +
      "ue\022\032\n\021work_step_no_null\030\352\007 \001(\010\"\323\004\n\010Respo",
      "nse\022)\n\005error\030\001 \001(\0132\032.dstore.engine.error" +
      ".Error\022H\n\020meta_information\030\002 \003(\0132..dstor" +
      "e.engine.metainformation.MetaInformation" +
      "\022/\n\007message\030\003 \003(\0132\036.dstore.engine.messag" +
      "e.Message\022F\n\003row\030\004 \003(\01329.dstore.engine.m" +
      "i_GetTRITriggerConditions_Ad.Response.Ro" +
      "w\032\330\002\n\003Row\022\017\n\006row_id\030\220N \001(\005\022-\n\010operator\030\221" +
      "N \001(\0132\032.dstore.values.stringValue\022.\n\tcon" +
      "dition\030\222N \001(\0132\032.dstore.values.stringValu" +
      "e\0226\n\020negate_condition\030\223N \001(\0132\033.dstore.va",
      "lues.booleanValue\022<\n\026check_each_affected" +
      "_id\030\224N \001(\0132\033.dstore.values.booleanValue\022" +
      "6\n\020condition_number\030\225N \001(\0132\033.dstore.valu" +
      "es.integerValue\0223\n\016str_to_compare\030\226N \001(\013" +
      "2\032.dstore.values.stringValueB^\n\033io.dstor" +
      "e.engine.proceduresZ?gosdk.dstore.de/eng" +
      "ine/procedures/mi_GetTRITriggerCondition" +
      "s_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Parameters_descriptor,
        new java.lang.String[] { "TriggerId", "TriggerIdNull", "WorkStepNo", "WorkStepNoNull", });
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetTRITriggerConditions_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Operator", "Condition", "NegateCondition", "CheckEachAffectedId", "ConditionNumber", "StrToCompare", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
