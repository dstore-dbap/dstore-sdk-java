// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetCampaignBonusItems_Pu.proto

package io.dstore.engine.procedures;

public final class OmGetCampaignBonusItemsPu {
  private OmGetCampaignBonusItemsPu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBonusItems_Pu.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    boolean hasBenefitId();
    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    io.dstore.Values.integerValue getBenefitId();
    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getBenefitIdOrBuilder();

    /**
     * <code>optional bool benefit_id_null = 1001;</code>
     */
    boolean getBenefitIdNull();

    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    boolean hasOnlyDefinition();
    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    io.dstore.Values.integerValue getOnlyDefinition();
    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getOnlyDefinitionOrBuilder();

    /**
     * <code>optional bool only_definition_null = 1002;</code>
     */
    boolean getOnlyDefinitionNull();

    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    boolean hasSortByCharacteristicIdList();
    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    io.dstore.Values.stringValue getSortByCharacteristicIdList();
    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    io.dstore.Values.stringValueOrBuilder getSortByCharacteristicIdListOrBuilder();

    /**
     * <code>optional bool sort_by_characteristic_id_list_null = 1003;</code>
     */
    boolean getSortByCharacteristicIdListNull();

    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    boolean hasSortOptionList();
    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    io.dstore.Values.stringValue getSortOptionList();
    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    io.dstore.Values.stringValueOrBuilder getSortOptionListOrBuilder();

    /**
     * <code>optional bool sort_option_list_null = 1004;</code>
     */
    boolean getSortOptionListNull();

    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    boolean hasInheritDepthOptionList();
    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    io.dstore.Values.stringValue getInheritDepthOptionList();
    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    io.dstore.Values.stringValueOrBuilder getInheritDepthOptionListOrBuilder();

    /**
     * <code>optional bool inherit_depth_option_list_null = 1005;</code>
     */
    boolean getInheritDepthOptionListNull();

    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    boolean hasRecursiveEvaluationOptionList();
    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    io.dstore.Values.stringValue getRecursiveEvaluationOptionList();
    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    io.dstore.Values.stringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder();

    /**
     * <code>optional bool recursive_evaluation_option_list_null = 1006;</code>
     */
    boolean getRecursiveEvaluationOptionListNull();

    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    boolean hasGetValuesForSortByCharacs();
    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    io.dstore.Values.booleanValue getGetValuesForSortByCharacs();
    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    io.dstore.Values.booleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder();

    /**
     * <code>optional bool get_values_for_sort_by_characs_null = 1007;</code>
     */
    boolean getGetValuesForSortByCharacsNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      benefitIdNull_ = false;
      onlyDefinitionNull_ = false;
      sortByCharacteristicIdListNull_ = false;
      sortOptionListNull_ = false;
      inheritDepthOptionListNull_ = false;
      recursiveEvaluationOptionListNull_ = false;
      getValuesForSortByCharacsNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (benefitId_ != null) {
                subBuilder = benefitId_.toBuilder();
              }
              benefitId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(benefitId_);
                benefitId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (onlyDefinition_ != null) {
                subBuilder = onlyDefinition_.toBuilder();
              }
              onlyDefinition_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onlyDefinition_);
                onlyDefinition_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (sortByCharacteristicIdList_ != null) {
                subBuilder = sortByCharacteristicIdList_.toBuilder();
              }
              sortByCharacteristicIdList_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortByCharacteristicIdList_);
                sortByCharacteristicIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (sortOptionList_ != null) {
                subBuilder = sortOptionList_.toBuilder();
              }
              sortOptionList_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sortOptionList_);
                sortOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (inheritDepthOptionList_ != null) {
                subBuilder = inheritDepthOptionList_.toBuilder();
              }
              inheritDepthOptionList_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(inheritDepthOptionList_);
                inheritDepthOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (recursiveEvaluationOptionList_ != null) {
                subBuilder = recursiveEvaluationOptionList_.toBuilder();
              }
              recursiveEvaluationOptionList_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recursiveEvaluationOptionList_);
                recursiveEvaluationOptionList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              io.dstore.Values.booleanValue.Builder subBuilder = null;
              if (getValuesForSortByCharacs_ != null) {
                subBuilder = getValuesForSortByCharacs_.toBuilder();
              }
              getValuesForSortByCharacs_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getValuesForSortByCharacs_);
                getValuesForSortByCharacs_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              benefitIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              onlyDefinitionNull_ = input.readBool();
              break;
            }
            case 8024: {

              sortByCharacteristicIdListNull_ = input.readBool();
              break;
            }
            case 8032: {

              sortOptionListNull_ = input.readBool();
              break;
            }
            case 8040: {

              inheritDepthOptionListNull_ = input.readBool();
              break;
            }
            case 8048: {

              recursiveEvaluationOptionListNull_ = input.readBool();
              break;
            }
            case 8056: {

              getValuesForSortByCharacsNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.Builder.class);
    }

    public static final int BENEFIT_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue benefitId_;
    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    public boolean hasBenefitId() {
      return benefitId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    public io.dstore.Values.integerValue getBenefitId() {
      return benefitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : benefitId_;
    }
    /**
     * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getBenefitIdOrBuilder() {
      return getBenefitId();
    }

    public static final int BENEFIT_ID_NULL_FIELD_NUMBER = 1001;
    private boolean benefitIdNull_;
    /**
     * <code>optional bool benefit_id_null = 1001;</code>
     */
    public boolean getBenefitIdNull() {
      return benefitIdNull_;
    }

    public static final int ONLY_DEFINITION_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue onlyDefinition_;
    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    public boolean hasOnlyDefinition() {
      return onlyDefinition_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    public io.dstore.Values.integerValue getOnlyDefinition() {
      return onlyDefinition_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : onlyDefinition_;
    }
    /**
     * <code>optional .dstore.values.integerValue only_definition = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getOnlyDefinitionOrBuilder() {
      return getOnlyDefinition();
    }

    public static final int ONLY_DEFINITION_NULL_FIELD_NUMBER = 1002;
    private boolean onlyDefinitionNull_;
    /**
     * <code>optional bool only_definition_null = 1002;</code>
     */
    public boolean getOnlyDefinitionNull() {
      return onlyDefinitionNull_;
    }

    public static final int SORT_BY_CHARACTERISTIC_ID_LIST_FIELD_NUMBER = 3;
    private io.dstore.Values.stringValue sortByCharacteristicIdList_;
    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    public boolean hasSortByCharacteristicIdList() {
      return sortByCharacteristicIdList_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    public io.dstore.Values.stringValue getSortByCharacteristicIdList() {
      return sortByCharacteristicIdList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : sortByCharacteristicIdList_;
    }
    /**
     * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getSortByCharacteristicIdListOrBuilder() {
      return getSortByCharacteristicIdList();
    }

    public static final int SORT_BY_CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER = 1003;
    private boolean sortByCharacteristicIdListNull_;
    /**
     * <code>optional bool sort_by_characteristic_id_list_null = 1003;</code>
     */
    public boolean getSortByCharacteristicIdListNull() {
      return sortByCharacteristicIdListNull_;
    }

    public static final int SORT_OPTION_LIST_FIELD_NUMBER = 4;
    private io.dstore.Values.stringValue sortOptionList_;
    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    public boolean hasSortOptionList() {
      return sortOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    public io.dstore.Values.stringValue getSortOptionList() {
      return sortOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : sortOptionList_;
    }
    /**
     * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getSortOptionListOrBuilder() {
      return getSortOptionList();
    }

    public static final int SORT_OPTION_LIST_NULL_FIELD_NUMBER = 1004;
    private boolean sortOptionListNull_;
    /**
     * <code>optional bool sort_option_list_null = 1004;</code>
     */
    public boolean getSortOptionListNull() {
      return sortOptionListNull_;
    }

    public static final int INHERIT_DEPTH_OPTION_LIST_FIELD_NUMBER = 5;
    private io.dstore.Values.stringValue inheritDepthOptionList_;
    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    public boolean hasInheritDepthOptionList() {
      return inheritDepthOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    public io.dstore.Values.stringValue getInheritDepthOptionList() {
      return inheritDepthOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : inheritDepthOptionList_;
    }
    /**
     * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getInheritDepthOptionListOrBuilder() {
      return getInheritDepthOptionList();
    }

    public static final int INHERIT_DEPTH_OPTION_LIST_NULL_FIELD_NUMBER = 1005;
    private boolean inheritDepthOptionListNull_;
    /**
     * <code>optional bool inherit_depth_option_list_null = 1005;</code>
     */
    public boolean getInheritDepthOptionListNull() {
      return inheritDepthOptionListNull_;
    }

    public static final int RECURSIVE_EVALUATION_OPTION_LIST_FIELD_NUMBER = 6;
    private io.dstore.Values.stringValue recursiveEvaluationOptionList_;
    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    public boolean hasRecursiveEvaluationOptionList() {
      return recursiveEvaluationOptionList_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    public io.dstore.Values.stringValue getRecursiveEvaluationOptionList() {
      return recursiveEvaluationOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
    }
    /**
     * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder() {
      return getRecursiveEvaluationOptionList();
    }

    public static final int RECURSIVE_EVALUATION_OPTION_LIST_NULL_FIELD_NUMBER = 1006;
    private boolean recursiveEvaluationOptionListNull_;
    /**
     * <code>optional bool recursive_evaluation_option_list_null = 1006;</code>
     */
    public boolean getRecursiveEvaluationOptionListNull() {
      return recursiveEvaluationOptionListNull_;
    }

    public static final int GET_VALUES_FOR_SORT_BY_CHARACS_FIELD_NUMBER = 7;
    private io.dstore.Values.booleanValue getValuesForSortByCharacs_;
    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    public boolean hasGetValuesForSortByCharacs() {
      return getValuesForSortByCharacs_ != null;
    }
    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    public io.dstore.Values.booleanValue getGetValuesForSortByCharacs() {
      return getValuesForSortByCharacs_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
    }
    /**
     * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
     */
    public io.dstore.Values.booleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder() {
      return getGetValuesForSortByCharacs();
    }

    public static final int GET_VALUES_FOR_SORT_BY_CHARACS_NULL_FIELD_NUMBER = 1007;
    private boolean getValuesForSortByCharacsNull_;
    /**
     * <code>optional bool get_values_for_sort_by_characs_null = 1007;</code>
     */
    public boolean getGetValuesForSortByCharacsNull() {
      return getValuesForSortByCharacsNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (benefitId_ != null) {
        output.writeMessage(1, getBenefitId());
      }
      if (onlyDefinition_ != null) {
        output.writeMessage(2, getOnlyDefinition());
      }
      if (sortByCharacteristicIdList_ != null) {
        output.writeMessage(3, getSortByCharacteristicIdList());
      }
      if (sortOptionList_ != null) {
        output.writeMessage(4, getSortOptionList());
      }
      if (inheritDepthOptionList_ != null) {
        output.writeMessage(5, getInheritDepthOptionList());
      }
      if (recursiveEvaluationOptionList_ != null) {
        output.writeMessage(6, getRecursiveEvaluationOptionList());
      }
      if (getValuesForSortByCharacs_ != null) {
        output.writeMessage(7, getGetValuesForSortByCharacs());
      }
      if (benefitIdNull_ != false) {
        output.writeBool(1001, benefitIdNull_);
      }
      if (onlyDefinitionNull_ != false) {
        output.writeBool(1002, onlyDefinitionNull_);
      }
      if (sortByCharacteristicIdListNull_ != false) {
        output.writeBool(1003, sortByCharacteristicIdListNull_);
      }
      if (sortOptionListNull_ != false) {
        output.writeBool(1004, sortOptionListNull_);
      }
      if (inheritDepthOptionListNull_ != false) {
        output.writeBool(1005, inheritDepthOptionListNull_);
      }
      if (recursiveEvaluationOptionListNull_ != false) {
        output.writeBool(1006, recursiveEvaluationOptionListNull_);
      }
      if (getValuesForSortByCharacsNull_ != false) {
        output.writeBool(1007, getValuesForSortByCharacsNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (benefitId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBenefitId());
      }
      if (onlyDefinition_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOnlyDefinition());
      }
      if (sortByCharacteristicIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSortByCharacteristicIdList());
      }
      if (sortOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSortOptionList());
      }
      if (inheritDepthOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getInheritDepthOptionList());
      }
      if (recursiveEvaluationOptionList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRecursiveEvaluationOptionList());
      }
      if (getValuesForSortByCharacs_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getGetValuesForSortByCharacs());
      }
      if (benefitIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, benefitIdNull_);
      }
      if (onlyDefinitionNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, onlyDefinitionNull_);
      }
      if (sortByCharacteristicIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, sortByCharacteristicIdListNull_);
      }
      if (sortOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, sortOptionListNull_);
      }
      if (inheritDepthOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, inheritDepthOptionListNull_);
      }
      if (recursiveEvaluationOptionListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1006, recursiveEvaluationOptionListNull_);
      }
      if (getValuesForSortByCharacsNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1007, getValuesForSortByCharacsNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Parameters)
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (benefitIdBuilder_ == null) {
          benefitId_ = null;
        } else {
          benefitId_ = null;
          benefitIdBuilder_ = null;
        }
        benefitIdNull_ = false;

        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = null;
        } else {
          onlyDefinition_ = null;
          onlyDefinitionBuilder_ = null;
        }
        onlyDefinitionNull_ = false;

        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = null;
        } else {
          sortByCharacteristicIdList_ = null;
          sortByCharacteristicIdListBuilder_ = null;
        }
        sortByCharacteristicIdListNull_ = false;

        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = null;
        } else {
          sortOptionList_ = null;
          sortOptionListBuilder_ = null;
        }
        sortOptionListNull_ = false;

        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = null;
        } else {
          inheritDepthOptionList_ = null;
          inheritDepthOptionListBuilder_ = null;
        }
        inheritDepthOptionListNull_ = false;

        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = null;
        } else {
          recursiveEvaluationOptionList_ = null;
          recursiveEvaluationOptionListBuilder_ = null;
        }
        recursiveEvaluationOptionListNull_ = false;

        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = null;
        } else {
          getValuesForSortByCharacs_ = null;
          getValuesForSortByCharacsBuilder_ = null;
        }
        getValuesForSortByCharacsNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters build() {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters buildPartial() {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters result = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters(this);
        if (benefitIdBuilder_ == null) {
          result.benefitId_ = benefitId_;
        } else {
          result.benefitId_ = benefitIdBuilder_.build();
        }
        result.benefitIdNull_ = benefitIdNull_;
        if (onlyDefinitionBuilder_ == null) {
          result.onlyDefinition_ = onlyDefinition_;
        } else {
          result.onlyDefinition_ = onlyDefinitionBuilder_.build();
        }
        result.onlyDefinitionNull_ = onlyDefinitionNull_;
        if (sortByCharacteristicIdListBuilder_ == null) {
          result.sortByCharacteristicIdList_ = sortByCharacteristicIdList_;
        } else {
          result.sortByCharacteristicIdList_ = sortByCharacteristicIdListBuilder_.build();
        }
        result.sortByCharacteristicIdListNull_ = sortByCharacteristicIdListNull_;
        if (sortOptionListBuilder_ == null) {
          result.sortOptionList_ = sortOptionList_;
        } else {
          result.sortOptionList_ = sortOptionListBuilder_.build();
        }
        result.sortOptionListNull_ = sortOptionListNull_;
        if (inheritDepthOptionListBuilder_ == null) {
          result.inheritDepthOptionList_ = inheritDepthOptionList_;
        } else {
          result.inheritDepthOptionList_ = inheritDepthOptionListBuilder_.build();
        }
        result.inheritDepthOptionListNull_ = inheritDepthOptionListNull_;
        if (recursiveEvaluationOptionListBuilder_ == null) {
          result.recursiveEvaluationOptionList_ = recursiveEvaluationOptionList_;
        } else {
          result.recursiveEvaluationOptionList_ = recursiveEvaluationOptionListBuilder_.build();
        }
        result.recursiveEvaluationOptionListNull_ = recursiveEvaluationOptionListNull_;
        if (getValuesForSortByCharacsBuilder_ == null) {
          result.getValuesForSortByCharacs_ = getValuesForSortByCharacs_;
        } else {
          result.getValuesForSortByCharacs_ = getValuesForSortByCharacsBuilder_.build();
        }
        result.getValuesForSortByCharacsNull_ = getValuesForSortByCharacsNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters other) {
        if (other == io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters.getDefaultInstance()) return this;
        if (other.hasBenefitId()) {
          mergeBenefitId(other.getBenefitId());
        }
        if (other.getBenefitIdNull() != false) {
          setBenefitIdNull(other.getBenefitIdNull());
        }
        if (other.hasOnlyDefinition()) {
          mergeOnlyDefinition(other.getOnlyDefinition());
        }
        if (other.getOnlyDefinitionNull() != false) {
          setOnlyDefinitionNull(other.getOnlyDefinitionNull());
        }
        if (other.hasSortByCharacteristicIdList()) {
          mergeSortByCharacteristicIdList(other.getSortByCharacteristicIdList());
        }
        if (other.getSortByCharacteristicIdListNull() != false) {
          setSortByCharacteristicIdListNull(other.getSortByCharacteristicIdListNull());
        }
        if (other.hasSortOptionList()) {
          mergeSortOptionList(other.getSortOptionList());
        }
        if (other.getSortOptionListNull() != false) {
          setSortOptionListNull(other.getSortOptionListNull());
        }
        if (other.hasInheritDepthOptionList()) {
          mergeInheritDepthOptionList(other.getInheritDepthOptionList());
        }
        if (other.getInheritDepthOptionListNull() != false) {
          setInheritDepthOptionListNull(other.getInheritDepthOptionListNull());
        }
        if (other.hasRecursiveEvaluationOptionList()) {
          mergeRecursiveEvaluationOptionList(other.getRecursiveEvaluationOptionList());
        }
        if (other.getRecursiveEvaluationOptionListNull() != false) {
          setRecursiveEvaluationOptionListNull(other.getRecursiveEvaluationOptionListNull());
        }
        if (other.hasGetValuesForSortByCharacs()) {
          mergeGetValuesForSortByCharacs(other.getGetValuesForSortByCharacs());
        }
        if (other.getGetValuesForSortByCharacsNull() != false) {
          setGetValuesForSortByCharacsNull(other.getGetValuesForSortByCharacsNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue benefitId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> benefitIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public boolean hasBenefitId() {
        return benefitIdBuilder_ != null || benefitId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public io.dstore.Values.integerValue getBenefitId() {
        if (benefitIdBuilder_ == null) {
          return benefitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : benefitId_;
        } else {
          return benefitIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public Builder setBenefitId(io.dstore.Values.integerValue value) {
        if (benefitIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          benefitId_ = value;
          onChanged();
        } else {
          benefitIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public Builder setBenefitId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (benefitIdBuilder_ == null) {
          benefitId_ = builderForValue.build();
          onChanged();
        } else {
          benefitIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public Builder mergeBenefitId(io.dstore.Values.integerValue value) {
        if (benefitIdBuilder_ == null) {
          if (benefitId_ != null) {
            benefitId_ =
              io.dstore.Values.integerValue.newBuilder(benefitId_).mergeFrom(value).buildPartial();
          } else {
            benefitId_ = value;
          }
          onChanged();
        } else {
          benefitIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public Builder clearBenefitId() {
        if (benefitIdBuilder_ == null) {
          benefitId_ = null;
          onChanged();
        } else {
          benefitId_ = null;
          benefitIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getBenefitIdBuilder() {
        
        onChanged();
        return getBenefitIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getBenefitIdOrBuilder() {
        if (benefitIdBuilder_ != null) {
          return benefitIdBuilder_.getMessageOrBuilder();
        } else {
          return benefitId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : benefitId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue benefit_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getBenefitIdFieldBuilder() {
        if (benefitIdBuilder_ == null) {
          benefitIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getBenefitId(),
                  getParentForChildren(),
                  isClean());
          benefitId_ = null;
        }
        return benefitIdBuilder_;
      }

      private boolean benefitIdNull_ ;
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public boolean getBenefitIdNull() {
        return benefitIdNull_;
      }
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public Builder setBenefitIdNull(boolean value) {
        
        benefitIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool benefit_id_null = 1001;</code>
       */
      public Builder clearBenefitIdNull() {
        
        benefitIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue onlyDefinition_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> onlyDefinitionBuilder_;
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public boolean hasOnlyDefinition() {
        return onlyDefinitionBuilder_ != null || onlyDefinition_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public io.dstore.Values.integerValue getOnlyDefinition() {
        if (onlyDefinitionBuilder_ == null) {
          return onlyDefinition_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : onlyDefinition_;
        } else {
          return onlyDefinitionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public Builder setOnlyDefinition(io.dstore.Values.integerValue value) {
        if (onlyDefinitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onlyDefinition_ = value;
          onChanged();
        } else {
          onlyDefinitionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public Builder setOnlyDefinition(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = builderForValue.build();
          onChanged();
        } else {
          onlyDefinitionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public Builder mergeOnlyDefinition(io.dstore.Values.integerValue value) {
        if (onlyDefinitionBuilder_ == null) {
          if (onlyDefinition_ != null) {
            onlyDefinition_ =
              io.dstore.Values.integerValue.newBuilder(onlyDefinition_).mergeFrom(value).buildPartial();
          } else {
            onlyDefinition_ = value;
          }
          onChanged();
        } else {
          onlyDefinitionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public Builder clearOnlyDefinition() {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinition_ = null;
          onChanged();
        } else {
          onlyDefinition_ = null;
          onlyDefinitionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getOnlyDefinitionBuilder() {
        
        onChanged();
        return getOnlyDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getOnlyDefinitionOrBuilder() {
        if (onlyDefinitionBuilder_ != null) {
          return onlyDefinitionBuilder_.getMessageOrBuilder();
        } else {
          return onlyDefinition_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : onlyDefinition_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue only_definition = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getOnlyDefinitionFieldBuilder() {
        if (onlyDefinitionBuilder_ == null) {
          onlyDefinitionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getOnlyDefinition(),
                  getParentForChildren(),
                  isClean());
          onlyDefinition_ = null;
        }
        return onlyDefinitionBuilder_;
      }

      private boolean onlyDefinitionNull_ ;
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public boolean getOnlyDefinitionNull() {
        return onlyDefinitionNull_;
      }
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public Builder setOnlyDefinitionNull(boolean value) {
        
        onlyDefinitionNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool only_definition_null = 1002;</code>
       */
      public Builder clearOnlyDefinitionNull() {
        
        onlyDefinitionNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue sortByCharacteristicIdList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> sortByCharacteristicIdListBuilder_;
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public boolean hasSortByCharacteristicIdList() {
        return sortByCharacteristicIdListBuilder_ != null || sortByCharacteristicIdList_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public io.dstore.Values.stringValue getSortByCharacteristicIdList() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          return sortByCharacteristicIdList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : sortByCharacteristicIdList_;
        } else {
          return sortByCharacteristicIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public Builder setSortByCharacteristicIdList(io.dstore.Values.stringValue value) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortByCharacteristicIdList_ = value;
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public Builder setSortByCharacteristicIdList(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = builderForValue.build();
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public Builder mergeSortByCharacteristicIdList(io.dstore.Values.stringValue value) {
        if (sortByCharacteristicIdListBuilder_ == null) {
          if (sortByCharacteristicIdList_ != null) {
            sortByCharacteristicIdList_ =
              io.dstore.Values.stringValue.newBuilder(sortByCharacteristicIdList_).mergeFrom(value).buildPartial();
          } else {
            sortByCharacteristicIdList_ = value;
          }
          onChanged();
        } else {
          sortByCharacteristicIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public Builder clearSortByCharacteristicIdList() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdList_ = null;
          onChanged();
        } else {
          sortByCharacteristicIdList_ = null;
          sortByCharacteristicIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public io.dstore.Values.stringValue.Builder getSortByCharacteristicIdListBuilder() {
        
        onChanged();
        return getSortByCharacteristicIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSortByCharacteristicIdListOrBuilder() {
        if (sortByCharacteristicIdListBuilder_ != null) {
          return sortByCharacteristicIdListBuilder_.getMessageOrBuilder();
        } else {
          return sortByCharacteristicIdList_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : sortByCharacteristicIdList_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue sort_by_characteristic_id_list = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getSortByCharacteristicIdListFieldBuilder() {
        if (sortByCharacteristicIdListBuilder_ == null) {
          sortByCharacteristicIdListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getSortByCharacteristicIdList(),
                  getParentForChildren(),
                  isClean());
          sortByCharacteristicIdList_ = null;
        }
        return sortByCharacteristicIdListBuilder_;
      }

      private boolean sortByCharacteristicIdListNull_ ;
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1003;</code>
       */
      public boolean getSortByCharacteristicIdListNull() {
        return sortByCharacteristicIdListNull_;
      }
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1003;</code>
       */
      public Builder setSortByCharacteristicIdListNull(boolean value) {
        
        sortByCharacteristicIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sort_by_characteristic_id_list_null = 1003;</code>
       */
      public Builder clearSortByCharacteristicIdListNull() {
        
        sortByCharacteristicIdListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue sortOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> sortOptionListBuilder_;
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public boolean hasSortOptionList() {
        return sortOptionListBuilder_ != null || sortOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public io.dstore.Values.stringValue getSortOptionList() {
        if (sortOptionListBuilder_ == null) {
          return sortOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : sortOptionList_;
        } else {
          return sortOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public Builder setSortOptionList(io.dstore.Values.stringValue value) {
        if (sortOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sortOptionList_ = value;
          onChanged();
        } else {
          sortOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public Builder setSortOptionList(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = builderForValue.build();
          onChanged();
        } else {
          sortOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public Builder mergeSortOptionList(io.dstore.Values.stringValue value) {
        if (sortOptionListBuilder_ == null) {
          if (sortOptionList_ != null) {
            sortOptionList_ =
              io.dstore.Values.stringValue.newBuilder(sortOptionList_).mergeFrom(value).buildPartial();
          } else {
            sortOptionList_ = value;
          }
          onChanged();
        } else {
          sortOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public Builder clearSortOptionList() {
        if (sortOptionListBuilder_ == null) {
          sortOptionList_ = null;
          onChanged();
        } else {
          sortOptionList_ = null;
          sortOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public io.dstore.Values.stringValue.Builder getSortOptionListBuilder() {
        
        onChanged();
        return getSortOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSortOptionListOrBuilder() {
        if (sortOptionListBuilder_ != null) {
          return sortOptionListBuilder_.getMessageOrBuilder();
        } else {
          return sortOptionList_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : sortOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue sort_option_list = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getSortOptionListFieldBuilder() {
        if (sortOptionListBuilder_ == null) {
          sortOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getSortOptionList(),
                  getParentForChildren(),
                  isClean());
          sortOptionList_ = null;
        }
        return sortOptionListBuilder_;
      }

      private boolean sortOptionListNull_ ;
      /**
       * <code>optional bool sort_option_list_null = 1004;</code>
       */
      public boolean getSortOptionListNull() {
        return sortOptionListNull_;
      }
      /**
       * <code>optional bool sort_option_list_null = 1004;</code>
       */
      public Builder setSortOptionListNull(boolean value) {
        
        sortOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool sort_option_list_null = 1004;</code>
       */
      public Builder clearSortOptionListNull() {
        
        sortOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue inheritDepthOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> inheritDepthOptionListBuilder_;
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public boolean hasInheritDepthOptionList() {
        return inheritDepthOptionListBuilder_ != null || inheritDepthOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public io.dstore.Values.stringValue getInheritDepthOptionList() {
        if (inheritDepthOptionListBuilder_ == null) {
          return inheritDepthOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : inheritDepthOptionList_;
        } else {
          return inheritDepthOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public Builder setInheritDepthOptionList(io.dstore.Values.stringValue value) {
        if (inheritDepthOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          inheritDepthOptionList_ = value;
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public Builder setInheritDepthOptionList(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = builderForValue.build();
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public Builder mergeInheritDepthOptionList(io.dstore.Values.stringValue value) {
        if (inheritDepthOptionListBuilder_ == null) {
          if (inheritDepthOptionList_ != null) {
            inheritDepthOptionList_ =
              io.dstore.Values.stringValue.newBuilder(inheritDepthOptionList_).mergeFrom(value).buildPartial();
          } else {
            inheritDepthOptionList_ = value;
          }
          onChanged();
        } else {
          inheritDepthOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public Builder clearInheritDepthOptionList() {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionList_ = null;
          onChanged();
        } else {
          inheritDepthOptionList_ = null;
          inheritDepthOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public io.dstore.Values.stringValue.Builder getInheritDepthOptionListBuilder() {
        
        onChanged();
        return getInheritDepthOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getInheritDepthOptionListOrBuilder() {
        if (inheritDepthOptionListBuilder_ != null) {
          return inheritDepthOptionListBuilder_.getMessageOrBuilder();
        } else {
          return inheritDepthOptionList_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : inheritDepthOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue inherit_depth_option_list = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getInheritDepthOptionListFieldBuilder() {
        if (inheritDepthOptionListBuilder_ == null) {
          inheritDepthOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getInheritDepthOptionList(),
                  getParentForChildren(),
                  isClean());
          inheritDepthOptionList_ = null;
        }
        return inheritDepthOptionListBuilder_;
      }

      private boolean inheritDepthOptionListNull_ ;
      /**
       * <code>optional bool inherit_depth_option_list_null = 1005;</code>
       */
      public boolean getInheritDepthOptionListNull() {
        return inheritDepthOptionListNull_;
      }
      /**
       * <code>optional bool inherit_depth_option_list_null = 1005;</code>
       */
      public Builder setInheritDepthOptionListNull(boolean value) {
        
        inheritDepthOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inherit_depth_option_list_null = 1005;</code>
       */
      public Builder clearInheritDepthOptionListNull() {
        
        inheritDepthOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.stringValue recursiveEvaluationOptionList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> recursiveEvaluationOptionListBuilder_;
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public boolean hasRecursiveEvaluationOptionList() {
        return recursiveEvaluationOptionListBuilder_ != null || recursiveEvaluationOptionList_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public io.dstore.Values.stringValue getRecursiveEvaluationOptionList() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          return recursiveEvaluationOptionList_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
        } else {
          return recursiveEvaluationOptionListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public Builder setRecursiveEvaluationOptionList(io.dstore.Values.stringValue value) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recursiveEvaluationOptionList_ = value;
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public Builder setRecursiveEvaluationOptionList(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = builderForValue.build();
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public Builder mergeRecursiveEvaluationOptionList(io.dstore.Values.stringValue value) {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          if (recursiveEvaluationOptionList_ != null) {
            recursiveEvaluationOptionList_ =
              io.dstore.Values.stringValue.newBuilder(recursiveEvaluationOptionList_).mergeFrom(value).buildPartial();
          } else {
            recursiveEvaluationOptionList_ = value;
          }
          onChanged();
        } else {
          recursiveEvaluationOptionListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public Builder clearRecursiveEvaluationOptionList() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionList_ = null;
          onChanged();
        } else {
          recursiveEvaluationOptionList_ = null;
          recursiveEvaluationOptionListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public io.dstore.Values.stringValue.Builder getRecursiveEvaluationOptionListBuilder() {
        
        onChanged();
        return getRecursiveEvaluationOptionListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getRecursiveEvaluationOptionListOrBuilder() {
        if (recursiveEvaluationOptionListBuilder_ != null) {
          return recursiveEvaluationOptionListBuilder_.getMessageOrBuilder();
        } else {
          return recursiveEvaluationOptionList_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : recursiveEvaluationOptionList_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue recursive_evaluation_option_list = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getRecursiveEvaluationOptionListFieldBuilder() {
        if (recursiveEvaluationOptionListBuilder_ == null) {
          recursiveEvaluationOptionListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getRecursiveEvaluationOptionList(),
                  getParentForChildren(),
                  isClean());
          recursiveEvaluationOptionList_ = null;
        }
        return recursiveEvaluationOptionListBuilder_;
      }

      private boolean recursiveEvaluationOptionListNull_ ;
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1006;</code>
       */
      public boolean getRecursiveEvaluationOptionListNull() {
        return recursiveEvaluationOptionListNull_;
      }
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1006;</code>
       */
      public Builder setRecursiveEvaluationOptionListNull(boolean value) {
        
        recursiveEvaluationOptionListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool recursive_evaluation_option_list_null = 1006;</code>
       */
      public Builder clearRecursiveEvaluationOptionListNull() {
        
        recursiveEvaluationOptionListNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.booleanValue getValuesForSortByCharacs_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> getValuesForSortByCharacsBuilder_;
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public boolean hasGetValuesForSortByCharacs() {
        return getValuesForSortByCharacsBuilder_ != null || getValuesForSortByCharacs_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public io.dstore.Values.booleanValue getGetValuesForSortByCharacs() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          return getValuesForSortByCharacs_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
        } else {
          return getValuesForSortByCharacsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public Builder setGetValuesForSortByCharacs(io.dstore.Values.booleanValue value) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getValuesForSortByCharacs_ = value;
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public Builder setGetValuesForSortByCharacs(
          io.dstore.Values.booleanValue.Builder builderForValue) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = builderForValue.build();
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public Builder mergeGetValuesForSortByCharacs(io.dstore.Values.booleanValue value) {
        if (getValuesForSortByCharacsBuilder_ == null) {
          if (getValuesForSortByCharacs_ != null) {
            getValuesForSortByCharacs_ =
              io.dstore.Values.booleanValue.newBuilder(getValuesForSortByCharacs_).mergeFrom(value).buildPartial();
          } else {
            getValuesForSortByCharacs_ = value;
          }
          onChanged();
        } else {
          getValuesForSortByCharacsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public Builder clearGetValuesForSortByCharacs() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacs_ = null;
          onChanged();
        } else {
          getValuesForSortByCharacs_ = null;
          getValuesForSortByCharacsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public io.dstore.Values.booleanValue.Builder getGetValuesForSortByCharacsBuilder() {
        
        onChanged();
        return getGetValuesForSortByCharacsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getGetValuesForSortByCharacsOrBuilder() {
        if (getValuesForSortByCharacsBuilder_ != null) {
          return getValuesForSortByCharacsBuilder_.getMessageOrBuilder();
        } else {
          return getValuesForSortByCharacs_ == null ?
              io.dstore.Values.booleanValue.getDefaultInstance() : getValuesForSortByCharacs_;
        }
      }
      /**
       * <code>optional .dstore.values.booleanValue get_values_for_sort_by_characs = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
          getGetValuesForSortByCharacsFieldBuilder() {
        if (getValuesForSortByCharacsBuilder_ == null) {
          getValuesForSortByCharacsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                  getGetValuesForSortByCharacs(),
                  getParentForChildren(),
                  isClean());
          getValuesForSortByCharacs_ = null;
        }
        return getValuesForSortByCharacsBuilder_;
      }

      private boolean getValuesForSortByCharacsNull_ ;
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1007;</code>
       */
      public boolean getGetValuesForSortByCharacsNull() {
        return getValuesForSortByCharacsNull_;
      }
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1007;</code>
       */
      public Builder setGetValuesForSortByCharacsNull(boolean value) {
        
        getValuesForSortByCharacsNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool get_values_for_sort_by_characs_null = 1007;</code>
       */
      public Builder clearGetValuesForSortByCharacsNull() {
        
        getValuesForSortByCharacsNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Parameters)
    private static final io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters();
    }

    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBonusItems_Pu.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      boolean hasNodeDescription();
      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.Values.stringValue getNodeDescription();
      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      boolean hasValue2();
      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValue getValue2();
      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue2OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      boolean hasValue3();
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValue getValue3();
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue3OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      boolean hasValue1();
      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValue getValue1();
      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getValue1OrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      boolean hasItemSetId();
      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      io.dstore.Values.integerValue getItemSetId();
      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemSetIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      boolean hasTreeNodeId();
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      io.dstore.Values.integerValue getTreeNodeId();
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      boolean hasBonusFromOneSetOnly();
      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      io.dstore.Values.booleanValue getBonusFromOneSetOnly();
      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getBonusFromOneSetOnlyOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      boolean hasMaxQuantity();
      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      io.dstore.Values.integerValue getMaxQuantity();
      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getMaxQuantityOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      boolean hasItemConditionId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      io.dstore.Values.integerValue getItemConditionId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemConditionIdOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      boolean hasItemConditionDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      io.dstore.Values.stringValue getItemConditionDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      boolean hasSortNo();
      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      io.dstore.Values.integerValue getSortNo();
      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      boolean hasItemGroupSortNo();
      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      io.dstore.Values.integerValue getItemGroupSortNo();
      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      boolean hasOperator1();
      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      io.dstore.Values.stringValue getOperator1();
      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getOperator1OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      boolean hasCondition1();
      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      io.dstore.Values.stringValue getCondition1();
      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getCondition1OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      boolean hasCondition2();
      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      io.dstore.Values.stringValue getCondition2();
      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getCondition2OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      boolean hasOperator2();
      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      io.dstore.Values.stringValue getOperator2();
      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getOperator2OrBuilder();

      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      boolean hasItemConditionGroupDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      io.dstore.Values.stringValue getItemConditionGroupDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      boolean hasCombinePartsWithANDOperator();
      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.Values.booleanValue getCombinePartsWithANDOperator();
      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      boolean hasRecursiveEvaluation();
      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      io.dstore.Values.integerValue getRecursiveEvaluation();
      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      boolean hasItemPartSortNo();
      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      io.dstore.Values.integerValue getItemPartSortNo();
      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemPartSortNoOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      boolean hasDomainTreeNodeIds();
      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      io.dstore.Values.stringValue getDomainTreeNodeIds();
      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      io.dstore.Values.integerValue getNodeCharacteristicId();
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      boolean hasItemConditionPartId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      io.dstore.Values.integerValue getItemConditionPartId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder();

      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      boolean hasCombineGroupsWithANDOperator();
      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.Values.booleanValue getCombineGroupsWithANDOperator();
      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      io.dstore.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      boolean hasItemConditionPartDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      io.dstore.Values.stringValue getItemConditionPartDescription();
      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder();

      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      boolean hasLevelIds();
      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      io.dstore.Values.stringValue getLevelIds();
      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      io.dstore.Values.stringValueOrBuilder getLevelIdsOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      boolean hasItemConditionGroupId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      io.dstore.Values.integerValue getItemConditionGroupId();
      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder();

      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      boolean hasInheritDepth();
      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      io.dstore.Values.integerValue getInheritDepth();
      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      io.dstore.Values.integerValueOrBuilder getInheritDepthOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value2_ != null) {
                  subBuilder = value2_.toBuilder();
                }
                value2_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value2_);
                  value2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value3_ != null) {
                  subBuilder = value3_.toBuilder();
                }
                value3_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value3_);
                  value3_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (value1_ != null) {
                  subBuilder = value1_.toBuilder();
                }
                value1_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value1_);
                  value1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemSetId_ != null) {
                  subBuilder = itemSetId_.toBuilder();
                }
                itemSetId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemSetId_);
                  itemSetId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (bonusFromOneSetOnly_ != null) {
                  subBuilder = bonusFromOneSetOnly_.toBuilder();
                }
                bonusFromOneSetOnly_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bonusFromOneSetOnly_);
                  bonusFromOneSetOnly_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (maxQuantity_ != null) {
                  subBuilder = maxQuantity_.toBuilder();
                }
                maxQuantity_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(maxQuantity_);
                  maxQuantity_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemConditionId_ != null) {
                  subBuilder = itemConditionId_.toBuilder();
                }
                itemConditionId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionId_);
                  itemConditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (itemConditionDescription_ != null) {
                  subBuilder = itemConditionDescription_.toBuilder();
                }
                itemConditionDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionDescription_);
                  itemConditionDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 160050: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240010: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemGroupSortNo_ != null) {
                  subBuilder = itemGroupSortNo_.toBuilder();
                }
                itemGroupSortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemGroupSortNo_);
                  itemGroupSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (operator1_ != null) {
                  subBuilder = operator1_.toBuilder();
                }
                operator1_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator1_);
                  operator1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (condition1_ != null) {
                  subBuilder = condition1_.toBuilder();
                }
                condition1_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition1_);
                  condition1_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (condition2_ != null) {
                  subBuilder = condition2_.toBuilder();
                }
                condition2_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition2_);
                  condition2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (operator2_ != null) {
                  subBuilder = operator2_.toBuilder();
                }
                operator2_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(operator2_);
                  operator2_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240050: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (itemConditionGroupDescription_ != null) {
                  subBuilder = itemConditionGroupDescription_.toBuilder();
                }
                itemConditionGroupDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupDescription_);
                  itemConditionGroupDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240058: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (combinePartsWithANDOperator_ != null) {
                  subBuilder = combinePartsWithANDOperator_.toBuilder();
                }
                combinePartsWithANDOperator_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combinePartsWithANDOperator_);
                  combinePartsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (recursiveEvaluation_ != null) {
                  subBuilder = recursiveEvaluation_.toBuilder();
                }
                recursiveEvaluation_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(recursiveEvaluation_);
                  recursiveEvaluation_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240074: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemPartSortNo_ != null) {
                  subBuilder = itemPartSortNo_.toBuilder();
                }
                itemPartSortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemPartSortNo_);
                  itemPartSortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240090: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (domainTreeNodeIds_ != null) {
                  subBuilder = domainTreeNodeIds_.toBuilder();
                }
                domainTreeNodeIds_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(domainTreeNodeIds_);
                  domainTreeNodeIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240098: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240106: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemConditionPartId_ != null) {
                  subBuilder = itemConditionPartId_.toBuilder();
                }
                itemConditionPartId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartId_);
                  itemConditionPartId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240138: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (combineGroupsWithANDOperator_ != null) {
                  subBuilder = combineGroupsWithANDOperator_.toBuilder();
                }
                combineGroupsWithANDOperator_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(combineGroupsWithANDOperator_);
                  combineGroupsWithANDOperator_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240146: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (itemConditionPartDescription_ != null) {
                  subBuilder = itemConditionPartDescription_.toBuilder();
                }
                itemConditionPartDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionPartDescription_);
                  itemConditionPartDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240154: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (levelIds_ != null) {
                  subBuilder = levelIds_.toBuilder();
                }
                levelIds_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelIds_);
                  levelIds_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240162: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (itemConditionGroupId_ != null) {
                  subBuilder = itemConditionGroupId_.toBuilder();
                }
                itemConditionGroupId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(itemConditionGroupId_);
                  itemConditionGroupId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 240186: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (inheritDepth_ != null) {
                  subBuilder = inheritDepth_.toBuilder();
                }
                inheritDepth_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(inheritDepth_);
                  inheritDepth_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue nodeDescription_;
      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue node_description = 10001;</code>
       *
       * <pre>
       * Bezeichnung der "NodeID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int VALUE2_FIELD_NUMBER = 10002;
      private io.dstore.Values.stringValue value2_;
      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public boolean hasValue2() {
        return value2_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValue getValue2() {
        return value2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value2_;
      }
      /**
       * <code>optional .dstore.values.stringValue value2 = 10002;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue2OrBuilder() {
        return getValue2();
      }

      public static final int VALUE3_FIELD_NUMBER = 10003;
      private io.dstore.Values.stringValue value3_;
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public boolean hasValue3() {
        return value3_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValue getValue3() {
        return value3_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value3_;
      }
      /**
       * <code>optional .dstore.values.stringValue value3 = 10003;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue3OrBuilder() {
        return getValue3();
      }

      public static final int VALUE1_FIELD_NUMBER = 10004;
      private io.dstore.Values.stringValue value1_;
      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public boolean hasValue1() {
        return value1_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValue getValue1() {
        return value1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value1_;
      }
      /**
       * <code>optional .dstore.values.stringValue value1 = 10004;</code>
       *
       * <pre>
       * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getValue1OrBuilder() {
        return getValue1();
      }

      public static final int ITEM_SET_ID_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue itemSetId_;
      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      public boolean hasItemSetId() {
        return itemSetId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      public io.dstore.Values.integerValue getItemSetId() {
        return itemSetId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemSetId_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
       *
       * <pre>
       * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
        return getItemSetId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10006;
      private io.dstore.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.values.integerValue node_id = 10006;</code>
       *
       * <pre>
       * ID des zugehörigen Artikel-Elementes
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10007;
      private io.dstore.Values.integerValue treeNodeId_;
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      public io.dstore.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
       *
       * <pre>
       * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int BONUS_FROM_ONE_SET_ONLY_FIELD_NUMBER = 10008;
      private io.dstore.Values.booleanValue bonusFromOneSetOnly_;
      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      public boolean hasBonusFromOneSetOnly() {
        return bonusFromOneSetOnly_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValue getBonusFromOneSetOnly() {
        return bonusFromOneSetOnly_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : bonusFromOneSetOnly_;
      }
      /**
       * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
       *
       * <pre>
       * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getBonusFromOneSetOnlyOrBuilder() {
        return getBonusFromOneSetOnly();
      }

      public static final int MAX_QUANTITY_FIELD_NUMBER = 10009;
      private io.dstore.Values.integerValue maxQuantity_;
      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      public boolean hasMaxQuantity() {
        return maxQuantity_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      public io.dstore.Values.integerValue getMaxQuantity() {
        return maxQuantity_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxQuantity_;
      }
      /**
       * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
       *
       * <pre>
       * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getMaxQuantityOrBuilder() {
        return getMaxQuantity();
      }

      public static final int ITEM_CONDITION_ID_FIELD_NUMBER = 20001;
      private io.dstore.Values.integerValue itemConditionId_;
      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      public boolean hasItemConditionId() {
        return itemConditionId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      public io.dstore.Values.integerValue getItemConditionId() {
        return itemConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionId_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
       *
       * <pre>
       * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
        return getItemConditionId();
      }

      public static final int ITEM_CONDITION_DESCRIPTION_FIELD_NUMBER = 20005;
      private io.dstore.Values.stringValue itemConditionDescription_;
      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public boolean hasItemConditionDescription() {
        return itemConditionDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public io.dstore.Values.stringValue getItemConditionDescription() {
        return itemConditionDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
       *
       * <pre>
       * Bezeichnung der Artikel-Bedingung "ItemConditionID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder() {
        return getItemConditionDescription();
      }

      public static final int SORT_NO_FIELD_NUMBER = 20006;
      private io.dstore.Values.integerValue sortNo_;
      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      public io.dstore.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int ITEM_GROUP_SORT_NO_FIELD_NUMBER = 30001;
      private io.dstore.Values.integerValue itemGroupSortNo_;
      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public boolean hasItemGroupSortNo() {
        return itemGroupSortNo_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public io.dstore.Values.integerValue getItemGroupSortNo() {
        return itemGroupSortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder() {
        return getItemGroupSortNo();
      }

      public static final int OPERATOR1_FIELD_NUMBER = 30002;
      private io.dstore.Values.stringValue operator1_;
      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      public boolean hasOperator1() {
        return operator1_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      public io.dstore.Values.stringValue getOperator1() {
        return operator1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator1_;
      }
      /**
       * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getOperator1OrBuilder() {
        return getOperator1();
      }

      public static final int CONDITION1_FIELD_NUMBER = 30003;
      private io.dstore.Values.stringValue condition1_;
      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public boolean hasCondition1() {
        return condition1_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public io.dstore.Values.stringValue getCondition1() {
        return condition1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition1_;
      }
      /**
       * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getCondition1OrBuilder() {
        return getCondition1();
      }

      public static final int CONDITION2_FIELD_NUMBER = 30004;
      private io.dstore.Values.stringValue condition2_;
      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public boolean hasCondition2() {
        return condition2_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public io.dstore.Values.stringValue getCondition2() {
        return condition2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition2_;
      }
      /**
       * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
       *
       * <pre>
       * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getCondition2OrBuilder() {
        return getCondition2();
      }

      public static final int OPERATOR2_FIELD_NUMBER = 30005;
      private io.dstore.Values.stringValue operator2_;
      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      public boolean hasOperator2() {
        return operator2_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      public io.dstore.Values.stringValue getOperator2() {
        return operator2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator2_;
      }
      /**
       * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
       *
       * <pre>
       * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getOperator2OrBuilder() {
        return getOperator2();
      }

      public static final int ITEM_CONDITION_GROUP_DESCRIPTION_FIELD_NUMBER = 30006;
      private io.dstore.Values.stringValue itemConditionGroupDescription_;
      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public boolean hasItemConditionGroupDescription() {
        return itemConditionGroupDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public io.dstore.Values.stringValue getItemConditionGroupDescription() {
        return itemConditionGroupDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
       *
       * <pre>
       * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
        return getItemConditionGroupDescription();
      }

      public static final int COMBINE_PARTS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 30007;
      private io.dstore.Values.booleanValue combinePartsWithANDOperator_;
      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public boolean hasCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValue getCombinePartsWithANDOperator() {
        return combinePartsWithANDOperator_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
      }
      /**
       * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
        return getCombinePartsWithANDOperator();
      }

      public static final int RECURSIVE_EVALUATION_FIELD_NUMBER = 30008;
      private io.dstore.Values.integerValue recursiveEvaluation_;
      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public boolean hasRecursiveEvaluation() {
        return recursiveEvaluation_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public io.dstore.Values.integerValue getRecursiveEvaluation() {
        return recursiveEvaluation_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
      }
      /**
       * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
       *
       * <pre>
       * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder() {
        return getRecursiveEvaluation();
      }

      public static final int ITEM_PART_SORT_NO_FIELD_NUMBER = 30009;
      private io.dstore.Values.integerValue itemPartSortNo_;
      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public boolean hasItemPartSortNo() {
        return itemPartSortNo_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public io.dstore.Values.integerValue getItemPartSortNo() {
        return itemPartSortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
       *
       * <pre>
       * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemPartSortNoOrBuilder() {
        return getItemPartSortNo();
      }

      public static final int DOMAIN_TREE_NODE_IDS_FIELD_NUMBER = 30011;
      private io.dstore.Values.stringValue domainTreeNodeIds_;
      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public boolean hasDomainTreeNodeIds() {
        return domainTreeNodeIds_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public io.dstore.Values.stringValue getDomainTreeNodeIds() {
        return domainTreeNodeIds_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
      }
      /**
       * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
        return getDomainTreeNodeIds();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 30012;
      private io.dstore.Values.integerValue nodeCharacteristicId_;
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public io.dstore.Values.integerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
       *
       * <pre>
       * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int ITEM_CONDITION_PART_ID_FIELD_NUMBER = 30013;
      private io.dstore.Values.integerValue itemConditionPartId_;
      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public boolean hasItemConditionPartId() {
        return itemConditionPartId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public io.dstore.Values.integerValue getItemConditionPartId() {
        return itemConditionPartId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
       *
       * <pre>
       * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder() {
        return getItemConditionPartId();
      }

      public static final int COMBINE_GROUPS_WITH_A_N_D_OPERATOR_FIELD_NUMBER = 30017;
      private io.dstore.Values.booleanValue combineGroupsWithANDOperator_;
      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public boolean hasCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ != null;
      }
      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValue getCombineGroupsWithANDOperator() {
        return combineGroupsWithANDOperator_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
      }
      /**
       * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
       *
       * <pre>
       * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
       * </pre>
       */
      public io.dstore.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
        return getCombineGroupsWithANDOperator();
      }

      public static final int ITEM_CONDITION_PART_DESCRIPTION_FIELD_NUMBER = 30018;
      private io.dstore.Values.stringValue itemConditionPartDescription_;
      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public boolean hasItemConditionPartDescription() {
        return itemConditionPartDescription_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public io.dstore.Values.stringValue getItemConditionPartDescription() {
        return itemConditionPartDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
      }
      /**
       * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
       *
       * <pre>
       * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
        return getItemConditionPartDescription();
      }

      public static final int LEVEL_IDS_FIELD_NUMBER = 30019;
      private io.dstore.Values.stringValue levelIds_;
      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public boolean hasLevelIds() {
        return levelIds_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public io.dstore.Values.stringValue getLevelIds() {
        return levelIds_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : levelIds_;
      }
      /**
       * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
       *
       * <pre>
       * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
       * </pre>
       */
      public io.dstore.Values.stringValueOrBuilder getLevelIdsOrBuilder() {
        return getLevelIds();
      }

      public static final int ITEM_CONDITION_GROUP_ID_FIELD_NUMBER = 30020;
      private io.dstore.Values.integerValue itemConditionGroupId_;
      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public boolean hasItemConditionGroupId() {
        return itemConditionGroupId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public io.dstore.Values.integerValue getItemConditionGroupId() {
        return itemConditionGroupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
      }
      /**
       * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
       *
       * <pre>
       * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder() {
        return getItemConditionGroupId();
      }

      public static final int INHERIT_DEPTH_FIELD_NUMBER = 30023;
      private io.dstore.Values.integerValue inheritDepth_;
      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public boolean hasInheritDepth() {
        return inheritDepth_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public io.dstore.Values.integerValue getInheritDepth() {
        return inheritDepth_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : inheritDepth_;
      }
      /**
       * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
       *
       * <pre>
       * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
       * </pre>
       */
      public io.dstore.Values.integerValueOrBuilder getInheritDepthOrBuilder() {
        return getInheritDepth();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10001, getNodeDescription());
        }
        if (value2_ != null) {
          output.writeMessage(10002, getValue2());
        }
        if (value3_ != null) {
          output.writeMessage(10003, getValue3());
        }
        if (value1_ != null) {
          output.writeMessage(10004, getValue1());
        }
        if (itemSetId_ != null) {
          output.writeMessage(10005, getItemSetId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10006, getNodeId());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10007, getTreeNodeId());
        }
        if (bonusFromOneSetOnly_ != null) {
          output.writeMessage(10008, getBonusFromOneSetOnly());
        }
        if (maxQuantity_ != null) {
          output.writeMessage(10009, getMaxQuantity());
        }
        if (itemConditionId_ != null) {
          output.writeMessage(20001, getItemConditionId());
        }
        if (itemConditionDescription_ != null) {
          output.writeMessage(20005, getItemConditionDescription());
        }
        if (sortNo_ != null) {
          output.writeMessage(20006, getSortNo());
        }
        if (itemGroupSortNo_ != null) {
          output.writeMessage(30001, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          output.writeMessage(30002, getOperator1());
        }
        if (condition1_ != null) {
          output.writeMessage(30003, getCondition1());
        }
        if (condition2_ != null) {
          output.writeMessage(30004, getCondition2());
        }
        if (operator2_ != null) {
          output.writeMessage(30005, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          output.writeMessage(30006, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          output.writeMessage(30007, getCombinePartsWithANDOperator());
        }
        if (recursiveEvaluation_ != null) {
          output.writeMessage(30008, getRecursiveEvaluation());
        }
        if (itemPartSortNo_ != null) {
          output.writeMessage(30009, getItemPartSortNo());
        }
        if (domainTreeNodeIds_ != null) {
          output.writeMessage(30011, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(30012, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          output.writeMessage(30013, getItemConditionPartId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          output.writeMessage(30017, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          output.writeMessage(30018, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          output.writeMessage(30019, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          output.writeMessage(30020, getItemConditionGroupId());
        }
        if (inheritDepth_ != null) {
          output.writeMessage(30023, getInheritDepth());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getNodeDescription());
        }
        if (value2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getValue2());
        }
        if (value3_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getValue3());
        }
        if (value1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getValue1());
        }
        if (itemSetId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getItemSetId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getNodeId());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getTreeNodeId());
        }
        if (bonusFromOneSetOnly_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getBonusFromOneSetOnly());
        }
        if (maxQuantity_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getMaxQuantity());
        }
        if (itemConditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20001, getItemConditionId());
        }
        if (itemConditionDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20005, getItemConditionDescription());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(20006, getSortNo());
        }
        if (itemGroupSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30001, getItemGroupSortNo());
        }
        if (operator1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30002, getOperator1());
        }
        if (condition1_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30003, getCondition1());
        }
        if (condition2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30004, getCondition2());
        }
        if (operator2_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30005, getOperator2());
        }
        if (itemConditionGroupDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30006, getItemConditionGroupDescription());
        }
        if (combinePartsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30007, getCombinePartsWithANDOperator());
        }
        if (recursiveEvaluation_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30008, getRecursiveEvaluation());
        }
        if (itemPartSortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30009, getItemPartSortNo());
        }
        if (domainTreeNodeIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30011, getDomainTreeNodeIds());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30012, getNodeCharacteristicId());
        }
        if (itemConditionPartId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30013, getItemConditionPartId());
        }
        if (combineGroupsWithANDOperator_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30017, getCombineGroupsWithANDOperator());
        }
        if (itemConditionPartDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30018, getItemConditionPartDescription());
        }
        if (levelIds_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30019, getLevelIds());
        }
        if (itemConditionGroupId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30020, getItemConditionGroupId());
        }
        if (inheritDepth_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30023, getInheritDepth());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row)
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (value2Builder_ == null) {
            value2_ = null;
          } else {
            value2_ = null;
            value2Builder_ = null;
          }
          if (value3Builder_ == null) {
            value3_ = null;
          } else {
            value3_ = null;
            value3Builder_ = null;
          }
          if (value1Builder_ == null) {
            value1_ = null;
          } else {
            value1_ = null;
            value1Builder_ = null;
          }
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (bonusFromOneSetOnlyBuilder_ == null) {
            bonusFromOneSetOnly_ = null;
          } else {
            bonusFromOneSetOnly_ = null;
            bonusFromOneSetOnlyBuilder_ = null;
          }
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = null;
          } else {
            maxQuantity_ = null;
            maxQuantityBuilder_ = null;
          }
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }
          if (operator1Builder_ == null) {
            operator1_ = null;
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }
          if (condition1Builder_ == null) {
            condition1_ = null;
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }
          if (condition2Builder_ == null) {
            condition2_ = null;
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }
          if (operator2Builder_ == null) {
            operator2_ = null;
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row build() {
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row buildPartial() {
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row result = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row(this);
          result.rowId_ = rowId_;
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (value2Builder_ == null) {
            result.value2_ = value2_;
          } else {
            result.value2_ = value2Builder_.build();
          }
          if (value3Builder_ == null) {
            result.value3_ = value3_;
          } else {
            result.value3_ = value3Builder_.build();
          }
          if (value1Builder_ == null) {
            result.value1_ = value1_;
          } else {
            result.value1_ = value1Builder_.build();
          }
          if (itemSetIdBuilder_ == null) {
            result.itemSetId_ = itemSetId_;
          } else {
            result.itemSetId_ = itemSetIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (bonusFromOneSetOnlyBuilder_ == null) {
            result.bonusFromOneSetOnly_ = bonusFromOneSetOnly_;
          } else {
            result.bonusFromOneSetOnly_ = bonusFromOneSetOnlyBuilder_.build();
          }
          if (maxQuantityBuilder_ == null) {
            result.maxQuantity_ = maxQuantity_;
          } else {
            result.maxQuantity_ = maxQuantityBuilder_.build();
          }
          if (itemConditionIdBuilder_ == null) {
            result.itemConditionId_ = itemConditionId_;
          } else {
            result.itemConditionId_ = itemConditionIdBuilder_.build();
          }
          if (itemConditionDescriptionBuilder_ == null) {
            result.itemConditionDescription_ = itemConditionDescription_;
          } else {
            result.itemConditionDescription_ = itemConditionDescriptionBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (itemGroupSortNoBuilder_ == null) {
            result.itemGroupSortNo_ = itemGroupSortNo_;
          } else {
            result.itemGroupSortNo_ = itemGroupSortNoBuilder_.build();
          }
          if (operator1Builder_ == null) {
            result.operator1_ = operator1_;
          } else {
            result.operator1_ = operator1Builder_.build();
          }
          if (condition1Builder_ == null) {
            result.condition1_ = condition1_;
          } else {
            result.condition1_ = condition1Builder_.build();
          }
          if (condition2Builder_ == null) {
            result.condition2_ = condition2_;
          } else {
            result.condition2_ = condition2Builder_.build();
          }
          if (operator2Builder_ == null) {
            result.operator2_ = operator2_;
          } else {
            result.operator2_ = operator2Builder_.build();
          }
          if (itemConditionGroupDescriptionBuilder_ == null) {
            result.itemConditionGroupDescription_ = itemConditionGroupDescription_;
          } else {
            result.itemConditionGroupDescription_ = itemConditionGroupDescriptionBuilder_.build();
          }
          if (combinePartsWithANDOperatorBuilder_ == null) {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperator_;
          } else {
            result.combinePartsWithANDOperator_ = combinePartsWithANDOperatorBuilder_.build();
          }
          if (recursiveEvaluationBuilder_ == null) {
            result.recursiveEvaluation_ = recursiveEvaluation_;
          } else {
            result.recursiveEvaluation_ = recursiveEvaluationBuilder_.build();
          }
          if (itemPartSortNoBuilder_ == null) {
            result.itemPartSortNo_ = itemPartSortNo_;
          } else {
            result.itemPartSortNo_ = itemPartSortNoBuilder_.build();
          }
          if (domainTreeNodeIdsBuilder_ == null) {
            result.domainTreeNodeIds_ = domainTreeNodeIds_;
          } else {
            result.domainTreeNodeIds_ = domainTreeNodeIdsBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (itemConditionPartIdBuilder_ == null) {
            result.itemConditionPartId_ = itemConditionPartId_;
          } else {
            result.itemConditionPartId_ = itemConditionPartIdBuilder_.build();
          }
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperator_;
          } else {
            result.combineGroupsWithANDOperator_ = combineGroupsWithANDOperatorBuilder_.build();
          }
          if (itemConditionPartDescriptionBuilder_ == null) {
            result.itemConditionPartDescription_ = itemConditionPartDescription_;
          } else {
            result.itemConditionPartDescription_ = itemConditionPartDescriptionBuilder_.build();
          }
          if (levelIdsBuilder_ == null) {
            result.levelIds_ = levelIds_;
          } else {
            result.levelIds_ = levelIdsBuilder_.build();
          }
          if (itemConditionGroupIdBuilder_ == null) {
            result.itemConditionGroupId_ = itemConditionGroupId_;
          } else {
            result.itemConditionGroupId_ = itemConditionGroupIdBuilder_.build();
          }
          if (inheritDepthBuilder_ == null) {
            result.inheritDepth_ = inheritDepth_;
          } else {
            result.inheritDepth_ = inheritDepthBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row other) {
          if (other == io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasValue2()) {
            mergeValue2(other.getValue2());
          }
          if (other.hasValue3()) {
            mergeValue3(other.getValue3());
          }
          if (other.hasValue1()) {
            mergeValue1(other.getValue1());
          }
          if (other.hasItemSetId()) {
            mergeItemSetId(other.getItemSetId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasBonusFromOneSetOnly()) {
            mergeBonusFromOneSetOnly(other.getBonusFromOneSetOnly());
          }
          if (other.hasMaxQuantity()) {
            mergeMaxQuantity(other.getMaxQuantity());
          }
          if (other.hasItemConditionId()) {
            mergeItemConditionId(other.getItemConditionId());
          }
          if (other.hasItemConditionDescription()) {
            mergeItemConditionDescription(other.getItemConditionDescription());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasItemGroupSortNo()) {
            mergeItemGroupSortNo(other.getItemGroupSortNo());
          }
          if (other.hasOperator1()) {
            mergeOperator1(other.getOperator1());
          }
          if (other.hasCondition1()) {
            mergeCondition1(other.getCondition1());
          }
          if (other.hasCondition2()) {
            mergeCondition2(other.getCondition2());
          }
          if (other.hasOperator2()) {
            mergeOperator2(other.getOperator2());
          }
          if (other.hasItemConditionGroupDescription()) {
            mergeItemConditionGroupDescription(other.getItemConditionGroupDescription());
          }
          if (other.hasCombinePartsWithANDOperator()) {
            mergeCombinePartsWithANDOperator(other.getCombinePartsWithANDOperator());
          }
          if (other.hasRecursiveEvaluation()) {
            mergeRecursiveEvaluation(other.getRecursiveEvaluation());
          }
          if (other.hasItemPartSortNo()) {
            mergeItemPartSortNo(other.getItemPartSortNo());
          }
          if (other.hasDomainTreeNodeIds()) {
            mergeDomainTreeNodeIds(other.getDomainTreeNodeIds());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasItemConditionPartId()) {
            mergeItemConditionPartId(other.getItemConditionPartId());
          }
          if (other.hasCombineGroupsWithANDOperator()) {
            mergeCombineGroupsWithANDOperator(other.getCombineGroupsWithANDOperator());
          }
          if (other.hasItemConditionPartDescription()) {
            mergeItemConditionPartDescription(other.getItemConditionPartDescription());
          }
          if (other.hasLevelIds()) {
            mergeLevelIds(other.getLevelIds());
          }
          if (other.hasItemConditionGroupId()) {
            mergeItemConditionGroupId(other.getItemConditionGroupId());
          }
          if (other.hasInheritDepth()) {
            mergeInheritDepth(other.getInheritDepth());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder setNodeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder mergeNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue node_description = 10001;</code>
         *
         * <pre>
         * Bezeichnung der "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.Values.stringValue value2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value2Builder_;
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public boolean hasValue2() {
          return value2Builder_ != null || value2_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue getValue2() {
          if (value2Builder_ == null) {
            return value2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value2_;
          } else {
            return value2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue2(io.dstore.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value2_ = value;
            onChanged();
          } else {
            value2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue2(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value2Builder_ == null) {
            value2_ = builderForValue.build();
            onChanged();
          } else {
            value2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder mergeValue2(io.dstore.Values.stringValue value) {
          if (value2Builder_ == null) {
            if (value2_ != null) {
              value2_ =
                io.dstore.Values.stringValue.newBuilder(value2_).mergeFrom(value).buildPartial();
            } else {
              value2_ = value;
            }
            onChanged();
          } else {
            value2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder clearValue2() {
          if (value2Builder_ == null) {
            value2_ = null;
            onChanged();
          } else {
            value2_ = null;
            value2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue2Builder() {
          
          onChanged();
          return getValue2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue2OrBuilder() {
          if (value2Builder_ != null) {
            return value2Builder_.getMessageOrBuilder();
          } else {
            return value2_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value2_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value2 = 10002;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 2. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue2FieldBuilder() {
          if (value2Builder_ == null) {
            value2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue2(),
                    getParentForChildren(),
                    isClean());
            value2_ = null;
          }
          return value2Builder_;
        }

        private io.dstore.Values.stringValue value3_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value3Builder_;
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public boolean hasValue3() {
          return value3Builder_ != null || value3_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue getValue3() {
          if (value3Builder_ == null) {
            return value3_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value3_;
          } else {
            return value3Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue3(io.dstore.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value3_ = value;
            onChanged();
          } else {
            value3Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue3(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value3Builder_ == null) {
            value3_ = builderForValue.build();
            onChanged();
          } else {
            value3Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder mergeValue3(io.dstore.Values.stringValue value) {
          if (value3Builder_ == null) {
            if (value3_ != null) {
              value3_ =
                io.dstore.Values.stringValue.newBuilder(value3_).mergeFrom(value).buildPartial();
            } else {
              value3_ = value;
            }
            onChanged();
          } else {
            value3Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder clearValue3() {
          if (value3Builder_ == null) {
            value3_ = null;
            onChanged();
          } else {
            value3_ = null;
            value3Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue3Builder() {
          
          onChanged();
          return getValue3FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue3OrBuilder() {
          if (value3Builder_ != null) {
            return value3Builder_.getMessageOrBuilder();
          } else {
            return value3_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value3_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value3 = 10003;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 3. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue3FieldBuilder() {
          if (value3Builder_ == null) {
            value3Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue3(),
                    getParentForChildren(),
                    isClean());
            value3_ = null;
          }
          return value3Builder_;
        }

        private io.dstore.Values.stringValue value1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> value1Builder_;
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public boolean hasValue1() {
          return value1Builder_ != null || value1_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue getValue1() {
          if (value1Builder_ == null) {
            return value1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : value1_;
          } else {
            return value1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue1(io.dstore.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value1_ = value;
            onChanged();
          } else {
            value1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder setValue1(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (value1Builder_ == null) {
            value1_ = builderForValue.build();
            onChanged();
          } else {
            value1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder mergeValue1(io.dstore.Values.stringValue value) {
          if (value1Builder_ == null) {
            if (value1_ != null) {
              value1_ =
                io.dstore.Values.stringValue.newBuilder(value1_).mergeFrom(value).buildPartial();
            } else {
              value1_ = value;
            }
            onChanged();
          } else {
            value1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public Builder clearValue1() {
          if (value1Builder_ == null) {
            value1_ = null;
            onChanged();
          } else {
            value1_ = null;
            value1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getValue1Builder() {
          
          onChanged();
          return getValue1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getValue1OrBuilder() {
          if (value1Builder_ != null) {
            return value1Builder_.getMessageOrBuilder();
          } else {
            return value1_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : value1_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue value1 = 10004;</code>
         *
         * <pre>
         * Eigenschaften der "NodeID" zum 1. Merkmal in  "&#64;SortByCharacteristicIDList"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getValue1FieldBuilder() {
          if (value1Builder_ == null) {
            value1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getValue1(),
                    getParentForChildren(),
                    isClean());
            value1_ = null;
          }
          return value1Builder_;
        }

        private io.dstore.Values.integerValue itemSetId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemSetIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public boolean hasItemSetId() {
          return itemSetIdBuilder_ != null || itemSetId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue getItemSetId() {
          if (itemSetIdBuilder_ == null) {
            return itemSetId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemSetId_;
          } else {
            return itemSetIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public Builder setItemSetId(io.dstore.Values.integerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemSetId_ = value;
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public Builder setItemSetId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = builderForValue.build();
            onChanged();
          } else {
            itemSetIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public Builder mergeItemSetId(io.dstore.Values.integerValue value) {
          if (itemSetIdBuilder_ == null) {
            if (itemSetId_ != null) {
              itemSetId_ =
                io.dstore.Values.integerValue.newBuilder(itemSetId_).mergeFrom(value).buildPartial();
            } else {
              itemSetId_ = value;
            }
            onChanged();
          } else {
            itemSetIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public Builder clearItemSetId() {
          if (itemSetIdBuilder_ == null) {
            itemSetId_ = null;
            onChanged();
          } else {
            itemSetId_ = null;
            itemSetIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemSetIdBuilder() {
          
          onChanged();
          return getItemSetIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemSetIdOrBuilder() {
          if (itemSetIdBuilder_ != null) {
            return itemSetIdBuilder_.getMessageOrBuilder();
          } else {
            return itemSetId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemSetId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_set_id = 10005;</code>
         *
         * <pre>
         * ID eines Bonus-Sets, das Teil des Benefits "BenefitID" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemSetIdFieldBuilder() {
          if (itemSetIdBuilder_ == null) {
            itemSetIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemSetId(),
                    getParentForChildren(),
                    isClean());
            itemSetId_ = null;
          }
          return itemSetIdBuilder_;
        }

        private io.dstore.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue node_id = 10006;</code>
         *
         * <pre>
         * ID des zugehörigen Artikel-Elementes
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public io.dstore.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public Builder setTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public Builder setTreeNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public Builder mergeTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue tree_node_id = 10007;</code>
         *
         * <pre>
         * ID eines gefundenen Elementes im Artikelbaum, welches die Bedingungen der "ItemSetID" erfüllt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.Values.booleanValue bonusFromOneSetOnly_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> bonusFromOneSetOnlyBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public boolean hasBonusFromOneSetOnly() {
          return bonusFromOneSetOnlyBuilder_ != null || bonusFromOneSetOnly_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue getBonusFromOneSetOnly() {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            return bonusFromOneSetOnly_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : bonusFromOneSetOnly_;
          } else {
            return bonusFromOneSetOnlyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public Builder setBonusFromOneSetOnly(io.dstore.Values.booleanValue value) {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            bonusFromOneSetOnly_ = value;
            onChanged();
          } else {
            bonusFromOneSetOnlyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public Builder setBonusFromOneSetOnly(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            bonusFromOneSetOnly_ = builderForValue.build();
            onChanged();
          } else {
            bonusFromOneSetOnlyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public Builder mergeBonusFromOneSetOnly(io.dstore.Values.booleanValue value) {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            if (bonusFromOneSetOnly_ != null) {
              bonusFromOneSetOnly_ =
                io.dstore.Values.booleanValue.newBuilder(bonusFromOneSetOnly_).mergeFrom(value).buildPartial();
            } else {
              bonusFromOneSetOnly_ = value;
            }
            onChanged();
          } else {
            bonusFromOneSetOnlyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public Builder clearBonusFromOneSetOnly() {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            bonusFromOneSetOnly_ = null;
            onChanged();
          } else {
            bonusFromOneSetOnly_ = null;
            bonusFromOneSetOnlyBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getBonusFromOneSetOnlyBuilder() {
          
          onChanged();
          return getBonusFromOneSetOnlyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getBonusFromOneSetOnlyOrBuilder() {
          if (bonusFromOneSetOnlyBuilder_ != null) {
            return bonusFromOneSetOnlyBuilder_.getMessageOrBuilder();
          } else {
            return bonusFromOneSetOnly_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : bonusFromOneSetOnly_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue bonus_from_one_set_only = 10008;</code>
         *
         * <pre>
         * Gibt an, ob Bonus-Artikel nur aus einem Set gewählt werden dürfen ("1") oder aus jedem einzelnen Set ("0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getBonusFromOneSetOnlyFieldBuilder() {
          if (bonusFromOneSetOnlyBuilder_ == null) {
            bonusFromOneSetOnlyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getBonusFromOneSetOnly(),
                    getParentForChildren(),
                    isClean());
            bonusFromOneSetOnly_ = null;
          }
          return bonusFromOneSetOnlyBuilder_;
        }

        private io.dstore.Values.integerValue maxQuantity_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> maxQuantityBuilder_;
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public boolean hasMaxQuantity() {
          return maxQuantityBuilder_ != null || maxQuantity_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public io.dstore.Values.integerValue getMaxQuantity() {
          if (maxQuantityBuilder_ == null) {
            return maxQuantity_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : maxQuantity_;
          } else {
            return maxQuantityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public Builder setMaxQuantity(io.dstore.Values.integerValue value) {
          if (maxQuantityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            maxQuantity_ = value;
            onChanged();
          } else {
            maxQuantityBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public Builder setMaxQuantity(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = builderForValue.build();
            onChanged();
          } else {
            maxQuantityBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public Builder mergeMaxQuantity(io.dstore.Values.integerValue value) {
          if (maxQuantityBuilder_ == null) {
            if (maxQuantity_ != null) {
              maxQuantity_ =
                io.dstore.Values.integerValue.newBuilder(maxQuantity_).mergeFrom(value).buildPartial();
            } else {
              maxQuantity_ = value;
            }
            onChanged();
          } else {
            maxQuantityBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public Builder clearMaxQuantity() {
          if (maxQuantityBuilder_ == null) {
            maxQuantity_ = null;
            onChanged();
          } else {
            maxQuantity_ = null;
            maxQuantityBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getMaxQuantityBuilder() {
          
          onChanged();
          return getMaxQuantityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getMaxQuantityOrBuilder() {
          if (maxQuantityBuilder_ != null) {
            return maxQuantityBuilder_.getMessageOrBuilder();
          } else {
            return maxQuantity_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : maxQuantity_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue max_quantity = 10009;</code>
         *
         * <pre>
         * Gibt an, wieviele unterschiedliche Bonus-Artikel aus dem Set "ItemSetID" gewählt werden dürfen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getMaxQuantityFieldBuilder() {
          if (maxQuantityBuilder_ == null) {
            maxQuantityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getMaxQuantity(),
                    getParentForChildren(),
                    isClean());
            maxQuantity_ = null;
          }
          return maxQuantityBuilder_;
        }

        private io.dstore.Values.integerValue itemConditionId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemConditionIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public boolean hasItemConditionId() {
          return itemConditionIdBuilder_ != null || itemConditionId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public io.dstore.Values.integerValue getItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            return itemConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionId_;
          } else {
            return itemConditionIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public Builder setItemConditionId(io.dstore.Values.integerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionId_ = value;
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public Builder setItemConditionId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public Builder mergeItemConditionId(io.dstore.Values.integerValue value) {
          if (itemConditionIdBuilder_ == null) {
            if (itemConditionId_ != null) {
              itemConditionId_ =
                io.dstore.Values.integerValue.newBuilder(itemConditionId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionId_ = value;
            }
            onChanged();
          } else {
            itemConditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public Builder clearItemConditionId() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionId_ = null;
            onChanged();
          } else {
            itemConditionId_ = null;
            itemConditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemConditionIdBuilder() {
          
          onChanged();
          return getItemConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemConditionIdOrBuilder() {
          if (itemConditionIdBuilder_ != null) {
            return itemConditionIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemConditionId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_id = 20001;</code>
         *
         * <pre>
         * ID der Artikel-Bedingung, die das Set "ItemSetID" definiert. Die genaue Definition der Bedingung erhält man durch den Aufruf dieser Prozedur mit "&#64;OnlyDefinition = 2".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemConditionIdFieldBuilder() {
          if (itemConditionIdBuilder_ == null) {
            itemConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemConditionId(),
                    getParentForChildren(),
                    isClean());
            itemConditionId_ = null;
          }
          return itemConditionIdBuilder_;
        }

        private io.dstore.Values.stringValue itemConditionDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> itemConditionDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public boolean hasItemConditionDescription() {
          return itemConditionDescriptionBuilder_ != null || itemConditionDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.Values.stringValue getItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            return itemConditionDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
          } else {
            return itemConditionDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder setItemConditionDescription(io.dstore.Values.stringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionDescription_ = value;
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder setItemConditionDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder mergeItemConditionDescription(io.dstore.Values.stringValue value) {
          if (itemConditionDescriptionBuilder_ == null) {
            if (itemConditionDescription_ != null) {
              itemConditionDescription_ =
                io.dstore.Values.stringValue.newBuilder(itemConditionDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public Builder clearItemConditionDescription() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescription_ = null;
            onChanged();
          } else {
            itemConditionDescription_ = null;
            itemConditionDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getItemConditionDescriptionBuilder() {
          
          onChanged();
          return getItemConditionDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getItemConditionDescriptionOrBuilder() {
          if (itemConditionDescriptionBuilder_ != null) {
            return itemConditionDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : itemConditionDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_description = 20005;</code>
         *
         * <pre>
         * Bezeichnung der Artikel-Bedingung "ItemConditionID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getItemConditionDescriptionFieldBuilder() {
          if (itemConditionDescriptionBuilder_ == null) {
            itemConditionDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getItemConditionDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionDescription_ = null;
          }
          return itemConditionDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public io.dstore.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public Builder setSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public Builder setSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public Builder mergeSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue sort_no = 20006;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemSetID" innerhalb aller "BenefitID" zugeordneten Sets
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.Values.integerValue itemGroupSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemGroupSortNoBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public boolean hasItemGroupSortNo() {
          return itemGroupSortNoBuilder_ != null || itemGroupSortNo_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.Values.integerValue getItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            return itemGroupSortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
          } else {
            return itemGroupSortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder setItemGroupSortNo(io.dstore.Values.integerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemGroupSortNo_ = value;
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder setItemGroupSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemGroupSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder mergeItemGroupSortNo(io.dstore.Values.integerValue value) {
          if (itemGroupSortNoBuilder_ == null) {
            if (itemGroupSortNo_ != null) {
              itemGroupSortNo_ =
                io.dstore.Values.integerValue.newBuilder(itemGroupSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemGroupSortNo_ = value;
            }
            onChanged();
          } else {
            itemGroupSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public Builder clearItemGroupSortNo() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNo_ = null;
            onChanged();
          } else {
            itemGroupSortNo_ = null;
            itemGroupSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemGroupSortNoBuilder() {
          
          onChanged();
          return getItemGroupSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemGroupSortNoOrBuilder() {
          if (itemGroupSortNoBuilder_ != null) {
            return itemGroupSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemGroupSortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemGroupSortNo_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_group_sort_no = 30001;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionGroupID" innerhalb aller der Artikel-Bedingung "ItemConditionID" zugeordneten Bedingungs-Gruppen
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemGroupSortNoFieldBuilder() {
          if (itemGroupSortNoBuilder_ == null) {
            itemGroupSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemGroupSortNo(),
                    getParentForChildren(),
                    isClean());
            itemGroupSortNo_ = null;
          }
          return itemGroupSortNoBuilder_;
        }

        private io.dstore.Values.stringValue operator1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> operator1Builder_;
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public boolean hasOperator1() {
          return operator1Builder_ != null || operator1_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public io.dstore.Values.stringValue getOperator1() {
          if (operator1Builder_ == null) {
            return operator1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator1_;
          } else {
            return operator1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public Builder setOperator1(io.dstore.Values.stringValue value) {
          if (operator1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator1_ = value;
            onChanged();
          } else {
            operator1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public Builder setOperator1(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (operator1Builder_ == null) {
            operator1_ = builderForValue.build();
            onChanged();
          } else {
            operator1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public Builder mergeOperator1(io.dstore.Values.stringValue value) {
          if (operator1Builder_ == null) {
            if (operator1_ != null) {
              operator1_ =
                io.dstore.Values.stringValue.newBuilder(operator1_).mergeFrom(value).buildPartial();
            } else {
              operator1_ = value;
            }
            onChanged();
          } else {
            operator1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public Builder clearOperator1() {
          if (operator1Builder_ == null) {
            operator1_ = null;
            onChanged();
          } else {
            operator1_ = null;
            operator1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getOperator1Builder() {
          
          onChanged();
          return getOperator1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getOperator1OrBuilder() {
          if (operator1Builder_ != null) {
            return operator1Builder_.getMessageOrBuilder();
          } else {
            return operator1_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : operator1_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator1 = 30002;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition1". Mögliche Werte :- "="- "!=" / "&lt;&gt;"  - "~" / "!~" (LIKE / NOT LIKE)- "&gt;"- "&lt;"- "&gt;="- "&lt;="- "IN" / "!I" (in / NICHT in Menge von "Value"-Werten)- "E" / "!E" (IRGENDEINE / KEINE Eigenschaft)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getOperator1FieldBuilder() {
          if (operator1Builder_ == null) {
            operator1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getOperator1(),
                    getParentForChildren(),
                    isClean());
            operator1_ = null;
          }
          return operator1Builder_;
        }

        private io.dstore.Values.stringValue condition1_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> condition1Builder_;
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public boolean hasCondition1() {
          return condition1Builder_ != null || condition1_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.Values.stringValue getCondition1() {
          if (condition1Builder_ == null) {
            return condition1_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition1_;
          } else {
            return condition1Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder setCondition1(io.dstore.Values.stringValue value) {
          if (condition1Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition1_ = value;
            onChanged();
          } else {
            condition1Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder setCondition1(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (condition1Builder_ == null) {
            condition1_ = builderForValue.build();
            onChanged();
          } else {
            condition1Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder mergeCondition1(io.dstore.Values.stringValue value) {
          if (condition1Builder_ == null) {
            if (condition1_ != null) {
              condition1_ =
                io.dstore.Values.stringValue.newBuilder(condition1_).mergeFrom(value).buildPartial();
            } else {
              condition1_ = value;
            }
            onChanged();
          } else {
            condition1Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public Builder clearCondition1() {
          if (condition1Builder_ == null) {
            condition1_ = null;
            onChanged();
          } else {
            condition1_ = null;
            condition1Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getCondition1Builder() {
          
          onChanged();
          return getCondition1FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getCondition1OrBuilder() {
          if (condition1Builder_ != null) {
            return condition1Builder_.getMessageOrBuilder();
          } else {
            return condition1_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : condition1_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition1 = 30003;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator1" anzuwenden ist ("NULL", falls "Operator1" den Wert "E" oder "!E" hat)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCondition1FieldBuilder() {
          if (condition1Builder_ == null) {
            condition1Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCondition1(),
                    getParentForChildren(),
                    isClean());
            condition1_ = null;
          }
          return condition1Builder_;
        }

        private io.dstore.Values.stringValue condition2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> condition2Builder_;
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public boolean hasCondition2() {
          return condition2Builder_ != null || condition2_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.Values.stringValue getCondition2() {
          if (condition2Builder_ == null) {
            return condition2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition2_;
          } else {
            return condition2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder setCondition2(io.dstore.Values.stringValue value) {
          if (condition2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition2_ = value;
            onChanged();
          } else {
            condition2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder setCondition2(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (condition2Builder_ == null) {
            condition2_ = builderForValue.build();
            onChanged();
          } else {
            condition2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder mergeCondition2(io.dstore.Values.stringValue value) {
          if (condition2Builder_ == null) {
            if (condition2_ != null) {
              condition2_ =
                io.dstore.Values.stringValue.newBuilder(condition2_).mergeFrom(value).buildPartial();
            } else {
              condition2_ = value;
            }
            onChanged();
          } else {
            condition2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public Builder clearCondition2() {
          if (condition2Builder_ == null) {
            condition2_ = null;
            onChanged();
          } else {
            condition2_ = null;
            condition2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getCondition2Builder() {
          
          onChanged();
          return getCondition2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getCondition2OrBuilder() {
          if (condition2Builder_ != null) {
            return condition2Builder_.getMessageOrBuilder();
          } else {
            return condition2_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : condition2_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue condition2 = 30004;</code>
         *
         * <pre>
         * Bedingung, die in Verbindung mit "Operator2" anzuwenden ist (nur belegt, wenn "Operator2" den Wert "&lt;" oder "&lt;=" enthält)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getCondition2FieldBuilder() {
          if (condition2Builder_ == null) {
            condition2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCondition2(),
                    getParentForChildren(),
                    isClean());
            condition2_ = null;
          }
          return condition2Builder_;
        }

        private io.dstore.Values.stringValue operator2_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> operator2Builder_;
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public boolean hasOperator2() {
          return operator2Builder_ != null || operator2_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public io.dstore.Values.stringValue getOperator2() {
          if (operator2Builder_ == null) {
            return operator2_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : operator2_;
          } else {
            return operator2Builder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public Builder setOperator2(io.dstore.Values.stringValue value) {
          if (operator2Builder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            operator2_ = value;
            onChanged();
          } else {
            operator2Builder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public Builder setOperator2(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (operator2Builder_ == null) {
            operator2_ = builderForValue.build();
            onChanged();
          } else {
            operator2Builder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public Builder mergeOperator2(io.dstore.Values.stringValue value) {
          if (operator2Builder_ == null) {
            if (operator2_ != null) {
              operator2_ =
                io.dstore.Values.stringValue.newBuilder(operator2_).mergeFrom(value).buildPartial();
            } else {
              operator2_ = value;
            }
            onChanged();
          } else {
            operator2Builder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public Builder clearOperator2() {
          if (operator2Builder_ == null) {
            operator2_ = null;
            onChanged();
          } else {
            operator2_ = null;
            operator2Builder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getOperator2Builder() {
          
          onChanged();
          return getOperator2FieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getOperator2OrBuilder() {
          if (operator2Builder_ != null) {
            return operator2Builder_.getMessageOrBuilder();
          } else {
            return operator2_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : operator2_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue operator2 = 30005;</code>
         *
         * <pre>
         * Operator für die Bedingung "Condition2". Mögliche Werte :- "&lt;" oder "&lt;=", falls "Operator1" "&gt;" oder "&gt;=" enthält- bel. Zeichen (Trennzeichen für Werte-Menge), falls "Operator1" "IN" oder "!I" enthält
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getOperator2FieldBuilder() {
          if (operator2Builder_ == null) {
            operator2Builder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getOperator2(),
                    getParentForChildren(),
                    isClean());
            operator2_ = null;
          }
          return operator2Builder_;
        }

        private io.dstore.Values.stringValue itemConditionGroupDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> itemConditionGroupDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public boolean hasItemConditionGroupDescription() {
          return itemConditionGroupDescriptionBuilder_ != null || itemConditionGroupDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.Values.stringValue getItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            return itemConditionGroupDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
          } else {
            return itemConditionGroupDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder setItemConditionGroupDescription(io.dstore.Values.stringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupDescription_ = value;
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder setItemConditionGroupDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder mergeItemConditionGroupDescription(io.dstore.Values.stringValue value) {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            if (itemConditionGroupDescription_ != null) {
              itemConditionGroupDescription_ =
                io.dstore.Values.stringValue.newBuilder(itemConditionGroupDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public Builder clearItemConditionGroupDescription() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescription_ = null;
            onChanged();
          } else {
            itemConditionGroupDescription_ = null;
            itemConditionGroupDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getItemConditionGroupDescriptionBuilder() {
          
          onChanged();
          return getItemConditionGroupDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getItemConditionGroupDescriptionOrBuilder() {
          if (itemConditionGroupDescriptionBuilder_ != null) {
            return itemConditionGroupDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : itemConditionGroupDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_group_description = 30006;</code>
         *
         * <pre>
         * Bezeichnung der Bedingungs-Gruppe "ItemConditionGroupID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getItemConditionGroupDescriptionFieldBuilder() {
          if (itemConditionGroupDescriptionBuilder_ == null) {
            itemConditionGroupDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getItemConditionGroupDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupDescription_ = null;
          }
          return itemConditionGroupDescriptionBuilder_;
        }

        private io.dstore.Values.booleanValue combinePartsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> combinePartsWithANDOperatorBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public boolean hasCombinePartsWithANDOperator() {
          return combinePartsWithANDOperatorBuilder_ != null || combinePartsWithANDOperator_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue getCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            return combinePartsWithANDOperator_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          } else {
            return combinePartsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombinePartsWithANDOperator(io.dstore.Values.booleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combinePartsWithANDOperator_ = value;
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombinePartsWithANDOperator(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder mergeCombinePartsWithANDOperator(io.dstore.Values.booleanValue value) {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            if (combinePartsWithANDOperator_ != null) {
              combinePartsWithANDOperator_ =
                io.dstore.Values.booleanValue.newBuilder(combinePartsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combinePartsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combinePartsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder clearCombinePartsWithANDOperator() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperator_ = null;
            onChanged();
          } else {
            combinePartsWithANDOperator_ = null;
            combinePartsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getCombinePartsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombinePartsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getCombinePartsWithANDOperatorOrBuilder() {
          if (combinePartsWithANDOperatorBuilder_ != null) {
            return combinePartsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combinePartsWithANDOperator_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : combinePartsWithANDOperator_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_parts_with_a_n_d_operator = 30007;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionGroupID" zugeordneten Bedingungs-Teile logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getCombinePartsWithANDOperatorFieldBuilder() {
          if (combinePartsWithANDOperatorBuilder_ == null) {
            combinePartsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getCombinePartsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combinePartsWithANDOperator_ = null;
          }
          return combinePartsWithANDOperatorBuilder_;
        }

        private io.dstore.Values.integerValue recursiveEvaluation_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> recursiveEvaluationBuilder_;
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public boolean hasRecursiveEvaluation() {
          return recursiveEvaluationBuilder_ != null || recursiveEvaluation_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.Values.integerValue getRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            return recursiveEvaluation_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
          } else {
            return recursiveEvaluationBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder setRecursiveEvaluation(io.dstore.Values.integerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            recursiveEvaluation_ = value;
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder setRecursiveEvaluation(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = builderForValue.build();
            onChanged();
          } else {
            recursiveEvaluationBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder mergeRecursiveEvaluation(io.dstore.Values.integerValue value) {
          if (recursiveEvaluationBuilder_ == null) {
            if (recursiveEvaluation_ != null) {
              recursiveEvaluation_ =
                io.dstore.Values.integerValue.newBuilder(recursiveEvaluation_).mergeFrom(value).buildPartial();
            } else {
              recursiveEvaluation_ = value;
            }
            onChanged();
          } else {
            recursiveEvaluationBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public Builder clearRecursiveEvaluation() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluation_ = null;
            onChanged();
          } else {
            recursiveEvaluation_ = null;
            recursiveEvaluationBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getRecursiveEvaluationBuilder() {
          
          onChanged();
          return getRecursiveEvaluationFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getRecursiveEvaluationOrBuilder() {
          if (recursiveEvaluationBuilder_ != null) {
            return recursiveEvaluationBuilder_.getMessageOrBuilder();
          } else {
            return recursiveEvaluation_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : recursiveEvaluation_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue recursive_evaluation = 30008;</code>
         *
         * <pre>
         * Was soll zwecks Prüfung der Bedingung zu "NodeCharacteristicID" (wenn rekursiv) gewählt werden ?"0" : direkte Eigenschaft (also eine Merkmal-ID)"1" : rekursiv ausgewertete Eigenschaft"2" : zugehör. Beschreibung der Eigenschaft (also der Merkmal-ID)
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getRecursiveEvaluationFieldBuilder() {
          if (recursiveEvaluationBuilder_ == null) {
            recursiveEvaluationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getRecursiveEvaluation(),
                    getParentForChildren(),
                    isClean());
            recursiveEvaluation_ = null;
          }
          return recursiveEvaluationBuilder_;
        }

        private io.dstore.Values.integerValue itemPartSortNo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemPartSortNoBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public boolean hasItemPartSortNo() {
          return itemPartSortNoBuilder_ != null || itemPartSortNo_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.Values.integerValue getItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            return itemPartSortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
          } else {
            return itemPartSortNoBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder setItemPartSortNo(io.dstore.Values.integerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemPartSortNo_ = value;
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder setItemPartSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = builderForValue.build();
            onChanged();
          } else {
            itemPartSortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder mergeItemPartSortNo(io.dstore.Values.integerValue value) {
          if (itemPartSortNoBuilder_ == null) {
            if (itemPartSortNo_ != null) {
              itemPartSortNo_ =
                io.dstore.Values.integerValue.newBuilder(itemPartSortNo_).mergeFrom(value).buildPartial();
            } else {
              itemPartSortNo_ = value;
            }
            onChanged();
          } else {
            itemPartSortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public Builder clearItemPartSortNo() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNo_ = null;
            onChanged();
          } else {
            itemPartSortNo_ = null;
            itemPartSortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemPartSortNoBuilder() {
          
          onChanged();
          return getItemPartSortNoFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemPartSortNoOrBuilder() {
          if (itemPartSortNoBuilder_ != null) {
            return itemPartSortNoBuilder_.getMessageOrBuilder();
          } else {
            return itemPartSortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemPartSortNo_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_part_sort_no = 30009;</code>
         *
         * <pre>
         * Bestimmt die Reihenfolge von "ItemConditionPartID" innerhalb aller der Bedingungs-Gruppe "ItemConditionGroupID" zugeordneten Bedingungs-Teile
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemPartSortNoFieldBuilder() {
          if (itemPartSortNoBuilder_ == null) {
            itemPartSortNoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemPartSortNo(),
                    getParentForChildren(),
                    isClean());
            itemPartSortNo_ = null;
          }
          return itemPartSortNoBuilder_;
        }

        private io.dstore.Values.stringValue domainTreeNodeIds_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> domainTreeNodeIdsBuilder_;
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public boolean hasDomainTreeNodeIds() {
          return domainTreeNodeIdsBuilder_ != null || domainTreeNodeIds_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.Values.stringValue getDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            return domainTreeNodeIds_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
          } else {
            return domainTreeNodeIdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder setDomainTreeNodeIds(io.dstore.Values.stringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            domainTreeNodeIds_ = value;
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder setDomainTreeNodeIds(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = builderForValue.build();
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder mergeDomainTreeNodeIds(io.dstore.Values.stringValue value) {
          if (domainTreeNodeIdsBuilder_ == null) {
            if (domainTreeNodeIds_ != null) {
              domainTreeNodeIds_ =
                io.dstore.Values.stringValue.newBuilder(domainTreeNodeIds_).mergeFrom(value).buildPartial();
            } else {
              domainTreeNodeIds_ = value;
            }
            onChanged();
          } else {
            domainTreeNodeIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public Builder clearDomainTreeNodeIds() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIds_ = null;
            onChanged();
          } else {
            domainTreeNodeIds_ = null;
            domainTreeNodeIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getDomainTreeNodeIdsBuilder() {
          
          onChanged();
          return getDomainTreeNodeIdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getDomainTreeNodeIdsOrBuilder() {
          if (domainTreeNodeIdsBuilder_ != null) {
            return domainTreeNodeIdsBuilder_.getMessageOrBuilder();
          } else {
            return domainTreeNodeIds_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : domainTreeNodeIds_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue domain_tree_node_ids = 30011;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum ein Vorgänger-Element besitzen, dessen "TreeNodeID" aus der hier angegebenen Menge von IDs kommt. Sonderfall ",," bedeutet "beliebiger Vorgänger".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDomainTreeNodeIdsFieldBuilder() {
          if (domainTreeNodeIdsBuilder_ == null) {
            domainTreeNodeIdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDomainTreeNodeIds(),
                    getParentForChildren(),
                    isClean());
            domainTreeNodeIds_ = null;
          }
          return domainTreeNodeIdsBuilder_;
        }

        private io.dstore.Values.integerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.Values.integerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder setNodeCharacteristicId(io.dstore.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue node_characteristic_id = 30012;</code>
         *
         * <pre>
         * Um "ItemConditionPartID" zu erfüllen, muß ein Element im Artikelbaum eine Eigenschaft zu diesem Merkmal besitzen, die der durch "Operator1" bis "Condition2" formulierten Bedingung genügt. Sonderfall "-1" : "KEINE Eigenschafts-Bedingung" (immer erfüllt).
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.Values.integerValue itemConditionPartId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemConditionPartIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public boolean hasItemConditionPartId() {
          return itemConditionPartIdBuilder_ != null || itemConditionPartId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue getItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            return itemConditionPartId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
          } else {
            return itemConditionPartIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder setItemConditionPartId(io.dstore.Values.integerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartId_ = value;
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder setItemConditionPartId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder mergeItemConditionPartId(io.dstore.Values.integerValue value) {
          if (itemConditionPartIdBuilder_ == null) {
            if (itemConditionPartId_ != null) {
              itemConditionPartId_ =
                io.dstore.Values.integerValue.newBuilder(itemConditionPartId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartId_ = value;
            }
            onChanged();
          } else {
            itemConditionPartIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public Builder clearItemConditionPartId() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartId_ = null;
            onChanged();
          } else {
            itemConditionPartId_ = null;
            itemConditionPartIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemConditionPartIdBuilder() {
          
          onChanged();
          return getItemConditionPartIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemConditionPartIdOrBuilder() {
          if (itemConditionPartIdBuilder_ != null) {
            return itemConditionPartIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemConditionPartId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_part_id = 30013;</code>
         *
         * <pre>
         * ID eines Bedingungs-Teils, das Bestandteil von "ItemConditionGroupID" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemConditionPartIdFieldBuilder() {
          if (itemConditionPartIdBuilder_ == null) {
            itemConditionPartIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemConditionPartId(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartId_ = null;
          }
          return itemConditionPartIdBuilder_;
        }

        private io.dstore.Values.booleanValue combineGroupsWithANDOperator_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> combineGroupsWithANDOperatorBuilder_;
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public boolean hasCombineGroupsWithANDOperator() {
          return combineGroupsWithANDOperatorBuilder_ != null || combineGroupsWithANDOperator_ != null;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue getCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            return combineGroupsWithANDOperator_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          } else {
            return combineGroupsWithANDOperatorBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombineGroupsWithANDOperator(io.dstore.Values.booleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            combineGroupsWithANDOperator_ = value;
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder setCombineGroupsWithANDOperator(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = builderForValue.build();
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder mergeCombineGroupsWithANDOperator(io.dstore.Values.booleanValue value) {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            if (combineGroupsWithANDOperator_ != null) {
              combineGroupsWithANDOperator_ =
                io.dstore.Values.booleanValue.newBuilder(combineGroupsWithANDOperator_).mergeFrom(value).buildPartial();
            } else {
              combineGroupsWithANDOperator_ = value;
            }
            onChanged();
          } else {
            combineGroupsWithANDOperatorBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public Builder clearCombineGroupsWithANDOperator() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperator_ = null;
            onChanged();
          } else {
            combineGroupsWithANDOperator_ = null;
            combineGroupsWithANDOperatorBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValue.Builder getCombineGroupsWithANDOperatorBuilder() {
          
          onChanged();
          return getCombineGroupsWithANDOperatorFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        public io.dstore.Values.booleanValueOrBuilder getCombineGroupsWithANDOperatorOrBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ != null) {
            return combineGroupsWithANDOperatorBuilder_.getMessageOrBuilder();
          } else {
            return combineGroupsWithANDOperator_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : combineGroupsWithANDOperator_;
          }
        }
        /**
         * <code>optional .dstore.values.booleanValue combine_groups_with_a_n_d_operator = 30017;</code>
         *
         * <pre>
         * Gibt an, ob die der "ItemConditionID" zugeordneten (Artikel-)Bedingungs-Gruppen logisch mit UND verknüpft werden ("1") oder mit ODER ("0")
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getCombineGroupsWithANDOperatorFieldBuilder() {
          if (combineGroupsWithANDOperatorBuilder_ == null) {
            combineGroupsWithANDOperatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getCombineGroupsWithANDOperator(),
                    getParentForChildren(),
                    isClean());
            combineGroupsWithANDOperator_ = null;
          }
          return combineGroupsWithANDOperatorBuilder_;
        }

        private io.dstore.Values.stringValue itemConditionPartDescription_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> itemConditionPartDescriptionBuilder_;
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public boolean hasItemConditionPartDescription() {
          return itemConditionPartDescriptionBuilder_ != null || itemConditionPartDescription_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.Values.stringValue getItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            return itemConditionPartDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
          } else {
            return itemConditionPartDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder setItemConditionPartDescription(io.dstore.Values.stringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionPartDescription_ = value;
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder setItemConditionPartDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder mergeItemConditionPartDescription(io.dstore.Values.stringValue value) {
          if (itemConditionPartDescriptionBuilder_ == null) {
            if (itemConditionPartDescription_ != null) {
              itemConditionPartDescription_ =
                io.dstore.Values.stringValue.newBuilder(itemConditionPartDescription_).mergeFrom(value).buildPartial();
            } else {
              itemConditionPartDescription_ = value;
            }
            onChanged();
          } else {
            itemConditionPartDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public Builder clearItemConditionPartDescription() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescription_ = null;
            onChanged();
          } else {
            itemConditionPartDescription_ = null;
            itemConditionPartDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getItemConditionPartDescriptionBuilder() {
          
          onChanged();
          return getItemConditionPartDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getItemConditionPartDescriptionOrBuilder() {
          if (itemConditionPartDescriptionBuilder_ != null) {
            return itemConditionPartDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionPartDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : itemConditionPartDescription_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue item_condition_part_description = 30018;</code>
         *
         * <pre>
         * Bezeichnung des Bedingungs-Teils "ItemConditionPartID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getItemConditionPartDescriptionFieldBuilder() {
          if (itemConditionPartDescriptionBuilder_ == null) {
            itemConditionPartDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getItemConditionPartDescription(),
                    getParentForChildren(),
                    isClean());
            itemConditionPartDescription_ = null;
          }
          return itemConditionPartDescriptionBuilder_;
        }

        private io.dstore.Values.stringValue levelIds_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> levelIdsBuilder_;
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public boolean hasLevelIds() {
          return levelIdsBuilder_ != null || levelIds_ != null;
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.Values.stringValue getLevelIds() {
          if (levelIdsBuilder_ == null) {
            return levelIds_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : levelIds_;
          } else {
            return levelIdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder setLevelIds(io.dstore.Values.stringValue value) {
          if (levelIdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelIds_ = value;
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder setLevelIds(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (levelIdsBuilder_ == null) {
            levelIds_ = builderForValue.build();
            onChanged();
          } else {
            levelIdsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder mergeLevelIds(io.dstore.Values.stringValue value) {
          if (levelIdsBuilder_ == null) {
            if (levelIds_ != null) {
              levelIds_ =
                io.dstore.Values.stringValue.newBuilder(levelIds_).mergeFrom(value).buildPartial();
            } else {
              levelIds_ = value;
            }
            onChanged();
          } else {
            levelIdsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public Builder clearLevelIds() {
          if (levelIdsBuilder_ == null) {
            levelIds_ = null;
            onChanged();
          } else {
            levelIds_ = null;
            levelIdsBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.Values.stringValue.Builder getLevelIdsBuilder() {
          
          onChanged();
          return getLevelIdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        public io.dstore.Values.stringValueOrBuilder getLevelIdsOrBuilder() {
          if (levelIdsBuilder_ != null) {
            return levelIdsBuilder_.getMessageOrBuilder();
          } else {
            return levelIds_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : levelIds_;
          }
        }
        /**
         * <code>optional .dstore.values.stringValue level_ids = 30019;</code>
         *
         * <pre>
         * Um den (Artikel-)Bedingungs-Teil "ItemConditionPartID" zu erfüllen, muß die Hierarchie ("LevelID") eines Artikel-Elementes aus der hier angegebenen Menge der Hierarchien ("LevelID"s) kommen. Sonderfall ",," bedeutet "beliebige Hierarchie".
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getLevelIdsFieldBuilder() {
          if (levelIdsBuilder_ == null) {
            levelIdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getLevelIds(),
                    getParentForChildren(),
                    isClean());
            levelIds_ = null;
          }
          return levelIdsBuilder_;
        }

        private io.dstore.Values.integerValue itemConditionGroupId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> itemConditionGroupIdBuilder_;
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public boolean hasItemConditionGroupId() {
          return itemConditionGroupIdBuilder_ != null || itemConditionGroupId_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue getItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            return itemConditionGroupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
          } else {
            return itemConditionGroupIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder setItemConditionGroupId(io.dstore.Values.integerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            itemConditionGroupId_ = value;
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder setItemConditionGroupId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = builderForValue.build();
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder mergeItemConditionGroupId(io.dstore.Values.integerValue value) {
          if (itemConditionGroupIdBuilder_ == null) {
            if (itemConditionGroupId_ != null) {
              itemConditionGroupId_ =
                io.dstore.Values.integerValue.newBuilder(itemConditionGroupId_).mergeFrom(value).buildPartial();
            } else {
              itemConditionGroupId_ = value;
            }
            onChanged();
          } else {
            itemConditionGroupIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public Builder clearItemConditionGroupId() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupId_ = null;
            onChanged();
          } else {
            itemConditionGroupId_ = null;
            itemConditionGroupIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getItemConditionGroupIdBuilder() {
          
          onChanged();
          return getItemConditionGroupIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getItemConditionGroupIdOrBuilder() {
          if (itemConditionGroupIdBuilder_ != null) {
            return itemConditionGroupIdBuilder_.getMessageOrBuilder();
          } else {
            return itemConditionGroupId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : itemConditionGroupId_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue item_condition_group_id = 30020;</code>
         *
         * <pre>
         * ID einer Bedingungs-Gruppe, die Bestandteil von "ItemConditionID" ist
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getItemConditionGroupIdFieldBuilder() {
          if (itemConditionGroupIdBuilder_ == null) {
            itemConditionGroupIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getItemConditionGroupId(),
                    getParentForChildren(),
                    isClean());
            itemConditionGroupId_ = null;
          }
          return itemConditionGroupIdBuilder_;
        }

        private io.dstore.Values.integerValue inheritDepth_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> inheritDepthBuilder_;
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public boolean hasInheritDepth() {
          return inheritDepthBuilder_ != null || inheritDepth_ != null;
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.Values.integerValue getInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            return inheritDepth_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : inheritDepth_;
          } else {
            return inheritDepthBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder setInheritDepth(io.dstore.Values.integerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            inheritDepth_ = value;
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder setInheritDepth(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = builderForValue.build();
            onChanged();
          } else {
            inheritDepthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder mergeInheritDepth(io.dstore.Values.integerValue value) {
          if (inheritDepthBuilder_ == null) {
            if (inheritDepth_ != null) {
              inheritDepth_ =
                io.dstore.Values.integerValue.newBuilder(inheritDepth_).mergeFrom(value).buildPartial();
            } else {
              inheritDepth_ = value;
            }
            onChanged();
          } else {
            inheritDepthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public Builder clearInheritDepth() {
          if (inheritDepthBuilder_ == null) {
            inheritDepth_ = null;
            onChanged();
          } else {
            inheritDepth_ = null;
            inheritDepthBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.Values.integerValue.Builder getInheritDepthBuilder() {
          
          onChanged();
          return getInheritDepthFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        public io.dstore.Values.integerValueOrBuilder getInheritDepthOrBuilder() {
          if (inheritDepthBuilder_ != null) {
            return inheritDepthBuilder_.getMessageOrBuilder();
          } else {
            return inheritDepth_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : inheritDepth_;
          }
        }
        /**
         * <code>optional .dstore.values.integerValue inherit_depth = 30023;</code>
         *
         * <pre>
         * Welche Eigenschaften zu "NodeCharacteristicID" hinsichtlich Vererbung sollen bei Prüfung der Eigenschafts-Bedingung beachtet werden :"-1" : Alle"0" : unvererbte"1" : direkte u. einfach geerbte"2" : direkte u. einfach oder zweifach geerbteusw.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getInheritDepthFieldBuilder() {
          if (inheritDepthBuilder_ == null) {
            inheritDepthBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getInheritDepth(),
                    getParentForChildren(),
                    isClean());
            inheritDepth_ = null;
          }
          return inheritDepthBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row)
      private static final io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row();
      }

      public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetCampaignBonusItems_Pu.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetCampaignBonusItems_Pu.Response)
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.class, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor;
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response build() {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response buildPartial() {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response result = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response) {
          return mergeFrom((io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response other) {
        if (other == io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.Row.Builder, io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetCampaignBonusItems_Pu.Response)
    private static final io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response();
    }

    public static io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetCampaignBonusItemsPu.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:dstore/engine/procedures/om_GetCampaig" +
      "nBonusItems_Pu.proto\022)dstore.engine.om_G" +
      "etCampaignBonusItems_Pu\032\023dstore/values.p" +
      "roto\032\031dstore/engine/error.proto\032\033dstore/" +
      "engine/message.proto\032#dstore/engine/meta" +
      "information.proto\"\305\005\n\nParameters\022/\n\nbene" +
      "fit_id\030\001 \001(\0132\033.dstore.values.integerValu" +
      "e\022\030\n\017benefit_id_null\030\351\007 \001(\010\0224\n\017only_defi" +
      "nition\030\002 \001(\0132\033.dstore.values.integerValu" +
      "e\022\035\n\024only_definition_null\030\352\007 \001(\010\022B\n\036sort",
      "_by_characteristic_id_list\030\003 \001(\0132\032.dstor" +
      "e.values.stringValue\022,\n#sort_by_characte" +
      "ristic_id_list_null\030\353\007 \001(\010\0224\n\020sort_optio" +
      "n_list\030\004 \001(\0132\032.dstore.values.stringValue" +
      "\022\036\n\025sort_option_list_null\030\354\007 \001(\010\022=\n\031inhe" +
      "rit_depth_option_list\030\005 \001(\0132\032.dstore.val" +
      "ues.stringValue\022\'\n\036inherit_depth_option_" +
      "list_null\030\355\007 \001(\010\022D\n recursive_evaluation" +
      "_option_list\030\006 \001(\0132\032.dstore.values.strin" +
      "gValue\022.\n%recursive_evaluation_option_li",
      "st_null\030\356\007 \001(\010\022C\n\036get_values_for_sort_by" +
      "_characs\030\007 \001(\0132\033.dstore.values.booleanVa" +
      "lue\022,\n#get_values_for_sort_by_characs_nu" +
      "ll\030\357\007 \001(\010\"\377\016\n\010Response\022)\n\005error\030\001 \001(\0132\032." +
      "dstore.engine.error.Error\022H\n\020meta_inform" +
      "ation\030\002 \003(\0132..dstore.engine.metainformat" +
      "ion.MetaInformation\022/\n\007message\030\003 \003(\0132\036.d" +
      "store.engine.message.Message\022D\n\003row\030\004 \003(" +
      "\01327.dstore.engine.om_GetCampaignBonusIte" +
      "ms_Pu.Response.Row\032\206\r\n\003Row\022\017\n\006row_id\030\220N ",
      "\001(\005\0225\n\020node_description\030\221N \001(\0132\032.dstore." +
      "values.stringValue\022+\n\006value2\030\222N \001(\0132\032.ds" +
      "tore.values.stringValue\022+\n\006value3\030\223N \001(\013" +
      "2\032.dstore.values.stringValue\022+\n\006value1\030\224" +
      "N \001(\0132\032.dstore.values.stringValue\0221\n\013ite" +
      "m_set_id\030\225N \001(\0132\033.dstore.values.integerV" +
      "alue\022-\n\007node_id\030\226N \001(\0132\033.dstore.values.i" +
      "ntegerValue\0222\n\014tree_node_id\030\227N \001(\0132\033.dst" +
      "ore.values.integerValue\022=\n\027bonus_from_on" +
      "e_set_only\030\230N \001(\0132\033.dstore.values.boolea",
      "nValue\0222\n\014max_quantity\030\231N \001(\0132\033.dstore.v" +
      "alues.integerValue\0228\n\021item_condition_id\030" +
      "\241\234\001 \001(\0132\033.dstore.values.integerValue\022@\n\032" +
      "item_condition_description\030\245\234\001 \001(\0132\032.dst" +
      "ore.values.stringValue\022.\n\007sort_no\030\246\234\001 \001(" +
      "\0132\033.dstore.values.integerValue\0229\n\022item_g" +
      "roup_sort_no\030\261\352\001 \001(\0132\033.dstore.values.int" +
      "egerValue\022/\n\toperator1\030\262\352\001 \001(\0132\032.dstore." +
      "values.stringValue\0220\n\ncondition1\030\263\352\001 \001(\013" +
      "2\032.dstore.values.stringValue\0220\n\nconditio",
      "n2\030\264\352\001 \001(\0132\032.dstore.values.stringValue\022/" +
      "\n\toperator2\030\265\352\001 \001(\0132\032.dstore.values.stri" +
      "ngValue\022F\n item_condition_group_descript" +
      "ion\030\266\352\001 \001(\0132\032.dstore.values.stringValue\022" +
      "H\n!combine_parts_with_a_n_d_operator\030\267\352\001" +
      " \001(\0132\033.dstore.values.booleanValue\022;\n\024rec" +
      "ursive_evaluation\030\270\352\001 \001(\0132\033.dstore.value" +
      "s.integerValue\0228\n\021item_part_sort_no\030\271\352\001 " +
      "\001(\0132\033.dstore.values.integerValue\022:\n\024doma" +
      "in_tree_node_ids\030\273\352\001 \001(\0132\032.dstore.values",
      ".stringValue\022=\n\026node_characteristic_id\030\274" +
      "\352\001 \001(\0132\033.dstore.values.integerValue\022=\n\026i" +
      "tem_condition_part_id\030\275\352\001 \001(\0132\033.dstore.v" +
      "alues.integerValue\022I\n\"combine_groups_wit" +
      "h_a_n_d_operator\030\301\352\001 \001(\0132\033.dstore.values" +
      ".booleanValue\022E\n\037item_condition_part_des" +
      "cription\030\302\352\001 \001(\0132\032.dstore.values.stringV" +
      "alue\022/\n\tlevel_ids\030\303\352\001 \001(\0132\032.dstore.value" +
      "s.stringValue\022>\n\027item_condition_group_id" +
      "\030\304\352\001 \001(\0132\033.dstore.values.integerValue\0224\n",
      "\rinherit_depth\030\307\352\001 \001(\0132\033.dstore.values.i" +
      "ntegerValueB\035\n\033io.dstore.engine.procedur" +
      "esb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Parameters_descriptor,
        new java.lang.String[] { "BenefitId", "BenefitIdNull", "OnlyDefinition", "OnlyDefinitionNull", "SortByCharacteristicIdList", "SortByCharacteristicIdListNull", "SortOptionList", "SortOptionListNull", "InheritDepthOptionList", "InheritDepthOptionListNull", "RecursiveEvaluationOptionList", "RecursiveEvaluationOptionListNull", "GetValuesForSortByCharacs", "GetValuesForSortByCharacsNull", });
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_om_GetCampaignBonusItems_Pu_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "NodeDescription", "Value2", "Value3", "Value1", "ItemSetId", "NodeId", "TreeNodeId", "BonusFromOneSetOnly", "MaxQuantity", "ItemConditionId", "ItemConditionDescription", "SortNo", "ItemGroupSortNo", "Operator1", "Condition1", "Condition2", "Operator2", "ItemConditionGroupDescription", "CombinePartsWithANDOperator", "RecursiveEvaluation", "ItemPartSortNo", "DomainTreeNodeIds", "NodeCharacteristicId", "ItemConditionPartId", "CombineGroupsWithANDOperator", "ItemConditionPartDescription", "LevelIds", "ItemConditionGroupId", "InheritDepth", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
