// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/do_GetProcedureResultSets_Ad.proto

package io.dstore.engine.procedures;

public final class DoGetProcedureResultSetsAd {
  private DoGetProcedureResultSetsAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    boolean hasProcedureName();
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.Values.stringValue getProcedureName();
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder();

    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    boolean getProcedureNameNull();

    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    boolean hasProcedureResultConditionId();
    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    io.dstore.Values.integerValue getProcedureResultConditionId();
    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder();

    /**
     * <code>optional bool procedure_result_condition_id_null = 1002;</code>
     */
    boolean getProcedureResultConditionIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      procedureNameNull_ = false;
      procedureResultConditionIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.stringValue.Builder subBuilder = null;
              if (procedureName_ != null) {
                subBuilder = procedureName_.toBuilder();
              }
              procedureName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureName_);
                procedureName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (procedureResultConditionId_ != null) {
                subBuilder = procedureResultConditionId_.toBuilder();
              }
              procedureResultConditionId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureResultConditionId_);
                procedureResultConditionId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureNameNull_ = input.readBool();
              break;
            }
            case 8016: {

              procedureResultConditionIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.Builder.class);
    }

    public static final int PROCEDURE_NAME_FIELD_NUMBER = 1;
    private io.dstore.Values.stringValue procedureName_;
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public boolean hasProcedureName() {
      return procedureName_ != null;
    }
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.Values.stringValue getProcedureName() {
      return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
    }
    /**
     * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
     */
    public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
      return getProcedureName();
    }

    public static final int PROCEDURE_NAME_NULL_FIELD_NUMBER = 1001;
    private boolean procedureNameNull_;
    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    public boolean getProcedureNameNull() {
      return procedureNameNull_;
    }

    public static final int PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue procedureResultConditionId_;
    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public boolean hasProcedureResultConditionId() {
      return procedureResultConditionId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public io.dstore.Values.integerValue getProcedureResultConditionId() {
      return procedureResultConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
    }
    /**
     * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
      return getProcedureResultConditionId();
    }

    public static final int PROCEDURE_RESULT_CONDITION_ID_NULL_FIELD_NUMBER = 1002;
    private boolean procedureResultConditionIdNull_;
    /**
     * <code>optional bool procedure_result_condition_id_null = 1002;</code>
     */
    public boolean getProcedureResultConditionIdNull() {
      return procedureResultConditionIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureName_ != null) {
        output.writeMessage(1, getProcedureName());
      }
      if (procedureResultConditionId_ != null) {
        output.writeMessage(2, getProcedureResultConditionId());
      }
      if (procedureNameNull_ != false) {
        output.writeBool(1001, procedureNameNull_);
      }
      if (procedureResultConditionIdNull_ != false) {
        output.writeBool(1002, procedureResultConditionIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureName());
      }
      if (procedureResultConditionId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProcedureResultConditionId());
      }
      if (procedureNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureNameNull_);
      }
      if (procedureResultConditionIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, procedureResultConditionIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters other = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters) obj;

      boolean result = true;
      result = result && (hasProcedureName() == other.hasProcedureName());
      if (hasProcedureName()) {
        result = result && getProcedureName()
            .equals(other.getProcedureName());
      }
      result = result && (getProcedureNameNull()
          == other.getProcedureNameNull());
      result = result && (hasProcedureResultConditionId() == other.hasProcedureResultConditionId());
      if (hasProcedureResultConditionId()) {
        result = result && getProcedureResultConditionId()
            .equals(other.getProcedureResultConditionId());
      }
      result = result && (getProcedureResultConditionIdNull()
          == other.getProcedureResultConditionIdNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasProcedureName()) {
        hash = (37 * hash) + PROCEDURE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureName().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_NAME_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureNameNull());
      if (hasProcedureResultConditionId()) {
        hash = (37 * hash) + PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureResultConditionId().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_RESULT_CONDITION_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureResultConditionIdNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }
        procedureNameNull_ = false;

        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = null;
        } else {
          procedureResultConditionId_ = null;
          procedureResultConditionIdBuilder_ = null;
        }
        procedureResultConditionIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters build() {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters buildPartial() {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters result = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters(this);
        if (procedureNameBuilder_ == null) {
          result.procedureName_ = procedureName_;
        } else {
          result.procedureName_ = procedureNameBuilder_.build();
        }
        result.procedureNameNull_ = procedureNameNull_;
        if (procedureResultConditionIdBuilder_ == null) {
          result.procedureResultConditionId_ = procedureResultConditionId_;
        } else {
          result.procedureResultConditionId_ = procedureResultConditionIdBuilder_.build();
        }
        result.procedureResultConditionIdNull_ = procedureResultConditionIdNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters other) {
        if (other == io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureName()) {
          mergeProcedureName(other.getProcedureName());
        }
        if (other.getProcedureNameNull() != false) {
          setProcedureNameNull(other.getProcedureNameNull());
        }
        if (other.hasProcedureResultConditionId()) {
          mergeProcedureResultConditionId(other.getProcedureResultConditionId());
        }
        if (other.getProcedureResultConditionIdNull() != false) {
          setProcedureResultConditionIdNull(other.getProcedureResultConditionIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.stringValue procedureName_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> procedureNameBuilder_;
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public boolean hasProcedureName() {
        return procedureNameBuilder_ != null || procedureName_ != null;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValue getProcedureName() {
        if (procedureNameBuilder_ == null) {
          return procedureName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
        } else {
          return procedureNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(io.dstore.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureName_ = value;
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(
          io.dstore.Values.stringValue.Builder builderForValue) {
        if (procedureNameBuilder_ == null) {
          procedureName_ = builderForValue.build();
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder mergeProcedureName(io.dstore.Values.stringValue value) {
        if (procedureNameBuilder_ == null) {
          if (procedureName_ != null) {
            procedureName_ =
              io.dstore.Values.stringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
          } else {
            procedureName_ = value;
          }
          onChanged();
        } else {
          procedureNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public Builder clearProcedureName() {
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
          onChanged();
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValue.Builder getProcedureNameBuilder() {
        
        onChanged();
        return getProcedureNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getProcedureNameOrBuilder() {
        if (procedureNameBuilder_ != null) {
          return procedureNameBuilder_.getMessageOrBuilder();
        } else {
          return procedureName_ == null ?
              io.dstore.Values.stringValue.getDefaultInstance() : procedureName_;
        }
      }
      /**
       * <code>optional .dstore.values.stringValue procedure_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
          getProcedureNameFieldBuilder() {
        if (procedureNameBuilder_ == null) {
          procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                  getProcedureName(),
                  getParentForChildren(),
                  isClean());
          procedureName_ = null;
        }
        return procedureNameBuilder_;
      }

      private boolean procedureNameNull_ ;
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public boolean getProcedureNameNull() {
        return procedureNameNull_;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder setProcedureNameNull(boolean value) {
        
        procedureNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder clearProcedureNameNull() {
        
        procedureNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue procedureResultConditionId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> procedureResultConditionIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public boolean hasProcedureResultConditionId() {
        return procedureResultConditionIdBuilder_ != null || procedureResultConditionId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.Values.integerValue getProcedureResultConditionId() {
        if (procedureResultConditionIdBuilder_ == null) {
          return procedureResultConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
        } else {
          return procedureResultConditionIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder setProcedureResultConditionId(io.dstore.Values.integerValue value) {
        if (procedureResultConditionIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureResultConditionId_ = value;
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder setProcedureResultConditionId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = builderForValue.build();
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder mergeProcedureResultConditionId(io.dstore.Values.integerValue value) {
        if (procedureResultConditionIdBuilder_ == null) {
          if (procedureResultConditionId_ != null) {
            procedureResultConditionId_ =
              io.dstore.Values.integerValue.newBuilder(procedureResultConditionId_).mergeFrom(value).buildPartial();
          } else {
            procedureResultConditionId_ = value;
          }
          onChanged();
        } else {
          procedureResultConditionIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public Builder clearProcedureResultConditionId() {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionId_ = null;
          onChanged();
        } else {
          procedureResultConditionId_ = null;
          procedureResultConditionIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getProcedureResultConditionIdBuilder() {
        
        onChanged();
        return getProcedureResultConditionIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
        if (procedureResultConditionIdBuilder_ != null) {
          return procedureResultConditionIdBuilder_.getMessageOrBuilder();
        } else {
          return procedureResultConditionId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getProcedureResultConditionIdFieldBuilder() {
        if (procedureResultConditionIdBuilder_ == null) {
          procedureResultConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getProcedureResultConditionId(),
                  getParentForChildren(),
                  isClean());
          procedureResultConditionId_ = null;
        }
        return procedureResultConditionIdBuilder_;
      }

      private boolean procedureResultConditionIdNull_ ;
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public boolean getProcedureResultConditionIdNull() {
        return procedureResultConditionIdNull_;
      }
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public Builder setProcedureResultConditionIdNull(boolean value) {
        
        procedureResultConditionIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_result_condition_id_null = 1002;</code>
       */
      public Builder clearProcedureResultConditionIdNull() {
        
        procedureResultConditionIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Parameters)
    private static final io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters();
    }

    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      boolean hasCondition();
      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      io.dstore.Values.stringValue getCondition();
      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      io.dstore.Values.stringValueOrBuilder getConditionOrBuilder();

      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      boolean hasProcedureResultConditionId();
      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      io.dstore.Values.integerValue getProcedureResultConditionId();
      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder();

      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      boolean hasDescriptionValidSinceVersion();
      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      io.dstore.Values.stringValue getDescriptionValidSinceVersion();
      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      io.dstore.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder();

      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      boolean hasDescription();
      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      io.dstore.Values.stringValue getDescription();
      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder();

      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      boolean hasPrecisionValue();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      io.dstore.Values.integerValue getPrecisionValue();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      boolean hasParameterName();
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      io.dstore.Values.stringValue getParameterName();
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      io.dstore.Values.stringValueOrBuilder getParameterNameOrBuilder();

      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      boolean hasScale();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      io.dstore.Values.integerValue getScale();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      io.dstore.Values.integerValueOrBuilder getScaleOrBuilder();

      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      boolean hasSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      io.dstore.Values.integerValue getSortNo();
      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder();

      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      boolean hasResultColumnName();
      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      io.dstore.Values.stringValue getResultColumnName();
      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      io.dstore.Values.stringValueOrBuilder getResultColumnNameOrBuilder();

      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      boolean hasLength();
      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      io.dstore.Values.integerValue getLength();
      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      io.dstore.Values.integerValueOrBuilder getLengthOrBuilder();

      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      boolean hasDescriptionLastEdited();
      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      io.dstore.Values.timestampValue getDescriptionLastEdited();
      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      io.dstore.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder();

      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      boolean hasIntroducedIndstoreVersion();
      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      io.dstore.Values.stringValue getIntroducedIndstoreVersion();
      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      io.dstore.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder();

      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      boolean hasDataType();
      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      io.dstore.Values.stringValue getDataType();
      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      io.dstore.Values.stringValueOrBuilder getDataTypeOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      boolean hasProcResultCondDescription();
      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      io.dstore.Values.stringValue getProcResultCondDescription();
      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      io.dstore.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (condition_ != null) {
                  subBuilder = condition_.toBuilder();
                }
                condition_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(condition_);
                  condition_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (procedureResultConditionId_ != null) {
                  subBuilder = procedureResultConditionId_.toBuilder();
                }
                procedureResultConditionId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procedureResultConditionId_);
                  procedureResultConditionId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (descriptionValidSinceVersion_ != null) {
                  subBuilder = descriptionValidSinceVersion_.toBuilder();
                }
                descriptionValidSinceVersion_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(descriptionValidSinceVersion_);
                  descriptionValidSinceVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (description_ != null) {
                  subBuilder = description_.toBuilder();
                }
                description_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(description_);
                  description_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (parameterName_ != null) {
                  subBuilder = parameterName_.toBuilder();
                }
                parameterName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(parameterName_);
                  parameterName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (scale_ != null) {
                  subBuilder = scale_.toBuilder();
                }
                scale_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(scale_);
                  scale_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (sortNo_ != null) {
                  subBuilder = sortNo_.toBuilder();
                }
                sortNo_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(sortNo_);
                  sortNo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (resultColumnName_ != null) {
                  subBuilder = resultColumnName_.toBuilder();
                }
                resultColumnName_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(resultColumnName_);
                  resultColumnName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (length_ != null) {
                  subBuilder = length_.toBuilder();
                }
                length_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(length_);
                  length_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.timestampValue.Builder subBuilder = null;
                if (descriptionLastEdited_ != null) {
                  subBuilder = descriptionLastEdited_.toBuilder();
                }
                descriptionLastEdited_ = input.readMessage(io.dstore.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(descriptionLastEdited_);
                  descriptionLastEdited_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (introducedIndstoreVersion_ != null) {
                  subBuilder = introducedIndstoreVersion_.toBuilder();
                }
                introducedIndstoreVersion_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(introducedIndstoreVersion_);
                  introducedIndstoreVersion_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (dataType_ != null) {
                  subBuilder = dataType_.toBuilder();
                }
                dataType_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(dataType_);
                  dataType_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (procResultCondDescription_ != null) {
                  subBuilder = procResultCondDescription_.toBuilder();
                }
                procResultCondDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(procResultCondDescription_);
                  procResultCondDescription_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int CONDITION_FIELD_NUMBER = 10001;
      private io.dstore.Values.stringValue condition_;
      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      public boolean hasCondition() {
        return condition_ != null;
      }
      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      public io.dstore.Values.stringValue getCondition() {
        return condition_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition_;
      }
      /**
       * <pre>
       * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue condition = 10001;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getConditionOrBuilder() {
        return getCondition();
      }

      public static final int PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER = 10002;
      private io.dstore.Values.integerValue procedureResultConditionId_;
      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      public boolean hasProcedureResultConditionId() {
        return procedureResultConditionId_ != null;
      }
      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      public io.dstore.Values.integerValue getProcedureResultConditionId() {
        return procedureResultConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
      }
      /**
       * <pre>
       * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
       * </pre>
       *
       * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
        return getProcedureResultConditionId();
      }

      public static final int DESCRIPTION_VALID_SINCE_VERSION_FIELD_NUMBER = 10003;
      private io.dstore.Values.stringValue descriptionValidSinceVersion_;
      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      public boolean hasDescriptionValidSinceVersion() {
        return descriptionValidSinceVersion_ != null;
      }
      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      public io.dstore.Values.stringValue getDescriptionValidSinceVersion() {
        return descriptionValidSinceVersion_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
      }
      /**
       * <pre>
       * Seit welcher Version die Beschreibung ("Description") gilt
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder() {
        return getDescriptionValidSinceVersion();
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 10004;
      private io.dstore.Values.stringValue description_;
      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      public boolean hasDescription() {
        return description_ != null;
      }
      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      public io.dstore.Values.stringValue getDescription() {
        return description_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : description_;
      }
      /**
       * <pre>
       * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
       * </pre>
       *
       * <code>optional .dstore.values.stringValue description = 10004;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder() {
        return getDescription();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10005;
      private io.dstore.Values.integerValue precisionValue_;
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      public io.dstore.Values.integerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int PARAMETER_NAME_FIELD_NUMBER = 10006;
      private io.dstore.Values.stringValue parameterName_;
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      public boolean hasParameterName() {
        return parameterName_ != null;
      }
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      public io.dstore.Values.stringValue getParameterName() {
        return parameterName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : parameterName_;
      }
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getParameterNameOrBuilder() {
        return getParameterName();
      }

      public static final int SCALE_FIELD_NUMBER = 10007;
      private io.dstore.Values.integerValue scale_;
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      public boolean hasScale() {
        return scale_ != null;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      public io.dstore.Values.integerValue getScale() {
        return scale_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : scale_;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.integerValue scale = 10007;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getScaleOrBuilder() {
        return getScale();
      }

      public static final int SORT_NO_FIELD_NUMBER = 10008;
      private io.dstore.Values.integerValue sortNo_;
      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      public boolean hasSortNo() {
        return sortNo_ != null;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      public io.dstore.Values.integerValue getSortNo() {
        return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
      }
      /**
       * <pre>
       * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
        return getSortNo();
      }

      public static final int RESULT_COLUMN_NAME_FIELD_NUMBER = 10009;
      private io.dstore.Values.stringValue resultColumnName_;
      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      public boolean hasResultColumnName() {
        return resultColumnName_ != null;
      }
      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      public io.dstore.Values.stringValue getResultColumnName() {
        return resultColumnName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : resultColumnName_;
      }
      /**
       * <pre>
       * Name einer Rückgabespalte der Ergebnismenge
       * </pre>
       *
       * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getResultColumnNameOrBuilder() {
        return getResultColumnName();
      }

      public static final int LENGTH_FIELD_NUMBER = 10010;
      private io.dstore.Values.integerValue length_;
      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      public boolean hasLength() {
        return length_ != null;
      }
      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      public io.dstore.Values.integerValue getLength() {
        return length_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : length_;
      }
      /**
       * <pre>
       * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue length = 10010;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getLengthOrBuilder() {
        return getLength();
      }

      public static final int DESCRIPTION_LAST_EDITED_FIELD_NUMBER = 10011;
      private io.dstore.Values.timestampValue descriptionLastEdited_;
      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      public boolean hasDescriptionLastEdited() {
        return descriptionLastEdited_ != null;
      }
      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      public io.dstore.Values.timestampValue getDescriptionLastEdited() {
        return descriptionLastEdited_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
      }
      /**
       * <pre>
       * Wann die Beschreibung ("Description") zuletzt editiert wurde
       * </pre>
       *
       * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
       */
      public io.dstore.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder() {
        return getDescriptionLastEdited();
      }

      public static final int INTRODUCED_INDSTORE_VERSION_FIELD_NUMBER = 10012;
      private io.dstore.Values.stringValue introducedIndstoreVersion_;
      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      public boolean hasIntroducedIndstoreVersion() {
        return introducedIndstoreVersion_ != null;
      }
      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      public io.dstore.Values.stringValue getIntroducedIndstoreVersion() {
        return introducedIndstoreVersion_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
      }
      /**
       * <pre>
       * Seit welcher Version gibt es die Spalte "ResultColumnName"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder() {
        return getIntroducedIndstoreVersion();
      }

      public static final int DATA_TYPE_FIELD_NUMBER = 10013;
      private io.dstore.Values.stringValue dataType_;
      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      public boolean hasDataType() {
        return dataType_ != null;
      }
      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      public io.dstore.Values.stringValue getDataType() {
        return dataType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : dataType_;
      }
      /**
       * <pre>
       * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
       * </pre>
       *
       * <code>optional .dstore.values.stringValue data_type = 10013;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getDataTypeOrBuilder() {
        return getDataType();
      }

      public static final int PROC_RESULT_COND_DESCRIPTION_FIELD_NUMBER = 10014;
      private io.dstore.Values.stringValue procResultCondDescription_;
      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      public boolean hasProcResultCondDescription() {
        return procResultCondDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      public io.dstore.Values.stringValue getProcResultCondDescription() {
        return procResultCondDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
       * </pre>
       *
       * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder() {
        return getProcResultCondDescription();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (condition_ != null) {
          output.writeMessage(10001, getCondition());
        }
        if (procedureResultConditionId_ != null) {
          output.writeMessage(10002, getProcedureResultConditionId());
        }
        if (descriptionValidSinceVersion_ != null) {
          output.writeMessage(10003, getDescriptionValidSinceVersion());
        }
        if (description_ != null) {
          output.writeMessage(10004, getDescription());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          output.writeMessage(10006, getParameterName());
        }
        if (scale_ != null) {
          output.writeMessage(10007, getScale());
        }
        if (sortNo_ != null) {
          output.writeMessage(10008, getSortNo());
        }
        if (resultColumnName_ != null) {
          output.writeMessage(10009, getResultColumnName());
        }
        if (length_ != null) {
          output.writeMessage(10010, getLength());
        }
        if (descriptionLastEdited_ != null) {
          output.writeMessage(10011, getDescriptionLastEdited());
        }
        if (introducedIndstoreVersion_ != null) {
          output.writeMessage(10012, getIntroducedIndstoreVersion());
        }
        if (dataType_ != null) {
          output.writeMessage(10013, getDataType());
        }
        if (procResultCondDescription_ != null) {
          output.writeMessage(10014, getProcResultCondDescription());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (condition_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getCondition());
        }
        if (procedureResultConditionId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getProcedureResultConditionId());
        }
        if (descriptionValidSinceVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getDescriptionValidSinceVersion());
        }
        if (description_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getDescription());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getParameterName());
        }
        if (scale_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getScale());
        }
        if (sortNo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getSortNo());
        }
        if (resultColumnName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getResultColumnName());
        }
        if (length_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getLength());
        }
        if (descriptionLastEdited_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getDescriptionLastEdited());
        }
        if (introducedIndstoreVersion_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getIntroducedIndstoreVersion());
        }
        if (dataType_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getDataType());
        }
        if (procResultCondDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getProcResultCondDescription());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row other = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasCondition() == other.hasCondition());
        if (hasCondition()) {
          result = result && getCondition()
              .equals(other.getCondition());
        }
        result = result && (hasProcedureResultConditionId() == other.hasProcedureResultConditionId());
        if (hasProcedureResultConditionId()) {
          result = result && getProcedureResultConditionId()
              .equals(other.getProcedureResultConditionId());
        }
        result = result && (hasDescriptionValidSinceVersion() == other.hasDescriptionValidSinceVersion());
        if (hasDescriptionValidSinceVersion()) {
          result = result && getDescriptionValidSinceVersion()
              .equals(other.getDescriptionValidSinceVersion());
        }
        result = result && (hasDescription() == other.hasDescription());
        if (hasDescription()) {
          result = result && getDescription()
              .equals(other.getDescription());
        }
        result = result && (hasPrecisionValue() == other.hasPrecisionValue());
        if (hasPrecisionValue()) {
          result = result && getPrecisionValue()
              .equals(other.getPrecisionValue());
        }
        result = result && (hasParameterName() == other.hasParameterName());
        if (hasParameterName()) {
          result = result && getParameterName()
              .equals(other.getParameterName());
        }
        result = result && (hasScale() == other.hasScale());
        if (hasScale()) {
          result = result && getScale()
              .equals(other.getScale());
        }
        result = result && (hasSortNo() == other.hasSortNo());
        if (hasSortNo()) {
          result = result && getSortNo()
              .equals(other.getSortNo());
        }
        result = result && (hasResultColumnName() == other.hasResultColumnName());
        if (hasResultColumnName()) {
          result = result && getResultColumnName()
              .equals(other.getResultColumnName());
        }
        result = result && (hasLength() == other.hasLength());
        if (hasLength()) {
          result = result && getLength()
              .equals(other.getLength());
        }
        result = result && (hasDescriptionLastEdited() == other.hasDescriptionLastEdited());
        if (hasDescriptionLastEdited()) {
          result = result && getDescriptionLastEdited()
              .equals(other.getDescriptionLastEdited());
        }
        result = result && (hasIntroducedIndstoreVersion() == other.hasIntroducedIndstoreVersion());
        if (hasIntroducedIndstoreVersion()) {
          result = result && getIntroducedIndstoreVersion()
              .equals(other.getIntroducedIndstoreVersion());
        }
        result = result && (hasDataType() == other.hasDataType());
        if (hasDataType()) {
          result = result && getDataType()
              .equals(other.getDataType());
        }
        result = result && (hasProcResultCondDescription() == other.hasProcResultCondDescription());
        if (hasProcResultCondDescription()) {
          result = result && getProcResultCondDescription()
              .equals(other.getProcResultCondDescription());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasCondition()) {
          hash = (37 * hash) + CONDITION_FIELD_NUMBER;
          hash = (53 * hash) + getCondition().hashCode();
        }
        if (hasProcedureResultConditionId()) {
          hash = (37 * hash) + PROCEDURE_RESULT_CONDITION_ID_FIELD_NUMBER;
          hash = (53 * hash) + getProcedureResultConditionId().hashCode();
        }
        if (hasDescriptionValidSinceVersion()) {
          hash = (37 * hash) + DESCRIPTION_VALID_SINCE_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getDescriptionValidSinceVersion().hashCode();
        }
        if (hasDescription()) {
          hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getDescription().hashCode();
        }
        if (hasPrecisionValue()) {
          hash = (37 * hash) + PRECISION_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getPrecisionValue().hashCode();
        }
        if (hasParameterName()) {
          hash = (37 * hash) + PARAMETER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getParameterName().hashCode();
        }
        if (hasScale()) {
          hash = (37 * hash) + SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getScale().hashCode();
        }
        if (hasSortNo()) {
          hash = (37 * hash) + SORT_NO_FIELD_NUMBER;
          hash = (53 * hash) + getSortNo().hashCode();
        }
        if (hasResultColumnName()) {
          hash = (37 * hash) + RESULT_COLUMN_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getResultColumnName().hashCode();
        }
        if (hasLength()) {
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getLength().hashCode();
        }
        if (hasDescriptionLastEdited()) {
          hash = (37 * hash) + DESCRIPTION_LAST_EDITED_FIELD_NUMBER;
          hash = (53 * hash) + getDescriptionLastEdited().hashCode();
        }
        if (hasIntroducedIndstoreVersion()) {
          hash = (37 * hash) + INTRODUCED_INDSTORE_VERSION_FIELD_NUMBER;
          hash = (53 * hash) + getIntroducedIndstoreVersion().hashCode();
        }
        if (hasDataType()) {
          hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDataType().hashCode();
        }
        if (hasProcResultCondDescription()) {
          hash = (37 * hash) + PROC_RESULT_COND_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getProcResultCondDescription().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (conditionBuilder_ == null) {
            condition_ = null;
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = null;
          } else {
            procedureResultConditionId_ = null;
            procedureResultConditionIdBuilder_ = null;
          }
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = null;
          } else {
            descriptionValidSinceVersion_ = null;
            descriptionValidSinceVersionBuilder_ = null;
          }
          if (descriptionBuilder_ == null) {
            description_ = null;
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }
          if (scaleBuilder_ == null) {
            scale_ = null;
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = null;
          } else {
            resultColumnName_ = null;
            resultColumnNameBuilder_ = null;
          }
          if (lengthBuilder_ == null) {
            length_ = null;
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = null;
          } else {
            descriptionLastEdited_ = null;
            descriptionLastEditedBuilder_ = null;
          }
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = null;
          } else {
            introducedIndstoreVersion_ = null;
            introducedIndstoreVersionBuilder_ = null;
          }
          if (dataTypeBuilder_ == null) {
            dataType_ = null;
          } else {
            dataType_ = null;
            dataTypeBuilder_ = null;
          }
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = null;
          } else {
            procResultCondDescription_ = null;
            procResultCondDescriptionBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row build() {
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row result = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (conditionBuilder_ == null) {
            result.condition_ = condition_;
          } else {
            result.condition_ = conditionBuilder_.build();
          }
          if (procedureResultConditionIdBuilder_ == null) {
            result.procedureResultConditionId_ = procedureResultConditionId_;
          } else {
            result.procedureResultConditionId_ = procedureResultConditionIdBuilder_.build();
          }
          if (descriptionValidSinceVersionBuilder_ == null) {
            result.descriptionValidSinceVersion_ = descriptionValidSinceVersion_;
          } else {
            result.descriptionValidSinceVersion_ = descriptionValidSinceVersionBuilder_.build();
          }
          if (descriptionBuilder_ == null) {
            result.description_ = description_;
          } else {
            result.description_ = descriptionBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (parameterNameBuilder_ == null) {
            result.parameterName_ = parameterName_;
          } else {
            result.parameterName_ = parameterNameBuilder_.build();
          }
          if (scaleBuilder_ == null) {
            result.scale_ = scale_;
          } else {
            result.scale_ = scaleBuilder_.build();
          }
          if (sortNoBuilder_ == null) {
            result.sortNo_ = sortNo_;
          } else {
            result.sortNo_ = sortNoBuilder_.build();
          }
          if (resultColumnNameBuilder_ == null) {
            result.resultColumnName_ = resultColumnName_;
          } else {
            result.resultColumnName_ = resultColumnNameBuilder_.build();
          }
          if (lengthBuilder_ == null) {
            result.length_ = length_;
          } else {
            result.length_ = lengthBuilder_.build();
          }
          if (descriptionLastEditedBuilder_ == null) {
            result.descriptionLastEdited_ = descriptionLastEdited_;
          } else {
            result.descriptionLastEdited_ = descriptionLastEditedBuilder_.build();
          }
          if (introducedIndstoreVersionBuilder_ == null) {
            result.introducedIndstoreVersion_ = introducedIndstoreVersion_;
          } else {
            result.introducedIndstoreVersion_ = introducedIndstoreVersionBuilder_.build();
          }
          if (dataTypeBuilder_ == null) {
            result.dataType_ = dataType_;
          } else {
            result.dataType_ = dataTypeBuilder_.build();
          }
          if (procResultCondDescriptionBuilder_ == null) {
            result.procResultCondDescription_ = procResultCondDescription_;
          } else {
            result.procResultCondDescription_ = procResultCondDescriptionBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasCondition()) {
            mergeCondition(other.getCondition());
          }
          if (other.hasProcedureResultConditionId()) {
            mergeProcedureResultConditionId(other.getProcedureResultConditionId());
          }
          if (other.hasDescriptionValidSinceVersion()) {
            mergeDescriptionValidSinceVersion(other.getDescriptionValidSinceVersion());
          }
          if (other.hasDescription()) {
            mergeDescription(other.getDescription());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasParameterName()) {
            mergeParameterName(other.getParameterName());
          }
          if (other.hasScale()) {
            mergeScale(other.getScale());
          }
          if (other.hasSortNo()) {
            mergeSortNo(other.getSortNo());
          }
          if (other.hasResultColumnName()) {
            mergeResultColumnName(other.getResultColumnName());
          }
          if (other.hasLength()) {
            mergeLength(other.getLength());
          }
          if (other.hasDescriptionLastEdited()) {
            mergeDescriptionLastEdited(other.getDescriptionLastEdited());
          }
          if (other.hasIntroducedIndstoreVersion()) {
            mergeIntroducedIndstoreVersion(other.getIntroducedIndstoreVersion());
          }
          if (other.hasDataType()) {
            mergeDataType(other.getDataType());
          }
          if (other.hasProcResultCondDescription()) {
            mergeProcResultCondDescription(other.getProcResultCondDescription());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.stringValue condition_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> conditionBuilder_;
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public boolean hasCondition() {
          return conditionBuilder_ != null || condition_ != null;
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public io.dstore.Values.stringValue getCondition() {
          if (conditionBuilder_ == null) {
            return condition_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : condition_;
          } else {
            return conditionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public Builder setCondition(io.dstore.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            condition_ = value;
            onChanged();
          } else {
            conditionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public Builder setCondition(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (conditionBuilder_ == null) {
            condition_ = builderForValue.build();
            onChanged();
          } else {
            conditionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public Builder mergeCondition(io.dstore.Values.stringValue value) {
          if (conditionBuilder_ == null) {
            if (condition_ != null) {
              condition_ =
                io.dstore.Values.stringValue.newBuilder(condition_).mergeFrom(value).buildPartial();
            } else {
              condition_ = value;
            }
            onChanged();
          } else {
            conditionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public Builder clearCondition() {
          if (conditionBuilder_ == null) {
            condition_ = null;
            onChanged();
          } else {
            condition_ = null;
            conditionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public io.dstore.Values.stringValue.Builder getConditionBuilder() {
          
          onChanged();
          return getConditionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getConditionOrBuilder() {
          if (conditionBuilder_ != null) {
            return conditionBuilder_.getMessageOrBuilder();
          } else {
            return condition_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : condition_;
          }
        }
        /**
         * <pre>
         * Die Rückgabemenge wird nur geliefert, wenn der für "ParameterName" übergebene Wert dieser Bedingung genügt. Fast immer handelt es sich hier um eine Bedingung, die in SQL ausgewertet werden kann, zumindest aber mit Hilfe von regulären Ausdrücken.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue condition = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getConditionFieldBuilder() {
          if (conditionBuilder_ == null) {
            conditionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getCondition(),
                    getParentForChildren(),
                    isClean());
            condition_ = null;
          }
          return conditionBuilder_;
        }

        private io.dstore.Values.integerValue procedureResultConditionId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> procedureResultConditionIdBuilder_;
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public boolean hasProcedureResultConditionId() {
          return procedureResultConditionIdBuilder_ != null || procedureResultConditionId_ != null;
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public io.dstore.Values.integerValue getProcedureResultConditionId() {
          if (procedureResultConditionIdBuilder_ == null) {
            return procedureResultConditionId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
          } else {
            return procedureResultConditionIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public Builder setProcedureResultConditionId(io.dstore.Values.integerValue value) {
          if (procedureResultConditionIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procedureResultConditionId_ = value;
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public Builder setProcedureResultConditionId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = builderForValue.build();
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public Builder mergeProcedureResultConditionId(io.dstore.Values.integerValue value) {
          if (procedureResultConditionIdBuilder_ == null) {
            if (procedureResultConditionId_ != null) {
              procedureResultConditionId_ =
                io.dstore.Values.integerValue.newBuilder(procedureResultConditionId_).mergeFrom(value).buildPartial();
            } else {
              procedureResultConditionId_ = value;
            }
            onChanged();
          } else {
            procedureResultConditionIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public Builder clearProcedureResultConditionId() {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionId_ = null;
            onChanged();
          } else {
            procedureResultConditionId_ = null;
            procedureResultConditionIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public io.dstore.Values.integerValue.Builder getProcedureResultConditionIdBuilder() {
          
          onChanged();
          return getProcedureResultConditionIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getProcedureResultConditionIdOrBuilder() {
          if (procedureResultConditionIdBuilder_ != null) {
            return procedureResultConditionIdBuilder_.getMessageOrBuilder();
          } else {
            return procedureResultConditionId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : procedureResultConditionId_;
          }
        }
        /**
         * <pre>
         * ID einer Bedingung, unter der die Spalten "ResultColumnName" (also alle Datensätze mit gleichem Wert in dieser Spalte) als Ergebnismenge zurückgegeben werden. "0" bedeutet, daß die Rückgabemenge an keine Bedingung gebunden ist. (siehe Beschreibung !)
         * </pre>
         *
         * <code>optional .dstore.values.integerValue procedure_result_condition_id = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getProcedureResultConditionIdFieldBuilder() {
          if (procedureResultConditionIdBuilder_ == null) {
            procedureResultConditionIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getProcedureResultConditionId(),
                    getParentForChildren(),
                    isClean());
            procedureResultConditionId_ = null;
          }
          return procedureResultConditionIdBuilder_;
        }

        private io.dstore.Values.stringValue descriptionValidSinceVersion_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> descriptionValidSinceVersionBuilder_;
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public boolean hasDescriptionValidSinceVersion() {
          return descriptionValidSinceVersionBuilder_ != null || descriptionValidSinceVersion_ != null;
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public io.dstore.Values.stringValue getDescriptionValidSinceVersion() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            return descriptionValidSinceVersion_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
          } else {
            return descriptionValidSinceVersionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public Builder setDescriptionValidSinceVersion(io.dstore.Values.stringValue value) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            descriptionValidSinceVersion_ = value;
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public Builder setDescriptionValidSinceVersion(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = builderForValue.build();
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public Builder mergeDescriptionValidSinceVersion(io.dstore.Values.stringValue value) {
          if (descriptionValidSinceVersionBuilder_ == null) {
            if (descriptionValidSinceVersion_ != null) {
              descriptionValidSinceVersion_ =
                io.dstore.Values.stringValue.newBuilder(descriptionValidSinceVersion_).mergeFrom(value).buildPartial();
            } else {
              descriptionValidSinceVersion_ = value;
            }
            onChanged();
          } else {
            descriptionValidSinceVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public Builder clearDescriptionValidSinceVersion() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersion_ = null;
            onChanged();
          } else {
            descriptionValidSinceVersion_ = null;
            descriptionValidSinceVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public io.dstore.Values.stringValue.Builder getDescriptionValidSinceVersionBuilder() {
          
          onChanged();
          return getDescriptionValidSinceVersionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getDescriptionValidSinceVersionOrBuilder() {
          if (descriptionValidSinceVersionBuilder_ != null) {
            return descriptionValidSinceVersionBuilder_.getMessageOrBuilder();
          } else {
            return descriptionValidSinceVersion_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : descriptionValidSinceVersion_;
          }
        }
        /**
         * <pre>
         * Seit welcher Version die Beschreibung ("Description") gilt
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description_valid_since_version = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDescriptionValidSinceVersionFieldBuilder() {
          if (descriptionValidSinceVersionBuilder_ == null) {
            descriptionValidSinceVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDescriptionValidSinceVersion(),
                    getParentForChildren(),
                    isClean());
            descriptionValidSinceVersion_ = null;
          }
          return descriptionValidSinceVersionBuilder_;
        }

        private io.dstore.Values.stringValue description_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> descriptionBuilder_;
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public boolean hasDescription() {
          return descriptionBuilder_ != null || description_ != null;
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public io.dstore.Values.stringValue getDescription() {
          if (descriptionBuilder_ == null) {
            return description_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : description_;
          } else {
            return descriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public Builder setDescription(io.dstore.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            description_ = value;
            onChanged();
          } else {
            descriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public Builder setDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (descriptionBuilder_ == null) {
            description_ = builderForValue.build();
            onChanged();
          } else {
            descriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public Builder mergeDescription(io.dstore.Values.stringValue value) {
          if (descriptionBuilder_ == null) {
            if (description_ != null) {
              description_ =
                io.dstore.Values.stringValue.newBuilder(description_).mergeFrom(value).buildPartial();
            } else {
              description_ = value;
            }
            onChanged();
          } else {
            descriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public Builder clearDescription() {
          if (descriptionBuilder_ == null) {
            description_ = null;
            onChanged();
          } else {
            description_ = null;
            descriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public io.dstore.Values.stringValue.Builder getDescriptionBuilder() {
          
          onChanged();
          return getDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getDescriptionOrBuilder() {
          if (descriptionBuilder_ != null) {
            return descriptionBuilder_.getMessageOrBuilder();
          } else {
            return description_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : description_;
          }
        }
        /**
         * <pre>
         * Beschreibung der Spalte "ResultColumnName", also was die Werte in dieser Spalte besagen oder bedeuten
         * </pre>
         *
         * <code>optional .dstore.values.stringValue description = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDescriptionFieldBuilder() {
          if (descriptionBuilder_ == null) {
            descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDescription(),
                    getParentForChildren(),
                    isClean());
            description_ = null;
          }
          return descriptionBuilder_;
        }

        private io.dstore.Values.integerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> precisionValueBuilder_;
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public io.dstore.Values.integerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public Builder setPrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public Builder setPrecisionValue(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public Builder mergePrecisionValue(io.dstore.Values.integerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.Values.integerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public io.dstore.Values.integerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert, der in der Spalte "ResultColumnName" steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue precision_value = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.Values.stringValue parameterName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> parameterNameBuilder_;
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public boolean hasParameterName() {
          return parameterNameBuilder_ != null || parameterName_ != null;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public io.dstore.Values.stringValue getParameterName() {
          if (parameterNameBuilder_ == null) {
            return parameterName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : parameterName_;
          } else {
            return parameterNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public Builder setParameterName(io.dstore.Values.stringValue value) {
          if (parameterNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            parameterName_ = value;
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public Builder setParameterName(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (parameterNameBuilder_ == null) {
            parameterName_ = builderForValue.build();
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public Builder mergeParameterName(io.dstore.Values.stringValue value) {
          if (parameterNameBuilder_ == null) {
            if (parameterName_ != null) {
              parameterName_ =
                io.dstore.Values.stringValue.newBuilder(parameterName_).mergeFrom(value).buildPartial();
            } else {
              parameterName_ = value;
            }
            onChanged();
          } else {
            parameterNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public Builder clearParameterName() {
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
            onChanged();
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public io.dstore.Values.stringValue.Builder getParameterNameBuilder() {
          
          onChanged();
          return getParameterNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getParameterNameOrBuilder() {
          if (parameterNameBuilder_ != null) {
            return parameterNameBuilder_.getMessageOrBuilder();
          } else {
            return parameterName_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : parameterName_;
          }
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName". Die Rückgabemenge wird nur geliefert, wenn beim Aufruf der für diesen Parameter angegebene Wert der Bedingung "Condition" genügt. ("NULL" bei der speziellen Bedingung "ProcedureResultConditionID = 0".)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue parameter_name = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getParameterNameFieldBuilder() {
          if (parameterNameBuilder_ == null) {
            parameterNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getParameterName(),
                    getParentForChildren(),
                    isClean());
            parameterName_ = null;
          }
          return parameterNameBuilder_;
        }

        private io.dstore.Values.integerValue scale_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> scaleBuilder_;
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public boolean hasScale() {
          return scaleBuilder_ != null || scale_ != null;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public io.dstore.Values.integerValue getScale() {
          if (scaleBuilder_ == null) {
            return scale_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : scale_;
          } else {
            return scaleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public Builder setScale(io.dstore.Values.integerValue value) {
          if (scaleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            scale_ = value;
            onChanged();
          } else {
            scaleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public Builder setScale(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (scaleBuilder_ == null) {
            scale_ = builderForValue.build();
            onChanged();
          } else {
            scaleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public Builder mergeScale(io.dstore.Values.integerValue value) {
          if (scaleBuilder_ == null) {
            if (scale_ != null) {
              scale_ =
                io.dstore.Values.integerValue.newBuilder(scale_).mergeFrom(value).buildPartial();
            } else {
              scale_ = value;
            }
            onChanged();
          } else {
            scaleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public Builder clearScale() {
          if (scaleBuilder_ == null) {
            scale_ = null;
            onChanged();
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public io.dstore.Values.integerValue.Builder getScaleBuilder() {
          
          onChanged();
          return getScaleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getScaleOrBuilder() {
          if (scaleBuilder_ != null) {
            return scaleBuilder_.getMessageOrBuilder();
          } else {
            return scale_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : scale_;
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert, der in der Spalte "ResultColumnName"steht, enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.integerValue scale = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getScaleFieldBuilder() {
          if (scaleBuilder_ == null) {
            scaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getScale(),
                    getParentForChildren(),
                    isClean());
            scale_ = null;
          }
          return scaleBuilder_;
        }

        private io.dstore.Values.integerValue sortNo_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> sortNoBuilder_;
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public boolean hasSortNo() {
          return sortNoBuilder_ != null || sortNo_ != null;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public io.dstore.Values.integerValue getSortNo() {
          if (sortNoBuilder_ == null) {
            return sortNo_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          } else {
            return sortNoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public Builder setSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sortNo_ = value;
            onChanged();
          } else {
            sortNoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public Builder setSortNo(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (sortNoBuilder_ == null) {
            sortNo_ = builderForValue.build();
            onChanged();
          } else {
            sortNoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public Builder mergeSortNo(io.dstore.Values.integerValue value) {
          if (sortNoBuilder_ == null) {
            if (sortNo_ != null) {
              sortNo_ =
                io.dstore.Values.integerValue.newBuilder(sortNo_).mergeFrom(value).buildPartial();
            } else {
              sortNo_ = value;
            }
            onChanged();
          } else {
            sortNoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public Builder clearSortNo() {
          if (sortNoBuilder_ == null) {
            sortNo_ = null;
            onChanged();
          } else {
            sortNo_ = null;
            sortNoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public io.dstore.Values.integerValue.Builder getSortNoBuilder() {
          
          onChanged();
          return getSortNoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSortNoOrBuilder() {
          if (sortNoBuilder_ != null) {
            return sortNoBuilder_.getMessageOrBuilder();
          } else {
            return sortNo_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : sortNo_;
          }
        }
        /**
         * <pre>
         * Bestimmt die Reihenfolge der Spalte "ResultColumnName" innerhalb aller Rückgabespalten. "0" bedeutet, daß sie nicht ausgegeben wird, also entweder in einer älteren Version vorhanden war (aber aktuell nicht mehr gültig ist) oder nur zur Sortierung dient.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue sort_no = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSortNoFieldBuilder() {
          if (sortNoBuilder_ == null) {
            sortNoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSortNo(),
                    getParentForChildren(),
                    isClean());
            sortNo_ = null;
          }
          return sortNoBuilder_;
        }

        private io.dstore.Values.stringValue resultColumnName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> resultColumnNameBuilder_;
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public boolean hasResultColumnName() {
          return resultColumnNameBuilder_ != null || resultColumnName_ != null;
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public io.dstore.Values.stringValue getResultColumnName() {
          if (resultColumnNameBuilder_ == null) {
            return resultColumnName_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : resultColumnName_;
          } else {
            return resultColumnNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public Builder setResultColumnName(io.dstore.Values.stringValue value) {
          if (resultColumnNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            resultColumnName_ = value;
            onChanged();
          } else {
            resultColumnNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public Builder setResultColumnName(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = builderForValue.build();
            onChanged();
          } else {
            resultColumnNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public Builder mergeResultColumnName(io.dstore.Values.stringValue value) {
          if (resultColumnNameBuilder_ == null) {
            if (resultColumnName_ != null) {
              resultColumnName_ =
                io.dstore.Values.stringValue.newBuilder(resultColumnName_).mergeFrom(value).buildPartial();
            } else {
              resultColumnName_ = value;
            }
            onChanged();
          } else {
            resultColumnNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public Builder clearResultColumnName() {
          if (resultColumnNameBuilder_ == null) {
            resultColumnName_ = null;
            onChanged();
          } else {
            resultColumnName_ = null;
            resultColumnNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public io.dstore.Values.stringValue.Builder getResultColumnNameBuilder() {
          
          onChanged();
          return getResultColumnNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getResultColumnNameOrBuilder() {
          if (resultColumnNameBuilder_ != null) {
            return resultColumnNameBuilder_.getMessageOrBuilder();
          } else {
            return resultColumnName_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : resultColumnName_;
          }
        }
        /**
         * <pre>
         * Name einer Rückgabespalte der Ergebnismenge
         * </pre>
         *
         * <code>optional .dstore.values.stringValue result_column_name = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getResultColumnNameFieldBuilder() {
          if (resultColumnNameBuilder_ == null) {
            resultColumnNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getResultColumnName(),
                    getParentForChildren(),
                    isClean());
            resultColumnName_ = null;
          }
          return resultColumnNameBuilder_;
        }

        private io.dstore.Values.integerValue length_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> lengthBuilder_;
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public boolean hasLength() {
          return lengthBuilder_ != null || length_ != null;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public io.dstore.Values.integerValue getLength() {
          if (lengthBuilder_ == null) {
            return length_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : length_;
          } else {
            return lengthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public Builder setLength(io.dstore.Values.integerValue value) {
          if (lengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            length_ = value;
            onChanged();
          } else {
            lengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public Builder setLength(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (lengthBuilder_ == null) {
            length_ = builderForValue.build();
            onChanged();
          } else {
            lengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public Builder mergeLength(io.dstore.Values.integerValue value) {
          if (lengthBuilder_ == null) {
            if (length_ != null) {
              length_ =
                io.dstore.Values.integerValue.newBuilder(length_).mergeFrom(value).buildPartial();
            } else {
              length_ = value;
            }
            onChanged();
          } else {
            lengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public Builder clearLength() {
          if (lengthBuilder_ == null) {
            length_ = null;
            onChanged();
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public io.dstore.Values.integerValue.Builder getLengthBuilder() {
          
          onChanged();
          return getLengthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getLengthOrBuilder() {
          if (lengthBuilder_ != null) {
            return lengthBuilder_.getMessageOrBuilder();
          } else {
            return length_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : length_;
          }
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die in der Spalte "ResultColumnName" ausgegeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue length = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getLengthFieldBuilder() {
          if (lengthBuilder_ == null) {
            lengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getLength(),
                    getParentForChildren(),
                    isClean());
            length_ = null;
          }
          return lengthBuilder_;
        }

        private io.dstore.Values.timestampValue descriptionLastEdited_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> descriptionLastEditedBuilder_;
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public boolean hasDescriptionLastEdited() {
          return descriptionLastEditedBuilder_ != null || descriptionLastEdited_ != null;
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public io.dstore.Values.timestampValue getDescriptionLastEdited() {
          if (descriptionLastEditedBuilder_ == null) {
            return descriptionLastEdited_ == null ? io.dstore.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
          } else {
            return descriptionLastEditedBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public Builder setDescriptionLastEdited(io.dstore.Values.timestampValue value) {
          if (descriptionLastEditedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            descriptionLastEdited_ = value;
            onChanged();
          } else {
            descriptionLastEditedBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public Builder setDescriptionLastEdited(
            io.dstore.Values.timestampValue.Builder builderForValue) {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = builderForValue.build();
            onChanged();
          } else {
            descriptionLastEditedBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public Builder mergeDescriptionLastEdited(io.dstore.Values.timestampValue value) {
          if (descriptionLastEditedBuilder_ == null) {
            if (descriptionLastEdited_ != null) {
              descriptionLastEdited_ =
                io.dstore.Values.timestampValue.newBuilder(descriptionLastEdited_).mergeFrom(value).buildPartial();
            } else {
              descriptionLastEdited_ = value;
            }
            onChanged();
          } else {
            descriptionLastEditedBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public Builder clearDescriptionLastEdited() {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEdited_ = null;
            onChanged();
          } else {
            descriptionLastEdited_ = null;
            descriptionLastEditedBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public io.dstore.Values.timestampValue.Builder getDescriptionLastEditedBuilder() {
          
          onChanged();
          return getDescriptionLastEditedFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        public io.dstore.Values.timestampValueOrBuilder getDescriptionLastEditedOrBuilder() {
          if (descriptionLastEditedBuilder_ != null) {
            return descriptionLastEditedBuilder_.getMessageOrBuilder();
          } else {
            return descriptionLastEdited_ == null ?
                io.dstore.Values.timestampValue.getDefaultInstance() : descriptionLastEdited_;
          }
        }
        /**
         * <pre>
         * Wann die Beschreibung ("Description") zuletzt editiert wurde
         * </pre>
         *
         * <code>optional .dstore.values.timestampValue description_last_edited = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder> 
            getDescriptionLastEditedFieldBuilder() {
          if (descriptionLastEditedBuilder_ == null) {
            descriptionLastEditedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.timestampValue, io.dstore.Values.timestampValue.Builder, io.dstore.Values.timestampValueOrBuilder>(
                    getDescriptionLastEdited(),
                    getParentForChildren(),
                    isClean());
            descriptionLastEdited_ = null;
          }
          return descriptionLastEditedBuilder_;
        }

        private io.dstore.Values.stringValue introducedIndstoreVersion_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> introducedIndstoreVersionBuilder_;
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public boolean hasIntroducedIndstoreVersion() {
          return introducedIndstoreVersionBuilder_ != null || introducedIndstoreVersion_ != null;
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public io.dstore.Values.stringValue getIntroducedIndstoreVersion() {
          if (introducedIndstoreVersionBuilder_ == null) {
            return introducedIndstoreVersion_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
          } else {
            return introducedIndstoreVersionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public Builder setIntroducedIndstoreVersion(io.dstore.Values.stringValue value) {
          if (introducedIndstoreVersionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            introducedIndstoreVersion_ = value;
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public Builder setIntroducedIndstoreVersion(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = builderForValue.build();
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public Builder mergeIntroducedIndstoreVersion(io.dstore.Values.stringValue value) {
          if (introducedIndstoreVersionBuilder_ == null) {
            if (introducedIndstoreVersion_ != null) {
              introducedIndstoreVersion_ =
                io.dstore.Values.stringValue.newBuilder(introducedIndstoreVersion_).mergeFrom(value).buildPartial();
            } else {
              introducedIndstoreVersion_ = value;
            }
            onChanged();
          } else {
            introducedIndstoreVersionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public Builder clearIntroducedIndstoreVersion() {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersion_ = null;
            onChanged();
          } else {
            introducedIndstoreVersion_ = null;
            introducedIndstoreVersionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public io.dstore.Values.stringValue.Builder getIntroducedIndstoreVersionBuilder() {
          
          onChanged();
          return getIntroducedIndstoreVersionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getIntroducedIndstoreVersionOrBuilder() {
          if (introducedIndstoreVersionBuilder_ != null) {
            return introducedIndstoreVersionBuilder_.getMessageOrBuilder();
          } else {
            return introducedIndstoreVersion_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : introducedIndstoreVersion_;
          }
        }
        /**
         * <pre>
         * Seit welcher Version gibt es die Spalte "ResultColumnName"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue introduced_indstore_version = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getIntroducedIndstoreVersionFieldBuilder() {
          if (introducedIndstoreVersionBuilder_ == null) {
            introducedIndstoreVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getIntroducedIndstoreVersion(),
                    getParentForChildren(),
                    isClean());
            introducedIndstoreVersion_ = null;
          }
          return introducedIndstoreVersionBuilder_;
        }

        private io.dstore.Values.stringValue dataType_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> dataTypeBuilder_;
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public boolean hasDataType() {
          return dataTypeBuilder_ != null || dataType_ != null;
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public io.dstore.Values.stringValue getDataType() {
          if (dataTypeBuilder_ == null) {
            return dataType_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : dataType_;
          } else {
            return dataTypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public Builder setDataType(io.dstore.Values.stringValue value) {
          if (dataTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dataType_ = value;
            onChanged();
          } else {
            dataTypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public Builder setDataType(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (dataTypeBuilder_ == null) {
            dataType_ = builderForValue.build();
            onChanged();
          } else {
            dataTypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public Builder mergeDataType(io.dstore.Values.stringValue value) {
          if (dataTypeBuilder_ == null) {
            if (dataType_ != null) {
              dataType_ =
                io.dstore.Values.stringValue.newBuilder(dataType_).mergeFrom(value).buildPartial();
            } else {
              dataType_ = value;
            }
            onChanged();
          } else {
            dataTypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public Builder clearDataType() {
          if (dataTypeBuilder_ == null) {
            dataType_ = null;
            onChanged();
          } else {
            dataType_ = null;
            dataTypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public io.dstore.Values.stringValue.Builder getDataTypeBuilder() {
          
          onChanged();
          return getDataTypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getDataTypeOrBuilder() {
          if (dataTypeBuilder_ != null) {
            return dataTypeBuilder_.getMessageOrBuilder();
          } else {
            return dataType_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : dataType_;
          }
        }
        /**
         * <pre>
         * Gibt den Daten-Typ der Spalte "ResultColumnName" an ("varchar", "tinyint", etc.)
         * </pre>
         *
         * <code>optional .dstore.values.stringValue data_type = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getDataTypeFieldBuilder() {
          if (dataTypeBuilder_ == null) {
            dataTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getDataType(),
                    getParentForChildren(),
                    isClean());
            dataType_ = null;
          }
          return dataTypeBuilder_;
        }

        private io.dstore.Values.stringValue procResultCondDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> procResultCondDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public boolean hasProcResultCondDescription() {
          return procResultCondDescriptionBuilder_ != null || procResultCondDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public io.dstore.Values.stringValue getProcResultCondDescription() {
          if (procResultCondDescriptionBuilder_ == null) {
            return procResultCondDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
          } else {
            return procResultCondDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public Builder setProcResultCondDescription(io.dstore.Values.stringValue value) {
          if (procResultCondDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            procResultCondDescription_ = value;
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public Builder setProcResultCondDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = builderForValue.build();
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public Builder mergeProcResultCondDescription(io.dstore.Values.stringValue value) {
          if (procResultCondDescriptionBuilder_ == null) {
            if (procResultCondDescription_ != null) {
              procResultCondDescription_ =
                io.dstore.Values.stringValue.newBuilder(procResultCondDescription_).mergeFrom(value).buildPartial();
            } else {
              procResultCondDescription_ = value;
            }
            onChanged();
          } else {
            procResultCondDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public Builder clearProcResultCondDescription() {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescription_ = null;
            onChanged();
          } else {
            procResultCondDescription_ = null;
            procResultCondDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public io.dstore.Values.stringValue.Builder getProcResultCondDescriptionBuilder() {
          
          onChanged();
          return getProcResultCondDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getProcResultCondDescriptionOrBuilder() {
          if (procResultCondDescriptionBuilder_ != null) {
            return procResultCondDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return procResultCondDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : procResultCondDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Bedingung "ProcedureResultConditionID". Derzeit entweder "Parameterunabhängige Rückgabemenge" oder aber &lt;ProzedurName&gt;_&lt;fortlaufende Nummer&gt;.
         * </pre>
         *
         * <code>optional .dstore.values.stringValue proc_result_cond_description = 10014;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getProcResultCondDescriptionFieldBuilder() {
          if (procResultCondDescriptionBuilder_ == null) {
            procResultCondDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getProcResultCondDescription(),
                    getParentForChildren(),
                    isClean());
            procResultCondDescription_ = null;
          }
          return procResultCondDescriptionBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response.Row)
      private static final io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row();
      }

      public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response other = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.do_GetProcedureResultSets_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.do_GetProcedureResultSets_Ad.Response)
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.class, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response build() {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response buildPartial() {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response result = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response other) {
        if (other == io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.do_GetProcedureResultSets_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.Row.Builder, io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.do_GetProcedureResultSets_Ad.Response)
    private static final io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response();
    }

    public static io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.DoGetProcedureResultSetsAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;dstore/engine/procedures/do_GetProcedu" +
      "reResultSets_Ad.proto\022*dstore.engine.do_" +
      "GetProcedureResultSets_Ad\032\023dstore/values" +
      ".proto\032\032dstore/engine/engine.proto\"\317\001\n\nP" +
      "arameters\0222\n\016procedure_name\030\001 \001(\0132\032.dsto" +
      "re.values.stringValue\022\034\n\023procedure_name_" +
      "null\030\351\007 \001(\010\022B\n\035procedure_result_conditio" +
      "n_id\030\002 \001(\0132\033.dstore.values.integerValue\022" +
      "+\n\"procedure_result_condition_id_null\030\352\007" +
      " \001(\010\"\337\007\n\010Response\0228\n\020meta_information\030\002 ",
      "\003(\0132\036.dstore.engine.MetaInformation\022\'\n\007m" +
      "essage\030\003 \003(\0132\026.dstore.engine.Message\022E\n\003" +
      "row\030\004 \003(\01328.dstore.engine.do_GetProcedur" +
      "eResultSets_Ad.Response.Row\032\250\006\n\003Row\022\017\n\006r" +
      "ow_id\030\220N \001(\005\022.\n\tcondition\030\221N \001(\0132\032.dstor" +
      "e.values.stringValue\022C\n\035procedure_result" +
      "_condition_id\030\222N \001(\0132\033.dstore.values.int" +
      "egerValue\022D\n\037description_valid_since_ver" +
      "sion\030\223N \001(\0132\032.dstore.values.stringValue\022" +
      "0\n\013description\030\224N \001(\0132\032.dstore.values.st",
      "ringValue\0225\n\017precision_value\030\225N \001(\0132\033.ds" +
      "tore.values.integerValue\0223\n\016parameter_na" +
      "me\030\226N \001(\0132\032.dstore.values.stringValue\022+\n" +
      "\005scale\030\227N \001(\0132\033.dstore.values.integerVal" +
      "ue\022-\n\007sort_no\030\230N \001(\0132\033.dstore.values.int" +
      "egerValue\0227\n\022result_column_name\030\231N \001(\0132\032" +
      ".dstore.values.stringValue\022,\n\006length\030\232N " +
      "\001(\0132\033.dstore.values.integerValue\022?\n\027desc" +
      "ription_last_edited\030\233N \001(\0132\035.dstore.valu" +
      "es.timestampValue\022@\n\033introduced_indstore",
      "_version\030\234N \001(\0132\032.dstore.values.stringVa" +
      "lue\022.\n\tdata_type\030\235N \001(\0132\032.dstore.values." +
      "stringValue\022A\n\034proc_result_cond_descript" +
      "ion\030\236N \001(\0132\032.dstore.values.stringValueB]" +
      "\n\033io.dstore.engine.proceduresZ>gosdk.dst" +
      "ore.de/engine/procedures/do_GetProcedure" +
      "ResultSets_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Parameters_descriptor,
        new java.lang.String[] { "ProcedureName", "ProcedureNameNull", "ProcedureResultConditionId", "ProcedureResultConditionIdNull", });
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_do_GetProcedureResultSets_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Condition", "ProcedureResultConditionId", "DescriptionValidSinceVersion", "Description", "PrecisionValue", "ParameterName", "Scale", "SortNo", "ResultColumnName", "Length", "DescriptionLastEdited", "IntroducedIndstoreVersion", "DataType", "ProcResultCondDescription", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
