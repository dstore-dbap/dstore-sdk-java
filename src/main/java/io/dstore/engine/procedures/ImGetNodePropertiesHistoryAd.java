// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/im_GetNodePropertiesHistory_Ad.proto

package io.dstore.engine.procedures;

public final class ImGetNodePropertiesHistoryAd {
  private ImGetNodePropertiesHistoryAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    boolean hasNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValue getNodeId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

    /**
     * <code>optional bool node_id_null = 1001;</code>
     */
    boolean getNodeIdNull();

    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    boolean hasNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    io.dstore.engine.Values.integerValue getNodeCharacteristicId();
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

    /**
     * <code>optional bool node_characteristic_id_null = 1002;</code>
     */
    boolean getNodeCharacteristicIdNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    boolean hasFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValue getFromDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder();

    /**
     * <code>optional bool from_date_null = 1003;</code>
     */
    boolean getFromDateNull();

    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    boolean hasToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    io.dstore.engine.Values.timestampValue getToDate();
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder();

    /**
     * <code>optional bool to_date_null = 1004;</code>
     */
    boolean getToDateNull();

    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    boolean hasCharacteristicIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    io.dstore.engine.Values.stringValue getCharacteristicIdList();
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder();

    /**
     * <code>optional bool characteristic_id_list_null = 1005;</code>
     */
    boolean getCharacteristicIdListNull();
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      nodeIdNull_ = false;
      nodeCharacteristicIdNull_ = false;
      fromDateNull_ = false;
      toDateNull_ = false;
      characteristicIdListNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeId_ != null) {
                subBuilder = nodeId_.toBuilder();
              }
              nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeId_);
                nodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.engine.Values.integerValue.Builder subBuilder = null;
              if (nodeCharacteristicId_ != null) {
                subBuilder = nodeCharacteristicId_.toBuilder();
              }
              nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeCharacteristicId_);
                nodeCharacteristicId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (fromDate_ != null) {
                subBuilder = fromDate_.toBuilder();
              }
              fromDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fromDate_);
                fromDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
              if (toDate_ != null) {
                subBuilder = toDate_.toBuilder();
              }
              toDate_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(toDate_);
                toDate_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.dstore.engine.Values.stringValue.Builder subBuilder = null;
              if (characteristicIdList_ != null) {
                subBuilder = characteristicIdList_.toBuilder();
              }
              characteristicIdList_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(characteristicIdList_);
                characteristicIdList_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              nodeIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              nodeCharacteristicIdNull_ = input.readBool();
              break;
            }
            case 8024: {

              fromDateNull_ = input.readBool();
              break;
            }
            case 8032: {

              toDateNull_ = input.readBool();
              break;
            }
            case 8040: {

              characteristicIdListNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private io.dstore.engine.Values.integerValue nodeId_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public boolean hasNodeId() {
      return nodeId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeId() {
      return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
      return getNodeId();
    }

    public static final int NODE_ID_NULL_FIELD_NUMBER = 1001;
    private boolean nodeIdNull_;
    /**
     * <code>optional bool node_id_null = 1001;</code>
     */
    public boolean getNodeIdNull() {
      return nodeIdNull_;
    }

    public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 2;
    private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    public boolean hasNodeCharacteristicId() {
      return nodeCharacteristicId_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
      return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
    }
    /**
     * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
     */
    public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
      return getNodeCharacteristicId();
    }

    public static final int NODE_CHARACTERISTIC_ID_NULL_FIELD_NUMBER = 1002;
    private boolean nodeCharacteristicIdNull_;
    /**
     * <code>optional bool node_characteristic_id_null = 1002;</code>
     */
    public boolean getNodeCharacteristicIdNull() {
      return nodeCharacteristicIdNull_;
    }

    public static final int FROM_DATE_FIELD_NUMBER = 3;
    private io.dstore.engine.Values.timestampValue fromDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    public boolean hasFromDate() {
      return fromDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValue getFromDate() {
      return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
      return getFromDate();
    }

    public static final int FROM_DATE_NULL_FIELD_NUMBER = 1003;
    private boolean fromDateNull_;
    /**
     * <code>optional bool from_date_null = 1003;</code>
     */
    public boolean getFromDateNull() {
      return fromDateNull_;
    }

    public static final int TO_DATE_FIELD_NUMBER = 4;
    private io.dstore.engine.Values.timestampValue toDate_;
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    public boolean hasToDate() {
      return toDate_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    public io.dstore.engine.Values.timestampValue getToDate() {
      return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
    }
    /**
     * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
     */
    public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
      return getToDate();
    }

    public static final int TO_DATE_NULL_FIELD_NUMBER = 1004;
    private boolean toDateNull_;
    /**
     * <code>optional bool to_date_null = 1004;</code>
     */
    public boolean getToDateNull() {
      return toDateNull_;
    }

    public static final int CHARACTERISTIC_ID_LIST_FIELD_NUMBER = 5;
    private io.dstore.engine.Values.stringValue characteristicIdList_;
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    public boolean hasCharacteristicIdList() {
      return characteristicIdList_ != null;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    public io.dstore.engine.Values.stringValue getCharacteristicIdList() {
      return characteristicIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
    }
    /**
     * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
     */
    public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
      return getCharacteristicIdList();
    }

    public static final int CHARACTERISTIC_ID_LIST_NULL_FIELD_NUMBER = 1005;
    private boolean characteristicIdListNull_;
    /**
     * <code>optional bool characteristic_id_list_null = 1005;</code>
     */
    public boolean getCharacteristicIdListNull() {
      return characteristicIdListNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != null) {
        output.writeMessage(1, getNodeId());
      }
      if (nodeCharacteristicId_ != null) {
        output.writeMessage(2, getNodeCharacteristicId());
      }
      if (fromDate_ != null) {
        output.writeMessage(3, getFromDate());
      }
      if (toDate_ != null) {
        output.writeMessage(4, getToDate());
      }
      if (characteristicIdList_ != null) {
        output.writeMessage(5, getCharacteristicIdList());
      }
      if (nodeIdNull_ != false) {
        output.writeBool(1001, nodeIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        output.writeBool(1002, nodeCharacteristicIdNull_);
      }
      if (fromDateNull_ != false) {
        output.writeBool(1003, fromDateNull_);
      }
      if (toDateNull_ != false) {
        output.writeBool(1004, toDateNull_);
      }
      if (characteristicIdListNull_ != false) {
        output.writeBool(1005, characteristicIdListNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNodeId());
      }
      if (nodeCharacteristicId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNodeCharacteristicId());
      }
      if (fromDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFromDate());
      }
      if (toDate_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getToDate());
      }
      if (characteristicIdList_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getCharacteristicIdList());
      }
      if (nodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, nodeIdNull_);
      }
      if (nodeCharacteristicIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, nodeCharacteristicIdNull_);
      }
      if (fromDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, fromDateNull_);
      }
      if (toDateNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1004, toDateNull_);
      }
      if (characteristicIdListNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1005, characteristicIdListNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters)
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeIdBuilder_ == null) {
          nodeId_ = null;
        } else {
          nodeId_ = null;
          nodeIdBuilder_ = null;
        }
        nodeIdNull_ = false;

        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }
        nodeCharacteristicIdNull_ = false;

        if (fromDateBuilder_ == null) {
          fromDate_ = null;
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }
        fromDateNull_ = false;

        if (toDateBuilder_ == null) {
          toDate_ = null;
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }
        toDateNull_ = false;

        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }
        characteristicIdListNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters build() {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters buildPartial() {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters result = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters(this);
        if (nodeIdBuilder_ == null) {
          result.nodeId_ = nodeId_;
        } else {
          result.nodeId_ = nodeIdBuilder_.build();
        }
        result.nodeIdNull_ = nodeIdNull_;
        if (nodeCharacteristicIdBuilder_ == null) {
          result.nodeCharacteristicId_ = nodeCharacteristicId_;
        } else {
          result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
        }
        result.nodeCharacteristicIdNull_ = nodeCharacteristicIdNull_;
        if (fromDateBuilder_ == null) {
          result.fromDate_ = fromDate_;
        } else {
          result.fromDate_ = fromDateBuilder_.build();
        }
        result.fromDateNull_ = fromDateNull_;
        if (toDateBuilder_ == null) {
          result.toDate_ = toDate_;
        } else {
          result.toDate_ = toDateBuilder_.build();
        }
        result.toDateNull_ = toDateNull_;
        if (characteristicIdListBuilder_ == null) {
          result.characteristicIdList_ = characteristicIdList_;
        } else {
          result.characteristicIdList_ = characteristicIdListBuilder_.build();
        }
        result.characteristicIdListNull_ = characteristicIdListNull_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters other) {
        if (other == io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          mergeNodeId(other.getNodeId());
        }
        if (other.getNodeIdNull() != false) {
          setNodeIdNull(other.getNodeIdNull());
        }
        if (other.hasNodeCharacteristicId()) {
          mergeNodeCharacteristicId(other.getNodeCharacteristicId());
        }
        if (other.getNodeCharacteristicIdNull() != false) {
          setNodeCharacteristicIdNull(other.getNodeCharacteristicIdNull());
        }
        if (other.hasFromDate()) {
          mergeFromDate(other.getFromDate());
        }
        if (other.getFromDateNull() != false) {
          setFromDateNull(other.getFromDateNull());
        }
        if (other.hasToDate()) {
          mergeToDate(other.getToDate());
        }
        if (other.getToDateNull() != false) {
          setToDateNull(other.getToDateNull());
        }
        if (other.hasCharacteristicIdList()) {
          mergeCharacteristicIdList(other.getCharacteristicIdList());
        }
        if (other.getCharacteristicIdListNull() != false) {
          setCharacteristicIdListNull(other.getCharacteristicIdListNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public boolean hasNodeId() {
        return nodeIdBuilder_ != null || nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        if (nodeIdBuilder_ == null) {
          return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
        } else {
          return nodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
        if (nodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeId_ = value;
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder setNodeId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeIdBuilder_ == null) {
          nodeId_ = builderForValue.build();
          onChanged();
        } else {
          nodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
        if (nodeIdBuilder_ == null) {
          if (nodeId_ != null) {
            nodeId_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
          } else {
            nodeId_ = value;
          }
          onChanged();
        } else {
          nodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public Builder clearNodeId() {
        if (nodeIdBuilder_ == null) {
          nodeId_ = null;
          onChanged();
        } else {
          nodeId_ = null;
          nodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
        
        onChanged();
        return getNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        if (nodeIdBuilder_ != null) {
          return nodeIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeIdFieldBuilder() {
        if (nodeIdBuilder_ == null) {
          nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeId(),
                  getParentForChildren(),
                  isClean());
          nodeId_ = null;
        }
        return nodeIdBuilder_;
      }

      private boolean nodeIdNull_ ;
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public boolean getNodeIdNull() {
        return nodeIdNull_;
      }
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public Builder setNodeIdNull(boolean value) {
        
        nodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_id_null = 1001;</code>
       */
      public Builder clearNodeIdNull() {
        
        nodeIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        } else {
          return nodeCharacteristicIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeCharacteristicId_ = value;
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder setNodeCharacteristicId(
          io.dstore.engine.Values.integerValue.Builder builderForValue) {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = builderForValue.build();
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
        if (nodeCharacteristicIdBuilder_ == null) {
          if (nodeCharacteristicId_ != null) {
            nodeCharacteristicId_ =
              io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
          } else {
            nodeCharacteristicId_ = value;
          }
          onChanged();
        } else {
          nodeCharacteristicIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public Builder clearNodeCharacteristicId() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicId_ = null;
          onChanged();
        } else {
          nodeCharacteristicId_ = null;
          nodeCharacteristicIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
        
        onChanged();
        return getNodeCharacteristicIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        if (nodeCharacteristicIdBuilder_ != null) {
          return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
        } else {
          return nodeCharacteristicId_ == null ?
              io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
          getNodeCharacteristicIdFieldBuilder() {
        if (nodeCharacteristicIdBuilder_ == null) {
          nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                  getNodeCharacteristicId(),
                  getParentForChildren(),
                  isClean());
          nodeCharacteristicId_ = null;
        }
        return nodeCharacteristicIdBuilder_;
      }

      private boolean nodeCharacteristicIdNull_ ;
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public boolean getNodeCharacteristicIdNull() {
        return nodeCharacteristicIdNull_;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public Builder setNodeCharacteristicIdNull(boolean value) {
        
        nodeCharacteristicIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool node_characteristic_id_null = 1002;</code>
       */
      public Builder clearNodeCharacteristicIdNull() {
        
        nodeCharacteristicIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue fromDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> fromDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public boolean hasFromDate() {
        return fromDateBuilder_ != null || fromDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue getFromDate() {
        if (fromDateBuilder_ == null) {
          return fromDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        } else {
          return fromDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public Builder setFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fromDate_ = value;
          onChanged();
        } else {
          fromDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public Builder setFromDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (fromDateBuilder_ == null) {
          fromDate_ = builderForValue.build();
          onChanged();
        } else {
          fromDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public Builder mergeFromDate(io.dstore.engine.Values.timestampValue value) {
        if (fromDateBuilder_ == null) {
          if (fromDate_ != null) {
            fromDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(fromDate_).mergeFrom(value).buildPartial();
          } else {
            fromDate_ = value;
          }
          onChanged();
        } else {
          fromDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public Builder clearFromDate() {
        if (fromDateBuilder_ == null) {
          fromDate_ = null;
          onChanged();
        } else {
          fromDate_ = null;
          fromDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getFromDateBuilder() {
        
        onChanged();
        return getFromDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getFromDateOrBuilder() {
        if (fromDateBuilder_ != null) {
          return fromDateBuilder_.getMessageOrBuilder();
        } else {
          return fromDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : fromDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue from_date = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getFromDateFieldBuilder() {
        if (fromDateBuilder_ == null) {
          fromDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getFromDate(),
                  getParentForChildren(),
                  isClean());
          fromDate_ = null;
        }
        return fromDateBuilder_;
      }

      private boolean fromDateNull_ ;
      /**
       * <code>optional bool from_date_null = 1003;</code>
       */
      public boolean getFromDateNull() {
        return fromDateNull_;
      }
      /**
       * <code>optional bool from_date_null = 1003;</code>
       */
      public Builder setFromDateNull(boolean value) {
        
        fromDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool from_date_null = 1003;</code>
       */
      public Builder clearFromDateNull() {
        
        fromDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.timestampValue toDate_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> toDateBuilder_;
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public boolean hasToDate() {
        return toDateBuilder_ != null || toDate_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValue getToDate() {
        if (toDateBuilder_ == null) {
          return toDate_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        } else {
          return toDateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public Builder setToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          toDate_ = value;
          onChanged();
        } else {
          toDateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public Builder setToDate(
          io.dstore.engine.Values.timestampValue.Builder builderForValue) {
        if (toDateBuilder_ == null) {
          toDate_ = builderForValue.build();
          onChanged();
        } else {
          toDateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public Builder mergeToDate(io.dstore.engine.Values.timestampValue value) {
        if (toDateBuilder_ == null) {
          if (toDate_ != null) {
            toDate_ =
              io.dstore.engine.Values.timestampValue.newBuilder(toDate_).mergeFrom(value).buildPartial();
          } else {
            toDate_ = value;
          }
          onChanged();
        } else {
          toDateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public Builder clearToDate() {
        if (toDateBuilder_ == null) {
          toDate_ = null;
          onChanged();
        } else {
          toDate_ = null;
          toDateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValue.Builder getToDateBuilder() {
        
        onChanged();
        return getToDateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getToDateOrBuilder() {
        if (toDateBuilder_ != null) {
          return toDateBuilder_.getMessageOrBuilder();
        } else {
          return toDate_ == null ?
              io.dstore.engine.Values.timestampValue.getDefaultInstance() : toDate_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue to_date = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
          getToDateFieldBuilder() {
        if (toDateBuilder_ == null) {
          toDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                  getToDate(),
                  getParentForChildren(),
                  isClean());
          toDate_ = null;
        }
        return toDateBuilder_;
      }

      private boolean toDateNull_ ;
      /**
       * <code>optional bool to_date_null = 1004;</code>
       */
      public boolean getToDateNull() {
        return toDateNull_;
      }
      /**
       * <code>optional bool to_date_null = 1004;</code>
       */
      public Builder setToDateNull(boolean value) {
        
        toDateNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool to_date_null = 1004;</code>
       */
      public Builder clearToDateNull() {
        
        toDateNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.engine.Values.stringValue characteristicIdList_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> characteristicIdListBuilder_;
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public boolean hasCharacteristicIdList() {
        return characteristicIdListBuilder_ != null || characteristicIdList_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.engine.Values.stringValue getCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          return characteristicIdList_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        } else {
          return characteristicIdListBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder setCharacteristicIdList(io.dstore.engine.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          characteristicIdList_ = value;
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder setCharacteristicIdList(
          io.dstore.engine.Values.stringValue.Builder builderForValue) {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = builderForValue.build();
          onChanged();
        } else {
          characteristicIdListBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder mergeCharacteristicIdList(io.dstore.engine.Values.stringValue value) {
        if (characteristicIdListBuilder_ == null) {
          if (characteristicIdList_ != null) {
            characteristicIdList_ =
              io.dstore.engine.Values.stringValue.newBuilder(characteristicIdList_).mergeFrom(value).buildPartial();
          } else {
            characteristicIdList_ = value;
          }
          onChanged();
        } else {
          characteristicIdListBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public Builder clearCharacteristicIdList() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdList_ = null;
          onChanged();
        } else {
          characteristicIdList_ = null;
          characteristicIdListBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.engine.Values.stringValue.Builder getCharacteristicIdListBuilder() {
        
        onChanged();
        return getCharacteristicIdListFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getCharacteristicIdListOrBuilder() {
        if (characteristicIdListBuilder_ != null) {
          return characteristicIdListBuilder_.getMessageOrBuilder();
        } else {
          return characteristicIdList_ == null ?
              io.dstore.engine.Values.stringValue.getDefaultInstance() : characteristicIdList_;
        }
      }
      /**
       * <code>optional .dstore.engine.values.stringValue characteristic_id_list = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
          getCharacteristicIdListFieldBuilder() {
        if (characteristicIdListBuilder_ == null) {
          characteristicIdListBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                  getCharacteristicIdList(),
                  getParentForChildren(),
                  isClean());
          characteristicIdList_ = null;
        }
        return characteristicIdListBuilder_;
      }

      private boolean characteristicIdListNull_ ;
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public boolean getCharacteristicIdListNull() {
        return characteristicIdListNull_;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public Builder setCharacteristicIdListNull(boolean value) {
        
        characteristicIdListNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool characteristic_id_list_null = 1005;</code>
       */
      public Builder clearCharacteristicIdListNull() {
        
        characteristicIdListNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Parameters)
    private static final io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters();
    }

    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Parameters(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetNodePropertiesHistory_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.Error getError();
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder();

    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.ProcedureMessage.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> 
        getRowList();
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getRow(int index);
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    int getRowCount();
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    java.util.List<? extends io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.engine.EngineError.Error.Builder subBuilder = null;
              if (error_ != null) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(io.dstore.engine.EngineError.Error.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>();
                mutable_bitField0_ |= 0x00000002;
              }
              metaInformation_.add(input.readMessage(io.dstore.engine.EngineMetaInformation.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>();
                mutable_bitField0_ |= 0x00000004;
              }
              message_.add(input.readMessage(io.dstore.engine.ProcedureMessage.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row>();
                mutable_bitField0_ |= 0x00000008;
              }
              row_.add(input.readMessage(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      boolean hasValidTo();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getValidTo();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      boolean hasNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      boolean hasNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValue getNodeCharacteristicId();
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      boolean hasValidToChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValidToChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValue();
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder();

      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      boolean hasValidFrom();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValue getValidFrom();
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder();

      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      boolean hasValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      io.dstore.engine.Values.integerValue getValueId();
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder();

      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      boolean hasValidFromChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValue getValidFromChar();
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (validTo_ != null) {
                  subBuilder = validTo_.toBuilder();
                }
                validTo_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validTo_);
                  validTo_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (nodeCharacteristicId_ != null) {
                  subBuilder = nodeCharacteristicId_.toBuilder();
                }
                nodeCharacteristicId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeCharacteristicId_);
                  nodeCharacteristicId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (validToChar_ != null) {
                  subBuilder = validToChar_.toBuilder();
                }
                validToChar_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validToChar_);
                  validToChar_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (value_ != null) {
                  subBuilder = value_.toBuilder();
                }
                value_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(value_);
                  value_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.engine.Values.timestampValue.Builder subBuilder = null;
                if (validFrom_ != null) {
                  subBuilder = validFrom_.toBuilder();
                }
                validFrom_ = input.readMessage(io.dstore.engine.Values.timestampValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validFrom_);
                  validFrom_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.engine.Values.integerValue.Builder subBuilder = null;
                if (valueId_ != null) {
                  subBuilder = valueId_.toBuilder();
                }
                valueId_ = input.readMessage(io.dstore.engine.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(valueId_);
                  valueId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.engine.Values.stringValue.Builder subBuilder = null;
                if (validFromChar_ != null) {
                  subBuilder = validFromChar_.toBuilder();
                }
                validFromChar_ = input.readMessage(io.dstore.engine.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(validFromChar_);
                  validFromChar_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int VALID_TO_FIELD_NUMBER = 10001;
      private io.dstore.engine.Values.timestampValue validTo_;
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public boolean hasValidTo() {
        return validTo_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getValidTo() {
        return validTo_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
       *
       * <pre>
       * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder() {
        return getValidTo();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10002;
      private io.dstore.engine.Values.integerValue nodeId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
       *
       * <pre>
       * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int NODE_CHARACTERISTIC_ID_FIELD_NUMBER = 10003;
      private io.dstore.engine.Values.integerValue nodeCharacteristicId_;
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      public boolean hasNodeCharacteristicId() {
        return nodeCharacteristicId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
        return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
       *
       * <pre>
       * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
        return getNodeCharacteristicId();
      }

      public static final int VALID_TO_CHAR_FIELD_NUMBER = 10004;
      private io.dstore.engine.Values.stringValue validToChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public boolean hasValidToChar() {
        return validToChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValidToChar() {
        return validToChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
       *
       * <pre>
       * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder() {
        return getValidToChar();
      }

      public static final int VALUE_FIELD_NUMBER = 10005;
      private io.dstore.engine.Values.stringValue value_;
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      public boolean hasValue() {
        return value_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValue() {
        return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
       *
       * <pre>
       * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
        return getValue();
      }

      public static final int VALID_FROM_FIELD_NUMBER = 10006;
      private io.dstore.engine.Values.timestampValue validFrom_;
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public boolean hasValidFrom() {
        return validFrom_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValue getValidFrom() {
        return validFrom_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
      }
      /**
       * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
       *
       * <pre>
       * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
       * </pre>
       */
      public io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder() {
        return getValidFrom();
      }

      public static final int VALUE_ID_FIELD_NUMBER = 10007;
      private io.dstore.engine.Values.integerValue valueId_;
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public boolean hasValueId() {
        return valueId_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public io.dstore.engine.Values.integerValue getValueId() {
        return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
      }
      /**
       * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
       *
       * <pre>
       * ID der Eigenschaft "Value"
       * </pre>
       */
      public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
        return getValueId();
      }

      public static final int VALID_FROM_CHAR_FIELD_NUMBER = 10008;
      private io.dstore.engine.Values.stringValue validFromChar_;
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public boolean hasValidFromChar() {
        return validFromChar_ != null;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValue getValidFromChar() {
        return validFromChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
      }
      /**
       * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
       *
       * <pre>
       * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
       * </pre>
       */
      public io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder() {
        return getValidFromChar();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (validTo_ != null) {
          output.writeMessage(10001, getValidTo());
        }
        if (nodeId_ != null) {
          output.writeMessage(10002, getNodeId());
        }
        if (nodeCharacteristicId_ != null) {
          output.writeMessage(10003, getNodeCharacteristicId());
        }
        if (validToChar_ != null) {
          output.writeMessage(10004, getValidToChar());
        }
        if (value_ != null) {
          output.writeMessage(10005, getValue());
        }
        if (validFrom_ != null) {
          output.writeMessage(10006, getValidFrom());
        }
        if (valueId_ != null) {
          output.writeMessage(10007, getValueId());
        }
        if (validFromChar_ != null) {
          output.writeMessage(10008, getValidFromChar());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (validTo_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getValidTo());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getNodeId());
        }
        if (nodeCharacteristicId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getNodeCharacteristicId());
        }
        if (validToChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getValidToChar());
        }
        if (value_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getValue());
        }
        if (validFrom_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getValidFrom());
        }
        if (valueId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getValueId());
        }
        if (validFromChar_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getValidFromChar());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row)
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (validToBuilder_ == null) {
            validTo_ = null;
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }
          if (validToCharBuilder_ == null) {
            validToChar_ = null;
          } else {
            validToChar_ = null;
            validToCharBuilder_ = null;
          }
          if (valueBuilder_ == null) {
            value_ = null;
          } else {
            value_ = null;
            valueBuilder_ = null;
          }
          if (validFromBuilder_ == null) {
            validFrom_ = null;
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }
          if (valueIdBuilder_ == null) {
            valueId_ = null;
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }
          if (validFromCharBuilder_ == null) {
            validFromChar_ = null;
          } else {
            validFromChar_ = null;
            validFromCharBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row build() {
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row result = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (validToBuilder_ == null) {
            result.validTo_ = validTo_;
          } else {
            result.validTo_ = validToBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (nodeCharacteristicIdBuilder_ == null) {
            result.nodeCharacteristicId_ = nodeCharacteristicId_;
          } else {
            result.nodeCharacteristicId_ = nodeCharacteristicIdBuilder_.build();
          }
          if (validToCharBuilder_ == null) {
            result.validToChar_ = validToChar_;
          } else {
            result.validToChar_ = validToCharBuilder_.build();
          }
          if (valueBuilder_ == null) {
            result.value_ = value_;
          } else {
            result.value_ = valueBuilder_.build();
          }
          if (validFromBuilder_ == null) {
            result.validFrom_ = validFrom_;
          } else {
            result.validFrom_ = validFromBuilder_.build();
          }
          if (valueIdBuilder_ == null) {
            result.valueId_ = valueId_;
          } else {
            result.valueId_ = valueIdBuilder_.build();
          }
          if (validFromCharBuilder_ == null) {
            result.validFromChar_ = validFromChar_;
          } else {
            result.validFromChar_ = validFromCharBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasValidTo()) {
            mergeValidTo(other.getValidTo());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasNodeCharacteristicId()) {
            mergeNodeCharacteristicId(other.getNodeCharacteristicId());
          }
          if (other.hasValidToChar()) {
            mergeValidToChar(other.getValidToChar());
          }
          if (other.hasValue()) {
            mergeValue(other.getValue());
          }
          if (other.hasValidFrom()) {
            mergeValidFrom(other.getValidFrom());
          }
          if (other.hasValueId()) {
            mergeValueId(other.getValueId());
          }
          if (other.hasValidFromChar()) {
            mergeValidFromChar(other.getValidFromChar());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.engine.Values.timestampValue validTo_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> validToBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public boolean hasValidTo() {
          return validToBuilder_ != null || validTo_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getValidTo() {
          if (validToBuilder_ == null) {
            return validTo_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
          } else {
            return validToBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder setValidTo(io.dstore.engine.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validTo_ = value;
            onChanged();
          } else {
            validToBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder setValidTo(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (validToBuilder_ == null) {
            validTo_ = builderForValue.build();
            onChanged();
          } else {
            validToBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder mergeValidTo(io.dstore.engine.Values.timestampValue value) {
          if (validToBuilder_ == null) {
            if (validTo_ != null) {
              validTo_ =
                io.dstore.engine.Values.timestampValue.newBuilder(validTo_).mergeFrom(value).buildPartial();
            } else {
              validTo_ = value;
            }
            onChanged();
          } else {
            validToBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder clearValidTo() {
          if (validToBuilder_ == null) {
            validTo_ = null;
            onChanged();
          } else {
            validTo_ = null;
            validToBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getValidToBuilder() {
          
          onChanged();
          return getValidToFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getValidToOrBuilder() {
          if (validToBuilder_ != null) {
            return validToBuilder_.getMessageOrBuilder();
          } else {
            return validTo_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : validTo_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_to = 10001;</code>
         *
         * <pre>
         * Ende des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getValidToFieldBuilder() {
          if (validToBuilder_ == null) {
            validToBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getValidTo(),
                    getParentForChildren(),
                    isClean());
            validTo_ = null;
          }
          return validToBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public Builder setNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public Builder setNodeId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public Builder mergeNodeId(io.dstore.engine.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_id = 10002;</code>
         *
         * <pre>
         * ID eines (übergebenen) Artikel-Elementes, das im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" zum Merkmal "NodeCharacteristicID" besaß/besitzt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.engine.Values.integerValue nodeCharacteristicId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> nodeCharacteristicIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public boolean hasNodeCharacteristicId() {
          return nodeCharacteristicIdBuilder_ != null || nodeCharacteristicId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            return nodeCharacteristicId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          } else {
            return nodeCharacteristicIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public Builder setNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeCharacteristicId_ = value;
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public Builder setNodeCharacteristicId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = builderForValue.build();
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public Builder mergeNodeCharacteristicId(io.dstore.engine.Values.integerValue value) {
          if (nodeCharacteristicIdBuilder_ == null) {
            if (nodeCharacteristicId_ != null) {
              nodeCharacteristicId_ =
                io.dstore.engine.Values.integerValue.newBuilder(nodeCharacteristicId_).mergeFrom(value).buildPartial();
            } else {
              nodeCharacteristicId_ = value;
            }
            onChanged();
          } else {
            nodeCharacteristicIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public Builder clearNodeCharacteristicId() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicId_ = null;
            onChanged();
          } else {
            nodeCharacteristicId_ = null;
            nodeCharacteristicIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getNodeCharacteristicIdBuilder() {
          
          onChanged();
          return getNodeCharacteristicIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getNodeCharacteristicIdOrBuilder() {
          if (nodeCharacteristicIdBuilder_ != null) {
            return nodeCharacteristicIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeCharacteristicId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : nodeCharacteristicId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue node_characteristic_id = 10003;</code>
         *
         * <pre>
         * ID des Merkmals, zu dem "NodeID" im Zeitraum "ValidFrom" bis "ValidTo" die Eigenschaft "Value" besaß/besitzt
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getNodeCharacteristicIdFieldBuilder() {
          if (nodeCharacteristicIdBuilder_ == null) {
            nodeCharacteristicIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getNodeCharacteristicId(),
                    getParentForChildren(),
                    isClean());
            nodeCharacteristicId_ = null;
          }
          return nodeCharacteristicIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue validToChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> validToCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public boolean hasValidToChar() {
          return validToCharBuilder_ != null || validToChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValidToChar() {
          if (validToCharBuilder_ == null) {
            return validToChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
          } else {
            return validToCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidToChar(io.dstore.engine.Values.stringValue value) {
          if (validToCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validToChar_ = value;
            onChanged();
          } else {
            validToCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidToChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (validToCharBuilder_ == null) {
            validToChar_ = builderForValue.build();
            onChanged();
          } else {
            validToCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder mergeValidToChar(io.dstore.engine.Values.stringValue value) {
          if (validToCharBuilder_ == null) {
            if (validToChar_ != null) {
              validToChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(validToChar_).mergeFrom(value).buildPartial();
            } else {
              validToChar_ = value;
            }
            onChanged();
          } else {
            validToCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder clearValidToChar() {
          if (validToCharBuilder_ == null) {
            validToChar_ = null;
            onChanged();
          } else {
            validToChar_ = null;
            validToCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValidToCharBuilder() {
          
          onChanged();
          return getValidToCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValidToCharOrBuilder() {
          if (validToCharBuilder_ != null) {
            return validToCharBuilder_.getMessageOrBuilder();
          } else {
            return validToChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : validToChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_to_char = 10004;</code>
         *
         * <pre>
         * "ValidTo" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValidToCharFieldBuilder() {
          if (validToCharBuilder_ == null) {
            validToCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValidToChar(),
                    getParentForChildren(),
                    isClean());
            validToChar_ = null;
          }
          return validToCharBuilder_;
        }

        private io.dstore.engine.Values.stringValue value_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> valueBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public boolean hasValue() {
          return valueBuilder_ != null || value_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValue() {
          if (valueBuilder_ == null) {
            return value_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          } else {
            return valueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public Builder setValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            value_ = value;
            onChanged();
          } else {
            valueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public Builder setValue(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (valueBuilder_ == null) {
            value_ = builderForValue.build();
            onChanged();
          } else {
            valueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public Builder mergeValue(io.dstore.engine.Values.stringValue value) {
          if (valueBuilder_ == null) {
            if (value_ != null) {
              value_ =
                io.dstore.engine.Values.stringValue.newBuilder(value_).mergeFrom(value).buildPartial();
            } else {
              value_ = value;
            }
            onChanged();
          } else {
            valueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public Builder clearValue() {
          if (valueBuilder_ == null) {
            value_ = null;
            onChanged();
          } else {
            value_ = null;
            valueBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValueBuilder() {
          
          onChanged();
          return getValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValueOrBuilder() {
          if (valueBuilder_ != null) {
            return valueBuilder_.getMessageOrBuilder();
          } else {
            return value_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : value_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue value = 10005;</code>
         *
         * <pre>
         * Eine Eigenschaft zum Merkmal "NodeCharacteristicID", die dem Element "NodeID" im Zeitraum "ValidFrom" bis "ValidTo"  zugewiesen ist / war
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValueFieldBuilder() {
          if (valueBuilder_ == null) {
            valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValue(),
                    getParentForChildren(),
                    isClean());
            value_ = null;
          }
          return valueBuilder_;
        }

        private io.dstore.engine.Values.timestampValue validFrom_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> validFromBuilder_;
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public boolean hasValidFrom() {
          return validFromBuilder_ != null || validFrom_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue getValidFrom() {
          if (validFromBuilder_ == null) {
            return validFrom_ == null ? io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
          } else {
            return validFromBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder setValidFrom(io.dstore.engine.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validFrom_ = value;
            onChanged();
          } else {
            validFromBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder setValidFrom(
            io.dstore.engine.Values.timestampValue.Builder builderForValue) {
          if (validFromBuilder_ == null) {
            validFrom_ = builderForValue.build();
            onChanged();
          } else {
            validFromBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder mergeValidFrom(io.dstore.engine.Values.timestampValue value) {
          if (validFromBuilder_ == null) {
            if (validFrom_ != null) {
              validFrom_ =
                io.dstore.engine.Values.timestampValue.newBuilder(validFrom_).mergeFrom(value).buildPartial();
            } else {
              validFrom_ = value;
            }
            onChanged();
          } else {
            validFromBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public Builder clearValidFrom() {
          if (validFromBuilder_ == null) {
            validFrom_ = null;
            onChanged();
          } else {
            validFrom_ = null;
            validFromBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValue.Builder getValidFromBuilder() {
          
          onChanged();
          return getValidFromFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        public io.dstore.engine.Values.timestampValueOrBuilder getValidFromOrBuilder() {
          if (validFromBuilder_ != null) {
            return validFromBuilder_.getMessageOrBuilder();
          } else {
            return validFrom_ == null ?
                io.dstore.engine.Values.timestampValue.getDefaultInstance() : validFrom_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.timestampValue valid_from = 10006;</code>
         *
         * <pre>
         * Beginn des Gültigkeits-Zeitraums der Eigenschaft "Value" für "NodeID"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder> 
            getValidFromFieldBuilder() {
          if (validFromBuilder_ == null) {
            validFromBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.timestampValue, io.dstore.engine.Values.timestampValue.Builder, io.dstore.engine.Values.timestampValueOrBuilder>(
                    getValidFrom(),
                    getParentForChildren(),
                    isClean());
            validFrom_ = null;
          }
          return validFromBuilder_;
        }

        private io.dstore.engine.Values.integerValue valueId_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> valueIdBuilder_;
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public boolean hasValueId() {
          return valueIdBuilder_ != null || valueId_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue getValueId() {
          if (valueIdBuilder_ == null) {
            return valueId_ == null ? io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          } else {
            return valueIdBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder setValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            valueId_ = value;
            onChanged();
          } else {
            valueIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder setValueId(
            io.dstore.engine.Values.integerValue.Builder builderForValue) {
          if (valueIdBuilder_ == null) {
            valueId_ = builderForValue.build();
            onChanged();
          } else {
            valueIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder mergeValueId(io.dstore.engine.Values.integerValue value) {
          if (valueIdBuilder_ == null) {
            if (valueId_ != null) {
              valueId_ =
                io.dstore.engine.Values.integerValue.newBuilder(valueId_).mergeFrom(value).buildPartial();
            } else {
              valueId_ = value;
            }
            onChanged();
          } else {
            valueIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public Builder clearValueId() {
          if (valueIdBuilder_ == null) {
            valueId_ = null;
            onChanged();
          } else {
            valueId_ = null;
            valueIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValue.Builder getValueIdBuilder() {
          
          onChanged();
          return getValueIdFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        public io.dstore.engine.Values.integerValueOrBuilder getValueIdOrBuilder() {
          if (valueIdBuilder_ != null) {
            return valueIdBuilder_.getMessageOrBuilder();
          } else {
            return valueId_ == null ?
                io.dstore.engine.Values.integerValue.getDefaultInstance() : valueId_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.integerValue value_id = 10007;</code>
         *
         * <pre>
         * ID der Eigenschaft "Value"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder> 
            getValueIdFieldBuilder() {
          if (valueIdBuilder_ == null) {
            valueIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.integerValue, io.dstore.engine.Values.integerValue.Builder, io.dstore.engine.Values.integerValueOrBuilder>(
                    getValueId(),
                    getParentForChildren(),
                    isClean());
            valueId_ = null;
          }
          return valueIdBuilder_;
        }

        private io.dstore.engine.Values.stringValue validFromChar_ = null;
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> validFromCharBuilder_;
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public boolean hasValidFromChar() {
          return validFromCharBuilder_ != null || validFromChar_ != null;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue getValidFromChar() {
          if (validFromCharBuilder_ == null) {
            return validFromChar_ == null ? io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
          } else {
            return validFromCharBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidFromChar(io.dstore.engine.Values.stringValue value) {
          if (validFromCharBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            validFromChar_ = value;
            onChanged();
          } else {
            validFromCharBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder setValidFromChar(
            io.dstore.engine.Values.stringValue.Builder builderForValue) {
          if (validFromCharBuilder_ == null) {
            validFromChar_ = builderForValue.build();
            onChanged();
          } else {
            validFromCharBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder mergeValidFromChar(io.dstore.engine.Values.stringValue value) {
          if (validFromCharBuilder_ == null) {
            if (validFromChar_ != null) {
              validFromChar_ =
                io.dstore.engine.Values.stringValue.newBuilder(validFromChar_).mergeFrom(value).buildPartial();
            } else {
              validFromChar_ = value;
            }
            onChanged();
          } else {
            validFromCharBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public Builder clearValidFromChar() {
          if (validFromCharBuilder_ == null) {
            validFromChar_ = null;
            onChanged();
          } else {
            validFromChar_ = null;
            validFromCharBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValue.Builder getValidFromCharBuilder() {
          
          onChanged();
          return getValidFromCharFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        public io.dstore.engine.Values.stringValueOrBuilder getValidFromCharOrBuilder() {
          if (validFromCharBuilder_ != null) {
            return validFromCharBuilder_.getMessageOrBuilder();
          } else {
            return validFromChar_ == null ?
                io.dstore.engine.Values.stringValue.getDefaultInstance() : validFromChar_;
          }
        }
        /**
         * <code>optional .dstore.engine.values.stringValue valid_from_char = 10008;</code>
         *
         * <pre>
         * "ValidFrom" als "String" im Format "01.04.2001 15:20:55:115"
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder> 
            getValidFromCharFieldBuilder() {
          if (validFromCharBuilder_ == null) {
            validFromCharBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                io.dstore.engine.Values.stringValue, io.dstore.engine.Values.stringValue.Builder, io.dstore.engine.Values.stringValueOrBuilder>(
                    getValidFromChar(),
                    getParentForChildren(),
                    isClean());
            validFromChar_ = null;
          }
          return validFromCharBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row)
      private static final io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row();
      }

      public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          try {
            return new Row(input, extensionRegistry);
          } catch (RuntimeException e) {
            if (e.getCause() instanceof
                com.google.protobuf.InvalidProtocolBufferException) {
              throw (com.google.protobuf.InvalidProtocolBufferException)
                  e.getCause();
            }
            throw e;
          }
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private io.dstore.engine.EngineError.Error error_;
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.Error getError() {
      return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>optional .dstore.engine.error.Error error = 1;</code>
     */
    public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
      return getError();
    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_;
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.message.Message message = 3;</code>
     */
    public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> row_;
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public java.util.List<? extends io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
     *
     * <pre>
     * no output parameters
     * </pre>
     */
    public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (error_ != null) {
        output.writeMessage(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (error_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getError());
      }
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.im_GetNodePropertiesHistory_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.im_GetNodePropertiesHistory_Ad.Response)
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.class, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (errorBuilder_ == null) {
          error_ = null;
        } else {
          error_ = null;
          errorBuilder_ = null;
        }
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response build() {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response buildPartial() {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response result = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response other) {
        if (other == io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.getDefaultInstance()) return this;
        if (other.hasError()) {
          mergeError(other.getError());
        }
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000002);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000004);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private io.dstore.engine.EngineError.Error error_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public boolean hasError() {
        return errorBuilder_ != null || error_ != null;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error getError() {
        if (errorBuilder_ == null) {
          return error_ == null ? io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder setError(
          io.dstore.engine.EngineError.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder mergeError(io.dstore.engine.EngineError.Error value) {
        if (errorBuilder_ == null) {
          if (error_ != null) {
            error_ =
              io.dstore.engine.EngineError.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = null;
          onChanged();
        } else {
          error_ = null;
          errorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.Error.Builder getErrorBuilder() {
        
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      public io.dstore.engine.EngineError.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_ == null ?
              io.dstore.engine.EngineError.Error.getDefaultInstance() : error_;
        }
      }
      /**
       * <code>optional .dstore.engine.error.Error error = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.dstore.engine.EngineError.Error, io.dstore.engine.EngineError.Error.Builder, io.dstore.engine.EngineError.ErrorOrBuilder>(
                  getError(),
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      private java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.EngineMetaInformation.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.EngineMetaInformation.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.EngineMetaInformation.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.EngineMetaInformation.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.metainformation.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.EngineMetaInformation.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.EngineMetaInformation.MetaInformation, io.dstore.engine.EngineMetaInformation.MetaInformation.Builder, io.dstore.engine.EngineMetaInformation.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.ProcedureMessage.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          message_ = new java.util.ArrayList<io.dstore.engine.ProcedureMessage.Message>(message_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.ProcedureMessage.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.ProcedureMessage.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public io.dstore.engine.ProcedureMessage.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.ProcedureMessage.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.message.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.ProcedureMessage.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.ProcedureMessage.Message, io.dstore.engine.ProcedureMessage.Message.Builder, io.dstore.engine.ProcedureMessage.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row>(row_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<? extends io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.im_GetNodePropertiesHistory_Ad.Response.Row row = 4;</code>
       *
       * <pre>
       * no output parameters
       * </pre>
       */
      public java.util.List<io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.Row.Builder, io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.im_GetNodePropertiesHistory_Ad.Response)
    private static final io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response();
    }

    public static io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Response(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.ImGetNodePropertiesHistoryAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=dstore/engine/procedures/im_GetNodePro" +
      "pertiesHistory_Ad.proto\022,dstore.engine.i" +
      "m_GetNodePropertiesHistory_Ad\032\032dstore/en" +
      "gine/values.proto\032\031dstore/engine/error.p" +
      "roto\032\033dstore/engine/message.proto\032#dstor" +
      "e/engine/metainformation.proto\"\313\003\n\nParam" +
      "eters\0223\n\007node_id\030\001 \001(\0132\".dstore.engine.v" +
      "alues.integerValue\022\025\n\014node_id_null\030\351\007 \001(" +
      "\010\022B\n\026node_characteristic_id\030\002 \001(\0132\".dsto" +
      "re.engine.values.integerValue\022$\n\033node_ch",
      "aracteristic_id_null\030\352\007 \001(\010\0227\n\tfrom_date" +
      "\030\003 \001(\0132$.dstore.engine.values.timestampV" +
      "alue\022\027\n\016from_date_null\030\353\007 \001(\010\0225\n\007to_date" +
      "\030\004 \001(\0132$.dstore.engine.values.timestampV" +
      "alue\022\025\n\014to_date_null\030\354\007 \001(\010\022A\n\026character" +
      "istic_id_list\030\005 \001(\0132!.dstore.engine.valu" +
      "es.stringValue\022$\n\033characteristic_id_list" +
      "_null\030\355\007 \001(\010\"\343\005\n\010Response\022)\n\005error\030\001 \001(\013" +
      "2\032.dstore.engine.error.Error\022H\n\020meta_inf" +
      "ormation\030\002 \003(\0132..dstore.engine.metainfor",
      "mation.MetaInformation\022/\n\007message\030\003 \003(\0132" +
      "\036.dstore.engine.message.Message\022G\n\003row\030\004" +
      " \003(\0132:.dstore.engine.im_GetNodePropertie" +
      "sHistory_Ad.Response.Row\032\347\003\n\003Row\022\017\n\006row_" +
      "id\030\220N \001(\005\0227\n\010valid_to\030\221N \001(\0132$.dstore.en" +
      "gine.values.timestampValue\0224\n\007node_id\030\222N" +
      " \001(\0132\".dstore.engine.values.integerValue" +
      "\022C\n\026node_characteristic_id\030\223N \001(\0132\".dsto" +
      "re.engine.values.integerValue\0229\n\rvalid_t" +
      "o_char\030\224N \001(\0132!.dstore.engine.values.str",
      "ingValue\0221\n\005value\030\225N \001(\0132!.dstore.engine" +
      ".values.stringValue\0229\n\nvalid_from\030\226N \001(\013" +
      "2$.dstore.engine.values.timestampValue\0225" +
      "\n\010value_id\030\227N \001(\0132\".dstore.engine.values" +
      ".integerValue\022;\n\017valid_from_char\030\230N \001(\0132" +
      "!.dstore.engine.values.stringValueB\035\n\033io" +
      ".dstore.engine.proceduresb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.engine.Values.getDescriptor(),
          io.dstore.engine.EngineError.getDescriptor(),
          io.dstore.engine.ProcedureMessage.getDescriptor(),
          io.dstore.engine.EngineMetaInformation.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Parameters_descriptor,
        new java.lang.String[] { "NodeId", "NodeIdNull", "NodeCharacteristicId", "NodeCharacteristicIdNull", "FromDate", "FromDateNull", "ToDate", "ToDateNull", "CharacteristicIdList", "CharacteristicIdListNull", });
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor,
        new java.lang.String[] { "Error", "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dstore_engine_im_GetNodePropertiesHistory_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "ValidTo", "NodeId", "NodeCharacteristicId", "ValidToChar", "Value", "ValidFrom", "ValueId", "ValidFromChar", });
    io.dstore.engine.Values.getDescriptor();
    io.dstore.engine.EngineError.getDescriptor();
    io.dstore.engine.ProcedureMessage.getDescriptor();
    io.dstore.engine.EngineMetaInformation.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
