// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/om_GetGroupSurcharges_Ad.proto

package io.dstore.engine.procedures;

public final class OmGetGroupSurchargesAd {
  private OmGetGroupSurchargesAd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetGroupSurcharges_Ad.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    boolean hasGroupId();
    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    io.dstore.Values.integerValue getGroupId();
    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder();

    /**
     * <code>optional bool group_id_null = 1001;</code>
     */
    boolean getGroupIdNull();

    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    boolean hasTreeNodeId();
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    io.dstore.Values.integerValue getTreeNodeId();
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

    /**
     * <code>optional bool tree_node_id_null = 1002;</code>
     */
    boolean getTreeNodeIdNull();
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetGroupSurcharges_Ad.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      groupIdNull_ = false;
      treeNodeIdNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (groupId_ != null) {
                subBuilder = groupId_.toBuilder();
              }
              groupId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(groupId_);
                groupId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.Values.integerValue.Builder subBuilder = null;
              if (treeNodeId_ != null) {
                subBuilder = treeNodeId_.toBuilder();
              }
              treeNodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(treeNodeId_);
                treeNodeId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              groupIdNull_ = input.readBool();
              break;
            }
            case 8016: {

              treeNodeIdNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.Builder.class);
    }

    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private io.dstore.Values.integerValue groupId_;
    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    public boolean hasGroupId() {
      return groupId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    public io.dstore.Values.integerValue getGroupId() {
      return groupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
    }
    /**
     * <code>optional .dstore.values.integerValue group_id = 1;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder() {
      return getGroupId();
    }

    public static final int GROUP_ID_NULL_FIELD_NUMBER = 1001;
    private boolean groupIdNull_;
    /**
     * <code>optional bool group_id_null = 1001;</code>
     */
    public boolean getGroupIdNull() {
      return groupIdNull_;
    }

    public static final int TREE_NODE_ID_FIELD_NUMBER = 2;
    private io.dstore.Values.integerValue treeNodeId_;
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    public boolean hasTreeNodeId() {
      return treeNodeId_ != null;
    }
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    public io.dstore.Values.integerValue getTreeNodeId() {
      return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
    }
    /**
     * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
     */
    public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
      return getTreeNodeId();
    }

    public static final int TREE_NODE_ID_NULL_FIELD_NUMBER = 1002;
    private boolean treeNodeIdNull_;
    /**
     * <code>optional bool tree_node_id_null = 1002;</code>
     */
    public boolean getTreeNodeIdNull() {
      return treeNodeIdNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (groupId_ != null) {
        output.writeMessage(1, getGroupId());
      }
      if (treeNodeId_ != null) {
        output.writeMessage(2, getTreeNodeId());
      }
      if (groupIdNull_ != false) {
        output.writeBool(1001, groupIdNull_);
      }
      if (treeNodeIdNull_ != false) {
        output.writeBool(1002, treeNodeIdNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (groupId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGroupId());
      }
      if (treeNodeId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTreeNodeId());
      }
      if (groupIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, groupIdNull_);
      }
      if (treeNodeIdNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, treeNodeIdNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters other = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters) obj;

      boolean result = true;
      result = result && (hasGroupId() == other.hasGroupId());
      if (hasGroupId()) {
        result = result && getGroupId()
            .equals(other.getGroupId());
      }
      result = result && (getGroupIdNull()
          == other.getGroupIdNull());
      result = result && (hasTreeNodeId() == other.hasTreeNodeId());
      if (hasTreeNodeId()) {
        result = result && getTreeNodeId()
            .equals(other.getTreeNodeId());
      }
      result = result && (getTreeNodeIdNull()
          == other.getTreeNodeIdNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasGroupId()) {
        hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getGroupId().hashCode();
      }
      hash = (37 * hash) + GROUP_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGroupIdNull());
      if (hasTreeNodeId()) {
        hash = (37 * hash) + TREE_NODE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTreeNodeId().hashCode();
      }
      hash = (37 * hash) + TREE_NODE_ID_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTreeNodeIdNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetGroupSurcharges_Ad.Parameters)
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (groupIdBuilder_ == null) {
          groupId_ = null;
        } else {
          groupId_ = null;
          groupIdBuilder_ = null;
        }
        groupIdNull_ = false;

        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }
        treeNodeIdNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters build() {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters buildPartial() {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters result = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters(this);
        if (groupIdBuilder_ == null) {
          result.groupId_ = groupId_;
        } else {
          result.groupId_ = groupIdBuilder_.build();
        }
        result.groupIdNull_ = groupIdNull_;
        if (treeNodeIdBuilder_ == null) {
          result.treeNodeId_ = treeNodeId_;
        } else {
          result.treeNodeId_ = treeNodeIdBuilder_.build();
        }
        result.treeNodeIdNull_ = treeNodeIdNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters other) {
        if (other == io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters.getDefaultInstance()) return this;
        if (other.hasGroupId()) {
          mergeGroupId(other.getGroupId());
        }
        if (other.getGroupIdNull() != false) {
          setGroupIdNull(other.getGroupIdNull());
        }
        if (other.hasTreeNodeId()) {
          mergeTreeNodeId(other.getTreeNodeId());
        }
        if (other.getTreeNodeIdNull() != false) {
          setTreeNodeIdNull(other.getTreeNodeIdNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.Values.integerValue groupId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> groupIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return groupIdBuilder_ != null || groupId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public io.dstore.Values.integerValue getGroupId() {
        if (groupIdBuilder_ == null) {
          return groupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
        } else {
          return groupIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public Builder setGroupId(io.dstore.Values.integerValue value) {
        if (groupIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groupId_ = value;
          onChanged();
        } else {
          groupIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public Builder setGroupId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (groupIdBuilder_ == null) {
          groupId_ = builderForValue.build();
          onChanged();
        } else {
          groupIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public Builder mergeGroupId(io.dstore.Values.integerValue value) {
        if (groupIdBuilder_ == null) {
          if (groupId_ != null) {
            groupId_ =
              io.dstore.Values.integerValue.newBuilder(groupId_).mergeFrom(value).buildPartial();
          } else {
            groupId_ = value;
          }
          onChanged();
        } else {
          groupIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public Builder clearGroupId() {
        if (groupIdBuilder_ == null) {
          groupId_ = null;
          onChanged();
        } else {
          groupId_ = null;
          groupIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public io.dstore.Values.integerValue.Builder getGroupIdBuilder() {
        
        onChanged();
        return getGroupIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder() {
        if (groupIdBuilder_ != null) {
          return groupIdBuilder_.getMessageOrBuilder();
        } else {
          return groupId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue group_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getGroupIdFieldBuilder() {
        if (groupIdBuilder_ == null) {
          groupIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getGroupId(),
                  getParentForChildren(),
                  isClean());
          groupId_ = null;
        }
        return groupIdBuilder_;
      }

      private boolean groupIdNull_ ;
      /**
       * <code>optional bool group_id_null = 1001;</code>
       */
      public boolean getGroupIdNull() {
        return groupIdNull_;
      }
      /**
       * <code>optional bool group_id_null = 1001;</code>
       */
      public Builder setGroupIdNull(boolean value) {
        
        groupIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool group_id_null = 1001;</code>
       */
      public Builder clearGroupIdNull() {
        
        groupIdNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.Values.integerValue treeNodeId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeNodeIdBuilder_;
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeIdBuilder_ != null || treeNodeId_ != null;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public io.dstore.Values.integerValue getTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
        } else {
          return treeNodeIdBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public Builder setTreeNodeId(io.dstore.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          treeNodeId_ = value;
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public Builder setTreeNodeId(
          io.dstore.Values.integerValue.Builder builderForValue) {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = builderForValue.build();
          onChanged();
        } else {
          treeNodeIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public Builder mergeTreeNodeId(io.dstore.Values.integerValue value) {
        if (treeNodeIdBuilder_ == null) {
          if (treeNodeId_ != null) {
            treeNodeId_ =
              io.dstore.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
          } else {
            treeNodeId_ = value;
          }
          onChanged();
        } else {
          treeNodeIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public Builder clearTreeNodeId() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeId_ = null;
          onChanged();
        } else {
          treeNodeId_ = null;
          treeNodeIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public io.dstore.Values.integerValue.Builder getTreeNodeIdBuilder() {
        
        onChanged();
        return getTreeNodeIdFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        if (treeNodeIdBuilder_ != null) {
          return treeNodeIdBuilder_.getMessageOrBuilder();
        } else {
          return treeNodeId_ == null ?
              io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
        }
      }
      /**
       * <code>optional .dstore.values.integerValue tree_node_id = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
          getTreeNodeIdFieldBuilder() {
        if (treeNodeIdBuilder_ == null) {
          treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                  getTreeNodeId(),
                  getParentForChildren(),
                  isClean());
          treeNodeId_ = null;
        }
        return treeNodeIdBuilder_;
      }

      private boolean treeNodeIdNull_ ;
      /**
       * <code>optional bool tree_node_id_null = 1002;</code>
       */
      public boolean getTreeNodeIdNull() {
        return treeNodeIdNull_;
      }
      /**
       * <code>optional bool tree_node_id_null = 1002;</code>
       */
      public Builder setTreeNodeIdNull(boolean value) {
        
        treeNodeIdNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tree_node_id_null = 1002;</code>
       */
      public Builder clearTreeNodeIdNull() {
        
        treeNodeIdNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetGroupSurcharges_Ad.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetGroupSurcharges_Ad.Parameters)
    private static final io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters();
    }

    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetGroupSurcharges_Ad.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.om_GetGroupSurcharges_Ad.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.om_GetGroupSurcharges_Ad.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      boolean hasRelative();
      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      io.dstore.Values.booleanValue getRelative();
      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getRelativeOrBuilder();

      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      boolean hasUnitSymbol();
      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      io.dstore.Values.stringValue getUnitSymbol();
      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder();

      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      boolean hasSurchargeValue();
      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      io.dstore.Values.decimalValue getSurchargeValue();
      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder();

      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      boolean hasGroupId();
      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      io.dstore.Values.integerValue getGroupId();
      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder();

      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      boolean hasGroupDescription();
      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      io.dstore.Values.stringValue getGroupDescription();
      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      io.dstore.Values.stringValueOrBuilder getGroupDescriptionOrBuilder();

      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      boolean hasNodeDescription();
      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      io.dstore.Values.stringValue getNodeDescription();
      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder();

      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      boolean hasActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      io.dstore.Values.booleanValue getActive();
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder();

      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      boolean hasUnitId();
      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      io.dstore.Values.integerValue getUnitId();
      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder();

      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      boolean hasBrutto();
      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      io.dstore.Values.booleanValue getBrutto();
      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      io.dstore.Values.booleanValueOrBuilder getBruttoOrBuilder();

      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      boolean hasTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      io.dstore.Values.integerValue getTreeNodeId();
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder();

      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      boolean hasNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      io.dstore.Values.integerValue getNodeId();
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder();

      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      boolean hasSurchargeTypeDescription();
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      io.dstore.Values.stringValue getSurchargeTypeDescription();
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder();

      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      boolean hasSurchargeTypeId();
      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      io.dstore.Values.integerValue getSurchargeTypeId();
      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder();

      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      boolean hasLevelId();
      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      io.dstore.Values.integerValue getLevelId();
      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      io.dstore.Values.integerValueOrBuilder getLevelIdOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.om_GetGroupSurcharges_Ad.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (relative_ != null) {
                  subBuilder = relative_.toBuilder();
                }
                relative_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(relative_);
                  relative_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (unitSymbol_ != null) {
                  subBuilder = unitSymbol_.toBuilder();
                }
                unitSymbol_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitSymbol_);
                  unitSymbol_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.Values.decimalValue.Builder subBuilder = null;
                if (surchargeValue_ != null) {
                  subBuilder = surchargeValue_.toBuilder();
                }
                surchargeValue_ = input.readMessage(io.dstore.Values.decimalValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeValue_);
                  surchargeValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (groupId_ != null) {
                  subBuilder = groupId_.toBuilder();
                }
                groupId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupId_);
                  groupId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (groupDescription_ != null) {
                  subBuilder = groupDescription_.toBuilder();
                }
                groupDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(groupDescription_);
                  groupDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (nodeDescription_ != null) {
                  subBuilder = nodeDescription_.toBuilder();
                }
                nodeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeDescription_);
                  nodeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (active_ != null) {
                  subBuilder = active_.toBuilder();
                }
                active_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(active_);
                  active_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (unitId_ != null) {
                  subBuilder = unitId_.toBuilder();
                }
                unitId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(unitId_);
                  unitId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.Values.booleanValue.Builder subBuilder = null;
                if (brutto_ != null) {
                  subBuilder = brutto_.toBuilder();
                }
                brutto_ = input.readMessage(io.dstore.Values.booleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(brutto_);
                  brutto_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80082: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (treeNodeId_ != null) {
                  subBuilder = treeNodeId_.toBuilder();
                }
                treeNodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(treeNodeId_);
                  treeNodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80090: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (nodeId_ != null) {
                  subBuilder = nodeId_.toBuilder();
                }
                nodeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(nodeId_);
                  nodeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80098: {
                io.dstore.Values.stringValue.Builder subBuilder = null;
                if (surchargeTypeDescription_ != null) {
                  subBuilder = surchargeTypeDescription_.toBuilder();
                }
                surchargeTypeDescription_ = input.readMessage(io.dstore.Values.stringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeDescription_);
                  surchargeTypeDescription_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80106: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (surchargeTypeId_ != null) {
                  subBuilder = surchargeTypeId_.toBuilder();
                }
                surchargeTypeId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(surchargeTypeId_);
                  surchargeTypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80114: {
                io.dstore.Values.integerValue.Builder subBuilder = null;
                if (levelId_ != null) {
                  subBuilder = levelId_.toBuilder();
                }
                levelId_ = input.readMessage(io.dstore.Values.integerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(levelId_);
                  levelId_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int RELATIVE_FIELD_NUMBER = 10001;
      private io.dstore.Values.booleanValue relative_;
      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      public boolean hasRelative() {
        return relative_ != null;
      }
      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      public io.dstore.Values.booleanValue getRelative() {
        return relative_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : relative_;
      }
      /**
       * <pre>
       * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue relative = 10001;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getRelativeOrBuilder() {
        return getRelative();
      }

      public static final int UNIT_SYMBOL_FIELD_NUMBER = 10002;
      private io.dstore.Values.stringValue unitSymbol_;
      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      public boolean hasUnitSymbol() {
        return unitSymbol_ != null;
      }
      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      public io.dstore.Values.stringValue getUnitSymbol() {
        return unitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
      }
      /**
       * <pre>
       * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
        return getUnitSymbol();
      }

      public static final int SURCHARGE_VALUE_FIELD_NUMBER = 10003;
      private io.dstore.Values.decimalValue surchargeValue_;
      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      public boolean hasSurchargeValue() {
        return surchargeValue_ != null;
      }
      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      public io.dstore.Values.decimalValue getSurchargeValue() {
        return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
      }
      /**
       * <pre>
       * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
       * </pre>
       *
       * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
       */
      public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
        return getSurchargeValue();
      }

      public static final int GROUP_ID_FIELD_NUMBER = 10004;
      private io.dstore.Values.integerValue groupId_;
      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      public boolean hasGroupId() {
        return groupId_ != null;
      }
      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      public io.dstore.Values.integerValue getGroupId() {
        return groupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
      }
      /**
       * <pre>
       * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue group_id = 10004;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder() {
        return getGroupId();
      }

      public static final int GROUP_DESCRIPTION_FIELD_NUMBER = 10005;
      private io.dstore.Values.stringValue groupDescription_;
      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      public boolean hasGroupDescription() {
        return groupDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      public io.dstore.Values.stringValue getGroupDescription() {
        return groupDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : groupDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der Gruppe "GroupID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue group_description = 10005;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getGroupDescriptionOrBuilder() {
        return getGroupDescription();
      }

      public static final int NODE_DESCRIPTION_FIELD_NUMBER = 10006;
      private io.dstore.Values.stringValue nodeDescription_;
      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      public boolean hasNodeDescription() {
        return nodeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      public io.dstore.Values.stringValue getNodeDescription() {
        return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung des Artikel-Elementes "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue node_description = 10006;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
        return getNodeDescription();
      }

      public static final int ACTIVE_FIELD_NUMBER = 10007;
      private io.dstore.Values.booleanValue active_;
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      public boolean hasActive() {
        return active_ != null;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      public io.dstore.Values.booleanValue getActive() {
        return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
      }
      /**
       * <pre>
       * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue active = 10007;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
        return getActive();
      }

      public static final int UNIT_ID_FIELD_NUMBER = 10008;
      private io.dstore.Values.integerValue unitId_;
      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      public boolean hasUnitId() {
        return unitId_ != null;
      }
      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      public io.dstore.Values.integerValue getUnitId() {
        return unitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
      }
      /**
       * <pre>
       * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
       * </pre>
       *
       * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder() {
        return getUnitId();
      }

      public static final int BRUTTO_FIELD_NUMBER = 10009;
      private io.dstore.Values.booleanValue brutto_;
      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      public boolean hasBrutto() {
        return brutto_ != null;
      }
      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      public io.dstore.Values.booleanValue getBrutto() {
        return brutto_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : brutto_;
      }
      /**
       * <pre>
       * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
       * </pre>
       *
       * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
       */
      public io.dstore.Values.booleanValueOrBuilder getBruttoOrBuilder() {
        return getBrutto();
      }

      public static final int TREE_NODE_ID_FIELD_NUMBER = 10010;
      private io.dstore.Values.integerValue treeNodeId_;
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      public boolean hasTreeNodeId() {
        return treeNodeId_ != null;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      public io.dstore.Values.integerValue getTreeNodeId() {
        return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
      }
      /**
       * <pre>
       * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
       * </pre>
       *
       * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
        return getTreeNodeId();
      }

      public static final int NODE_ID_FIELD_NUMBER = 10011;
      private io.dstore.Values.integerValue nodeId_;
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      public boolean hasNodeId() {
        return nodeId_ != null;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      public io.dstore.Values.integerValue getNodeId() {
        return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
      }
      /**
       * <pre>
       * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
       * </pre>
       *
       * <code>optional .dstore.values.integerValue node_id = 10011;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
        return getNodeId();
      }

      public static final int SURCHARGE_TYPE_DESCRIPTION_FIELD_NUMBER = 10012;
      private io.dstore.Values.stringValue surchargeTypeDescription_;
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      public boolean hasSurchargeTypeDescription() {
        return surchargeTypeDescription_ != null;
      }
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      public io.dstore.Values.stringValue getSurchargeTypeDescription() {
        return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
      }
      /**
       * <pre>
       * Bezeichnung der "SurchargeTypeID"
       * </pre>
       *
       * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
       */
      public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
        return getSurchargeTypeDescription();
      }

      public static final int SURCHARGE_TYPE_ID_FIELD_NUMBER = 10013;
      private io.dstore.Values.integerValue surchargeTypeId_;
      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      public boolean hasSurchargeTypeId() {
        return surchargeTypeId_ != null;
      }
      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      public io.dstore.Values.integerValue getSurchargeTypeId() {
        return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
      }
      /**
       * <pre>
       * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
       * </pre>
       *
       * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
        return getSurchargeTypeId();
      }

      public static final int LEVEL_ID_FIELD_NUMBER = 10014;
      private io.dstore.Values.integerValue levelId_;
      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      public boolean hasLevelId() {
        return levelId_ != null;
      }
      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      public io.dstore.Values.integerValue getLevelId() {
        return levelId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : levelId_;
      }
      /**
       * <pre>
       * ID der Hierarchie der "NodeID"
       * </pre>
       *
       * <code>optional .dstore.values.integerValue level_id = 10014;</code>
       */
      public io.dstore.Values.integerValueOrBuilder getLevelIdOrBuilder() {
        return getLevelId();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (relative_ != null) {
          output.writeMessage(10001, getRelative());
        }
        if (unitSymbol_ != null) {
          output.writeMessage(10002, getUnitSymbol());
        }
        if (surchargeValue_ != null) {
          output.writeMessage(10003, getSurchargeValue());
        }
        if (groupId_ != null) {
          output.writeMessage(10004, getGroupId());
        }
        if (groupDescription_ != null) {
          output.writeMessage(10005, getGroupDescription());
        }
        if (nodeDescription_ != null) {
          output.writeMessage(10006, getNodeDescription());
        }
        if (active_ != null) {
          output.writeMessage(10007, getActive());
        }
        if (unitId_ != null) {
          output.writeMessage(10008, getUnitId());
        }
        if (brutto_ != null) {
          output.writeMessage(10009, getBrutto());
        }
        if (treeNodeId_ != null) {
          output.writeMessage(10010, getTreeNodeId());
        }
        if (nodeId_ != null) {
          output.writeMessage(10011, getNodeId());
        }
        if (surchargeTypeDescription_ != null) {
          output.writeMessage(10012, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          output.writeMessage(10013, getSurchargeTypeId());
        }
        if (levelId_ != null) {
          output.writeMessage(10014, getLevelId());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (relative_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getRelative());
        }
        if (unitSymbol_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getUnitSymbol());
        }
        if (surchargeValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getSurchargeValue());
        }
        if (groupId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getGroupId());
        }
        if (groupDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getGroupDescription());
        }
        if (nodeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getNodeDescription());
        }
        if (active_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getActive());
        }
        if (unitId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getUnitId());
        }
        if (brutto_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getBrutto());
        }
        if (treeNodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10010, getTreeNodeId());
        }
        if (nodeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10011, getNodeId());
        }
        if (surchargeTypeDescription_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10012, getSurchargeTypeDescription());
        }
        if (surchargeTypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10013, getSurchargeTypeId());
        }
        if (levelId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10014, getLevelId());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row other = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasRelative() == other.hasRelative());
        if (hasRelative()) {
          result = result && getRelative()
              .equals(other.getRelative());
        }
        result = result && (hasUnitSymbol() == other.hasUnitSymbol());
        if (hasUnitSymbol()) {
          result = result && getUnitSymbol()
              .equals(other.getUnitSymbol());
        }
        result = result && (hasSurchargeValue() == other.hasSurchargeValue());
        if (hasSurchargeValue()) {
          result = result && getSurchargeValue()
              .equals(other.getSurchargeValue());
        }
        result = result && (hasGroupId() == other.hasGroupId());
        if (hasGroupId()) {
          result = result && getGroupId()
              .equals(other.getGroupId());
        }
        result = result && (hasGroupDescription() == other.hasGroupDescription());
        if (hasGroupDescription()) {
          result = result && getGroupDescription()
              .equals(other.getGroupDescription());
        }
        result = result && (hasNodeDescription() == other.hasNodeDescription());
        if (hasNodeDescription()) {
          result = result && getNodeDescription()
              .equals(other.getNodeDescription());
        }
        result = result && (hasActive() == other.hasActive());
        if (hasActive()) {
          result = result && getActive()
              .equals(other.getActive());
        }
        result = result && (hasUnitId() == other.hasUnitId());
        if (hasUnitId()) {
          result = result && getUnitId()
              .equals(other.getUnitId());
        }
        result = result && (hasBrutto() == other.hasBrutto());
        if (hasBrutto()) {
          result = result && getBrutto()
              .equals(other.getBrutto());
        }
        result = result && (hasTreeNodeId() == other.hasTreeNodeId());
        if (hasTreeNodeId()) {
          result = result && getTreeNodeId()
              .equals(other.getTreeNodeId());
        }
        result = result && (hasNodeId() == other.hasNodeId());
        if (hasNodeId()) {
          result = result && getNodeId()
              .equals(other.getNodeId());
        }
        result = result && (hasSurchargeTypeDescription() == other.hasSurchargeTypeDescription());
        if (hasSurchargeTypeDescription()) {
          result = result && getSurchargeTypeDescription()
              .equals(other.getSurchargeTypeDescription());
        }
        result = result && (hasSurchargeTypeId() == other.hasSurchargeTypeId());
        if (hasSurchargeTypeId()) {
          result = result && getSurchargeTypeId()
              .equals(other.getSurchargeTypeId());
        }
        result = result && (hasLevelId() == other.hasLevelId());
        if (hasLevelId()) {
          result = result && getLevelId()
              .equals(other.getLevelId());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasRelative()) {
          hash = (37 * hash) + RELATIVE_FIELD_NUMBER;
          hash = (53 * hash) + getRelative().hashCode();
        }
        if (hasUnitSymbol()) {
          hash = (37 * hash) + UNIT_SYMBOL_FIELD_NUMBER;
          hash = (53 * hash) + getUnitSymbol().hashCode();
        }
        if (hasSurchargeValue()) {
          hash = (37 * hash) + SURCHARGE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getSurchargeValue().hashCode();
        }
        if (hasGroupId()) {
          hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
          hash = (53 * hash) + getGroupId().hashCode();
        }
        if (hasGroupDescription()) {
          hash = (37 * hash) + GROUP_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getGroupDescription().hashCode();
        }
        if (hasNodeDescription()) {
          hash = (37 * hash) + NODE_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getNodeDescription().hashCode();
        }
        if (hasActive()) {
          hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
          hash = (53 * hash) + getActive().hashCode();
        }
        if (hasUnitId()) {
          hash = (37 * hash) + UNIT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getUnitId().hashCode();
        }
        if (hasBrutto()) {
          hash = (37 * hash) + BRUTTO_FIELD_NUMBER;
          hash = (53 * hash) + getBrutto().hashCode();
        }
        if (hasTreeNodeId()) {
          hash = (37 * hash) + TREE_NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getTreeNodeId().hashCode();
        }
        if (hasNodeId()) {
          hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getNodeId().hashCode();
        }
        if (hasSurchargeTypeDescription()) {
          hash = (37 * hash) + SURCHARGE_TYPE_DESCRIPTION_FIELD_NUMBER;
          hash = (53 * hash) + getSurchargeTypeDescription().hashCode();
        }
        if (hasSurchargeTypeId()) {
          hash = (37 * hash) + SURCHARGE_TYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSurchargeTypeId().hashCode();
        }
        if (hasLevelId()) {
          hash = (37 * hash) + LEVEL_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLevelId().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetGroupSurcharges_Ad.Response.Row)
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (relativeBuilder_ == null) {
            relative_ = null;
          } else {
            relative_ = null;
            relativeBuilder_ = null;
          }
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }
          if (groupIdBuilder_ == null) {
            groupId_ = null;
          } else {
            groupId_ = null;
            groupIdBuilder_ = null;
          }
          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = null;
          } else {
            groupDescription_ = null;
            groupDescriptionBuilder_ = null;
          }
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }
          if (activeBuilder_ == null) {
            active_ = null;
          } else {
            active_ = null;
            activeBuilder_ = null;
          }
          if (unitIdBuilder_ == null) {
            unitId_ = null;
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }
          if (bruttoBuilder_ == null) {
            brutto_ = null;
          } else {
            brutto_ = null;
            bruttoBuilder_ = null;
          }
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }
          if (levelIdBuilder_ == null) {
            levelId_ = null;
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row build() {
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row buildPartial() {
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row result = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row(this);
          result.rowId_ = rowId_;
          if (relativeBuilder_ == null) {
            result.relative_ = relative_;
          } else {
            result.relative_ = relativeBuilder_.build();
          }
          if (unitSymbolBuilder_ == null) {
            result.unitSymbol_ = unitSymbol_;
          } else {
            result.unitSymbol_ = unitSymbolBuilder_.build();
          }
          if (surchargeValueBuilder_ == null) {
            result.surchargeValue_ = surchargeValue_;
          } else {
            result.surchargeValue_ = surchargeValueBuilder_.build();
          }
          if (groupIdBuilder_ == null) {
            result.groupId_ = groupId_;
          } else {
            result.groupId_ = groupIdBuilder_.build();
          }
          if (groupDescriptionBuilder_ == null) {
            result.groupDescription_ = groupDescription_;
          } else {
            result.groupDescription_ = groupDescriptionBuilder_.build();
          }
          if (nodeDescriptionBuilder_ == null) {
            result.nodeDescription_ = nodeDescription_;
          } else {
            result.nodeDescription_ = nodeDescriptionBuilder_.build();
          }
          if (activeBuilder_ == null) {
            result.active_ = active_;
          } else {
            result.active_ = activeBuilder_.build();
          }
          if (unitIdBuilder_ == null) {
            result.unitId_ = unitId_;
          } else {
            result.unitId_ = unitIdBuilder_.build();
          }
          if (bruttoBuilder_ == null) {
            result.brutto_ = brutto_;
          } else {
            result.brutto_ = bruttoBuilder_.build();
          }
          if (treeNodeIdBuilder_ == null) {
            result.treeNodeId_ = treeNodeId_;
          } else {
            result.treeNodeId_ = treeNodeIdBuilder_.build();
          }
          if (nodeIdBuilder_ == null) {
            result.nodeId_ = nodeId_;
          } else {
            result.nodeId_ = nodeIdBuilder_.build();
          }
          if (surchargeTypeDescriptionBuilder_ == null) {
            result.surchargeTypeDescription_ = surchargeTypeDescription_;
          } else {
            result.surchargeTypeDescription_ = surchargeTypeDescriptionBuilder_.build();
          }
          if (surchargeTypeIdBuilder_ == null) {
            result.surchargeTypeId_ = surchargeTypeId_;
          } else {
            result.surchargeTypeId_ = surchargeTypeIdBuilder_.build();
          }
          if (levelIdBuilder_ == null) {
            result.levelId_ = levelId_;
          } else {
            result.levelId_ = levelIdBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row other) {
          if (other == io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasRelative()) {
            mergeRelative(other.getRelative());
          }
          if (other.hasUnitSymbol()) {
            mergeUnitSymbol(other.getUnitSymbol());
          }
          if (other.hasSurchargeValue()) {
            mergeSurchargeValue(other.getSurchargeValue());
          }
          if (other.hasGroupId()) {
            mergeGroupId(other.getGroupId());
          }
          if (other.hasGroupDescription()) {
            mergeGroupDescription(other.getGroupDescription());
          }
          if (other.hasNodeDescription()) {
            mergeNodeDescription(other.getNodeDescription());
          }
          if (other.hasActive()) {
            mergeActive(other.getActive());
          }
          if (other.hasUnitId()) {
            mergeUnitId(other.getUnitId());
          }
          if (other.hasBrutto()) {
            mergeBrutto(other.getBrutto());
          }
          if (other.hasTreeNodeId()) {
            mergeTreeNodeId(other.getTreeNodeId());
          }
          if (other.hasNodeId()) {
            mergeNodeId(other.getNodeId());
          }
          if (other.hasSurchargeTypeDescription()) {
            mergeSurchargeTypeDescription(other.getSurchargeTypeDescription());
          }
          if (other.hasSurchargeTypeId()) {
            mergeSurchargeTypeId(other.getSurchargeTypeId());
          }
          if (other.hasLevelId()) {
            mergeLevelId(other.getLevelId());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.Values.booleanValue relative_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> relativeBuilder_;
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public boolean hasRelative() {
          return relativeBuilder_ != null || relative_ != null;
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public io.dstore.Values.booleanValue getRelative() {
          if (relativeBuilder_ == null) {
            return relative_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : relative_;
          } else {
            return relativeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public Builder setRelative(io.dstore.Values.booleanValue value) {
          if (relativeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            relative_ = value;
            onChanged();
          } else {
            relativeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public Builder setRelative(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (relativeBuilder_ == null) {
            relative_ = builderForValue.build();
            onChanged();
          } else {
            relativeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public Builder mergeRelative(io.dstore.Values.booleanValue value) {
          if (relativeBuilder_ == null) {
            if (relative_ != null) {
              relative_ =
                io.dstore.Values.booleanValue.newBuilder(relative_).mergeFrom(value).buildPartial();
            } else {
              relative_ = value;
            }
            onChanged();
          } else {
            relativeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public Builder clearRelative() {
          if (relativeBuilder_ == null) {
            relative_ = null;
            onChanged();
          } else {
            relative_ = null;
            relativeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public io.dstore.Values.booleanValue.Builder getRelativeBuilder() {
          
          onChanged();
          return getRelativeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getRelativeOrBuilder() {
          if (relativeBuilder_ != null) {
            return relativeBuilder_.getMessageOrBuilder();
          } else {
            return relative_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : relative_;
          }
        }
        /**
         * <pre>
         * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue relative = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getRelativeFieldBuilder() {
          if (relativeBuilder_ == null) {
            relativeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getRelative(),
                    getParentForChildren(),
                    isClean());
            relative_ = null;
          }
          return relativeBuilder_;
        }

        private io.dstore.Values.stringValue unitSymbol_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> unitSymbolBuilder_;
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public boolean hasUnitSymbol() {
          return unitSymbolBuilder_ != null || unitSymbol_ != null;
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public io.dstore.Values.stringValue getUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            return unitSymbol_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
          } else {
            return unitSymbolBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public Builder setUnitSymbol(io.dstore.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitSymbol_ = value;
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public Builder setUnitSymbol(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = builderForValue.build();
            onChanged();
          } else {
            unitSymbolBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public Builder mergeUnitSymbol(io.dstore.Values.stringValue value) {
          if (unitSymbolBuilder_ == null) {
            if (unitSymbol_ != null) {
              unitSymbol_ =
                io.dstore.Values.stringValue.newBuilder(unitSymbol_).mergeFrom(value).buildPartial();
            } else {
              unitSymbol_ = value;
            }
            onChanged();
          } else {
            unitSymbolBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public Builder clearUnitSymbol() {
          if (unitSymbolBuilder_ == null) {
            unitSymbol_ = null;
            onChanged();
          } else {
            unitSymbol_ = null;
            unitSymbolBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public io.dstore.Values.stringValue.Builder getUnitSymbolBuilder() {
          
          onChanged();
          return getUnitSymbolFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getUnitSymbolOrBuilder() {
          if (unitSymbolBuilder_ != null) {
            return unitSymbolBuilder_.getMessageOrBuilder();
          } else {
            return unitSymbol_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : unitSymbol_;
          }
        }
        /**
         * <pre>
         * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue unit_symbol = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getUnitSymbolFieldBuilder() {
          if (unitSymbolBuilder_ == null) {
            unitSymbolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getUnitSymbol(),
                    getParentForChildren(),
                    isClean());
            unitSymbol_ = null;
          }
          return unitSymbolBuilder_;
        }

        private io.dstore.Values.decimalValue surchargeValue_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> surchargeValueBuilder_;
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public boolean hasSurchargeValue() {
          return surchargeValueBuilder_ != null || surchargeValue_ != null;
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public io.dstore.Values.decimalValue getSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            return surchargeValue_ == null ? io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          } else {
            return surchargeValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public Builder setSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeValue_ = value;
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public Builder setSurchargeValue(
            io.dstore.Values.decimalValue.Builder builderForValue) {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = builderForValue.build();
            onChanged();
          } else {
            surchargeValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public Builder mergeSurchargeValue(io.dstore.Values.decimalValue value) {
          if (surchargeValueBuilder_ == null) {
            if (surchargeValue_ != null) {
              surchargeValue_ =
                io.dstore.Values.decimalValue.newBuilder(surchargeValue_).mergeFrom(value).buildPartial();
            } else {
              surchargeValue_ = value;
            }
            onChanged();
          } else {
            surchargeValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public Builder clearSurchargeValue() {
          if (surchargeValueBuilder_ == null) {
            surchargeValue_ = null;
            onChanged();
          } else {
            surchargeValue_ = null;
            surchargeValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public io.dstore.Values.decimalValue.Builder getSurchargeValueBuilder() {
          
          onChanged();
          return getSurchargeValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        public io.dstore.Values.decimalValueOrBuilder getSurchargeValueOrBuilder() {
          if (surchargeValueBuilder_ != null) {
            return surchargeValueBuilder_.getMessageOrBuilder();
          } else {
            return surchargeValue_ == null ?
                io.dstore.Values.decimalValue.getDefaultInstance() : surchargeValue_;
          }
        }
        /**
         * <pre>
         * Der zur Gruppe "GroupID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt--/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
         * </pre>
         *
         * <code>optional .dstore.values.decimalValue surcharge_value = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder> 
            getSurchargeValueFieldBuilder() {
          if (surchargeValueBuilder_ == null) {
            surchargeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.decimalValue, io.dstore.Values.decimalValue.Builder, io.dstore.Values.decimalValueOrBuilder>(
                    getSurchargeValue(),
                    getParentForChildren(),
                    isClean());
            surchargeValue_ = null;
          }
          return surchargeValueBuilder_;
        }

        private io.dstore.Values.integerValue groupId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> groupIdBuilder_;
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public boolean hasGroupId() {
          return groupIdBuilder_ != null || groupId_ != null;
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public io.dstore.Values.integerValue getGroupId() {
          if (groupIdBuilder_ == null) {
            return groupId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
          } else {
            return groupIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public Builder setGroupId(io.dstore.Values.integerValue value) {
          if (groupIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupId_ = value;
            onChanged();
          } else {
            groupIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public Builder setGroupId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (groupIdBuilder_ == null) {
            groupId_ = builderForValue.build();
            onChanged();
          } else {
            groupIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public Builder mergeGroupId(io.dstore.Values.integerValue value) {
          if (groupIdBuilder_ == null) {
            if (groupId_ != null) {
              groupId_ =
                io.dstore.Values.integerValue.newBuilder(groupId_).mergeFrom(value).buildPartial();
            } else {
              groupId_ = value;
            }
            onChanged();
          } else {
            groupIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public Builder clearGroupId() {
          if (groupIdBuilder_ == null) {
            groupId_ = null;
            onChanged();
          } else {
            groupId_ = null;
            groupIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public io.dstore.Values.integerValue.Builder getGroupIdBuilder() {
          
          onChanged();
          return getGroupIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getGroupIdOrBuilder() {
          if (groupIdBuilder_ != null) {
            return groupIdBuilder_.getMessageOrBuilder();
          } else {
            return groupId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : groupId_;
          }
        }
        /**
         * <pre>
         * ID einer Personen-Gruppe, für die (zum Element "TreeNodeID") der Aufschlag "SurchargeValue" hinterlegt ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue group_id = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getGroupIdFieldBuilder() {
          if (groupIdBuilder_ == null) {
            groupIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getGroupId(),
                    getParentForChildren(),
                    isClean());
            groupId_ = null;
          }
          return groupIdBuilder_;
        }

        private io.dstore.Values.stringValue groupDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> groupDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public boolean hasGroupDescription() {
          return groupDescriptionBuilder_ != null || groupDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public io.dstore.Values.stringValue getGroupDescription() {
          if (groupDescriptionBuilder_ == null) {
            return groupDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : groupDescription_;
          } else {
            return groupDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public Builder setGroupDescription(io.dstore.Values.stringValue value) {
          if (groupDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            groupDescription_ = value;
            onChanged();
          } else {
            groupDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public Builder setGroupDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = builderForValue.build();
            onChanged();
          } else {
            groupDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public Builder mergeGroupDescription(io.dstore.Values.stringValue value) {
          if (groupDescriptionBuilder_ == null) {
            if (groupDescription_ != null) {
              groupDescription_ =
                io.dstore.Values.stringValue.newBuilder(groupDescription_).mergeFrom(value).buildPartial();
            } else {
              groupDescription_ = value;
            }
            onChanged();
          } else {
            groupDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public Builder clearGroupDescription() {
          if (groupDescriptionBuilder_ == null) {
            groupDescription_ = null;
            onChanged();
          } else {
            groupDescription_ = null;
            groupDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public io.dstore.Values.stringValue.Builder getGroupDescriptionBuilder() {
          
          onChanged();
          return getGroupDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getGroupDescriptionOrBuilder() {
          if (groupDescriptionBuilder_ != null) {
            return groupDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return groupDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : groupDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der Gruppe "GroupID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue group_description = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getGroupDescriptionFieldBuilder() {
          if (groupDescriptionBuilder_ == null) {
            groupDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getGroupDescription(),
                    getParentForChildren(),
                    isClean());
            groupDescription_ = null;
          }
          return groupDescriptionBuilder_;
        }

        private io.dstore.Values.stringValue nodeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> nodeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public boolean hasNodeDescription() {
          return nodeDescriptionBuilder_ != null || nodeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public io.dstore.Values.stringValue getNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            return nodeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          } else {
            return nodeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public Builder setNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeDescription_ = value;
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public Builder setNodeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = builderForValue.build();
            onChanged();
          } else {
            nodeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public Builder mergeNodeDescription(io.dstore.Values.stringValue value) {
          if (nodeDescriptionBuilder_ == null) {
            if (nodeDescription_ != null) {
              nodeDescription_ =
                io.dstore.Values.stringValue.newBuilder(nodeDescription_).mergeFrom(value).buildPartial();
            } else {
              nodeDescription_ = value;
            }
            onChanged();
          } else {
            nodeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public Builder clearNodeDescription() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescription_ = null;
            onChanged();
          } else {
            nodeDescription_ = null;
            nodeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public io.dstore.Values.stringValue.Builder getNodeDescriptionBuilder() {
          
          onChanged();
          return getNodeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getNodeDescriptionOrBuilder() {
          if (nodeDescriptionBuilder_ != null) {
            return nodeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return nodeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : nodeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung des Artikel-Elementes "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue node_description = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getNodeDescriptionFieldBuilder() {
          if (nodeDescriptionBuilder_ == null) {
            nodeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getNodeDescription(),
                    getParentForChildren(),
                    isClean());
            nodeDescription_ = null;
          }
          return nodeDescriptionBuilder_;
        }

        private io.dstore.Values.booleanValue active_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> activeBuilder_;
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public boolean hasActive() {
          return activeBuilder_ != null || active_ != null;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public io.dstore.Values.booleanValue getActive() {
          if (activeBuilder_ == null) {
            return active_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          } else {
            return activeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public Builder setActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            active_ = value;
            onChanged();
          } else {
            activeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public Builder setActive(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (activeBuilder_ == null) {
            active_ = builderForValue.build();
            onChanged();
          } else {
            activeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public Builder mergeActive(io.dstore.Values.booleanValue value) {
          if (activeBuilder_ == null) {
            if (active_ != null) {
              active_ =
                io.dstore.Values.booleanValue.newBuilder(active_).mergeFrom(value).buildPartial();
            } else {
              active_ = value;
            }
            onChanged();
          } else {
            activeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public Builder clearActive() {
          if (activeBuilder_ == null) {
            active_ = null;
            onChanged();
          } else {
            active_ = null;
            activeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public io.dstore.Values.booleanValue.Builder getActiveBuilder() {
          
          onChanged();
          return getActiveFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getActiveOrBuilder() {
          if (activeBuilder_ != null) {
            return activeBuilder_.getMessageOrBuilder();
          } else {
            return active_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : active_;
          }
        }
        /**
         * <pre>
         * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue active = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getActiveFieldBuilder() {
          if (activeBuilder_ == null) {
            activeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getActive(),
                    getParentForChildren(),
                    isClean());
            active_ = null;
          }
          return activeBuilder_;
        }

        private io.dstore.Values.integerValue unitId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> unitIdBuilder_;
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public boolean hasUnitId() {
          return unitIdBuilder_ != null || unitId_ != null;
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public io.dstore.Values.integerValue getUnitId() {
          if (unitIdBuilder_ == null) {
            return unitId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
          } else {
            return unitIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public Builder setUnitId(io.dstore.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unitId_ = value;
            onChanged();
          } else {
            unitIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public Builder setUnitId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (unitIdBuilder_ == null) {
            unitId_ = builderForValue.build();
            onChanged();
          } else {
            unitIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public Builder mergeUnitId(io.dstore.Values.integerValue value) {
          if (unitIdBuilder_ == null) {
            if (unitId_ != null) {
              unitId_ =
                io.dstore.Values.integerValue.newBuilder(unitId_).mergeFrom(value).buildPartial();
            } else {
              unitId_ = value;
            }
            onChanged();
          } else {
            unitIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public Builder clearUnitId() {
          if (unitIdBuilder_ == null) {
            unitId_ = null;
            onChanged();
          } else {
            unitId_ = null;
            unitIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public io.dstore.Values.integerValue.Builder getUnitIdBuilder() {
          
          onChanged();
          return getUnitIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getUnitIdOrBuilder() {
          if (unitIdBuilder_ != null) {
            return unitIdBuilder_.getMessageOrBuilder();
          } else {
            return unitId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : unitId_;
          }
        }
        /**
         * <pre>
         * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
         * </pre>
         *
         * <code>optional .dstore.values.integerValue unit_id = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getUnitIdFieldBuilder() {
          if (unitIdBuilder_ == null) {
            unitIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getUnitId(),
                    getParentForChildren(),
                    isClean());
            unitId_ = null;
          }
          return unitIdBuilder_;
        }

        private io.dstore.Values.booleanValue brutto_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> bruttoBuilder_;
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public boolean hasBrutto() {
          return bruttoBuilder_ != null || brutto_ != null;
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public io.dstore.Values.booleanValue getBrutto() {
          if (bruttoBuilder_ == null) {
            return brutto_ == null ? io.dstore.Values.booleanValue.getDefaultInstance() : brutto_;
          } else {
            return bruttoBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public Builder setBrutto(io.dstore.Values.booleanValue value) {
          if (bruttoBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            brutto_ = value;
            onChanged();
          } else {
            bruttoBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public Builder setBrutto(
            io.dstore.Values.booleanValue.Builder builderForValue) {
          if (bruttoBuilder_ == null) {
            brutto_ = builderForValue.build();
            onChanged();
          } else {
            bruttoBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public Builder mergeBrutto(io.dstore.Values.booleanValue value) {
          if (bruttoBuilder_ == null) {
            if (brutto_ != null) {
              brutto_ =
                io.dstore.Values.booleanValue.newBuilder(brutto_).mergeFrom(value).buildPartial();
            } else {
              brutto_ = value;
            }
            onChanged();
          } else {
            bruttoBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public Builder clearBrutto() {
          if (bruttoBuilder_ == null) {
            brutto_ = null;
            onChanged();
          } else {
            brutto_ = null;
            bruttoBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public io.dstore.Values.booleanValue.Builder getBruttoBuilder() {
          
          onChanged();
          return getBruttoFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        public io.dstore.Values.booleanValueOrBuilder getBruttoOrBuilder() {
          if (bruttoBuilder_ != null) {
            return bruttoBuilder_.getMessageOrBuilder();
          } else {
            return brutto_ == null ?
                io.dstore.Values.booleanValue.getDefaultInstance() : brutto_;
          }
        }
        /**
         * <pre>
         * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
         * </pre>
         *
         * <code>optional .dstore.values.booleanValue brutto = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder> 
            getBruttoFieldBuilder() {
          if (bruttoBuilder_ == null) {
            bruttoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.booleanValue, io.dstore.Values.booleanValue.Builder, io.dstore.Values.booleanValueOrBuilder>(
                    getBrutto(),
                    getParentForChildren(),
                    isClean());
            brutto_ = null;
          }
          return bruttoBuilder_;
        }

        private io.dstore.Values.integerValue treeNodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> treeNodeIdBuilder_;
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public boolean hasTreeNodeId() {
          return treeNodeIdBuilder_ != null || treeNodeId_ != null;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public io.dstore.Values.integerValue getTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            return treeNodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          } else {
            return treeNodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public Builder setTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            treeNodeId_ = value;
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public Builder setTreeNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = builderForValue.build();
            onChanged();
          } else {
            treeNodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public Builder mergeTreeNodeId(io.dstore.Values.integerValue value) {
          if (treeNodeIdBuilder_ == null) {
            if (treeNodeId_ != null) {
              treeNodeId_ =
                io.dstore.Values.integerValue.newBuilder(treeNodeId_).mergeFrom(value).buildPartial();
            } else {
              treeNodeId_ = value;
            }
            onChanged();
          } else {
            treeNodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public Builder clearTreeNodeId() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeId_ = null;
            onChanged();
          } else {
            treeNodeId_ = null;
            treeNodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public io.dstore.Values.integerValue.Builder getTreeNodeIdBuilder() {
          
          onChanged();
          return getTreeNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getTreeNodeIdOrBuilder() {
          if (treeNodeIdBuilder_ != null) {
            return treeNodeIdBuilder_.getMessageOrBuilder();
          } else {
            return treeNodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : treeNodeId_;
          }
        }
        /**
         * <pre>
         * ID eines Elementes im Artikelbaum, zu dem (für die Gruppe "GroupID") der Aufschlag "SurchargeValue" hinterlegt ist. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
         * </pre>
         *
         * <code>optional .dstore.values.integerValue tree_node_id = 10010;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getTreeNodeIdFieldBuilder() {
          if (treeNodeIdBuilder_ == null) {
            treeNodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getTreeNodeId(),
                    getParentForChildren(),
                    isClean());
            treeNodeId_ = null;
          }
          return treeNodeIdBuilder_;
        }

        private io.dstore.Values.integerValue nodeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> nodeIdBuilder_;
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public boolean hasNodeId() {
          return nodeIdBuilder_ != null || nodeId_ != null;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public io.dstore.Values.integerValue getNodeId() {
          if (nodeIdBuilder_ == null) {
            return nodeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          } else {
            return nodeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public Builder setNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            nodeId_ = value;
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public Builder setNodeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (nodeIdBuilder_ == null) {
            nodeId_ = builderForValue.build();
            onChanged();
          } else {
            nodeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public Builder mergeNodeId(io.dstore.Values.integerValue value) {
          if (nodeIdBuilder_ == null) {
            if (nodeId_ != null) {
              nodeId_ =
                io.dstore.Values.integerValue.newBuilder(nodeId_).mergeFrom(value).buildPartial();
            } else {
              nodeId_ = value;
            }
            onChanged();
          } else {
            nodeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public Builder clearNodeId() {
          if (nodeIdBuilder_ == null) {
            nodeId_ = null;
            onChanged();
          } else {
            nodeId_ = null;
            nodeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public io.dstore.Values.integerValue.Builder getNodeIdBuilder() {
          
          onChanged();
          return getNodeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getNodeIdOrBuilder() {
          if (nodeIdBuilder_ != null) {
            return nodeIdBuilder_.getMessageOrBuilder();
          } else {
            return nodeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : nodeId_;
          }
        }
        /**
         * <pre>
         * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
         * </pre>
         *
         * <code>optional .dstore.values.integerValue node_id = 10011;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getNodeIdFieldBuilder() {
          if (nodeIdBuilder_ == null) {
            nodeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getNodeId(),
                    getParentForChildren(),
                    isClean());
            nodeId_ = null;
          }
          return nodeIdBuilder_;
        }

        private io.dstore.Values.stringValue surchargeTypeDescription_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> surchargeTypeDescriptionBuilder_;
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public boolean hasSurchargeTypeDescription() {
          return surchargeTypeDescriptionBuilder_ != null || surchargeTypeDescription_ != null;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public io.dstore.Values.stringValue getSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            return surchargeTypeDescription_ == null ? io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          } else {
            return surchargeTypeDescriptionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public Builder setSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeDescription_ = value;
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public Builder setSurchargeTypeDescription(
            io.dstore.Values.stringValue.Builder builderForValue) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public Builder mergeSurchargeTypeDescription(io.dstore.Values.stringValue value) {
          if (surchargeTypeDescriptionBuilder_ == null) {
            if (surchargeTypeDescription_ != null) {
              surchargeTypeDescription_ =
                io.dstore.Values.stringValue.newBuilder(surchargeTypeDescription_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeDescription_ = value;
            }
            onChanged();
          } else {
            surchargeTypeDescriptionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public Builder clearSurchargeTypeDescription() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescription_ = null;
            onChanged();
          } else {
            surchargeTypeDescription_ = null;
            surchargeTypeDescriptionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public io.dstore.Values.stringValue.Builder getSurchargeTypeDescriptionBuilder() {
          
          onChanged();
          return getSurchargeTypeDescriptionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        public io.dstore.Values.stringValueOrBuilder getSurchargeTypeDescriptionOrBuilder() {
          if (surchargeTypeDescriptionBuilder_ != null) {
            return surchargeTypeDescriptionBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeDescription_ == null ?
                io.dstore.Values.stringValue.getDefaultInstance() : surchargeTypeDescription_;
          }
        }
        /**
         * <pre>
         * Bezeichnung der "SurchargeTypeID"
         * </pre>
         *
         * <code>optional .dstore.values.stringValue surcharge_type_description = 10012;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder> 
            getSurchargeTypeDescriptionFieldBuilder() {
          if (surchargeTypeDescriptionBuilder_ == null) {
            surchargeTypeDescriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.stringValue, io.dstore.Values.stringValue.Builder, io.dstore.Values.stringValueOrBuilder>(
                    getSurchargeTypeDescription(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeDescription_ = null;
          }
          return surchargeTypeDescriptionBuilder_;
        }

        private io.dstore.Values.integerValue surchargeTypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> surchargeTypeIdBuilder_;
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public boolean hasSurchargeTypeId() {
          return surchargeTypeIdBuilder_ != null || surchargeTypeId_ != null;
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public io.dstore.Values.integerValue getSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            return surchargeTypeId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          } else {
            return surchargeTypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public Builder setSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            surchargeTypeId_ = value;
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public Builder setSurchargeTypeId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = builderForValue.build();
            onChanged();
          } else {
            surchargeTypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public Builder mergeSurchargeTypeId(io.dstore.Values.integerValue value) {
          if (surchargeTypeIdBuilder_ == null) {
            if (surchargeTypeId_ != null) {
              surchargeTypeId_ =
                io.dstore.Values.integerValue.newBuilder(surchargeTypeId_).mergeFrom(value).buildPartial();
            } else {
              surchargeTypeId_ = value;
            }
            onChanged();
          } else {
            surchargeTypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public Builder clearSurchargeTypeId() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeId_ = null;
            onChanged();
          } else {
            surchargeTypeId_ = null;
            surchargeTypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public io.dstore.Values.integerValue.Builder getSurchargeTypeIdBuilder() {
          
          onChanged();
          return getSurchargeTypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getSurchargeTypeIdOrBuilder() {
          if (surchargeTypeIdBuilder_ != null) {
            return surchargeTypeIdBuilder_.getMessageOrBuilder();
          } else {
            return surchargeTypeId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : surchargeTypeId_;
          }
        }
        /**
         * <pre>
         * ID einer Preis-Aufschlags/Rabatt-Art, wie z.B. "Versandkosten", "Rabatt", "Nachnahmegebühr" o.ä.
         * </pre>
         *
         * <code>optional .dstore.values.integerValue surcharge_type_id = 10013;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getSurchargeTypeIdFieldBuilder() {
          if (surchargeTypeIdBuilder_ == null) {
            surchargeTypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getSurchargeTypeId(),
                    getParentForChildren(),
                    isClean());
            surchargeTypeId_ = null;
          }
          return surchargeTypeIdBuilder_;
        }

        private io.dstore.Values.integerValue levelId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> levelIdBuilder_;
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public boolean hasLevelId() {
          return levelIdBuilder_ != null || levelId_ != null;
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public io.dstore.Values.integerValue getLevelId() {
          if (levelIdBuilder_ == null) {
            return levelId_ == null ? io.dstore.Values.integerValue.getDefaultInstance() : levelId_;
          } else {
            return levelIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public Builder setLevelId(io.dstore.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            levelId_ = value;
            onChanged();
          } else {
            levelIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public Builder setLevelId(
            io.dstore.Values.integerValue.Builder builderForValue) {
          if (levelIdBuilder_ == null) {
            levelId_ = builderForValue.build();
            onChanged();
          } else {
            levelIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public Builder mergeLevelId(io.dstore.Values.integerValue value) {
          if (levelIdBuilder_ == null) {
            if (levelId_ != null) {
              levelId_ =
                io.dstore.Values.integerValue.newBuilder(levelId_).mergeFrom(value).buildPartial();
            } else {
              levelId_ = value;
            }
            onChanged();
          } else {
            levelIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public Builder clearLevelId() {
          if (levelIdBuilder_ == null) {
            levelId_ = null;
            onChanged();
          } else {
            levelId_ = null;
            levelIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public io.dstore.Values.integerValue.Builder getLevelIdBuilder() {
          
          onChanged();
          return getLevelIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        public io.dstore.Values.integerValueOrBuilder getLevelIdOrBuilder() {
          if (levelIdBuilder_ != null) {
            return levelIdBuilder_.getMessageOrBuilder();
          } else {
            return levelId_ == null ?
                io.dstore.Values.integerValue.getDefaultInstance() : levelId_;
          }
        }
        /**
         * <pre>
         * ID der Hierarchie der "NodeID"
         * </pre>
         *
         * <code>optional .dstore.values.integerValue level_id = 10014;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder> 
            getLevelIdFieldBuilder() {
          if (levelIdBuilder_ == null) {
            levelIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.Values.integerValue, io.dstore.Values.integerValue.Builder, io.dstore.Values.integerValueOrBuilder>(
                    getLevelId(),
                    getParentForChildren(),
                    isClean());
            levelId_ = null;
          }
          return levelIdBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetGroupSurcharges_Ad.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.om_GetGroupSurcharges_Ad.Response.Row)
      private static final io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row();
      }

      public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response other = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.om_GetGroupSurcharges_Ad.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.om_GetGroupSurcharges_Ad.Response)
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.class, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor;
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response build() {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response buildPartial() {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response result = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response) {
          return mergeFrom((io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response other) {
        if (other == io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.om_GetGroupSurcharges_Ad.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.Row.Builder, io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.om_GetGroupSurcharges_Ad.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.om_GetGroupSurcharges_Ad.Response)
    private static final io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response();
    }

    public static io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.OmGetGroupSurchargesAd.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7dstore/engine/procedures/om_GetGroupSu" +
      "rcharges_Ad.proto\022&dstore.engine.om_GetG" +
      "roupSurcharges_Ad\032\023dstore/values.proto\032\032" +
      "dstore/engine/engine.proto\"\242\001\n\nParameter" +
      "s\022-\n\010group_id\030\001 \001(\0132\033.dstore.values.inte" +
      "gerValue\022\026\n\rgroup_id_null\030\351\007 \001(\010\0221\n\014tree" +
      "_node_id\030\002 \001(\0132\033.dstore.values.integerVa" +
      "lue\022\032\n\021tree_node_id_null\030\352\007 \001(\010\"\231\007\n\010Resp" +
      "onse\0228\n\020meta_information\030\002 \003(\0132\036.dstore." +
      "engine.MetaInformation\022\'\n\007message\030\003 \003(\0132",
      "\026.dstore.engine.Message\022A\n\003row\030\004 \003(\01324.d" +
      "store.engine.om_GetGroupSurcharges_Ad.Re" +
      "sponse.Row\032\346\005\n\003Row\022\017\n\006row_id\030\220N \001(\005\022.\n\010r" +
      "elative\030\221N \001(\0132\033.dstore.values.booleanVa" +
      "lue\0220\n\013unit_symbol\030\222N \001(\0132\032.dstore.value" +
      "s.stringValue\0225\n\017surcharge_value\030\223N \001(\0132" +
      "\033.dstore.values.decimalValue\022.\n\010group_id" +
      "\030\224N \001(\0132\033.dstore.values.integerValue\0226\n\021" +
      "group_description\030\225N \001(\0132\032.dstore.values" +
      ".stringValue\0225\n\020node_description\030\226N \001(\0132",
      "\032.dstore.values.stringValue\022,\n\006active\030\227N" +
      " \001(\0132\033.dstore.values.booleanValue\022-\n\007uni" +
      "t_id\030\230N \001(\0132\033.dstore.values.integerValue" +
      "\022,\n\006brutto\030\231N \001(\0132\033.dstore.values.boolea" +
      "nValue\0222\n\014tree_node_id\030\232N \001(\0132\033.dstore.v" +
      "alues.integerValue\022-\n\007node_id\030\233N \001(\0132\033.d" +
      "store.values.integerValue\022?\n\032surcharge_t" +
      "ype_description\030\234N \001(\0132\032.dstore.values.s" +
      "tringValue\0227\n\021surcharge_type_id\030\235N \001(\0132\033" +
      ".dstore.values.integerValue\022.\n\010level_id\030",
      "\236N \001(\0132\033.dstore.values.integerValueBY\n\033i" +
      "o.dstore.engine.proceduresZ:gosdk.dstore" +
      ".de/engine/procedures/om_GetGroupSurchar" +
      "ges_Adb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.Values.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Parameters_descriptor,
        new java.lang.String[] { "GroupId", "GroupIdNull", "TreeNodeId", "TreeNodeIdNull", });
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor =
      internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_om_GetGroupSurcharges_Ad_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "Relative", "UnitSymbol", "SurchargeValue", "GroupId", "GroupDescription", "NodeDescription", "Active", "UnitId", "Brutto", "TreeNodeId", "NodeId", "SurchargeTypeDescription", "SurchargeTypeId", "LevelId", });
    io.dstore.Values.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
