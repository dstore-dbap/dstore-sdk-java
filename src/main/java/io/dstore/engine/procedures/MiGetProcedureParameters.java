// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dstore/engine/procedures/mi_GetProcedureParameters.proto

package io.dstore.engine.procedures;

public final class MiGetProcedureParameters {
  private MiGetProcedureParameters() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcedureParameters.Parameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    boolean hasProcedureName();
    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    io.dstore.values.StringValue getProcedureName();
    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder();

    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    boolean getProcedureNameNull();

    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    boolean hasParameterName();
    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    io.dstore.values.StringValue getParameterName();
    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder();

    /**
     * <code>optional bool parameter_name_null = 1002;</code>
     */
    boolean getParameterNameNull();

    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    boolean hasDatabaseName();
    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    io.dstore.values.StringValue getDatabaseName();
    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder();

    /**
     * <code>optional bool database_name_null = 1003;</code>
     */
    boolean getDatabaseNameNull();
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Parameters}
   */
  public  static final class Parameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcedureParameters.Parameters)
      ParametersOrBuilder {
    // Use Parameters.newBuilder() to construct.
    private Parameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Parameters() {
      procedureNameNull_ = false;
      parameterNameNull_ = false;
      databaseNameNull_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Parameters(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (procedureName_ != null) {
                subBuilder = procedureName_.toBuilder();
              }
              procedureName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(procedureName_);
                procedureName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (parameterName_ != null) {
                subBuilder = parameterName_.toBuilder();
              }
              parameterName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parameterName_);
                parameterName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.dstore.values.StringValue.Builder subBuilder = null;
              if (databaseName_ != null) {
                subBuilder = databaseName_.toBuilder();
              }
              databaseName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(databaseName_);
                databaseName_ = subBuilder.buildPartial();
              }

              break;
            }
            case 8008: {

              procedureNameNull_ = input.readBool();
              break;
            }
            case 8016: {

              parameterNameNull_ = input.readBool();
              break;
            }
            case 8024: {

              databaseNameNull_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.class, io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.Builder.class);
    }

    public static final int PROCEDURE_NAME_FIELD_NUMBER = 1;
    private io.dstore.values.StringValue procedureName_;
    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    public boolean hasProcedureName() {
      return procedureName_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    public io.dstore.values.StringValue getProcedureName() {
      return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
    }
    /**
     * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
     */
    public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
      return getProcedureName();
    }

    public static final int PROCEDURE_NAME_NULL_FIELD_NUMBER = 1001;
    private boolean procedureNameNull_;
    /**
     * <code>optional bool procedure_name_null = 1001;</code>
     */
    public boolean getProcedureNameNull() {
      return procedureNameNull_;
    }

    public static final int PARAMETER_NAME_FIELD_NUMBER = 2;
    private io.dstore.values.StringValue parameterName_;
    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    public boolean hasParameterName() {
      return parameterName_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    public io.dstore.values.StringValue getParameterName() {
      return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
    }
    /**
     * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
     */
    public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
      return getParameterName();
    }

    public static final int PARAMETER_NAME_NULL_FIELD_NUMBER = 1002;
    private boolean parameterNameNull_;
    /**
     * <code>optional bool parameter_name_null = 1002;</code>
     */
    public boolean getParameterNameNull() {
      return parameterNameNull_;
    }

    public static final int DATABASE_NAME_FIELD_NUMBER = 3;
    private io.dstore.values.StringValue databaseName_;
    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    public boolean hasDatabaseName() {
      return databaseName_ != null;
    }
    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    public io.dstore.values.StringValue getDatabaseName() {
      return databaseName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
    }
    /**
     * <code>optional .dstore.values.StringValue database_name = 3;</code>
     */
    public io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder() {
      return getDatabaseName();
    }

    public static final int DATABASE_NAME_NULL_FIELD_NUMBER = 1003;
    private boolean databaseNameNull_;
    /**
     * <code>optional bool database_name_null = 1003;</code>
     */
    public boolean getDatabaseNameNull() {
      return databaseNameNull_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (procedureName_ != null) {
        output.writeMessage(1, getProcedureName());
      }
      if (parameterName_ != null) {
        output.writeMessage(2, getParameterName());
      }
      if (databaseName_ != null) {
        output.writeMessage(3, getDatabaseName());
      }
      if (procedureNameNull_ != false) {
        output.writeBool(1001, procedureNameNull_);
      }
      if (parameterNameNull_ != false) {
        output.writeBool(1002, parameterNameNull_);
      }
      if (databaseNameNull_ != false) {
        output.writeBool(1003, databaseNameNull_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (procedureName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getProcedureName());
      }
      if (parameterName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParameterName());
      }
      if (databaseName_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDatabaseName());
      }
      if (procedureNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1001, procedureNameNull_);
      }
      if (parameterNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1002, parameterNameNull_);
      }
      if (databaseNameNull_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1003, databaseNameNull_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Parameters)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetProcedureParameters.Parameters other = (io.dstore.engine.procedures.MiGetProcedureParameters.Parameters) obj;

      boolean result = true;
      result = result && (hasProcedureName() == other.hasProcedureName());
      if (hasProcedureName()) {
        result = result && getProcedureName()
            .equals(other.getProcedureName());
      }
      result = result && (getProcedureNameNull()
          == other.getProcedureNameNull());
      result = result && (hasParameterName() == other.hasParameterName());
      if (hasParameterName()) {
        result = result && getParameterName()
            .equals(other.getParameterName());
      }
      result = result && (getParameterNameNull()
          == other.getParameterNameNull());
      result = result && (hasDatabaseName() == other.hasDatabaseName());
      if (hasDatabaseName()) {
        result = result && getDatabaseName()
            .equals(other.getDatabaseName());
      }
      result = result && (getDatabaseNameNull()
          == other.getDatabaseNameNull());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasProcedureName()) {
        hash = (37 * hash) + PROCEDURE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getProcedureName().hashCode();
      }
      hash = (37 * hash) + PROCEDURE_NAME_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProcedureNameNull());
      if (hasParameterName()) {
        hash = (37 * hash) + PARAMETER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getParameterName().hashCode();
      }
      hash = (37 * hash) + PARAMETER_NAME_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getParameterNameNull());
      if (hasDatabaseName()) {
        hash = (37 * hash) + DATABASE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getDatabaseName().hashCode();
      }
      hash = (37 * hash) + DATABASE_NAME_NULL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDatabaseNameNull());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcedureParameters.Parameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Parameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcedureParameters.Parameters)
        io.dstore.engine.procedures.MiGetProcedureParameters.ParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.class, io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }
        procedureNameNull_ = false;

        if (parameterNameBuilder_ == null) {
          parameterName_ = null;
        } else {
          parameterName_ = null;
          parameterNameBuilder_ = null;
        }
        parameterNameNull_ = false;

        if (databaseNameBuilder_ == null) {
          databaseName_ = null;
        } else {
          databaseName_ = null;
          databaseNameBuilder_ = null;
        }
        databaseNameNull_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor;
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Parameters getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Parameters build() {
        io.dstore.engine.procedures.MiGetProcedureParameters.Parameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Parameters buildPartial() {
        io.dstore.engine.procedures.MiGetProcedureParameters.Parameters result = new io.dstore.engine.procedures.MiGetProcedureParameters.Parameters(this);
        if (procedureNameBuilder_ == null) {
          result.procedureName_ = procedureName_;
        } else {
          result.procedureName_ = procedureNameBuilder_.build();
        }
        result.procedureNameNull_ = procedureNameNull_;
        if (parameterNameBuilder_ == null) {
          result.parameterName_ = parameterName_;
        } else {
          result.parameterName_ = parameterNameBuilder_.build();
        }
        result.parameterNameNull_ = parameterNameNull_;
        if (databaseNameBuilder_ == null) {
          result.databaseName_ = databaseName_;
        } else {
          result.databaseName_ = databaseNameBuilder_.build();
        }
        result.databaseNameNull_ = databaseNameNull_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Parameters) {
          return mergeFrom((io.dstore.engine.procedures.MiGetProcedureParameters.Parameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcedureParameters.Parameters other) {
        if (other == io.dstore.engine.procedures.MiGetProcedureParameters.Parameters.getDefaultInstance()) return this;
        if (other.hasProcedureName()) {
          mergeProcedureName(other.getProcedureName());
        }
        if (other.getProcedureNameNull() != false) {
          setProcedureNameNull(other.getProcedureNameNull());
        }
        if (other.hasParameterName()) {
          mergeParameterName(other.getParameterName());
        }
        if (other.getParameterNameNull() != false) {
          setParameterNameNull(other.getParameterNameNull());
        }
        if (other.hasDatabaseName()) {
          mergeDatabaseName(other.getDatabaseName());
        }
        if (other.getDatabaseNameNull() != false) {
          setDatabaseNameNull(other.getDatabaseNameNull());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetProcedureParameters.Parameters parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetProcedureParameters.Parameters) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private io.dstore.values.StringValue procedureName_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> procedureNameBuilder_;
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public boolean hasProcedureName() {
        return procedureNameBuilder_ != null || procedureName_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public io.dstore.values.StringValue getProcedureName() {
        if (procedureNameBuilder_ == null) {
          return procedureName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
        } else {
          return procedureNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(io.dstore.values.StringValue value) {
        if (procedureNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          procedureName_ = value;
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public Builder setProcedureName(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (procedureNameBuilder_ == null) {
          procedureName_ = builderForValue.build();
          onChanged();
        } else {
          procedureNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public Builder mergeProcedureName(io.dstore.values.StringValue value) {
        if (procedureNameBuilder_ == null) {
          if (procedureName_ != null) {
            procedureName_ =
              io.dstore.values.StringValue.newBuilder(procedureName_).mergeFrom(value).buildPartial();
          } else {
            procedureName_ = value;
          }
          onChanged();
        } else {
          procedureNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public Builder clearProcedureName() {
        if (procedureNameBuilder_ == null) {
          procedureName_ = null;
          onChanged();
        } else {
          procedureName_ = null;
          procedureNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public io.dstore.values.StringValue.Builder getProcedureNameBuilder() {
        
        onChanged();
        return getProcedureNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      public io.dstore.values.StringValueOrBuilder getProcedureNameOrBuilder() {
        if (procedureNameBuilder_ != null) {
          return procedureNameBuilder_.getMessageOrBuilder();
        } else {
          return procedureName_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : procedureName_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue procedure_name = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getProcedureNameFieldBuilder() {
        if (procedureNameBuilder_ == null) {
          procedureNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getProcedureName(),
                  getParentForChildren(),
                  isClean());
          procedureName_ = null;
        }
        return procedureNameBuilder_;
      }

      private boolean procedureNameNull_ ;
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public boolean getProcedureNameNull() {
        return procedureNameNull_;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder setProcedureNameNull(boolean value) {
        
        procedureNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool procedure_name_null = 1001;</code>
       */
      public Builder clearProcedureNameNull() {
        
        procedureNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue parameterName_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> parameterNameBuilder_;
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public boolean hasParameterName() {
        return parameterNameBuilder_ != null || parameterName_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public io.dstore.values.StringValue getParameterName() {
        if (parameterNameBuilder_ == null) {
          return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
        } else {
          return parameterNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public Builder setParameterName(io.dstore.values.StringValue value) {
        if (parameterNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameterName_ = value;
          onChanged();
        } else {
          parameterNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public Builder setParameterName(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (parameterNameBuilder_ == null) {
          parameterName_ = builderForValue.build();
          onChanged();
        } else {
          parameterNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public Builder mergeParameterName(io.dstore.values.StringValue value) {
        if (parameterNameBuilder_ == null) {
          if (parameterName_ != null) {
            parameterName_ =
              io.dstore.values.StringValue.newBuilder(parameterName_).mergeFrom(value).buildPartial();
          } else {
            parameterName_ = value;
          }
          onChanged();
        } else {
          parameterNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public Builder clearParameterName() {
        if (parameterNameBuilder_ == null) {
          parameterName_ = null;
          onChanged();
        } else {
          parameterName_ = null;
          parameterNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public io.dstore.values.StringValue.Builder getParameterNameBuilder() {
        
        onChanged();
        return getParameterNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
        if (parameterNameBuilder_ != null) {
          return parameterNameBuilder_.getMessageOrBuilder();
        } else {
          return parameterName_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue parameter_name = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getParameterNameFieldBuilder() {
        if (parameterNameBuilder_ == null) {
          parameterNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getParameterName(),
                  getParentForChildren(),
                  isClean());
          parameterName_ = null;
        }
        return parameterNameBuilder_;
      }

      private boolean parameterNameNull_ ;
      /**
       * <code>optional bool parameter_name_null = 1002;</code>
       */
      public boolean getParameterNameNull() {
        return parameterNameNull_;
      }
      /**
       * <code>optional bool parameter_name_null = 1002;</code>
       */
      public Builder setParameterNameNull(boolean value) {
        
        parameterNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool parameter_name_null = 1002;</code>
       */
      public Builder clearParameterNameNull() {
        
        parameterNameNull_ = false;
        onChanged();
        return this;
      }

      private io.dstore.values.StringValue databaseName_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> databaseNameBuilder_;
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public boolean hasDatabaseName() {
        return databaseNameBuilder_ != null || databaseName_ != null;
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public io.dstore.values.StringValue getDatabaseName() {
        if (databaseNameBuilder_ == null) {
          return databaseName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
        } else {
          return databaseNameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public Builder setDatabaseName(io.dstore.values.StringValue value) {
        if (databaseNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          databaseName_ = value;
          onChanged();
        } else {
          databaseNameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public Builder setDatabaseName(
          io.dstore.values.StringValue.Builder builderForValue) {
        if (databaseNameBuilder_ == null) {
          databaseName_ = builderForValue.build();
          onChanged();
        } else {
          databaseNameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public Builder mergeDatabaseName(io.dstore.values.StringValue value) {
        if (databaseNameBuilder_ == null) {
          if (databaseName_ != null) {
            databaseName_ =
              io.dstore.values.StringValue.newBuilder(databaseName_).mergeFrom(value).buildPartial();
          } else {
            databaseName_ = value;
          }
          onChanged();
        } else {
          databaseNameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public Builder clearDatabaseName() {
        if (databaseNameBuilder_ == null) {
          databaseName_ = null;
          onChanged();
        } else {
          databaseName_ = null;
          databaseNameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public io.dstore.values.StringValue.Builder getDatabaseNameBuilder() {
        
        onChanged();
        return getDatabaseNameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      public io.dstore.values.StringValueOrBuilder getDatabaseNameOrBuilder() {
        if (databaseNameBuilder_ != null) {
          return databaseNameBuilder_.getMessageOrBuilder();
        } else {
          return databaseName_ == null ?
              io.dstore.values.StringValue.getDefaultInstance() : databaseName_;
        }
      }
      /**
       * <code>optional .dstore.values.StringValue database_name = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
          getDatabaseNameFieldBuilder() {
        if (databaseNameBuilder_ == null) {
          databaseNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                  getDatabaseName(),
                  getParentForChildren(),
                  isClean());
          databaseName_ = null;
        }
        return databaseNameBuilder_;
      }

      private boolean databaseNameNull_ ;
      /**
       * <code>optional bool database_name_null = 1003;</code>
       */
      public boolean getDatabaseNameNull() {
        return databaseNameNull_;
      }
      /**
       * <code>optional bool database_name_null = 1003;</code>
       */
      public Builder setDatabaseNameNull(boolean value) {
        
        databaseNameNull_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool database_name_null = 1003;</code>
       */
      public Builder clearDatabaseNameNull() {
        
        databaseNameNull_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcedureParameters.Parameters)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcedureParameters.Parameters)
    private static final io.dstore.engine.procedures.MiGetProcedureParameters.Parameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcedureParameters.Parameters();
    }

    public static io.dstore.engine.procedures.MiGetProcedureParameters.Parameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Parameters>
        PARSER = new com.google.protobuf.AbstractParser<Parameters>() {
      public Parameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Parameters(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Parameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Parameters> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetProcedureParameters.Parameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcedureParameters.Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<io.dstore.engine.MetaInformation> 
        getMetaInformationList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformation getMetaInformation(int index);
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    int getMetaInformationCount();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList();
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index);

    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<io.dstore.engine.Message> 
        getMessageList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.Message getMessage(int index);
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    int getMessageCount();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList();
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index);

    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> 
        getRowList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getRow(int index);
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    int getRowCount();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    java.util.List<? extends io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder> 
        getRowOrBuilderList();
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder getRowOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Response}
   */
  public  static final class Response extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcedureParameters.Response)
      ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Response() {
      metaInformation_ = java.util.Collections.emptyList();
      message_ = java.util.Collections.emptyList();
      row_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Response(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              metaInformation_.add(
                  input.readMessage(io.dstore.engine.MetaInformation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                message_ = new java.util.ArrayList<io.dstore.engine.Message>();
                mutable_bitField0_ |= 0x00000002;
              }
              message_.add(
                  input.readMessage(io.dstore.engine.Message.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row>();
                mutable_bitField0_ |= 0x00000004;
              }
              row_.add(
                  input.readMessage(io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = java.util.Collections.unmodifiableList(message_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = java.util.Collections.unmodifiableList(row_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.dstore.engine.procedures.MiGetProcedureParameters.Response.class, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Builder.class);
    }

    public interface RowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dstore.engine.mi_GetProcedureParameters.Response.Row)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      int getRowId();

      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      boolean hasIsOutputParameter();
      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      io.dstore.values.BooleanValue getIsOutputParameter();
      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      io.dstore.values.BooleanValueOrBuilder getIsOutputParameterOrBuilder();

      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      boolean hasLength();
      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      io.dstore.values.IntegerValue getLength();
      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getLengthOrBuilder();

      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      boolean hasJDBCScale();
      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      io.dstore.values.LongValue getJDBCScale();
      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      io.dstore.values.LongValueOrBuilder getJDBCScaleOrBuilder();

      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      boolean hasJDBCPrecision();
      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      io.dstore.values.LongValue getJDBCPrecision();
      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      io.dstore.values.LongValueOrBuilder getJDBCPrecisionOrBuilder();

      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      boolean hasPrecisionValue();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      io.dstore.values.IntegerValue getPrecisionValue();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getPrecisionValueOrBuilder();

      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      boolean hasParameterName();
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      io.dstore.values.StringValue getParameterName();
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder();

      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      boolean hasScale();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      io.dstore.values.IntegerValue getScale();
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getScaleOrBuilder();

      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      boolean hasJDBCDatatypeId();
      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      io.dstore.values.IntegerValue getJDBCDatatypeId();
      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      io.dstore.values.IntegerValueOrBuilder getJDBCDatatypeIdOrBuilder();

      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      boolean hasDatatype();
      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      io.dstore.values.StringValue getDatatype();
      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      io.dstore.values.StringValueOrBuilder getDatatypeOrBuilder();
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Response.Row}
     */
    public  static final class Row extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dstore.engine.mi_GetProcedureParameters.Response.Row)
        RowOrBuilder {
      // Use Row.newBuilder() to construct.
      private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Row() {
        rowId_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Row(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 80000: {

                rowId_ = input.readInt32();
                break;
              }
              case 80010: {
                io.dstore.values.BooleanValue.Builder subBuilder = null;
                if (isOutputParameter_ != null) {
                  subBuilder = isOutputParameter_.toBuilder();
                }
                isOutputParameter_ = input.readMessage(io.dstore.values.BooleanValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(isOutputParameter_);
                  isOutputParameter_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80018: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (length_ != null) {
                  subBuilder = length_.toBuilder();
                }
                length_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(length_);
                  length_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80026: {
                io.dstore.values.LongValue.Builder subBuilder = null;
                if (jDBCScale_ != null) {
                  subBuilder = jDBCScale_.toBuilder();
                }
                jDBCScale_ = input.readMessage(io.dstore.values.LongValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(jDBCScale_);
                  jDBCScale_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80034: {
                io.dstore.values.LongValue.Builder subBuilder = null;
                if (jDBCPrecision_ != null) {
                  subBuilder = jDBCPrecision_.toBuilder();
                }
                jDBCPrecision_ = input.readMessage(io.dstore.values.LongValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(jDBCPrecision_);
                  jDBCPrecision_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80042: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (precisionValue_ != null) {
                  subBuilder = precisionValue_.toBuilder();
                }
                precisionValue_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(precisionValue_);
                  precisionValue_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80050: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (parameterName_ != null) {
                  subBuilder = parameterName_.toBuilder();
                }
                parameterName_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(parameterName_);
                  parameterName_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80058: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (scale_ != null) {
                  subBuilder = scale_.toBuilder();
                }
                scale_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(scale_);
                  scale_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80066: {
                io.dstore.values.IntegerValue.Builder subBuilder = null;
                if (jDBCDatatypeId_ != null) {
                  subBuilder = jDBCDatatypeId_.toBuilder();
                }
                jDBCDatatypeId_ = input.readMessage(io.dstore.values.IntegerValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(jDBCDatatypeId_);
                  jDBCDatatypeId_ = subBuilder.buildPartial();
                }

                break;
              }
              case 80074: {
                io.dstore.values.StringValue.Builder subBuilder = null;
                if (datatype_ != null) {
                  subBuilder = datatype_.toBuilder();
                }
                datatype_ = input.readMessage(io.dstore.values.StringValue.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(datatype_);
                  datatype_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.class, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder.class);
      }

      public static final int ROW_ID_FIELD_NUMBER = 10000;
      private int rowId_;
      /**
       * <code>optional int32 row_id = 10000;</code>
       */
      public int getRowId() {
        return rowId_;
      }

      public static final int IS_OUTPUT_PARAMETER_FIELD_NUMBER = 10001;
      private io.dstore.values.BooleanValue isOutputParameter_;
      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      public boolean hasIsOutputParameter() {
        return isOutputParameter_ != null;
      }
      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      public io.dstore.values.BooleanValue getIsOutputParameter() {
        return isOutputParameter_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : isOutputParameter_;
      }
      /**
       * <pre>
       * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
       * </pre>
       *
       * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
       */
      public io.dstore.values.BooleanValueOrBuilder getIsOutputParameterOrBuilder() {
        return getIsOutputParameter();
      }

      public static final int LENGTH_FIELD_NUMBER = 10002;
      private io.dstore.values.IntegerValue length_;
      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      public boolean hasLength() {
        return length_ != null;
      }
      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      public io.dstore.values.IntegerValue getLength() {
        return length_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : length_;
      }
      /**
       * <pre>
       * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue length = 10002;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getLengthOrBuilder() {
        return getLength();
      }

      public static final int J_D_B_C_SCALE_FIELD_NUMBER = 10003;
      private io.dstore.values.LongValue jDBCScale_;
      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      public boolean hasJDBCScale() {
        return jDBCScale_ != null;
      }
      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      public io.dstore.values.LongValue getJDBCScale() {
        return jDBCScale_ == null ? io.dstore.values.LongValue.getDefaultInstance() : jDBCScale_;
      }
      /**
       * <pre>
       * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
       */
      public io.dstore.values.LongValueOrBuilder getJDBCScaleOrBuilder() {
        return getJDBCScale();
      }

      public static final int J_D_B_C_PRECISION_FIELD_NUMBER = 10004;
      private io.dstore.values.LongValue jDBCPrecision_;
      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      public boolean hasJDBCPrecision() {
        return jDBCPrecision_ != null;
      }
      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      public io.dstore.values.LongValue getJDBCPrecision() {
        return jDBCPrecision_ == null ? io.dstore.values.LongValue.getDefaultInstance() : jDBCPrecision_;
      }
      /**
       * <pre>
       * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
       * </pre>
       *
       * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
       */
      public io.dstore.values.LongValueOrBuilder getJDBCPrecisionOrBuilder() {
        return getJDBCPrecision();
      }

      public static final int PRECISION_VALUE_FIELD_NUMBER = 10005;
      private io.dstore.values.IntegerValue precisionValue_;
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      public boolean hasPrecisionValue() {
        return precisionValue_ != null;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      public io.dstore.values.IntegerValue getPrecisionValue() {
        return precisionValue_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : precisionValue_;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getPrecisionValueOrBuilder() {
        return getPrecisionValue();
      }

      public static final int PARAMETER_NAME_FIELD_NUMBER = 10006;
      private io.dstore.values.StringValue parameterName_;
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      public boolean hasParameterName() {
        return parameterName_ != null;
      }
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      public io.dstore.values.StringValue getParameterName() {
        return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
      }
      /**
       * <pre>
       * Name eines Parameters der Prozedur "&#64;ProcedureName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
       */
      public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
        return getParameterName();
      }

      public static final int SCALE_FIELD_NUMBER = 10007;
      private io.dstore.values.IntegerValue scale_;
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      public boolean hasScale() {
        return scale_ != null;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      public io.dstore.values.IntegerValue getScale() {
        return scale_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : scale_;
      }
      /**
       * <pre>
       * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getScaleOrBuilder() {
        return getScale();
      }

      public static final int J_D_B_C_DATATYPE_ID_FIELD_NUMBER = 10008;
      private io.dstore.values.IntegerValue jDBCDatatypeId_;
      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      public boolean hasJDBCDatatypeId() {
        return jDBCDatatypeId_ != null;
      }
      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      public io.dstore.values.IntegerValue getJDBCDatatypeId() {
        return jDBCDatatypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : jDBCDatatypeId_;
      }
      /**
       * <pre>
       * Entsprechung von "Datatype" im JDBC-Treiber
       * </pre>
       *
       * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
       */
      public io.dstore.values.IntegerValueOrBuilder getJDBCDatatypeIdOrBuilder() {
        return getJDBCDatatypeId();
      }

      public static final int DATATYPE_FIELD_NUMBER = 10009;
      private io.dstore.values.StringValue datatype_;
      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      public boolean hasDatatype() {
        return datatype_ != null;
      }
      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      public io.dstore.values.StringValue getDatatype() {
        return datatype_ == null ? io.dstore.values.StringValue.getDefaultInstance() : datatype_;
      }
      /**
       * <pre>
       * Daten-Typ des Parameters "ParameterName"
       * </pre>
       *
       * <code>optional .dstore.values.StringValue datatype = 10009;</code>
       */
      public io.dstore.values.StringValueOrBuilder getDatatypeOrBuilder() {
        return getDatatype();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (rowId_ != 0) {
          output.writeInt32(10000, rowId_);
        }
        if (isOutputParameter_ != null) {
          output.writeMessage(10001, getIsOutputParameter());
        }
        if (length_ != null) {
          output.writeMessage(10002, getLength());
        }
        if (jDBCScale_ != null) {
          output.writeMessage(10003, getJDBCScale());
        }
        if (jDBCPrecision_ != null) {
          output.writeMessage(10004, getJDBCPrecision());
        }
        if (precisionValue_ != null) {
          output.writeMessage(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          output.writeMessage(10006, getParameterName());
        }
        if (scale_ != null) {
          output.writeMessage(10007, getScale());
        }
        if (jDBCDatatypeId_ != null) {
          output.writeMessage(10008, getJDBCDatatypeId());
        }
        if (datatype_ != null) {
          output.writeMessage(10009, getDatatype());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (rowId_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(10000, rowId_);
        }
        if (isOutputParameter_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10001, getIsOutputParameter());
        }
        if (length_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10002, getLength());
        }
        if (jDBCScale_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10003, getJDBCScale());
        }
        if (jDBCPrecision_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10004, getJDBCPrecision());
        }
        if (precisionValue_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10005, getPrecisionValue());
        }
        if (parameterName_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10006, getParameterName());
        }
        if (scale_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10007, getScale());
        }
        if (jDBCDatatypeId_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10008, getJDBCDatatypeId());
        }
        if (datatype_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10009, getDatatype());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row)) {
          return super.equals(obj);
        }
        io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row other = (io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row) obj;

        boolean result = true;
        result = result && (getRowId()
            == other.getRowId());
        result = result && (hasIsOutputParameter() == other.hasIsOutputParameter());
        if (hasIsOutputParameter()) {
          result = result && getIsOutputParameter()
              .equals(other.getIsOutputParameter());
        }
        result = result && (hasLength() == other.hasLength());
        if (hasLength()) {
          result = result && getLength()
              .equals(other.getLength());
        }
        result = result && (hasJDBCScale() == other.hasJDBCScale());
        if (hasJDBCScale()) {
          result = result && getJDBCScale()
              .equals(other.getJDBCScale());
        }
        result = result && (hasJDBCPrecision() == other.hasJDBCPrecision());
        if (hasJDBCPrecision()) {
          result = result && getJDBCPrecision()
              .equals(other.getJDBCPrecision());
        }
        result = result && (hasPrecisionValue() == other.hasPrecisionValue());
        if (hasPrecisionValue()) {
          result = result && getPrecisionValue()
              .equals(other.getPrecisionValue());
        }
        result = result && (hasParameterName() == other.hasParameterName());
        if (hasParameterName()) {
          result = result && getParameterName()
              .equals(other.getParameterName());
        }
        result = result && (hasScale() == other.hasScale());
        if (hasScale()) {
          result = result && getScale()
              .equals(other.getScale());
        }
        result = result && (hasJDBCDatatypeId() == other.hasJDBCDatatypeId());
        if (hasJDBCDatatypeId()) {
          result = result && getJDBCDatatypeId()
              .equals(other.getJDBCDatatypeId());
        }
        result = result && (hasDatatype() == other.hasDatatype());
        if (hasDatatype()) {
          result = result && getDatatype()
              .equals(other.getDatatype());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptorForType().hashCode();
        hash = (37 * hash) + ROW_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRowId();
        if (hasIsOutputParameter()) {
          hash = (37 * hash) + IS_OUTPUT_PARAMETER_FIELD_NUMBER;
          hash = (53 * hash) + getIsOutputParameter().hashCode();
        }
        if (hasLength()) {
          hash = (37 * hash) + LENGTH_FIELD_NUMBER;
          hash = (53 * hash) + getLength().hashCode();
        }
        if (hasJDBCScale()) {
          hash = (37 * hash) + J_D_B_C_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getJDBCScale().hashCode();
        }
        if (hasJDBCPrecision()) {
          hash = (37 * hash) + J_D_B_C_PRECISION_FIELD_NUMBER;
          hash = (53 * hash) + getJDBCPrecision().hashCode();
        }
        if (hasPrecisionValue()) {
          hash = (37 * hash) + PRECISION_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getPrecisionValue().hashCode();
        }
        if (hasParameterName()) {
          hash = (37 * hash) + PARAMETER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getParameterName().hashCode();
        }
        if (hasScale()) {
          hash = (37 * hash) + SCALE_FIELD_NUMBER;
          hash = (53 * hash) + getScale().hashCode();
        }
        if (hasJDBCDatatypeId()) {
          hash = (37 * hash) + J_D_B_C_DATATYPE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getJDBCDatatypeId().hashCode();
        }
        if (hasDatatype()) {
          hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDatatype().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Response.Row}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcedureParameters.Response.Row)
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.class, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder.class);
        }

        // Construct using io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          rowId_ = 0;

          if (isOutputParameterBuilder_ == null) {
            isOutputParameter_ = null;
          } else {
            isOutputParameter_ = null;
            isOutputParameterBuilder_ = null;
          }
          if (lengthBuilder_ == null) {
            length_ = null;
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }
          if (jDBCScaleBuilder_ == null) {
            jDBCScale_ = null;
          } else {
            jDBCScale_ = null;
            jDBCScaleBuilder_ = null;
          }
          if (jDBCPrecisionBuilder_ == null) {
            jDBCPrecision_ = null;
          } else {
            jDBCPrecision_ = null;
            jDBCPrecisionBuilder_ = null;
          }
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }
          if (scaleBuilder_ == null) {
            scale_ = null;
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }
          if (jDBCDatatypeIdBuilder_ == null) {
            jDBCDatatypeId_ = null;
          } else {
            jDBCDatatypeId_ = null;
            jDBCDatatypeIdBuilder_ = null;
          }
          if (datatypeBuilder_ == null) {
            datatype_ = null;
          } else {
            datatype_ = null;
            datatypeBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor;
        }

        public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getDefaultInstanceForType() {
          return io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.getDefaultInstance();
        }

        public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row build() {
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row buildPartial() {
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row result = new io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row(this);
          result.rowId_ = rowId_;
          if (isOutputParameterBuilder_ == null) {
            result.isOutputParameter_ = isOutputParameter_;
          } else {
            result.isOutputParameter_ = isOutputParameterBuilder_.build();
          }
          if (lengthBuilder_ == null) {
            result.length_ = length_;
          } else {
            result.length_ = lengthBuilder_.build();
          }
          if (jDBCScaleBuilder_ == null) {
            result.jDBCScale_ = jDBCScale_;
          } else {
            result.jDBCScale_ = jDBCScaleBuilder_.build();
          }
          if (jDBCPrecisionBuilder_ == null) {
            result.jDBCPrecision_ = jDBCPrecision_;
          } else {
            result.jDBCPrecision_ = jDBCPrecisionBuilder_.build();
          }
          if (precisionValueBuilder_ == null) {
            result.precisionValue_ = precisionValue_;
          } else {
            result.precisionValue_ = precisionValueBuilder_.build();
          }
          if (parameterNameBuilder_ == null) {
            result.parameterName_ = parameterName_;
          } else {
            result.parameterName_ = parameterNameBuilder_.build();
          }
          if (scaleBuilder_ == null) {
            result.scale_ = scale_;
          } else {
            result.scale_ = scaleBuilder_.build();
          }
          if (jDBCDatatypeIdBuilder_ == null) {
            result.jDBCDatatypeId_ = jDBCDatatypeId_;
          } else {
            result.jDBCDatatypeId_ = jDBCDatatypeIdBuilder_.build();
          }
          if (datatypeBuilder_ == null) {
            result.datatype_ = datatype_;
          } else {
            result.datatype_ = datatypeBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row) {
            return mergeFrom((io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row other) {
          if (other == io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.getDefaultInstance()) return this;
          if (other.getRowId() != 0) {
            setRowId(other.getRowId());
          }
          if (other.hasIsOutputParameter()) {
            mergeIsOutputParameter(other.getIsOutputParameter());
          }
          if (other.hasLength()) {
            mergeLength(other.getLength());
          }
          if (other.hasJDBCScale()) {
            mergeJDBCScale(other.getJDBCScale());
          }
          if (other.hasJDBCPrecision()) {
            mergeJDBCPrecision(other.getJDBCPrecision());
          }
          if (other.hasPrecisionValue()) {
            mergePrecisionValue(other.getPrecisionValue());
          }
          if (other.hasParameterName()) {
            mergeParameterName(other.getParameterName());
          }
          if (other.hasScale()) {
            mergeScale(other.getScale());
          }
          if (other.hasJDBCDatatypeId()) {
            mergeJDBCDatatypeId(other.getJDBCDatatypeId());
          }
          if (other.hasDatatype()) {
            mergeDatatype(other.getDatatype());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int rowId_ ;
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public int getRowId() {
          return rowId_;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder setRowId(int value) {
          
          rowId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 row_id = 10000;</code>
         */
        public Builder clearRowId() {
          
          rowId_ = 0;
          onChanged();
          return this;
        }

        private io.dstore.values.BooleanValue isOutputParameter_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> isOutputParameterBuilder_;
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public boolean hasIsOutputParameter() {
          return isOutputParameterBuilder_ != null || isOutputParameter_ != null;
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public io.dstore.values.BooleanValue getIsOutputParameter() {
          if (isOutputParameterBuilder_ == null) {
            return isOutputParameter_ == null ? io.dstore.values.BooleanValue.getDefaultInstance() : isOutputParameter_;
          } else {
            return isOutputParameterBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public Builder setIsOutputParameter(io.dstore.values.BooleanValue value) {
          if (isOutputParameterBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            isOutputParameter_ = value;
            onChanged();
          } else {
            isOutputParameterBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public Builder setIsOutputParameter(
            io.dstore.values.BooleanValue.Builder builderForValue) {
          if (isOutputParameterBuilder_ == null) {
            isOutputParameter_ = builderForValue.build();
            onChanged();
          } else {
            isOutputParameterBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public Builder mergeIsOutputParameter(io.dstore.values.BooleanValue value) {
          if (isOutputParameterBuilder_ == null) {
            if (isOutputParameter_ != null) {
              isOutputParameter_ =
                io.dstore.values.BooleanValue.newBuilder(isOutputParameter_).mergeFrom(value).buildPartial();
            } else {
              isOutputParameter_ = value;
            }
            onChanged();
          } else {
            isOutputParameterBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public Builder clearIsOutputParameter() {
          if (isOutputParameterBuilder_ == null) {
            isOutputParameter_ = null;
            onChanged();
          } else {
            isOutputParameter_ = null;
            isOutputParameterBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public io.dstore.values.BooleanValue.Builder getIsOutputParameterBuilder() {
          
          onChanged();
          return getIsOutputParameterFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        public io.dstore.values.BooleanValueOrBuilder getIsOutputParameterOrBuilder() {
          if (isOutputParameterBuilder_ != null) {
            return isOutputParameterBuilder_.getMessageOrBuilder();
          } else {
            return isOutputParameter_ == null ?
                io.dstore.values.BooleanValue.getDefaultInstance() : isOutputParameter_;
          }
        }
        /**
         * <pre>
         * Handelt es sich bei dem Parameter "ParameterName" um einen Ausgabeparameter ("0" : Nein, "1" : Ja) ?
         * </pre>
         *
         * <code>optional .dstore.values.BooleanValue is_output_parameter = 10001;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder> 
            getIsOutputParameterFieldBuilder() {
          if (isOutputParameterBuilder_ == null) {
            isOutputParameterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.BooleanValue, io.dstore.values.BooleanValue.Builder, io.dstore.values.BooleanValueOrBuilder>(
                    getIsOutputParameter(),
                    getParentForChildren(),
                    isClean());
            isOutputParameter_ = null;
          }
          return isOutputParameterBuilder_;
        }

        private io.dstore.values.IntegerValue length_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> lengthBuilder_;
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public boolean hasLength() {
          return lengthBuilder_ != null || length_ != null;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public io.dstore.values.IntegerValue getLength() {
          if (lengthBuilder_ == null) {
            return length_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : length_;
          } else {
            return lengthBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public Builder setLength(io.dstore.values.IntegerValue value) {
          if (lengthBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            length_ = value;
            onChanged();
          } else {
            lengthBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public Builder setLength(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (lengthBuilder_ == null) {
            length_ = builderForValue.build();
            onChanged();
          } else {
            lengthBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public Builder mergeLength(io.dstore.values.IntegerValue value) {
          if (lengthBuilder_ == null) {
            if (length_ != null) {
              length_ =
                io.dstore.values.IntegerValue.newBuilder(length_).mergeFrom(value).buildPartial();
            } else {
              length_ = value;
            }
            onChanged();
          } else {
            lengthBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public Builder clearLength() {
          if (lengthBuilder_ == null) {
            length_ = null;
            onChanged();
          } else {
            length_ = null;
            lengthBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public io.dstore.values.IntegerValue.Builder getLengthBuilder() {
          
          onChanged();
          return getLengthFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getLengthOrBuilder() {
          if (lengthBuilder_ != null) {
            return lengthBuilder_.getMessageOrBuilder();
          } else {
            return length_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : length_;
          }
        }
        /**
         * <pre>
         * Wieviel Byte können Werte, die für den Parameter "ParameterName" übergeben werden, maximal enthalten. Bei vielen Daten-Typen ist die Speicherbelegung immer so groß wie dieser Wert (bei numerischen Daten-Typen z.B.).
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue length = 10002;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getLengthFieldBuilder() {
          if (lengthBuilder_ == null) {
            lengthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getLength(),
                    getParentForChildren(),
                    isClean());
            length_ = null;
          }
          return lengthBuilder_;
        }

        private io.dstore.values.LongValue jDBCScale_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder> jDBCScaleBuilder_;
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public boolean hasJDBCScale() {
          return jDBCScaleBuilder_ != null || jDBCScale_ != null;
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public io.dstore.values.LongValue getJDBCScale() {
          if (jDBCScaleBuilder_ == null) {
            return jDBCScale_ == null ? io.dstore.values.LongValue.getDefaultInstance() : jDBCScale_;
          } else {
            return jDBCScaleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public Builder setJDBCScale(io.dstore.values.LongValue value) {
          if (jDBCScaleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            jDBCScale_ = value;
            onChanged();
          } else {
            jDBCScaleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public Builder setJDBCScale(
            io.dstore.values.LongValue.Builder builderForValue) {
          if (jDBCScaleBuilder_ == null) {
            jDBCScale_ = builderForValue.build();
            onChanged();
          } else {
            jDBCScaleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public Builder mergeJDBCScale(io.dstore.values.LongValue value) {
          if (jDBCScaleBuilder_ == null) {
            if (jDBCScale_ != null) {
              jDBCScale_ =
                io.dstore.values.LongValue.newBuilder(jDBCScale_).mergeFrom(value).buildPartial();
            } else {
              jDBCScale_ = value;
            }
            onChanged();
          } else {
            jDBCScaleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public Builder clearJDBCScale() {
          if (jDBCScaleBuilder_ == null) {
            jDBCScale_ = null;
            onChanged();
          } else {
            jDBCScale_ = null;
            jDBCScaleBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public io.dstore.values.LongValue.Builder getJDBCScaleBuilder() {
          
          onChanged();
          return getJDBCScaleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        public io.dstore.values.LongValueOrBuilder getJDBCScaleOrBuilder() {
          if (jDBCScaleBuilder_ != null) {
            return jDBCScaleBuilder_.getMessageOrBuilder();
          } else {
            return jDBCScale_ == null ?
                io.dstore.values.LongValue.getDefaultInstance() : jDBCScale_;
          }
        }
        /**
         * <pre>
         * Nur relevant für numerische Daten-Typen (immer "0" sonst), wie z.B. "decimal" (aber auch "datetime" s. Beschreibung !) und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen, für Werte des Typs "JDBC_DatatypeID" an
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_scale = 10003;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder> 
            getJDBCScaleFieldBuilder() {
          if (jDBCScaleBuilder_ == null) {
            jDBCScaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder>(
                    getJDBCScale(),
                    getParentForChildren(),
                    isClean());
            jDBCScale_ = null;
          }
          return jDBCScaleBuilder_;
        }

        private io.dstore.values.LongValue jDBCPrecision_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder> jDBCPrecisionBuilder_;
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public boolean hasJDBCPrecision() {
          return jDBCPrecisionBuilder_ != null || jDBCPrecision_ != null;
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public io.dstore.values.LongValue getJDBCPrecision() {
          if (jDBCPrecisionBuilder_ == null) {
            return jDBCPrecision_ == null ? io.dstore.values.LongValue.getDefaultInstance() : jDBCPrecision_;
          } else {
            return jDBCPrecisionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public Builder setJDBCPrecision(io.dstore.values.LongValue value) {
          if (jDBCPrecisionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            jDBCPrecision_ = value;
            onChanged();
          } else {
            jDBCPrecisionBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public Builder setJDBCPrecision(
            io.dstore.values.LongValue.Builder builderForValue) {
          if (jDBCPrecisionBuilder_ == null) {
            jDBCPrecision_ = builderForValue.build();
            onChanged();
          } else {
            jDBCPrecisionBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public Builder mergeJDBCPrecision(io.dstore.values.LongValue value) {
          if (jDBCPrecisionBuilder_ == null) {
            if (jDBCPrecision_ != null) {
              jDBCPrecision_ =
                io.dstore.values.LongValue.newBuilder(jDBCPrecision_).mergeFrom(value).buildPartial();
            } else {
              jDBCPrecision_ = value;
            }
            onChanged();
          } else {
            jDBCPrecisionBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public Builder clearJDBCPrecision() {
          if (jDBCPrecisionBuilder_ == null) {
            jDBCPrecision_ = null;
            onChanged();
          } else {
            jDBCPrecision_ = null;
            jDBCPrecisionBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public io.dstore.values.LongValue.Builder getJDBCPrecisionBuilder() {
          
          onChanged();
          return getJDBCPrecisionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        public io.dstore.values.LongValueOrBuilder getJDBCPrecisionOrBuilder() {
          if (jDBCPrecisionBuilder_ != null) {
            return jDBCPrecisionBuilder_.getMessageOrBuilder();
          } else {
            return jDBCPrecision_ == null ?
                io.dstore.values.LongValue.getDefaultInstance() : jDBCPrecision_;
          }
        }
        /**
         * <pre>
         * Gibt bei numerischen Datentypen die maximale Anzahl Stellen an, die ein Wert für den Datentyp "JDBC_DatatypeID" haben kann, sonst die maximale Anzahl Bytes (z.B. beim "text"-Datentyp)
         * </pre>
         *
         * <code>optional .dstore.values.LongValue j_d_b_c_precision = 10004;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder> 
            getJDBCPrecisionFieldBuilder() {
          if (jDBCPrecisionBuilder_ == null) {
            jDBCPrecisionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.LongValue, io.dstore.values.LongValue.Builder, io.dstore.values.LongValueOrBuilder>(
                    getJDBCPrecision(),
                    getParentForChildren(),
                    isClean());
            jDBCPrecision_ = null;
          }
          return jDBCPrecisionBuilder_;
        }

        private io.dstore.values.IntegerValue precisionValue_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> precisionValueBuilder_;
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public boolean hasPrecisionValue() {
          return precisionValueBuilder_ != null || precisionValue_ != null;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public io.dstore.values.IntegerValue getPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            return precisionValue_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : precisionValue_;
          } else {
            return precisionValueBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public Builder setPrecisionValue(io.dstore.values.IntegerValue value) {
          if (precisionValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            precisionValue_ = value;
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public Builder setPrecisionValue(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = builderForValue.build();
            onChanged();
          } else {
            precisionValueBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public Builder mergePrecisionValue(io.dstore.values.IntegerValue value) {
          if (precisionValueBuilder_ == null) {
            if (precisionValue_ != null) {
              precisionValue_ =
                io.dstore.values.IntegerValue.newBuilder(precisionValue_).mergeFrom(value).buildPartial();
            } else {
              precisionValue_ = value;
            }
            onChanged();
          } else {
            precisionValueBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public Builder clearPrecisionValue() {
          if (precisionValueBuilder_ == null) {
            precisionValue_ = null;
            onChanged();
          } else {
            precisionValue_ = null;
            precisionValueBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public io.dstore.values.IntegerValue.Builder getPrecisionValueBuilder() {
          
          onChanged();
          return getPrecisionValueFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getPrecisionValueOrBuilder() {
          if (precisionValueBuilder_ != null) {
            return precisionValueBuilder_.getMessageOrBuilder();
          } else {
            return precisionValue_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : precisionValue_;
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die maximale Anzahl Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue precision_value = 10005;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getPrecisionValueFieldBuilder() {
          if (precisionValueBuilder_ == null) {
            precisionValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getPrecisionValue(),
                    getParentForChildren(),
                    isClean());
            precisionValue_ = null;
          }
          return precisionValueBuilder_;
        }

        private io.dstore.values.StringValue parameterName_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> parameterNameBuilder_;
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public boolean hasParameterName() {
          return parameterNameBuilder_ != null || parameterName_ != null;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public io.dstore.values.StringValue getParameterName() {
          if (parameterNameBuilder_ == null) {
            return parameterName_ == null ? io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
          } else {
            return parameterNameBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public Builder setParameterName(io.dstore.values.StringValue value) {
          if (parameterNameBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            parameterName_ = value;
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public Builder setParameterName(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (parameterNameBuilder_ == null) {
            parameterName_ = builderForValue.build();
            onChanged();
          } else {
            parameterNameBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public Builder mergeParameterName(io.dstore.values.StringValue value) {
          if (parameterNameBuilder_ == null) {
            if (parameterName_ != null) {
              parameterName_ =
                io.dstore.values.StringValue.newBuilder(parameterName_).mergeFrom(value).buildPartial();
            } else {
              parameterName_ = value;
            }
            onChanged();
          } else {
            parameterNameBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public Builder clearParameterName() {
          if (parameterNameBuilder_ == null) {
            parameterName_ = null;
            onChanged();
          } else {
            parameterName_ = null;
            parameterNameBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public io.dstore.values.StringValue.Builder getParameterNameBuilder() {
          
          onChanged();
          return getParameterNameFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        public io.dstore.values.StringValueOrBuilder getParameterNameOrBuilder() {
          if (parameterNameBuilder_ != null) {
            return parameterNameBuilder_.getMessageOrBuilder();
          } else {
            return parameterName_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : parameterName_;
          }
        }
        /**
         * <pre>
         * Name eines Parameters der Prozedur "&#64;ProcedureName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue parameter_name = 10006;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getParameterNameFieldBuilder() {
          if (parameterNameBuilder_ == null) {
            parameterNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getParameterName(),
                    getParentForChildren(),
                    isClean());
            parameterName_ = null;
          }
          return parameterNameBuilder_;
        }

        private io.dstore.values.IntegerValue scale_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> scaleBuilder_;
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public boolean hasScale() {
          return scaleBuilder_ != null || scale_ != null;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public io.dstore.values.IntegerValue getScale() {
          if (scaleBuilder_ == null) {
            return scale_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : scale_;
          } else {
            return scaleBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public Builder setScale(io.dstore.values.IntegerValue value) {
          if (scaleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            scale_ = value;
            onChanged();
          } else {
            scaleBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public Builder setScale(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (scaleBuilder_ == null) {
            scale_ = builderForValue.build();
            onChanged();
          } else {
            scaleBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public Builder mergeScale(io.dstore.values.IntegerValue value) {
          if (scaleBuilder_ == null) {
            if (scale_ != null) {
              scale_ =
                io.dstore.values.IntegerValue.newBuilder(scale_).mergeFrom(value).buildPartial();
            } else {
              scale_ = value;
            }
            onChanged();
          } else {
            scaleBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public Builder clearScale() {
          if (scaleBuilder_ == null) {
            scale_ = null;
            onChanged();
          } else {
            scale_ = null;
            scaleBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public io.dstore.values.IntegerValue.Builder getScaleBuilder() {
          
          onChanged();
          return getScaleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getScaleOrBuilder() {
          if (scaleBuilder_ != null) {
            return scaleBuilder_.getMessageOrBuilder();
          } else {
            return scale_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : scale_;
          }
        }
        /**
         * <pre>
         * Gilt nur für einige numerische Daten-Typen (z.B. "decimal") und gibt die Genauigkeit, sprich die maximale Anzahl an Nachkomma-Stellen an, die ein Wert für den Parameter "ParameterName" enthalten kann
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue scale = 10007;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getScaleFieldBuilder() {
          if (scaleBuilder_ == null) {
            scaleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getScale(),
                    getParentForChildren(),
                    isClean());
            scale_ = null;
          }
          return scaleBuilder_;
        }

        private io.dstore.values.IntegerValue jDBCDatatypeId_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> jDBCDatatypeIdBuilder_;
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public boolean hasJDBCDatatypeId() {
          return jDBCDatatypeIdBuilder_ != null || jDBCDatatypeId_ != null;
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public io.dstore.values.IntegerValue getJDBCDatatypeId() {
          if (jDBCDatatypeIdBuilder_ == null) {
            return jDBCDatatypeId_ == null ? io.dstore.values.IntegerValue.getDefaultInstance() : jDBCDatatypeId_;
          } else {
            return jDBCDatatypeIdBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public Builder setJDBCDatatypeId(io.dstore.values.IntegerValue value) {
          if (jDBCDatatypeIdBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            jDBCDatatypeId_ = value;
            onChanged();
          } else {
            jDBCDatatypeIdBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public Builder setJDBCDatatypeId(
            io.dstore.values.IntegerValue.Builder builderForValue) {
          if (jDBCDatatypeIdBuilder_ == null) {
            jDBCDatatypeId_ = builderForValue.build();
            onChanged();
          } else {
            jDBCDatatypeIdBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public Builder mergeJDBCDatatypeId(io.dstore.values.IntegerValue value) {
          if (jDBCDatatypeIdBuilder_ == null) {
            if (jDBCDatatypeId_ != null) {
              jDBCDatatypeId_ =
                io.dstore.values.IntegerValue.newBuilder(jDBCDatatypeId_).mergeFrom(value).buildPartial();
            } else {
              jDBCDatatypeId_ = value;
            }
            onChanged();
          } else {
            jDBCDatatypeIdBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public Builder clearJDBCDatatypeId() {
          if (jDBCDatatypeIdBuilder_ == null) {
            jDBCDatatypeId_ = null;
            onChanged();
          } else {
            jDBCDatatypeId_ = null;
            jDBCDatatypeIdBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public io.dstore.values.IntegerValue.Builder getJDBCDatatypeIdBuilder() {
          
          onChanged();
          return getJDBCDatatypeIdFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        public io.dstore.values.IntegerValueOrBuilder getJDBCDatatypeIdOrBuilder() {
          if (jDBCDatatypeIdBuilder_ != null) {
            return jDBCDatatypeIdBuilder_.getMessageOrBuilder();
          } else {
            return jDBCDatatypeId_ == null ?
                io.dstore.values.IntegerValue.getDefaultInstance() : jDBCDatatypeId_;
          }
        }
        /**
         * <pre>
         * Entsprechung von "Datatype" im JDBC-Treiber
         * </pre>
         *
         * <code>optional .dstore.values.IntegerValue j_d_b_c_datatype_id = 10008;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder> 
            getJDBCDatatypeIdFieldBuilder() {
          if (jDBCDatatypeIdBuilder_ == null) {
            jDBCDatatypeIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.IntegerValue, io.dstore.values.IntegerValue.Builder, io.dstore.values.IntegerValueOrBuilder>(
                    getJDBCDatatypeId(),
                    getParentForChildren(),
                    isClean());
            jDBCDatatypeId_ = null;
          }
          return jDBCDatatypeIdBuilder_;
        }

        private io.dstore.values.StringValue datatype_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> datatypeBuilder_;
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public boolean hasDatatype() {
          return datatypeBuilder_ != null || datatype_ != null;
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public io.dstore.values.StringValue getDatatype() {
          if (datatypeBuilder_ == null) {
            return datatype_ == null ? io.dstore.values.StringValue.getDefaultInstance() : datatype_;
          } else {
            return datatypeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public Builder setDatatype(io.dstore.values.StringValue value) {
          if (datatypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            datatype_ = value;
            onChanged();
          } else {
            datatypeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public Builder setDatatype(
            io.dstore.values.StringValue.Builder builderForValue) {
          if (datatypeBuilder_ == null) {
            datatype_ = builderForValue.build();
            onChanged();
          } else {
            datatypeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public Builder mergeDatatype(io.dstore.values.StringValue value) {
          if (datatypeBuilder_ == null) {
            if (datatype_ != null) {
              datatype_ =
                io.dstore.values.StringValue.newBuilder(datatype_).mergeFrom(value).buildPartial();
            } else {
              datatype_ = value;
            }
            onChanged();
          } else {
            datatypeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public Builder clearDatatype() {
          if (datatypeBuilder_ == null) {
            datatype_ = null;
            onChanged();
          } else {
            datatype_ = null;
            datatypeBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public io.dstore.values.StringValue.Builder getDatatypeBuilder() {
          
          onChanged();
          return getDatatypeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        public io.dstore.values.StringValueOrBuilder getDatatypeOrBuilder() {
          if (datatypeBuilder_ != null) {
            return datatypeBuilder_.getMessageOrBuilder();
          } else {
            return datatype_ == null ?
                io.dstore.values.StringValue.getDefaultInstance() : datatype_;
          }
        }
        /**
         * <pre>
         * Daten-Typ des Parameters "ParameterName"
         * </pre>
         *
         * <code>optional .dstore.values.StringValue datatype = 10009;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder> 
            getDatatypeFieldBuilder() {
          if (datatypeBuilder_ == null) {
            datatypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.dstore.values.StringValue, io.dstore.values.StringValue.Builder, io.dstore.values.StringValueOrBuilder>(
                    getDatatype(),
                    getParentForChildren(),
                    isClean());
            datatype_ = null;
          }
          return datatypeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcedureParameters.Response.Row)
      }

      // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcedureParameters.Response.Row)
      private static final io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row();
      }

      public static io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Row>
          PARSER = new com.google.protobuf.AbstractParser<Row>() {
        public Row parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Row(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Row> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Row> getParserForType() {
        return PARSER;
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int META_INFORMATION_FIELD_NUMBER = 2;
    private java.util.List<io.dstore.engine.MetaInformation> metaInformation_;
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
        getMetaInformationOrBuilderList() {
      return metaInformation_;
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public int getMetaInformationCount() {
      return metaInformation_.size();
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformation getMetaInformation(int index) {
      return metaInformation_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
     */
    public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
        int index) {
      return metaInformation_.get(index);
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    private java.util.List<io.dstore.engine.Message> message_;
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<io.dstore.engine.Message> getMessageList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
        getMessageOrBuilderList() {
      return message_;
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public int getMessageCount() {
      return message_.size();
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.Message getMessage(int index) {
      return message_.get(index);
    }
    /**
     * <code>repeated .dstore.engine.Message message = 3;</code>
     */
    public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
        int index) {
      return message_.get(index);
    }

    public static final int ROW_FIELD_NUMBER = 4;
    private java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> row_;
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    public java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> getRowList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    public java.util.List<? extends io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder> 
        getRowOrBuilderList() {
      return row_;
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    public int getRowCount() {
      return row_.size();
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getRow(int index) {
      return row_.get(index);
    }
    /**
     * <pre>
     * no output parameters
     * </pre>
     *
     * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
     */
    public io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder getRowOrBuilder(
        int index) {
      return row_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < metaInformation_.size(); i++) {
        output.writeMessage(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        output.writeMessage(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        output.writeMessage(4, row_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < metaInformation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, metaInformation_.get(i));
      }
      for (int i = 0; i < message_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, message_.get(i));
      }
      for (int i = 0; i < row_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, row_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Response)) {
        return super.equals(obj);
      }
      io.dstore.engine.procedures.MiGetProcedureParameters.Response other = (io.dstore.engine.procedures.MiGetProcedureParameters.Response) obj;

      boolean result = true;
      result = result && getMetaInformationList()
          .equals(other.getMetaInformationList());
      result = result && getMessageList()
          .equals(other.getMessageList());
      result = result && getRowList()
          .equals(other.getRowList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getMetaInformationCount() > 0) {
        hash = (37 * hash) + META_INFORMATION_FIELD_NUMBER;
        hash = (53 * hash) + getMetaInformationList().hashCode();
      }
      if (getMessageCount() > 0) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageList().hashCode();
      }
      if (getRowCount() > 0) {
        hash = (37 * hash) + ROW_FIELD_NUMBER;
        hash = (53 * hash) + getRowList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.dstore.engine.procedures.MiGetProcedureParameters.Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dstore.engine.mi_GetProcedureParameters.Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dstore.engine.mi_GetProcedureParameters.Response)
        io.dstore.engine.procedures.MiGetProcedureParameters.ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.dstore.engine.procedures.MiGetProcedureParameters.Response.class, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Builder.class);
      }

      // Construct using io.dstore.engine.procedures.MiGetProcedureParameters.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetaInformationFieldBuilder();
          getMessageFieldBuilder();
          getRowFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          metaInformationBuilder_.clear();
        }
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          messageBuilder_.clear();
        }
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          rowBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor;
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Response getDefaultInstanceForType() {
        return io.dstore.engine.procedures.MiGetProcedureParameters.Response.getDefaultInstance();
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Response build() {
        io.dstore.engine.procedures.MiGetProcedureParameters.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.dstore.engine.procedures.MiGetProcedureParameters.Response buildPartial() {
        io.dstore.engine.procedures.MiGetProcedureParameters.Response result = new io.dstore.engine.procedures.MiGetProcedureParameters.Response(this);
        int from_bitField0_ = bitField0_;
        if (metaInformationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            metaInformation_ = java.util.Collections.unmodifiableList(metaInformation_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.metaInformation_ = metaInformation_;
        } else {
          result.metaInformation_ = metaInformationBuilder_.build();
        }
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            message_ = java.util.Collections.unmodifiableList(message_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.message_ = message_;
        } else {
          result.message_ = messageBuilder_.build();
        }
        if (rowBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            row_ = java.util.Collections.unmodifiableList(row_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.row_ = row_;
        } else {
          result.row_ = rowBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.dstore.engine.procedures.MiGetProcedureParameters.Response) {
          return mergeFrom((io.dstore.engine.procedures.MiGetProcedureParameters.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.dstore.engine.procedures.MiGetProcedureParameters.Response other) {
        if (other == io.dstore.engine.procedures.MiGetProcedureParameters.Response.getDefaultInstance()) return this;
        if (metaInformationBuilder_ == null) {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformation_.isEmpty()) {
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaInformationIsMutable();
              metaInformation_.addAll(other.metaInformation_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInformation_.isEmpty()) {
            if (metaInformationBuilder_.isEmpty()) {
              metaInformationBuilder_.dispose();
              metaInformationBuilder_ = null;
              metaInformation_ = other.metaInformation_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaInformationBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetaInformationFieldBuilder() : null;
            } else {
              metaInformationBuilder_.addAllMessages(other.metaInformation_);
            }
          }
        }
        if (messageBuilder_ == null) {
          if (!other.message_.isEmpty()) {
            if (message_.isEmpty()) {
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMessageIsMutable();
              message_.addAll(other.message_);
            }
            onChanged();
          }
        } else {
          if (!other.message_.isEmpty()) {
            if (messageBuilder_.isEmpty()) {
              messageBuilder_.dispose();
              messageBuilder_ = null;
              message_ = other.message_;
              bitField0_ = (bitField0_ & ~0x00000002);
              messageBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMessageFieldBuilder() : null;
            } else {
              messageBuilder_.addAllMessages(other.message_);
            }
          }
        }
        if (rowBuilder_ == null) {
          if (!other.row_.isEmpty()) {
            if (row_.isEmpty()) {
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRowIsMutable();
              row_.addAll(other.row_);
            }
            onChanged();
          }
        } else {
          if (!other.row_.isEmpty()) {
            if (rowBuilder_.isEmpty()) {
              rowBuilder_.dispose();
              rowBuilder_ = null;
              row_ = other.row_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rowBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowFieldBuilder() : null;
            } else {
              rowBuilder_.addAllMessages(other.row_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.dstore.engine.procedures.MiGetProcedureParameters.Response parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.dstore.engine.procedures.MiGetProcedureParameters.Response) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.dstore.engine.MetaInformation> metaInformation_ =
        java.util.Collections.emptyList();
      private void ensureMetaInformationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          metaInformation_ = new java.util.ArrayList<io.dstore.engine.MetaInformation>(metaInformation_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> metaInformationBuilder_;

      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation> getMetaInformationList() {
        if (metaInformationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInformation_);
        } else {
          return metaInformationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public int getMetaInformationCount() {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.size();
        } else {
          return metaInformationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation getMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);
        } else {
          return metaInformationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder setMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation value) {
        if (metaInformationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, value);
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addMetaInformation(
          int index, io.dstore.engine.MetaInformation.Builder builderForValue) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaInformationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder addAllMetaInformation(
          java.lang.Iterable<? extends io.dstore.engine.MetaInformation> values) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metaInformation_);
          onChanged();
        } else {
          metaInformationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder clearMetaInformation() {
        if (metaInformationBuilder_ == null) {
          metaInformation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaInformationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public Builder removeMetaInformation(int index) {
        if (metaInformationBuilder_ == null) {
          ensureMetaInformationIsMutable();
          metaInformation_.remove(index);
          onChanged();
        } else {
          metaInformationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder getMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformationOrBuilder getMetaInformationOrBuilder(
          int index) {
        if (metaInformationBuilder_ == null) {
          return metaInformation_.get(index);  } else {
          return metaInformationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<? extends io.dstore.engine.MetaInformationOrBuilder> 
           getMetaInformationOrBuilderList() {
        if (metaInformationBuilder_ != null) {
          return metaInformationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInformation_);
        }
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder() {
        return getMetaInformationFieldBuilder().addBuilder(
            io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public io.dstore.engine.MetaInformation.Builder addMetaInformationBuilder(
          int index) {
        return getMetaInformationFieldBuilder().addBuilder(
            index, io.dstore.engine.MetaInformation.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.MetaInformation meta_information = 2;</code>
       */
      public java.util.List<io.dstore.engine.MetaInformation.Builder> 
           getMetaInformationBuilderList() {
        return getMetaInformationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder> 
          getMetaInformationFieldBuilder() {
        if (metaInformationBuilder_ == null) {
          metaInformationBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.MetaInformation, io.dstore.engine.MetaInformation.Builder, io.dstore.engine.MetaInformationOrBuilder>(
                  metaInformation_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          metaInformation_ = null;
        }
        return metaInformationBuilder_;
      }

      private java.util.List<io.dstore.engine.Message> message_ =
        java.util.Collections.emptyList();
      private void ensureMessageIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          message_ = new java.util.ArrayList<io.dstore.engine.Message>(message_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> messageBuilder_;

      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message> getMessageList() {
        if (messageBuilder_ == null) {
          return java.util.Collections.unmodifiableList(message_);
        } else {
          return messageBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public int getMessageCount() {
        if (messageBuilder_ == null) {
          return message_.size();
        } else {
          return messageBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message getMessage(int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);
        } else {
          return messageBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.set(index, value);
          onChanged();
        } else {
          messageBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder setMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.set(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(value);
          onChanged();
        } else {
          messageBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMessageIsMutable();
          message_.add(index, value);
          onChanged();
        } else {
          messageBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addMessage(
          int index, io.dstore.engine.Message.Builder builderForValue) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.add(index, builderForValue.build());
          onChanged();
        } else {
          messageBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder addAllMessage(
          java.lang.Iterable<? extends io.dstore.engine.Message> values) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, message_);
          onChanged();
        } else {
          messageBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder clearMessage() {
        if (messageBuilder_ == null) {
          message_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          messageBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public Builder removeMessage(int index) {
        if (messageBuilder_ == null) {
          ensureMessageIsMutable();
          message_.remove(index);
          onChanged();
        } else {
          messageBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder getMessageBuilder(
          int index) {
        return getMessageFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.MessageOrBuilder getMessageOrBuilder(
          int index) {
        if (messageBuilder_ == null) {
          return message_.get(index);  } else {
          return messageBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<? extends io.dstore.engine.MessageOrBuilder> 
           getMessageOrBuilderList() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(message_);
        }
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder() {
        return getMessageFieldBuilder().addBuilder(
            io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public io.dstore.engine.Message.Builder addMessageBuilder(
          int index) {
        return getMessageFieldBuilder().addBuilder(
            index, io.dstore.engine.Message.getDefaultInstance());
      }
      /**
       * <code>repeated .dstore.engine.Message message = 3;</code>
       */
      public java.util.List<io.dstore.engine.Message.Builder> 
           getMessageBuilderList() {
        return getMessageFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder> 
          getMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.Message, io.dstore.engine.Message.Builder, io.dstore.engine.MessageOrBuilder>(
                  message_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      private java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> row_ =
        java.util.Collections.emptyList();
      private void ensureRowIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          row_ = new java.util.ArrayList<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row>(row_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder> rowBuilder_;

      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> getRowList() {
        if (rowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(row_);
        } else {
          return rowBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public int getRowCount() {
        if (rowBuilder_ == null) {
          return row_.size();
        } else {
          return rowBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row getRow(int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);
        } else {
          return rowBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.set(index, value);
          onChanged();
        } else {
          rowBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder setRow(
          int index, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder addRow(io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(value);
          onChanged();
        } else {
          rowBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row value) {
        if (rowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowIsMutable();
          row_.add(index, value);
          onChanged();
        } else {
          rowBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder addRow(
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder addRow(
          int index, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder builderForValue) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder addAllRow(
          java.lang.Iterable<? extends io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row> values) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, row_);
          onChanged();
        } else {
          rowBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder clearRow() {
        if (rowBuilder_ == null) {
          row_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rowBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public Builder removeRow(int index) {
        if (rowBuilder_ == null) {
          ensureRowIsMutable();
          row_.remove(index);
          onChanged();
        } else {
          rowBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder getRowBuilder(
          int index) {
        return getRowFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder getRowOrBuilder(
          int index) {
        if (rowBuilder_ == null) {
          return row_.get(index);  } else {
          return rowBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public java.util.List<? extends io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder> 
           getRowOrBuilderList() {
        if (rowBuilder_ != null) {
          return rowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(row_);
        }
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder addRowBuilder() {
        return getRowFieldBuilder().addBuilder(
            io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder addRowBuilder(
          int index) {
        return getRowFieldBuilder().addBuilder(
            index, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.getDefaultInstance());
      }
      /**
       * <pre>
       * no output parameters
       * </pre>
       *
       * <code>repeated .dstore.engine.mi_GetProcedureParameters.Response.Row row = 4;</code>
       */
      public java.util.List<io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder> 
           getRowBuilderList() {
        return getRowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder> 
          getRowFieldBuilder() {
        if (rowBuilder_ == null) {
          rowBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row, io.dstore.engine.procedures.MiGetProcedureParameters.Response.Row.Builder, io.dstore.engine.procedures.MiGetProcedureParameters.Response.RowOrBuilder>(
                  row_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          row_ = null;
        }
        return rowBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:dstore.engine.mi_GetProcedureParameters.Response)
    }

    // @@protoc_insertion_point(class_scope:dstore.engine.mi_GetProcedureParameters.Response)
    private static final io.dstore.engine.procedures.MiGetProcedureParameters.Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.dstore.engine.procedures.MiGetProcedureParameters.Response();
    }

    public static io.dstore.engine.procedures.MiGetProcedureParameters.Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Response>
        PARSER = new com.google.protobuf.AbstractParser<Response>() {
      public Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Response(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Response> getParserForType() {
      return PARSER;
    }

    public io.dstore.engine.procedures.MiGetProcedureParameters.Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcedureParameters_Response_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8dstore/engine/procedures/mi_GetProcedu" +
      "reParameters.proto\022\'dstore.engine.mi_Get" +
      "ProcedureParameters\032\023dstore/values.proto" +
      "\032\032dstore/engine/engine.proto\"\200\002\n\nParamet" +
      "ers\0222\n\016procedure_name\030\001 \001(\0132\032.dstore.val" +
      "ues.StringValue\022\034\n\023procedure_name_null\030\351" +
      "\007 \001(\010\0222\n\016parameter_name\030\002 \001(\0132\032.dstore.v" +
      "alues.StringValue\022\034\n\023parameter_name_null" +
      "\030\352\007 \001(\010\0221\n\rdatabase_name\030\003 \001(\0132\032.dstore." +
      "values.StringValue\022\033\n\022database_name_null",
      "\030\353\007 \001(\010\"\236\005\n\010Response\0228\n\020meta_information" +
      "\030\002 \003(\0132\036.dstore.engine.MetaInformation\022\'" +
      "\n\007message\030\003 \003(\0132\026.dstore.engine.Message\022" +
      "B\n\003row\030\004 \003(\01325.dstore.engine.mi_GetProce" +
      "dureParameters.Response.Row\032\352\003\n\003Row\022\017\n\006r" +
      "ow_id\030\220N \001(\005\0229\n\023is_output_parameter\030\221N \001" +
      "(\0132\033.dstore.values.BooleanValue\022,\n\006lengt" +
      "h\030\222N \001(\0132\033.dstore.values.IntegerValue\0220\n" +
      "\rj_d_b_c_scale\030\223N \001(\0132\030.dstore.values.Lo" +
      "ngValue\0224\n\021j_d_b_c_precision\030\224N \001(\0132\030.ds",
      "tore.values.LongValue\0225\n\017precision_value" +
      "\030\225N \001(\0132\033.dstore.values.IntegerValue\0223\n\016" +
      "parameter_name\030\226N \001(\0132\032.dstore.values.St" +
      "ringValue\022+\n\005scale\030\227N \001(\0132\033.dstore.value" +
      "s.IntegerValue\0229\n\023j_d_b_c_datatype_id\030\230N" +
      " \001(\0132\033.dstore.values.IntegerValue\022-\n\010dat" +
      "atype\030\231N \001(\0132\032.dstore.values.StringValue" +
      "BZ\n\033io.dstore.engine.proceduresZ;gosdk.d" +
      "store.de/engine/procedures/mi_GetProcedu" +
      "reParametersb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.dstore.values.ValuesOuterClass.getDescriptor(),
          io.dstore.engine.EngineOuterClass.getDescriptor(),
        }, assigner);
    internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcedureParameters_Parameters_descriptor,
        new java.lang.String[] { "ProcedureName", "ProcedureNameNull", "ParameterName", "ParameterNameNull", "DatabaseName", "DatabaseNameNull", });
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor,
        new java.lang.String[] { "MetaInformation", "Message", "Row", });
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor =
      internal_static_dstore_engine_mi_GetProcedureParameters_Response_descriptor.getNestedTypes().get(0);
    internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dstore_engine_mi_GetProcedureParameters_Response_Row_descriptor,
        new java.lang.String[] { "RowId", "IsOutputParameter", "Length", "JDBCScale", "JDBCPrecision", "PrecisionValue", "ParameterName", "Scale", "JDBCDatatypeId", "Datatype", });
    io.dstore.values.ValuesOuterClass.getDescriptor();
    io.dstore.engine.EngineOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
